(self.webpackChunkprueba_tecnica = self.webpackChunkprueba_tecnica || []).push([
  [179],
  {
    3472: (un, ft, x) => {
      'use strict';
      x.d(ft, { q: () => Wh });
      var h = x(508),
        d = (x(3191), x(5e3)),
        N = x(727),
        Ce = x(7579),
        Re = x(9770),
        Fe = (x(6451), x(9646)),
        ee = (x(4968), x(925)),
        fe = x(9808),
        ue = x(1314),
        Qe = x(495),
        Oe = x(1159),
        et = x(7429),
        me = (x(3075), x(7322)),
        Ze = x(8675),
        vt = (x(3900), x(5698)),
        We = x(9300),
        Ie = (x(4004), x(8505), x(1005), x(226));
      const Et = {
        provide: new d.OlP('mat-autocomplete-scroll-strategy'),
        deps: [ue.aV],
        useFactory: function st(b) {
          return () => b.scrollStrategies.reposition();
        },
      };
      let en = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ providers: [Et], imports: [[ue.U8, h.Ng, h.BQ, fe.ez], Qe.ZD, h.Ng, h.BQ] })),
          b
        );
      })();
      var xt = x(5664);
      let hn = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ imports: [[xt.rt, h.BQ], h.BQ] })),
          b
        );
      })();
      var At = x(7423);
      x(449);
      let mn = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ imports: [[h.BQ, h.si], h.BQ] })),
          b
        );
      })();
      var ln = x(9224),
        An = x(6360),
        Yn = x(7144);
      let Xe = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({})),
            b
          );
        })(),
        Ot = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[h.si, h.BQ, Yn.Q8, Xe], h.BQ, Xe] })),
            b
          );
        })();
      x(2722);
      const Ci = new d.OlP('mat-chips-default-options');
      let pi = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({
            providers: [h.rD, { provide: Ci, useValue: { separatorKeyCodes: [Oe.K5] } }],
            imports: [[h.BQ]],
          })),
          b
        );
      })();
      var J = x(1777),
        Kt = x(7531);
      let Bi = (() => {
        class b {
          constructor() {
            (this.changes = new Ce.x()),
              (this.calendarLabel = 'Calendar'),
              (this.openCalendarLabel = 'Open calendar'),
              (this.closeCalendarLabel = 'Close calendar'),
              (this.prevMonthLabel = 'Previous month'),
              (this.nextMonthLabel = 'Next month'),
              (this.prevYearLabel = 'Previous year'),
              (this.nextYearLabel = 'Next year'),
              (this.prevMultiYearLabel = 'Previous 24 years'),
              (this.nextMultiYearLabel = 'Next 24 years'),
              (this.switchToMonthViewLabel = 'Choose date'),
              (this.switchToMultiYearViewLabel = 'Choose month and year');
          }
          formatYearRange(l, g) {
            return `${l} \u2013 ${g}`;
          }
        }
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵprov = d.Yz7({ token: b, factory: b.ɵfac, providedIn: 'root' })),
          b
        );
      })();
      const Wr = {
        provide: new d.OlP('mat-datepicker-scroll-strategy'),
        deps: [ue.aV],
        useFactory: function Gr(b) {
          return () => b.scrollStrategies.reposition();
        },
      };
      let yi = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ providers: [Bi, Wr], imports: [[fe.ez, At.ot, ue.U8, xt.rt, et.eL, h.BQ], Qe.ZD] })),
          b
        );
      })();
      function W(b, w) {}
      class H {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = 'first-tabbable'),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const F = {
        dialogContainer: (0, J.X$)('dialogContainer', [
          (0, J.SB)('void, exit', (0, J.oB)({ opacity: 0, transform: 'scale(0.7)' })),
          (0, J.SB)('enter', (0, J.oB)({ transform: 'none' })),
          (0, J.eR)(
            '* => enter',
            (0, J.jt)('150ms cubic-bezier(0, 0, 0.2, 1)', (0, J.oB)({ transform: 'none', opacity: 1 }))
          ),
          (0, J.eR)(
            '* => void, * => exit',
            (0, J.jt)('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', (0, J.oB)({ opacity: 0 }))
          ),
        ]),
      };
      let Xt = (() => {
          class b extends et.en {
            constructor(l, g, T, Y, _t, Qt, vn, Zn) {
              super(),
                (this._elementRef = l),
                (this._focusTrapFactory = g),
                (this._changeDetectorRef = T),
                (this._config = _t),
                (this._interactivityChecker = Qt),
                (this._ngZone = vn),
                (this._focusMonitor = Zn),
                (this._animationStateChanged = new d.vpe()),
                (this._elementFocusedBeforeDialogWasOpened = null),
                (this._closeInteractionType = null),
                (this.attachDomPortal = (ti) => (
                  this._portalOutlet.hasAttached(), this._portalOutlet.attachDomPortal(ti)
                )),
                (this._ariaLabelledBy = _t.ariaLabelledBy || null),
                (this._document = Y);
            }
            _initializeWithAttachedContent() {
              this._setupFocusTrap(), this._capturePreviouslyFocusedElement();
            }
            attachComponentPortal(l) {
              return this._portalOutlet.hasAttached(), this._portalOutlet.attachComponentPortal(l);
            }
            attachTemplatePortal(l) {
              return this._portalOutlet.hasAttached(), this._portalOutlet.attachTemplatePortal(l);
            }
            _recaptureFocus() {
              this._containsFocus() || this._trapFocus();
            }
            _forceFocus(l, g) {
              this._interactivityChecker.isFocusable(l) ||
                ((l.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  l.addEventListener('blur', () => l.removeAttribute('tabindex')),
                    l.addEventListener('mousedown', () => l.removeAttribute('tabindex'));
                })),
                l.focus(g);
            }
            _focusByCssSelector(l, g) {
              let T = this._elementRef.nativeElement.querySelector(l);
              T && this._forceFocus(T, g);
            }
            _trapFocus() {
              const l = this._elementRef.nativeElement;
              switch (this._config.autoFocus) {
                case !1:
                case 'dialog':
                  this._containsFocus() || l.focus();
                  break;
                case !0:
                case 'first-tabbable':
                  this._focusTrap.focusInitialElementWhenReady().then((g) => {
                    g || this._focusDialogContainer();
                  });
                  break;
                case 'first-heading':
                  this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');
                  break;
                default:
                  this._focusByCssSelector(this._config.autoFocus);
              }
            }
            _restoreFocus() {
              const l = this._elementFocusedBeforeDialogWasOpened;
              if (this._config.restoreFocus && l && 'function' == typeof l.focus) {
                const g = (0, ee.ht)(),
                  T = this._elementRef.nativeElement;
                (!g || g === this._document.body || g === T || T.contains(g)) &&
                  (this._focusMonitor
                    ? (this._focusMonitor.focusVia(l, this._closeInteractionType), (this._closeInteractionType = null))
                    : l.focus());
              }
              this._focusTrap && this._focusTrap.destroy();
            }
            _setupFocusTrap() {
              this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
            }
            _capturePreviouslyFocusedElement() {
              this._document && (this._elementFocusedBeforeDialogWasOpened = (0, ee.ht)());
            }
            _focusDialogContainer() {
              this._elementRef.nativeElement.focus && this._elementRef.nativeElement.focus();
            }
            _containsFocus() {
              const l = this._elementRef.nativeElement,
                g = (0, ee.ht)();
              return l === g || l.contains(g);
            }
          }
          return (
            (b.ɵfac = function (l) {
              return new (l || b)(
                d.Y36(d.SBq),
                d.Y36(xt.qV),
                d.Y36(d.sBO),
                d.Y36(fe.K0, 8),
                d.Y36(H),
                d.Y36(xt.ic),
                d.Y36(d.R0b),
                d.Y36(xt.tE)
              );
            }),
            (b.ɵdir = d.lG2({
              type: b,
              viewQuery: function (l, g) {
                if ((1 & l && d.Gf(et.Pl, 7), 2 & l)) {
                  let T;
                  d.iGM((T = d.CRH())) && (g._portalOutlet = T.first);
                }
              },
              features: [d.qOj],
            })),
            b
          );
        })(),
        Pn = (() => {
          class b extends Xt {
            constructor() {
              super(...arguments), (this._state = 'enter');
            }
            _onAnimationDone({ toState: l, totalTime: g }) {
              'enter' === l
                ? (this._trapFocus(), this._animationStateChanged.next({ state: 'opened', totalTime: g }))
                : 'exit' === l &&
                  (this._restoreFocus(), this._animationStateChanged.next({ state: 'closed', totalTime: g }));
            }
            _onAnimationStart({ toState: l, totalTime: g }) {
              'enter' === l
                ? this._animationStateChanged.next({ state: 'opening', totalTime: g })
                : ('exit' === l || 'void' === l) &&
                  this._animationStateChanged.next({ state: 'closing', totalTime: g });
            }
            _startExitAnimation() {
              (this._state = 'exit'), this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (b.ɵfac = (function () {
              let w;
              return function (g) {
                return (w || (w = d.n5z(b)))(g || b);
              };
            })()),
            (b.ɵcmp = d.Xpm({
              type: b,
              selectors: [['mat-dialog-container']],
              hostAttrs: ['tabindex', '-1', 'aria-modal', 'true', 1, 'mat-dialog-container'],
              hostVars: 6,
              hostBindings: function (l, g) {
                1 & l &&
                  d.WFA('@dialogContainer.start', function (Y) {
                    return g._onAnimationStart(Y);
                  })('@dialogContainer.done', function (Y) {
                    return g._onAnimationDone(Y);
                  }),
                  2 & l &&
                    (d.Ikx('id', g._id),
                    d.uIk('role', g._config.role)('aria-labelledby', g._config.ariaLabel ? null : g._ariaLabelledBy)(
                      'aria-label',
                      g._config.ariaLabel
                    )('aria-describedby', g._config.ariaDescribedBy || null),
                    d.d8E('@dialogContainer', g._state));
              },
              features: [d.qOj],
              decls: 1,
              vars: 0,
              consts: [['cdkPortalOutlet', '']],
              template: function (l, g) {
                1 & l && d.YNc(0, W, 0, 0, 'ng-template', 0);
              },
              directives: [et.Pl],
              styles: [
                '.mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n',
              ],
              encapsulation: 2,
              data: { animation: [F.dialogContainer] },
            })),
            b
          );
        })(),
        Pi = 0;
      class pr {
        constructor(w, l, g = 'mat-dialog-' + Pi++) {
          (this._overlayRef = w),
            (this._containerInstance = l),
            (this.id = g),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new Ce.x()),
            (this._afterClosed = new Ce.x()),
            (this._beforeClosed = new Ce.x()),
            (this._state = 0),
            (l._id = g),
            l._animationStateChanged
              .pipe(
                (0, We.h)((T) => 'opened' === T.state),
                (0, vt.q)(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            l._animationStateChanged
              .pipe(
                (0, We.h)((T) => 'closed' === T.state),
                (0, vt.q)(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout), this._finishDialogClose();
              }),
            w.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            w
              .keydownEvents()
              .pipe((0, We.h)((T) => T.keyCode === Oe.hY && !this.disableClose && !(0, Oe.Vb)(T)))
              .subscribe((T) => {
                T.preventDefault(), so(this, 'keyboard');
              }),
            w.backdropClick().subscribe(() => {
              this.disableClose ? this._containerInstance._recaptureFocus() : so(this, 'mouse');
            });
        }
        close(w) {
          (this._result = w),
            this._containerInstance._animationStateChanged
              .pipe(
                (0, We.h)((l) => 'closing' === l.state),
                (0, vt.q)(1)
              )
              .subscribe((l) => {
                this._beforeClosed.next(w),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), l.totalTime + 100));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._afterClosed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(w) {
          let l = this._getPositionStrategy();
          return (
            w && (w.left || w.right) ? (w.left ? l.left(w.left) : l.right(w.right)) : l.centerHorizontally(),
            w && (w.top || w.bottom) ? (w.top ? l.top(w.top) : l.bottom(w.bottom)) : l.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(w = '', l = '') {
          return this._overlayRef.updateSize({ width: w, height: l }), this._overlayRef.updatePosition(), this;
        }
        addPanelClass(w) {
          return this._overlayRef.addPanelClass(w), this;
        }
        removePanelClass(w) {
          return this._overlayRef.removePanelClass(w), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      function so(b, w, l) {
        return void 0 !== b._containerInstance && (b._containerInstance._closeInteractionType = w), b.close(l);
      }
      const oo = new d.OlP('MatDialogData'),
        bn = new d.OlP('mat-dialog-default-options'),
        oe = new d.OlP('mat-dialog-scroll-strategy'),
        B = {
          provide: oe,
          deps: [ue.aV],
          useFactory: function M(b) {
            return () => b.scrollStrategies.block();
          },
        };
      let ce = (() => {
          class b {
            constructor(l, g, T, Y, _t, Qt, vn, Zn, ti, Wi) {
              (this._overlay = l),
                (this._injector = g),
                (this._defaultOptions = T),
                (this._parentDialog = Y),
                (this._overlayContainer = _t),
                (this._dialogRefConstructor = vn),
                (this._dialogContainerType = Zn),
                (this._dialogDataToken = ti),
                (this._animationMode = Wi),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new Ce.x()),
                (this._afterOpenedAtThisLevel = new Ce.x()),
                (this._ariaHiddenElements = new Map()),
                (this._dialogAnimatingOpen = !1),
                (this.afterAllClosed = (0, Re.P)(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe((0, Ze.O)(void 0))
                )),
                (this._scrollStrategy = Qt);
            }
            get openDialogs() {
              return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const l = this._parentDialog;
              return l ? l._getAfterAllClosed() : this._afterAllClosedAtThisLevel;
            }
            open(l, g) {
              if (
                ((g = (function pt(b, w) {
                  return Object.assign(Object.assign({}, w), b);
                })(g, this._defaultOptions || new H())),
                g.id && this.getDialogById(g.id),
                this._dialogAnimatingOpen)
              )
                return this._lastDialogRef;
              const T = this._createOverlay(g),
                Y = this._attachDialogContainer(T, g);
              if ('NoopAnimations' !== this._animationMode) {
                const Qt = Y._animationStateChanged.subscribe((vn) => {
                  'opening' === vn.state && (this._dialogAnimatingOpen = !0),
                    'opened' === vn.state && ((this._dialogAnimatingOpen = !1), Qt.unsubscribe());
                });
                this._animationStateSubscriptions || (this._animationStateSubscriptions = new N.w0()),
                  this._animationStateSubscriptions.add(Qt);
              }
              const _t = this._attachDialogContent(l, Y, T, g);
              return (
                (this._lastDialogRef = _t),
                this.openDialogs.length || this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(_t),
                _t.afterClosed().subscribe(() => this._removeOpenDialog(_t)),
                this.afterOpened.next(_t),
                Y._initializeWithAttachedContent(),
                _t
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(l) {
              return this.openDialogs.find((g) => g.id === l);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                this._animationStateSubscriptions && this._animationStateSubscriptions.unsubscribe();
            }
            _createOverlay(l) {
              const g = this._getOverlayConfig(l);
              return this._overlay.create(g);
            }
            _getOverlayConfig(l) {
              const g = new ue.X_({
                positionStrategy: this._overlay.position().global(),
                scrollStrategy: l.scrollStrategy || this._scrollStrategy(),
                panelClass: l.panelClass,
                hasBackdrop: l.hasBackdrop,
                direction: l.direction,
                minWidth: l.minWidth,
                minHeight: l.minHeight,
                maxWidth: l.maxWidth,
                maxHeight: l.maxHeight,
                disposeOnNavigation: l.closeOnNavigation,
              });
              return l.backdropClass && (g.backdropClass = l.backdropClass), g;
            }
            _attachDialogContainer(l, g) {
              const Y = d.zs3.create({
                  parent: (g && g.viewContainerRef && g.viewContainerRef.injector) || this._injector,
                  providers: [{ provide: H, useValue: g }],
                }),
                _t = new et.C5(this._dialogContainerType, g.viewContainerRef, Y, g.componentFactoryResolver);
              return l.attach(_t).instance;
            }
            _attachDialogContent(l, g, T, Y) {
              const _t = new this._dialogRefConstructor(T, g, Y.id);
              if (l instanceof d.Rgc) g.attachTemplatePortal(new et.UE(l, null, { $implicit: Y.data, dialogRef: _t }));
              else {
                const Qt = this._createInjector(Y, _t, g),
                  vn = g.attachComponentPortal(new et.C5(l, Y.viewContainerRef, Qt));
                _t.componentInstance = vn.instance;
              }
              return _t.updateSize(Y.width, Y.height).updatePosition(Y.position), _t;
            }
            _createInjector(l, g, T) {
              const Y = l && l.viewContainerRef && l.viewContainerRef.injector,
                _t = [
                  { provide: this._dialogContainerType, useValue: T },
                  { provide: this._dialogDataToken, useValue: l.data },
                  { provide: this._dialogRefConstructor, useValue: g },
                ];
              return (
                l.direction &&
                  (!Y || !Y.get(Ie.Is, null, d.XFs.Optional)) &&
                  _t.push({ provide: Ie.Is, useValue: { value: l.direction, change: (0, Fe.of)() } }),
                d.zs3.create({ parent: Y || this._injector, providers: _t })
              );
            }
            _removeOpenDialog(l) {
              const g = this.openDialogs.indexOf(l);
              g > -1 &&
                (this.openDialogs.splice(g, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((T, Y) => {
                    T ? Y.setAttribute('aria-hidden', T) : Y.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const l = this._overlayContainer.getContainerElement();
              if (l.parentElement) {
                const g = l.parentElement.children;
                for (let T = g.length - 1; T > -1; T--) {
                  let Y = g[T];
                  Y !== l &&
                    'SCRIPT' !== Y.nodeName &&
                    'STYLE' !== Y.nodeName &&
                    !Y.hasAttribute('aria-live') &&
                    (this._ariaHiddenElements.set(Y, Y.getAttribute('aria-hidden')),
                    Y.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _closeDialogs(l) {
              let g = l.length;
              for (; g--; ) l[g].close();
            }
          }
          return (
            (b.ɵfac = function (l) {
              d.$Z();
            }),
            (b.ɵdir = d.lG2({ type: b })),
            b
          );
        })(),
        Ge = (() => {
          class b extends ce {
            constructor(l, g, T, Y, _t, Qt, vn, Zn) {
              super(l, g, Y, Qt, vn, _t, pr, Pn, oo, Zn);
            }
          }
          return (
            (b.ɵfac = function (l) {
              return new (l || b)(
                d.LFG(ue.aV),
                d.LFG(d.zs3),
                d.LFG(fe.Ye, 8),
                d.LFG(bn, 8),
                d.LFG(oe),
                d.LFG(b, 12),
                d.LFG(ue.Xj),
                d.LFG(An.Qb, 8)
              );
            }),
            (b.ɵprov = d.Yz7({ token: b, factory: b.ɵfac })),
            b
          );
        })(),
        mi = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ providers: [Ge, B], imports: [[ue.U8, et.eL, h.BQ], h.BQ] })),
            b
          );
        })();
      var Xn = x(4834);
      let Er = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({})),
            b
          );
        })(),
        Ca = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[fe.ez, h.BQ, Er, et.eL]] })),
            b
          );
        })();
      var Gi = x(3954),
        Cs = x(5245),
        qr = x(4623),
        ws = x(2181);
      const Bo = {
        provide: new d.OlP('mat-select-scroll-strategy'),
        deps: [ue.aV],
        useFactory: function Qo(b) {
          return () => b.scrollStrategies.reposition();
        },
      };
      let ut = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ providers: [Bo], imports: [[fe.ez, ue.U8, h.Ng, h.BQ], Qe.ZD, me.lN, h.Ng, h.BQ] })),
          b
        );
      })();
      const wo = {
        provide: new d.OlP('mat-tooltip-scroll-strategy'),
        deps: [ue.aV],
        useFactory: function Qs(b) {
          return () => b.scrollStrategies.reposition({ scrollThrottle: 20 });
        },
      };
      let vu = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ providers: [wo], imports: [[xt.rt, fe.ez, ue.U8, h.BQ], h.BQ, Qe.ZD] })),
            b
          );
        })(),
        Qa = (() => {
          class b {
            constructor() {
              (this.changes = new Ce.x()),
                (this.itemsPerPageLabel = 'Items per page:'),
                (this.nextPageLabel = 'Next page'),
                (this.previousPageLabel = 'Previous page'),
                (this.firstPageLabel = 'First page'),
                (this.lastPageLabel = 'Last page'),
                (this.getRangeLabel = (l, g, T) => {
                  if (0 == T || 0 == g) return `0 of ${T}`;
                  const Y = l * g;
                  return `${Y + 1} \u2013 ${Y < (T = Math.max(T, 0)) ? Math.min(Y + g, T) : Y + g} of ${T}`;
                });
            }
          }
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵprov = d.Yz7({ token: b, factory: b.ɵfac, providedIn: 'root' })),
            b
          );
        })();
      const Qu = {
        provide: Qa,
        deps: [[new d.FiY(), new d.tp0(), Qa]],
        useFactory: function xo(b) {
          return b || new Qa();
        },
      };
      let Bd = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ providers: [Qu], imports: [[fe.ez, At.ot, ut, vu, h.BQ]] })),
            b
          );
        })(),
        Nc = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[fe.ez, h.BQ], h.BQ] })),
            b
          );
        })();
      var co = x(773);
      let el = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ imports: [[h.si, h.BQ], h.BQ] })),
          b
        );
      })();
      var Uc = x(2638),
        jd = x(2368);
      let K = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[fe.ez, h.BQ], h.BQ] })),
            b
          );
        })(),
        Us = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[ue.U8, et.eL, fe.ez, At.ot, h.BQ], h.BQ] })),
            b
          );
        })(),
        nd = (() => {
          class b {
            constructor() {
              this.changes = new Ce.x();
            }
          }
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵprov = d.Yz7({ token: b, factory: b.ɵfac, providedIn: 'root' })),
            b
          );
        })();
      const uc = {
        provide: nd,
        deps: [[new d.FiY(), new d.tp0(), nd]],
        useFactory: function uo(b) {
          return b || new nd();
        },
      };
      let wu = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ providers: [uc], imports: [[fe.ez, h.BQ]] })),
            b
          );
        })(),
        Nf = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[Ie.vT]] })),
            b
          );
        })(),
        la = (() => {
          class b {
            constructor() {
              (this.changes = new Ce.x()),
                (this.optionalLabel = 'Optional'),
                (this.completedLabel = 'Completed'),
                (this.editableLabel = 'Editable');
            }
          }
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵprov = d.Yz7({ token: b, factory: b.ɵfac, providedIn: 'root' })),
            b
          );
        })();
      const Eu = {
        provide: la,
        deps: [[new d.FiY(), new d.tp0(), la]],
        useFactory: function Es(b) {
          return b || new la();
        },
      };
      let id = (() => {
        class b {}
        return (
          (b.ɵfac = function (l) {
            return new (l || b)();
          }),
          (b.ɵmod = d.oAB({ type: b })),
          (b.ɵinj = d.cJS({ providers: [Eu, h.rD], imports: [[h.BQ, fe.ez, et.eL, At.ot, Nf, Cs.Ps, h.si], h.BQ] })),
          b
        );
      })();
      x(8996), x(1135), x(5191);
      let k = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[Qe.Cl]] })),
            b
          );
        })(),
        Jd = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[k, h.BQ], h.BQ] })),
            b
          );
        })(),
        Qf = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[fe.ez, h.BQ, et.eL, h.si, Yn.Q8, xt.rt], h.BQ] })),
            b
          );
        })();
      var Fm = x(4594);
      let ja = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({})),
            b
          );
        })(),
        Dn = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({ imports: [[ja, h.BQ], h.BQ] })),
            b
          );
        })(),
        Wh = (() => {
          class b {}
          return (
            (b.ɵfac = function (l) {
              return new (l || b)();
            }),
            (b.ɵmod = d.oAB({ type: b })),
            (b.ɵinj = d.cJS({
              imports: [
                en,
                hn,
                At.ot,
                mn,
                ln.QW,
                Ot,
                pi,
                h.BQ,
                yi,
                mi,
                Xn.t,
                Ca,
                me.lN,
                Gi.N6,
                Cs.Ps,
                Kt.c,
                h.uc,
                qr.ie,
                ws.Tx,
                h.XK,
                h.Ng,
                Bd,
                Nc,
                co.Cq,
                h.us,
                el,
                h.si,
                ut,
                Uc.SJ,
                jd.rP,
                K,
                Us,
                wu,
                id,
                Jd,
                Qf,
                Fm.g0,
                vu,
                Dn,
              ],
            })),
            b
          );
        })();
    },
    9981: (un, ft, x) => {
      'use strict';
      x.d(ft, { N: () => m });
      const m = {
        production: !0,
        version: '1.0.0',
        serverUrl: 'https://api.chucknorris.io',
        defaultLanguage: 'en-US',
        supportedLanguages: ['en-US'],
        firebase: {
          apiKey: 'AIzaSyDsyJQdExll5PlkJ_1Svm3tPF7mZlWthf8',
          authDomain: 'prueba-tecnica-js.firebaseapp.com',
          projectId: 'prueba-tecnica-js',
          databaseURL: 'https://prueba-tecnica-js-default-rtdb.firebaseio.com',
          storageBucket: 'prueba-tecnica-js.appspot.com',
          messagingSenderId: '809717649228',
          appId: '1:809717649228:web:57df3b56d82ba3e6ddc9e9',
          measurementId: 'G-147609NZ73',
        },
      };
    },
    479: (un, ft, x) => {
      'use strict';
      var h = x(2313),
        m = x(5e3),
        d = x(3075),
        N = x(5357),
        Ce = x(520),
        Re = x(9808),
        He = x(9770),
        Fe = x(2843),
        Ne = x(4968),
        ee = x(9646),
        fe = x(7272),
        ue = x(7579),
        Qe = x(8306),
        Oe = x(5032);
      const et = new Qe.y(Oe.Z);
      var me = x(6451),
        Ze = x(4004),
        dt = x(9300),
        vt = x(3900),
        We = x(4033),
        $e = x(576),
        ge = x(8996),
        Ke = x(4482);
      const De = { connector: () => new ue.x() };
      function Ye(n, e = De) {
        const { connector: t } = e;
        return (0, Ke.e)((i, o) => {
          const c = t();
          (0, ge.D)(
            n(
              (function Ie(n) {
                return new Qe.y((e) => n.subscribe(e));
              })(c)
            )
          ).subscribe(o),
            o.add(i.subscribe(c));
        });
      }
      var Ve = x(5698),
        Ft = x(8505),
        kt = x(1005);
      const St = 'Service workers are disabled or not supported by this browser';
      class Je {
        constructor(e) {
          if (((this.serviceWorker = e), e)) {
            const i = (0, Ne.R)(e, 'controllerchange').pipe((0, Ze.U)(() => e.controller)),
              o = (0, He.P)(() => (0, ee.of)(e.controller)),
              c = (0, fe.z)(o, i);
            (this.worker = c.pipe((0, dt.h)((se) => !!se))),
              (this.registration = this.worker.pipe((0, vt.w)(() => e.getRegistration())));
            const U = (0, Ne.R)(e, 'message')
              .pipe((0, Ze.U)((se) => se.data))
              .pipe((0, dt.h)((se) => se && se.type))
              .pipe(
                (function qe(n) {
                  return n
                    ? (e) => Ye(n)(e)
                    : (e) =>
                        (function it(n, e) {
                          const t = (0, $e.m)(n) ? n : () => n;
                          return (0, $e.m)(e) ? Ye(e, { connector: t }) : (i) => new We.c(i, t);
                        })(new ue.x())(e);
                })()
              );
            U.connect(), (this.events = U);
          } else
            this.worker =
              this.events =
              this.registration =
                (function on(n) {
                  return (0, He.P)(() => (0, Fe._)(new Error(n)));
                })(St);
        }
        postMessage(e, t) {
          return this.worker
            .pipe(
              (0, Ve.q)(1),
              (0, Ft.b)((i) => {
                i.postMessage(Object.assign({ action: e }, t));
              })
            )
            .toPromise()
            .then(() => {});
        }
        postMessageWithOperation(e, t, i) {
          const o = this.waitForOperationCompleted(i),
            c = this.postMessage(e, t);
          return Promise.all([c, o]).then(([, p]) => p);
        }
        generateNonce() {
          return Math.round(1e7 * Math.random());
        }
        eventsOfType(e) {
          let t;
          return (
            (t = 'string' == typeof e ? (i) => i.type === e : (i) => e.includes(i.type)), this.events.pipe((0, dt.h)(t))
          );
        }
        nextEventOfType(e) {
          return this.eventsOfType(e).pipe((0, Ve.q)(1));
        }
        waitForOperationCompleted(e) {
          return this.eventsOfType('OPERATION_COMPLETED')
            .pipe(
              (0, dt.h)((t) => t.nonce === e),
              (0, Ve.q)(1),
              (0, Ze.U)((t) => {
                if (void 0 !== t.result) return t.result;
                throw new Error(t.error);
              })
            )
            .toPromise();
        }
        get isEnabled() {
          return !!this.serviceWorker;
        }
      }
      let Ct = (() => {
          class n {
            constructor(t) {
              if (((this.sw = t), (this.subscriptionChanges = new ue.x()), !t.isEnabled))
                return (this.messages = et), (this.notificationClicks = et), void (this.subscription = et);
              (this.messages = this.sw.eventsOfType('PUSH').pipe((0, Ze.U)((o) => o.data))),
                (this.notificationClicks = this.sw.eventsOfType('NOTIFICATION_CLICK').pipe((0, Ze.U)((o) => o.data))),
                (this.pushManager = this.sw.registration.pipe((0, Ze.U)((o) => o.pushManager)));
              const i = this.pushManager.pipe((0, vt.w)((o) => o.getSubscription()));
              this.subscription = (0, me.T)(i, this.subscriptionChanges);
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            requestSubscription(t) {
              if (!this.sw.isEnabled) return Promise.reject(new Error(St));
              const i = { userVisibleOnly: !0 };
              let o = this.decodeBase64(t.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+')),
                c = new Uint8Array(new ArrayBuffer(o.length));
              for (let p = 0; p < o.length; p++) c[p] = o.charCodeAt(p);
              return (
                (i.applicationServerKey = c),
                this.pushManager
                  .pipe(
                    (0, vt.w)((p) => p.subscribe(i)),
                    (0, Ve.q)(1)
                  )
                  .toPromise()
                  .then((p) => (this.subscriptionChanges.next(p), p))
              );
            }
            unsubscribe() {
              return this.sw.isEnabled
                ? this.subscription
                    .pipe(
                      (0, Ve.q)(1),
                      (0, vt.w)((i) => {
                        if (null === i) throw new Error('Not subscribed to push notifications.');
                        return i.unsubscribe().then((o) => {
                          if (!o) throw new Error('Unsubscribe failed!');
                          this.subscriptionChanges.next(null);
                        });
                      })
                    )
                    .toPromise()
                : Promise.reject(new Error(St));
            }
            decodeBase64(t) {
              return atob(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(m.LFG(Je));
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })(),
        st = (() => {
          class n {
            constructor(t) {
              if (((this.sw = t), !t.isEnabled))
                return (
                  (this.versionUpdates = et),
                  (this.available = et),
                  (this.activated = et),
                  void (this.unrecoverable = et)
                );
              (this.versionUpdates = this.sw.eventsOfType([
                'VERSION_DETECTED',
                'VERSION_INSTALLATION_FAILED',
                'VERSION_READY',
              ])),
                (this.available = this.versionUpdates.pipe(
                  (0, dt.h)((i) => 'VERSION_READY' === i.type),
                  (0, Ze.U)((i) => ({
                    type: 'UPDATE_AVAILABLE',
                    current: i.currentVersion,
                    available: i.latestVersion,
                  }))
                )),
                (this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED')),
                (this.unrecoverable = this.sw.eventsOfType('UNRECOVERABLE_STATE'));
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            checkForUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(St));
              const t = this.sw.generateNonce();
              return this.sw.postMessageWithOperation('CHECK_FOR_UPDATES', { nonce: t }, t);
            }
            activateUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(St));
              const t = this.sw.generateNonce();
              return this.sw.postMessageWithOperation('ACTIVATE_UPDATE', { nonce: t }, t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(m.LFG(Je));
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      class Et {}
      const yt = new m.OlP('NGSW_REGISTER_SCRIPT');
      function Ue(n, e, t, i) {
        return () => {
          if (!(0, Re.NF)(i) || !('serviceWorker' in navigator) || !1 === t.enabled) return;
          let c;
          if (
            (navigator.serviceWorker.addEventListener('controllerchange', () => {
              null !== navigator.serviceWorker.controller &&
                navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });
            }),
            'function' == typeof t.registrationStrategy)
          )
            c = t.registrationStrategy();
          else {
            const [C, ...I] = (t.registrationStrategy || 'registerWhenStable:30000').split(':');
            switch (C) {
              case 'registerImmediately':
                c = (0, ee.of)(null);
                break;
              case 'registerWithDelay':
                c = bt(+I[0] || 0);
                break;
              case 'registerWhenStable':
                c = I[0] ? (0, me.T)(at(n), bt(+I[0])) : at(n);
                break;
              default:
                throw new Error(`Unknown ServiceWorker registration strategy: ${t.registrationStrategy}`);
            }
          }
          n.get(m.R0b).runOutsideAngular(() =>
            c
              .pipe((0, Ve.q)(1))
              .subscribe(() =>
                navigator.serviceWorker
                  .register(e, { scope: t.scope })
                  .catch((C) => console.error('Service worker registration failed with:', C))
              )
          );
        };
      }
      function bt(n) {
        return (0, ee.of)(null).pipe((0, kt.g)(n));
      }
      function at(n) {
        return n.get(m.z2F).isStable.pipe((0, dt.h)((t) => t));
      }
      function mt(n, e) {
        return new Je((0, Re.NF)(e) && !1 !== n.enabled ? navigator.serviceWorker : void 0);
      }
      let Nt = (() => {
        class n {
          static register(t, i = {}) {
            return {
              ngModule: n,
              providers: [
                { provide: yt, useValue: t },
                { provide: Et, useValue: i },
                { provide: Je, useFactory: mt, deps: [Et, m.Lbi] },
                { provide: m.ip1, useFactory: Ue, deps: [m.zs3, yt, Et, m.Lbi], multi: !0 },
              ],
            };
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = m.oAB({ type: n })),
          (n.ɵinj = m.cJS({ providers: [Ct, st] })),
          n
        );
      })();
      var en = x(1062),
        xt = x(6360),
        Gt = x(3472),
        re = x(9981),
        ot = x(2155);
      let Zt = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ imports: [[ot.o9, Gt.q, en.aw, Re.ez]] })),
            n
          );
        })(),
        hn = (() => {
          class n {
            intercept(t, i) {
              return /^(http|https):/i.test(t.url) || (t = t.clone({ url: re.N.serverUrl + t.url })), i.handle(t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      var At = x(262),
        ae = (() => {
          return (
            ((n = ae || (ae = {}))[(n.Off = 0)] = 'Off'),
            (n[(n.Error = 1)] = 'Error'),
            (n[(n.Warning = 2)] = 'Warning'),
            (n[(n.Info = 3)] = 'Info'),
            (n[(n.Debug = 4)] = 'Debug'),
            ae
          );
          var n;
        })();
      class Le {
        constructor(e) {
          this.source = e;
        }
        static enableProductionMode() {
          Le.level = ae.Warning;
        }
        debug(...e) {
          this.log(console.log, ae.Debug, e);
        }
        info(...e) {
          this.log(console.info, ae.Info, e);
        }
        warn(...e) {
          this.log(console.warn, ae.Warning, e);
        }
        error(...e) {
          this.log(console.error, ae.Error, e);
        }
        log(e, t, i) {
          if (t <= Le.level) {
            const o = this.source ? ['[' + this.source + ']'].concat(i) : i;
            e.apply(console, o), Le.outputs.forEach((c) => c.apply(c, [this.source, t, ...i]));
          }
        }
      }
      (Le.level = ae.Debug), (Le.outputs = []);
      const ht = new Le('ErrorHandlerInterceptor');
      let Se = (() => {
          class n {
            intercept(t, i) {
              return i.handle(t).pipe((0, At.K)((o) => this.errorHandler(o)));
            }
            errorHandler(t) {
              throw (re.N.production || ht.error('Request error', t), t);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        Be = (() => {
          class n extends N.wN {
            shouldDetach(t) {
              return !1;
            }
            store(t, i) {}
            shouldAttach(t) {
              return !1;
            }
            retrieve(t) {
              return null;
            }
            shouldReuseRoute(t, i) {
              var o, c, p;
              return (
                t.routeConfig === i.routeConfig ||
                Boolean(
                  (null === (o = t.routeConfig) || void 0 === o ? void 0 : o.component) &&
                    (null === (c = t.routeConfig) || void 0 === c ? void 0 : c.component) ===
                      (null === (p = i.routeConfig) || void 0 === p ? void 0 : p.component)
                )
              );
            }
          }
          return (
            (n.ɵfac = (function () {
              let e;
              return function (i) {
                return (e || (e = m.n5z(n)))(i || n);
              };
            })()),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac })),
            n
          );
        })();
      var Pe = x(727),
        X = x(2722);
      const we = m.GuJ,
        It = Symbol('__destroy'),
        an = Symbol('__decoratorApplied');
      function mn(n) {
        return 'string' == typeof n ? Symbol(`__destroy__${n}`) : It;
      }
      function An(n, e) {
        n[e] || (n[e] = new ue.x());
      }
      function Yn(n, e) {
        n[e] && (n[e].next(), n[e].complete(), (n[e] = null));
      }
      function Hn(n) {
        n instanceof Pe.w0 && n.unsubscribe();
      }
      function Wt(n, e) {
        return function () {
          var t;
          if ((n && n.call(this), Yn(this, mn()), e.arrayName))
            return (function zt(n) {
              Array.isArray(n) && n.forEach(Hn);
            })(this[e.arrayName]);
          if (e.checkProperties)
            for (const i in this) (null === (t = e.blackList) || void 0 === t ? void 0 : t.includes(i)) || Hn(this[i]);
        };
      }
      function le(n = {}) {
        return (e) => {
          !(function Rt(n) {
            return !!n[we];
          })(e)
            ? (function de(n, e) {
                n.prototype.ngOnDestroy = Wt(n.prototype.ngOnDestroy, e);
              })(e, n)
            : (function q(n, e) {
                const t = n.ɵpipe;
                t.onDestroy = Wt(t.onDestroy, e);
              })(e, n),
            (function ln(n) {
              n.prototype[an] = !0;
            })(e);
        };
      }
      function ye(n, e) {
        return (t) => {
          const i = mn(e);
          return (
            'string' == typeof e
              ? (function Z(n, e, t) {
                  const i = n[e];
                  An(n, t),
                    (n[e] = function () {
                      i.apply(this, arguments), Yn(this, t), (n[e] = i);
                    });
                })(n, e, i)
              : An(n, i),
            t.pipe((0, X.R)(n[i]))
          );
        };
      }
      let he = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = m.oAB({ type: n })),
          (n.ɵinj = m.cJS({ imports: [[Re.ez, en.aw, ot.o9, Gt.q]] })),
          n
        );
      })();
      const Te = JSON.parse(
          '{"APP_NAME":"prueba-tecnica","About":"About","Hello world !":"Hello world !","Home":"Home","Logged in as":"Logged in as","Login":"Login","Logout":"Logout","Password":"Password","Password is required":"Password is required","Username":"Username","Username is required":"Username is required","Username or password incorrect.":"Username or password incorrect.","Remember me":"Remember me","Version":"Version"}'
        ),
        pe = new Le('I18nService'),
        _e = 'language';
      let Xe = (() => {
        class n {
          constructor(t) {
            (this.translateService = t), t.setTranslation('en-US', Te);
          }
          init(t, i) {
            (this.defaultLanguage = t),
              (this.supportedLanguages = i),
              (this.language = ''),
              (this.langChangeSubscription = this.translateService.onLangChange.subscribe((o) => {
                localStorage.setItem(_e, o.lang);
              }));
          }
          destroy() {
            this.langChangeSubscription && this.langChangeSubscription.unsubscribe();
          }
          set language(t) {
            let i = t || localStorage.getItem(_e) || this.translateService.getBrowserCultureLang() || '',
              o = this.supportedLanguages.includes(i);
            i &&
              !o &&
              ((i = i.split('-')[0]),
              (i = this.supportedLanguages.find((c) => c.startsWith(i)) || ''),
              (o = Boolean(i))),
              (!i || !o) && (i = this.defaultLanguage),
              pe.debug(`Language set to ${(t = i)}`),
              this.translateService.use(t);
          }
          get language() {
            return this.translateService.currentLang;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.LFG(en.sK));
          }),
          (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      var Ot = x(7423),
        Yt = x(2181),
        _n = x(5245);
      function Qn(n, e) {
        if (
          (1 & n &&
            (m.TgZ(0, 'button', 4),
            m._uU(1, '\n  '),
            m.TgZ(2, 'mat-icon'),
            m._uU(3, 'language'),
            m.qZA(),
            m._uU(4, '\n'),
            m.qZA()),
          2 & n)
        ) {
          m.oxw();
          const t = m.MAs(6);
          m.Q6J('matMenuTriggerFor', t);
        }
      }
      function Ai(n, e) {
        if ((1 & n && (m._uU(0, '\n  '), m.TgZ(1, 'button', 5), m._uU(2), m.qZA(), m._uU(3, '\n')), 2 & n)) {
          const t = m.oxw(),
            i = m.MAs(6);
          m.xp6(1), m.Q6J('matMenuTriggerFor', i), m.xp6(1), m.hij('\n    ', t.currentLanguage, '\n  ');
        }
      }
      function jt(n, e) {
        if (1 & n) {
          const t = m.EpF();
          m.TgZ(0, 'button', 6),
            m.NdJ('click', function () {
              const c = m.CHM(t).$implicit;
              return m.oxw().setLanguage(c);
            }),
            m._uU(1),
            m.qZA();
        }
        if (2 & n) {
          const t = e.$implicit;
          m.xp6(1), m.hij('\n    ', t, '\n  ');
        }
      }
      let wt = (() => {
        class n {
          constructor(t) {
            (this.i18nService = t), (this.icon = !1);
          }
          ngOnInit() {}
          setLanguage(t) {
            this.i18nService.language = t;
          }
          get currentLanguage() {
            return this.i18nService.language;
          }
          get languages() {
            return this.i18nService.supportedLanguages;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.Y36(Xe));
          }),
          (n.ɵcmp = m.Xpm({
            type: n,
            selectors: [['app-language-selector']],
            inputs: { icon: 'icon' },
            decls: 11,
            vars: 3,
            consts: [
              ['mat-icon-button', '', 3, 'matMenuTriggerFor', 4, 'ngIf', 'ngIfElse'],
              ['text', ''],
              ['languageMenu', 'matMenu'],
              ['mat-menu-item', '', 3, 'click', 4, 'ngFor', 'ngForOf'],
              ['mat-icon-button', '', 3, 'matMenuTriggerFor'],
              ['mat-raised-button', '', 'color', 'primary', 3, 'matMenuTriggerFor'],
              ['mat-menu-item', '', 3, 'click'],
            ],
            template: function (t, i) {
              if (
                (1 & t &&
                  (m.YNc(0, Qn, 5, 1, 'button', 0),
                  m._uU(1, '\n'),
                  m.YNc(2, Ai, 4, 2, 'ng-template', null, 1, m.W1O),
                  m._uU(4, '\n'),
                  m.TgZ(5, 'mat-menu', null, 2),
                  m._uU(7, '\n  '),
                  m.YNc(8, jt, 2, 1, 'button', 3),
                  m._uU(9, '\n'),
                  m.qZA(),
                  m._uU(10, '\n')),
                2 & t)
              ) {
                const o = m.MAs(3);
                m.Q6J('ngIf', i.icon)('ngIfElse', o), m.xp6(8), m.Q6J('ngForOf', i.languages);
              }
            },
            directives: [Re.O5, Ot.lW, Yt.p6, _n.Hw, Yt.VK, Re.sg, Yt.OP],
            styles: [''],
          })),
          n
        );
      })();
      var nt = x(7520),
        Pt = x(655),
        dn = x(8746);
      const kn = 'credentials';
      let Gn = (() => {
          class n {
            constructor() {
              this._credentials = null;
              const t = sessionStorage.getItem(kn) || localStorage.getItem(kn);
              t && (this._credentials = JSON.parse(t));
            }
            isAuthenticated() {
              return !!this.credentials;
            }
            get credentials() {
              return this._credentials;
            }
            setCredentials(t, i) {
              (this._credentials = t || null),
                t
                  ? (i ? localStorage : sessionStorage).setItem(kn, JSON.stringify(t))
                  : (sessionStorage.removeItem(kn), localStorage.removeItem(kn));
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })(),
        Jn = (() => {
          class n {
            constructor(t) {
              this.credentialsService = t;
            }
            login(t) {
              const i = { username: t.username, token: '123456' };
              return this.credentialsService.setCredentials(i, t.remember), (0, ee.of)(i);
            }
            logout() {
              return this.credentialsService.setCredentials(), (0, ee.of)(!0);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(m.LFG(Gn));
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      var Ci = x(7093),
        ar = x(9224),
        Rs = x(7322),
        Rr = x(7531),
        br = x(2368),
        es = x(773);
      let Cr = (() => {
        class n {
          constructor() {
            (this.isLoading = !1), (this.size = 1);
          }
          ngOnInit() {}
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵcmp = m.Xpm({
            type: n,
            selectors: [['app-loader']],
            inputs: { isLoading: 'isLoading', size: 'size', message: 'message' },
            decls: 8,
            vars: 4,
            consts: [
              [3, 'hidden'],
              ['mode', 'indeterminate', 3, 'strokeWidth', 'diameter'],
              [1, 'message'],
            ],
            template: function (t, i) {
              1 & t &&
                (m.TgZ(0, 'div', 0),
                m._uU(1, '\n  '),
                m._UZ(2, 'mat-progress-spinner', 1),
                m._uU(3, '\n  '),
                m.TgZ(4, 'span', 2),
                m._uU(5),
                m.qZA(),
                m._uU(6, '\n'),
                m.qZA(),
                m._uU(7, '\n')),
                2 & t &&
                  (m.Q6J('hidden', !i.isLoading),
                  m.xp6(2),
                  m.Q6J('strokeWidth', 2)('diameter', 32 * i.size),
                  m.xp6(3),
                  m.Oqu(i.message));
            },
            directives: [es.Ou],
            styles: [
              '.mat-progress-spinner[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle}.message[_ngcontent-%COMP%]{margin-left:.5em}',
            ],
          })),
          n
        );
      })();
      function xn(n, e) {
        1 & n &&
          (m.TgZ(0, 'mat-error'),
          m._uU(1, '\n              '),
          m.TgZ(2, 'span', 16),
          m._uU(3, 'Username is required'),
          m.qZA(),
          m._uU(4, '\n            '),
          m.qZA());
      }
      function pi(n, e) {
        1 & n &&
          (m.TgZ(0, 'mat-error'),
          m._uU(1, '\n              '),
          m.TgZ(2, 'span', 16),
          m._uU(3, 'Password is required'),
          m.qZA(),
          m._uU(4, '\n            '),
          m.qZA());
      }
      const J = new Le('Login');
      let Kt = class {
        constructor(e, t, i, o) {
          (this.router = e),
            (this.route = t),
            (this.formBuilder = i),
            (this.authenticationService = o),
            (this.version = re.N.version),
            (this.isLoading = !1),
            this.createForm();
        }
        ngOnInit() {}
        login() {
          (this.isLoading = !0),
            this.authenticationService
              .login(this.loginForm.value)
              .pipe(
                (0, dn.x)(() => {
                  this.loginForm.markAsPristine(), (this.isLoading = !1);
                }),
                ye(this)
              )
              .subscribe(
                (t) => {
                  J.debug(`${t.username} successfully logged in`),
                    this.router.navigate([this.route.snapshot.queryParams.redirect || '/'], { replaceUrl: !0 });
                },
                (t) => {
                  J.debug(`Login error: ${t}`), (this.error = t);
                }
              );
        }
        createForm() {
          this.loginForm = this.formBuilder.group({
            username: ['', d.kI.required],
            password: ['', d.kI.required],
            remember: !0,
          });
        }
      };
      (Kt.ɵfac = function (e) {
        return new (e || Kt)(m.Y36(N.F0), m.Y36(N.gz), m.Y36(d.qu), m.Y36(Jn));
      }),
        (Kt.ɵcmp = m.Xpm({
          type: Kt,
          selectors: [['app-login']],
          decls: 63,
          vars: 15,
          consts: [
            [
              'fxFill',
              '',
              'fxLayout',
              'column',
              'fxLayoutAlign',
              'center center',
              'fxLayoutGap',
              '1.5rem',
              1,
              'mat-typography',
            ],
            ['fxLayoutAlign', 'center', 'translate', ''],
            ['fxLayout', 'row', 'fxLayoutAlign', 'center center', 'fxLayoutGap', '2rem'],
            [1, 'version'],
            ['fxLayout', 'row', 'fxLayoutAlign', 'center', 1, 'login-container'],
            ['fxFlex', '90%', 'fxFlex.sm', '66%', 'fxFlex.md', '50%', 'fxFlex.gt-md', '33%', 1, 'login-box'],
            ['novalidate', '', 3, 'formGroup', 'ngSubmit'],
            ['translate', '', 1, 'login-error', 3, 'hidden'],
            ['fxLayout', 'column', 1, 'login-fields'],
            [3, 'hideRequiredMarker'],
            [
              'type',
              'text',
              'matInput',
              '',
              'formControlName',
              'username',
              'autocomplete',
              'username',
              'required',
              '',
              3,
              'placeholder',
            ],
            [4, 'ngIf'],
            [
              'type',
              'password',
              'matInput',
              '',
              'formControlName',
              'password',
              'autocomplete',
              'current-password',
              'required',
              '',
              3,
              'placeholder',
            ],
            ['color', 'primary', 'formControlName', 'remember', 'translate', ''],
            ['mat-raised-button', '', 'color', 'primary', 'type', 'submit', 3, 'disabled'],
            [1, 'inline-loader', 3, 'isLoading'],
            ['translate', ''],
          ],
          template: function (e, t) {
            1 & e &&
              (m.TgZ(0, 'div', 0),
              m._uU(1, '\n  '),
              m.TgZ(2, 'div'),
              m._uU(3, '\n    '),
              m.TgZ(4, 'h1', 1),
              m._uU(5, 'APP_NAME'),
              m.qZA(),
              m._uU(6, '\n    '),
              m.TgZ(7, 'div', 2),
              m._uU(8, '\n      '),
              m.TgZ(9, 'h4', 3),
              m._uU(10),
              m.qZA(),
              m._uU(11, '\n      '),
              m._UZ(12, 'app-language-selector'),
              m._uU(13, '\n    '),
              m.qZA(),
              m._uU(14, '\n  '),
              m.qZA(),
              m._uU(15, '\n  '),
              m.TgZ(16, 'div', 4),
              m._uU(17, '\n    '),
              m.TgZ(18, 'mat-card', 5),
              m._uU(19, '\n      '),
              m.TgZ(20, 'form', 6),
              m.NdJ('ngSubmit', function () {
                return t.login();
              }),
              m._uU(21, '\n        '),
              m.TgZ(22, 'div', 7),
              m._uU(23, 'Username or password incorrect.'),
              m.qZA(),
              m._uU(24, '\n        '),
              m._UZ(25, 'br'),
              m._uU(26, '\n        '),
              m.TgZ(27, 'div', 8),
              m._uU(28, '\n          '),
              m.TgZ(29, 'mat-form-field', 9),
              m._uU(30, '\n            '),
              m._UZ(31, 'input', 10),
              m.ALo(32, 'translate'),
              m._uU(33, '\n            '),
              m.YNc(34, xn, 5, 0, 'mat-error', 11),
              m._uU(35, '\n          '),
              m.qZA(),
              m._uU(36, '\n          '),
              m.TgZ(37, 'mat-form-field', 9),
              m._uU(38, '\n            '),
              m._UZ(39, 'input', 12),
              m.ALo(40, 'translate'),
              m._uU(41, '\n            '),
              m.YNc(42, pi, 5, 0, 'mat-error', 11),
              m._uU(43, '\n          '),
              m.qZA(),
              m._uU(44, '\n          '),
              m.TgZ(45, 'mat-slide-toggle', 13),
              m._uU(46, 'Remember me'),
              m.qZA(),
              m._uU(47, '\n          '),
              m._UZ(48, 'br'),
              m._uU(49, '\n          '),
              m.TgZ(50, 'button', 14),
              m._uU(51, '\n            '),
              m._UZ(52, 'app-loader', 15),
              m._uU(53, '\n            '),
              m.TgZ(54, 'span', 16),
              m._uU(55, 'Login'),
              m.qZA(),
              m._uU(56, '\n          '),
              m.qZA(),
              m._uU(57, '\n        '),
              m.qZA(),
              m._uU(58, '\n      '),
              m.qZA(),
              m._uU(59, '\n    '),
              m.qZA(),
              m._uU(60, '\n  '),
              m.qZA(),
              m._uU(61, '\n'),
              m.qZA(),
              m._uU(62, '\n')),
              2 & e &&
                (m.xp6(10),
                m.hij('v', t.version, ''),
                m.xp6(10),
                m.Q6J('formGroup', t.loginForm),
                m.xp6(2),
                m.Q6J('hidden', !t.error || t.isLoading),
                m.xp6(7),
                m.Q6J('hideRequiredMarker', !0),
                m.xp6(2),
                m.Q6J('placeholder', m.lcZ(32, 11, 'Username')),
                m.xp6(3),
                m.Q6J('ngIf', t.loginForm.controls.username.invalid && t.loginForm.controls.username.touched),
                m.xp6(3),
                m.Q6J('hideRequiredMarker', !0),
                m.xp6(2),
                m.Q6J('placeholder', m.lcZ(40, 13, 'Password')),
                m.xp6(3),
                m.Q6J('ngIf', t.loginForm.controls.password.invalid && t.loginForm.controls.password.touched),
                m.xp6(8),
                m.Q6J('disabled', t.loginForm.invalid || t.isLoading),
                m.xp6(2),
                m.Q6J('isLoading', t.isLoading));
          },
          directives: [
            Ci.s9,
            Ci.xw,
            Ci.Wh,
            Ci.SQ,
            en.Pi,
            wt,
            ar.a8,
            Ci.yH,
            d._Y,
            d.JL,
            d.sg,
            Rs.KE,
            Rr.Nt,
            d.Fj,
            d.JJ,
            d.u,
            d.Q7,
            Re.O5,
            Rs.TO,
            br.Rr,
            Ot.lW,
            Cr,
          ],
          pipes: [en.X$],
          styles: [
            '[_nghost-%COMP%]{display:flex;flex:1;background-color:#f5f5f5}.inline-loader[_ngcontent-%COMP%]{display:inline-block}.version[_ngcontent-%COMP%]{margin:0}.login-container[_ngcontent-%COMP%], .mat-form-field[_ngcontent-%COMP%]{width:100%}.login-fields[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:not(:last-child){margin-bottom:8px}.login-error[_ngcontent-%COMP%]{color:#f44336}',
          ],
        })),
        (Kt = (0, Pt.gn)([le()], Kt));
      const Ht = [{ path: 'login', component: Kt, data: { title: (0, nt.J)('Login') } }];
      let fn = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ providers: [], imports: [[N.Bz.forChild(Ht)], N.Bz] })),
            n
          );
        })(),
        Wn = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ imports: [[Re.ez, d.UX, en.aw, Zt, ot.o9, Gt.q, he, fn]] })),
            n
          );
        })();
      const Nn = new Le('AuthenticationGuard');
      let Nr = (() => {
        class n {
          constructor(t, i) {
            (this.router = t), (this.credentialsService = i);
          }
          canActivate(t, i) {
            return (
              !!this.credentialsService.isAuthenticated() ||
              (Nn.debug('Not authenticated, redirecting and adding redirect url...'),
              this.router.navigate(['/login'], { queryParams: { redirect: i.url }, replaceUrl: !0 }),
              !1)
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.LFG(N.F0), m.LFG(Gn));
          }),
          (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      let ci = (() => {
        class n {
          constructor(t) {
            this.httpClient = t;
          }
          getRandomQuote(t) {
            return this.httpClient.get(((n) => `/jokes/random?category=${n.category}`)(t)).pipe(
              (0, Ze.U)((i) => i.value),
              (0, At.K)(() => (0, ee.of)('Error, could not load joke :-('))
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.LFG(Ce.eN));
          }),
          (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      var ks = x(4986),
        _i = x(5813),
        Br = x(8675),
        ps = x(5403);
      function lr() {
        return (0, Ke.e)((n, e) => {
          let t,
            i = !1;
          n.subscribe(
            new ps.Q(e, (o) => {
              const c = t;
              (t = o), i && e.next([c, o]), (i = !0);
            })
          );
        });
      }
      var Bn,
        ts = x(5026),
        Os = x(1884),
        fi = x(2011),
        Vr = (x(8999), x(3942)),
        Jt = x(5861),
        ji = x(9681),
        tr = x(4859),
        kr = x(1877),
        je = x(2090),
        ms =
          'undefined' != typeof globalThis
            ? globalThis
            : 'undefined' != typeof window
            ? window
            : 'undefined' != typeof global
            ? global
            : 'undefined' != typeof self
            ? self
            : {},
        nr = {},
        ko = ko || {},
        ei = ms || self;
      function Li() {}
      function Ur(n) {
        var e = typeof n;
        return (
          'array' == (e = 'object' != e ? e : n ? (Array.isArray(n) ? 'array' : e) : 'null') ||
          ('object' == e && 'number' == typeof n.length)
        );
      }
      function Ps(n) {
        var e = typeof n;
        return ('object' == e && null != n) || 'function' == e;
      }
      var Wo = 'closure_uid_' + ((1e9 * Math.random()) >>> 0),
        Oo = 0;
      function Oa(n, e, t) {
        return n.call.apply(n.bind, arguments);
      }
      function Fs(n, e, t) {
        if (!n) throw Error();
        if (2 < arguments.length) {
          var i = Array.prototype.slice.call(arguments, 2);
          return function () {
            var o = Array.prototype.slice.call(arguments);
            return Array.prototype.unshift.apply(o, i), n.apply(e, o);
          };
        }
        return function () {
          return n.apply(e, arguments);
        };
      }
      function Hi(n, e, t) {
        return (Hi =
          Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf('native code') ? Oa : Fs).apply(
          null,
          arguments
        );
      }
      function Ws(n, e) {
        var t = Array.prototype.slice.call(arguments, 1);
        return function () {
          var i = t.slice();
          return i.push.apply(i, arguments), n.apply(this, i);
        };
      }
      function jr(n, e) {
        function t() {}
        (t.prototype = e.prototype),
          (n.Z = e.prototype),
          (n.prototype = new t()),
          (n.prototype.constructor = n),
          (n.Vb = function (i, o, c) {
            for (var p = Array(arguments.length - 2), C = 2; C < arguments.length; C++) p[C - 2] = arguments[C];
            return e.prototype[o].apply(i, p);
          });
      }
      function Ls() {
        (this.s = this.s), (this.o = this.o);
      }
      var gs = {};
      (Ls.prototype.s = !1),
        (Ls.prototype.na = function () {
          if (!this.s && ((this.s = !0), this.M(), 0)) {
            var n = (function ls(n) {
              return (Object.prototype.hasOwnProperty.call(n, Wo) && n[Wo]) || (n[Wo] = ++Oo);
            })(this);
            delete gs[n];
          }
        }),
        (Ls.prototype.M = function () {
          if (this.o) for (; this.o.length; ) this.o.shift()();
        });
      const Ns = Array.prototype.indexOf
          ? function (n, e) {
              return Array.prototype.indexOf.call(n, e, void 0);
            }
          : function (n, e) {
              if ('string' == typeof n) return 'string' != typeof e || 1 != e.length ? -1 : n.indexOf(e, 0);
              for (let t = 0; t < n.length; t++) if (t in n && n[t] === e) return t;
              return -1;
            },
        _a = Array.prototype.forEach
          ? function (n, e, t) {
              Array.prototype.forEach.call(n, e, t);
            }
          : function (n, e, t) {
              const i = n.length,
                o = 'string' == typeof n ? n.split('') : n;
              for (let c = 0; c < i; c++) c in o && e.call(t, o[c], c, n);
            };
      function al(n) {
        return Array.prototype.concat.apply([], arguments);
      }
      function _s(n) {
        const e = n.length;
        if (0 < e) {
          const t = Array(e);
          for (let i = 0; i < e; i++) t[i] = n[i];
          return t;
        }
        return [];
      }
      function ys(n) {
        return /^[\s\xa0]*$/.test(n);
      }
      var wr,
        cs = String.prototype.trim
          ? function (n) {
              return n.trim();
            }
          : function (n) {
              return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(n)[1];
            };
      function Bi(n, e) {
        return -1 != n.indexOf(e);
      }
      function ns(n, e) {
        return n < e ? -1 : n > e ? 1 : 0;
      }
      e: {
        var vs = ei.navigator;
        if (vs) {
          var Yo = vs.userAgent;
          if (Yo) {
            wr = Yo;
            break e;
          }
        }
        wr = '';
      }
      function Ys(n, e, t) {
        for (const i in n) e.call(t, n[i], i, n);
      }
      function Po(n) {
        const e = {};
        for (const t in n) e[t] = n[t];
        return e;
      }
      var Gr = 'constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf'.split(
        ' '
      );
      function Wr(n, e) {
        let t, i;
        for (let o = 1; o < arguments.length; o++) {
          for (t in ((i = arguments[o]), i)) n[t] = i[t];
          for (let c = 0; c < Gr.length; c++) (t = Gr[c]), Object.prototype.hasOwnProperty.call(i, t) && (n[t] = i[t]);
        }
      }
      function Ko(n) {
        return Ko[' '](n), n;
      }
      Ko[' '] = Li;
      var is,
        n,
        Zi = Bi(wr, 'Opera'),
        Ks = Bi(wr, 'Trident') || Bi(wr, 'MSIE'),
        po = Bi(wr, 'Edge'),
        us = po || Ks,
        ds =
          Bi(wr, 'Gecko') &&
          !(Bi(wr.toLowerCase(), 'webkit') && !Bi(wr, 'Edge')) &&
          !(Bi(wr, 'Trident') || Bi(wr, 'MSIE')) &&
          !Bi(wr, 'Edge'),
        ya = Bi(wr.toLowerCase(), 'webkit') && !Bi(wr, 'Edge');
      function Qi() {
        var n = ei.document;
        return n ? n.documentMode : void 0;
      }
      e: {
        var Co = '',
          Ni =
            ((n = wr),
            ds
              ? /rv:([^\);]+)(\)|;)/.exec(n)
              : po
              ? /Edge\/([\d\.]+)/.exec(n)
              : Ks
              ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(n)
              : ya
              ? /WebKit\/(\S+)/.exec(n)
              : Zi
              ? /(?:Version)[ \/]?(\S+)/.exec(n)
              : void 0);
        if ((Ni && (Co = Ni ? Ni[1] : ''), Ks)) {
          var z = Qi();
          if (null != z && z > parseFloat(Co)) {
            is = String(z);
            break e;
          }
        }
        is = Co;
      }
      var be = {};
      var tn = (ei.document && Ks && (Qi() || parseInt(is, 10))) || void 0,
        yn = (function () {
          if (!ei.addEventListener || !Object.defineProperty) return !1;
          var n = !1,
            e = Object.defineProperty({}, 'passive', {
              get: function () {
                n = !0;
              },
            });
          try {
            ei.addEventListener('test', Li, e), ei.removeEventListener('test', Li, e);
          } catch (t) {}
          return n;
        })();
      function Sn(n, e) {
        (this.type = n), (this.g = this.target = e), (this.defaultPrevented = !1);
      }
      function di(n, e) {
        if (
          (Sn.call(this, n ? n.type : ''),
          (this.relatedTarget = this.g = this.target = null),
          (this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0),
          (this.key = ''),
          (this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1),
          (this.state = null),
          (this.pointerId = 0),
          (this.pointerType = ''),
          (this.i = null),
          n)
        ) {
          var t = (this.type = n.type),
            i = n.changedTouches && n.changedTouches.length ? n.changedTouches[0] : null;
          if (((this.target = n.target || n.srcElement), (this.g = e), (e = n.relatedTarget))) {
            if (ds) {
              e: {
                try {
                  Ko(e.nodeName);
                  var o = !0;
                  break e;
                } catch (c) {}
                o = !1;
              }
              o || (e = null);
            }
          } else 'mouseover' == t ? (e = n.fromElement) : 'mouseout' == t && (e = n.toElement);
          (this.relatedTarget = e),
            i
              ? ((this.clientX = void 0 !== i.clientX ? i.clientX : i.pageX),
                (this.clientY = void 0 !== i.clientY ? i.clientY : i.pageY),
                (this.screenX = i.screenX || 0),
                (this.screenY = i.screenY || 0))
              : ((this.clientX = void 0 !== n.clientX ? n.clientX : n.pageX),
                (this.clientY = void 0 !== n.clientY ? n.clientY : n.pageY),
                (this.screenX = n.screenX || 0),
                (this.screenY = n.screenY || 0)),
            (this.button = n.button),
            (this.key = n.key || ''),
            (this.ctrlKey = n.ctrlKey),
            (this.altKey = n.altKey),
            (this.shiftKey = n.shiftKey),
            (this.metaKey = n.metaKey),
            (this.pointerId = n.pointerId || 0),
            (this.pointerType = 'string' == typeof n.pointerType ? n.pointerType : Vi[n.pointerType] || ''),
            (this.state = n.state),
            (this.i = n),
            n.defaultPrevented && di.Z.h.call(this);
        }
      }
      (Sn.prototype.h = function () {
        this.defaultPrevented = !0;
      }),
        jr(di, Sn);
      var Vi = { 2: 'touch', 3: 'pen', 4: 'mouse' };
      di.prototype.h = function () {
        di.Z.h.call(this);
        var n = this.i;
        n.preventDefault ? n.preventDefault() : (n.returnValue = !1);
      };
      var ki = 'closure_listenable_' + ((1e6 * Math.random()) | 0),
        yi = 0;
      function W(n, e, t, i, o) {
        (this.listener = n),
          (this.proxy = null),
          (this.src = e),
          (this.type = t),
          (this.capture = !!i),
          (this.ia = o),
          (this.key = ++yi),
          (this.ca = this.fa = !1);
      }
      function H(n) {
        (n.ca = !0), (n.listener = null), (n.proxy = null), (n.src = null), (n.ia = null);
      }
      function F(n) {
        (this.src = n), (this.g = {}), (this.h = 0);
      }
      function Me(n, e) {
        var t = e.type;
        if (t in n.g) {
          var c,
            i = n.g[t],
            o = Ns(i, e);
          (c = 0 <= o) && Array.prototype.splice.call(i, o, 1),
            c && (H(e), 0 == n.g[t].length && (delete n.g[t], n.h--));
        }
      }
      function Xt(n, e, t, i) {
        for (var o = 0; o < n.length; ++o) {
          var c = n[o];
          if (!c.ca && c.listener == e && c.capture == !!t && c.ia == i) return o;
        }
        return -1;
      }
      F.prototype.add = function (n, e, t, i, o) {
        var c = n.toString();
        (n = this.g[c]) || ((n = this.g[c] = []), this.h++);
        var p = Xt(n, e, i, o);
        return -1 < p ? ((e = n[p]), t || (e.fa = !1)) : (((e = new W(e, this.src, c, !!i, o)).fa = t), n.push(e)), e;
      };
      var Pn = 'closure_lm_' + ((1e6 * Math.random()) | 0),
        Pi = {};
      function pr(n, e, t, i, o) {
        if (i && i.once) return bn(n, e, t, i, o);
        if (Array.isArray(e)) {
          for (var c = 0; c < e.length; c++) pr(n, e[c], t, i, o);
          return null;
        }
        return (t = pt(t)), n && n[ki] ? n.N(e, t, Ps(i) ? !!i.capture : !!i, o) : so(n, e, t, !1, i, o);
      }
      function so(n, e, t, i, o, c) {
        if (!e) throw Error('Invalid event type');
        var p = Ps(o) ? !!o.capture : !!o,
          C = ce(n);
        if ((C || (n[Pn] = C = new F(n)), (t = C.add(e, t, i, p, c)).proxy)) return t;
        if (
          ((i = (function oo() {
            var e = B;
            return function n(t) {
              return e.call(n.src, n.listener, t);
            };
          })()),
          (t.proxy = i),
          (i.src = n),
          (i.listener = t),
          n.addEventListener)
        )
          yn || (o = p), void 0 === o && (o = !1), n.addEventListener(e.toString(), i, o);
        else if (n.attachEvent) n.attachEvent(M(e.toString()), i);
        else {
          if (!n.addListener || !n.removeListener) throw Error('addEventListener and attachEvent are unavailable.');
          n.addListener(i);
        }
        return t;
      }
      function bn(n, e, t, i, o) {
        if (Array.isArray(e)) {
          for (var c = 0; c < e.length; c++) bn(n, e[c], t, i, o);
          return null;
        }
        return (t = pt(t)), n && n[ki] ? n.O(e, t, Ps(i) ? !!i.capture : !!i, o) : so(n, e, t, !0, i, o);
      }
      function oe(n, e, t, i, o) {
        if (Array.isArray(e)) for (var c = 0; c < e.length; c++) oe(n, e[c], t, i, o);
        else
          (i = Ps(i) ? !!i.capture : !!i),
            (t = pt(t)),
            n && n[ki]
              ? ((n = n.i),
                (e = String(e).toString()) in n.g &&
                  -1 < (t = Xt((c = n.g[e]), t, i, o)) &&
                  (H(c[t]), Array.prototype.splice.call(c, t, 1), 0 == c.length && (delete n.g[e], n.h--)))
              : n &&
                (n = ce(n)) &&
                ((e = n.g[e.toString()]), (n = -1), e && (n = Xt(e, t, i, o)), (t = -1 < n ? e[n] : null) && E(t));
      }
      function E(n) {
        if ('number' != typeof n && n && !n.ca) {
          var e = n.src;
          if (e && e[ki]) Me(e.i, n);
          else {
            var t = n.type,
              i = n.proxy;
            e.removeEventListener
              ? e.removeEventListener(t, i, n.capture)
              : e.detachEvent
              ? e.detachEvent(M(t), i)
              : e.addListener && e.removeListener && e.removeListener(i),
              (t = ce(e)) ? (Me(t, n), 0 == t.h && ((t.src = null), (e[Pn] = null))) : H(n);
          }
        }
      }
      function M(n) {
        return n in Pi ? Pi[n] : (Pi[n] = 'on' + n);
      }
      function B(n, e) {
        if (n.ca) n = !0;
        else {
          e = new di(e, this);
          var t = n.listener,
            i = n.ia || n.src;
          n.fa && E(n), (n = t.call(i, e));
        }
        return n;
      }
      function ce(n) {
        return (n = n[Pn]) instanceof F ? n : null;
      }
      var Ge = '__closure_events_fn_' + ((1e9 * Math.random()) >>> 0);
      function pt(n) {
        return 'function' == typeof n
          ? n
          : (n[Ge] ||
              (n[Ge] = function (e) {
                return n.handleEvent(e);
              }),
            n[Ge]);
      }
      function gt() {
        Ls.call(this), (this.i = new F(this)), (this.P = this), (this.I = null);
      }
      function Vt(n, e) {
        var t,
          i = n.I;
        if (i) for (t = []; i; i = i.I) t.push(i);
        if (((n = n.P), (i = e.type || e), 'string' == typeof e)) e = new Sn(e, n);
        else if (e instanceof Sn) e.target = e.target || n;
        else {
          var o = e;
          Wr((e = new Sn(i, n)), o);
        }
        if (((o = !0), t))
          for (var c = t.length - 1; 0 <= c; c--) {
            var p = (e.g = t[c]);
            o = cn(p, i, !0, e) && o;
          }
        if (((o = cn((p = e.g = n), i, !0, e) && o), (o = cn(p, i, !1, e) && o), t))
          for (c = 0; c < t.length; c++) o = cn((p = e.g = t[c]), i, !1, e) && o;
      }
      function cn(n, e, t, i) {
        if (!(e = n.i.g[String(e)])) return !0;
        e = e.concat();
        for (var o = !0, c = 0; c < e.length; ++c) {
          var p = e[c];
          if (p && !p.ca && p.capture == t) {
            var C = p.listener,
              I = p.ia || p.src;
            p.fa && Me(n.i, p), (o = !1 !== C.call(I, i) && o);
          }
        }
        return o && !i.defaultPrevented;
      }
      jr(gt, Ls),
        (gt.prototype[ki] = !0),
        (gt.prototype.removeEventListener = function (n, e, t, i) {
          oe(this, n, e, t, i);
        }),
        (gt.prototype.M = function () {
          if ((gt.Z.M.call(this), this.i)) {
            var e,
              n = this.i;
            for (e in n.g) {
              for (var t = n.g[e], i = 0; i < t.length; i++) H(t[i]);
              delete n.g[e], n.h--;
            }
          }
          this.I = null;
        }),
        (gt.prototype.N = function (n, e, t, i) {
          return this.i.add(String(n), e, !1, t, i);
        }),
        (gt.prototype.O = function (n, e, t, i) {
          return this.i.add(String(n), e, !0, t, i);
        });
      var Tn = ei.JSON.stringify;
      function zn() {
        var n = Er;
        let e = null;
        return n.g && ((e = n.g), (n.g = n.g.next), n.g || (n.h = null), (e.next = null)), e;
      }
      var mr,
        mi = new (class {
          constructor(n, e) {
            (this.i = n), (this.j = e), (this.h = 0), (this.g = null);
          }
          get() {
            let n;
            return 0 < this.h ? (this.h--, (n = this.g), (this.g = n.next), (n.next = null)) : (n = this.i()), n;
          }
        })(
          () => new Xn(),
          (n) => n.reset()
        );
      class Xn {
        constructor() {
          this.next = this.g = this.h = null;
        }
        set(e, t) {
          (this.h = e), (this.g = t), (this.next = null);
        }
        reset() {
          this.next = this.g = this.h = null;
        }
      }
      function si(n) {
        ei.setTimeout(() => {
          throw n;
        }, 0);
      }
      function vi(n, e) {
        mr ||
          (function cr() {
            var n = ei.Promise.resolve(void 0);
            mr = function () {
              n.then(Jo);
            };
          })(),
          rs || (mr(), (rs = !0)),
          Er.add(n, e);
      }
      var rs = !1,
        Er = new (class ni {
          constructor() {
            this.h = this.g = null;
          }
          add(e, t) {
            const i = mi.get();
            i.set(e, t), this.h ? (this.h.next = i) : (this.g = i), (this.h = i);
          }
        })();
      function Jo() {
        for (var n; (n = zn()); ) {
          try {
            n.h.call(n.g);
          } catch (t) {
            si(t);
          }
          var e = mi;
          e.j(n), 100 > e.h && (e.h++, (n.next = e.g), (e.g = n));
        }
        rs = !1;
      }
      function Yr(n, e) {
        gt.call(this), (this.h = n || 1), (this.g = e || ei), (this.j = Hi(this.kb, this)), (this.l = Date.now());
      }
      function Kr(n) {
        (n.da = !1), n.S && (n.g.clearTimeout(n.S), (n.S = null));
      }
      function hs(n, e, t) {
        if ('function' == typeof n) t && (n = Hi(n, t));
        else {
          if (!n || 'function' != typeof n.handleEvent) throw Error('Invalid listener argument');
          n = Hi(n.handleEvent, n);
        }
        return 2147483647 < Number(e) ? -1 : ei.setTimeout(n, e || 0);
      }
      function Fo(n) {
        n.g = hs(() => {
          (n.g = null), n.i && ((n.i = !1), Fo(n));
        }, n.j);
        const e = n.h;
        (n.h = null), n.m.apply(null, e);
      }
      jr(Yr, gt),
        ((Bn = Yr.prototype).da = !1),
        (Bn.S = null),
        (Bn.kb = function () {
          if (this.da) {
            var n = Date.now() - this.l;
            0 < n && n < 0.8 * this.h
              ? (this.S = this.g.setTimeout(this.j, this.h - n))
              : (this.S && (this.g.clearTimeout(this.S), (this.S = null)),
                Vt(this, 'tick'),
                this.da && (Kr(this), this.start()));
          }
        }),
        (Bn.start = function () {
          (this.da = !0), this.S || ((this.S = this.g.setTimeout(this.j, this.h)), (this.l = Date.now()));
        }),
        (Bn.M = function () {
          Yr.Z.M.call(this), Kr(this), delete this.g;
        });
      class bs extends Ls {
        constructor(e, t) {
          super(), (this.m = e), (this.j = t), (this.h = null), (this.i = !1), (this.g = null);
        }
        l(e) {
          (this.h = arguments), this.g ? (this.i = !0) : Fo(this);
        }
        M() {
          super.M(), this.g && (ei.clearTimeout(this.g), (this.g = null), (this.i = !1), (this.h = null));
        }
      }
      function Lo(n) {
        Ls.call(this), (this.h = n), (this.g = {});
      }
      jr(Lo, Ls);
      var va = [];
      function qs(n, e, t, i) {
        Array.isArray(t) || (t && (va[0] = t.toString()), (t = va));
        for (var o = 0; o < t.length; o++) {
          var c = pr(e, t[o], i || n.handleEvent, !1, n.h || n);
          if (!c) break;
          n.g[c.key] = c;
        }
      }
      function qo(n) {
        Ys(
          n.g,
          function (e, t) {
            this.g.hasOwnProperty(t) && E(e);
          },
          n
        ),
          (n.g = {});
      }
      function ea() {
        this.g = !0;
      }
      function oi(n, e, t, i) {
        n.info(function () {
          return (
            'XMLHTTP TEXT (' +
            e +
            '): ' +
            (function ir(n, e) {
              if (!n.g) return e;
              if (!e) return null;
              try {
                var t = JSON.parse(e);
                if (t)
                  for (n = 0; n < t.length; n++)
                    if (Array.isArray(t[n])) {
                      var i = t[n];
                      if (!(2 > i.length)) {
                        var o = i[1];
                        if (Array.isArray(o) && !(1 > o.length)) {
                          var c = o[0];
                          if ('noop' != c && 'stop' != c && 'close' != c) for (var p = 1; p < o.length; p++) o[p] = '';
                        }
                      }
                    }
                return Tn(t);
              } catch (C) {
                return e;
              }
            })(n, t) +
            (i ? ' ' + i : '')
          );
        });
      }
      (Lo.prototype.M = function () {
        Lo.Z.M.call(this), qo(this);
      }),
        (Lo.prototype.handleEvent = function () {
          throw Error('EventHandler.handleEvent not implemented');
        }),
        (ea.prototype.Aa = function () {
          this.g = !1;
        }),
        (ea.prototype.info = function () {});
      var Ri = {},
        fs = null;
      function Mr() {
        return (fs = fs || new gt());
      }
      function Sr(n) {
        Sn.call(this, Ri.Ma, n);
      }
      function ba(n) {
        const e = Mr();
        Vt(e, new Sr(e, n));
      }
      function Ca(n, e) {
        Sn.call(this, Ri.STAT_EVENT, n), (this.stat = e);
      }
      function Gi(n) {
        const e = Mr();
        Vt(e, new Ca(e, n));
      }
      function Cs(n, e) {
        Sn.call(this, Ri.Na, n), (this.size = e);
      }
      function qr(n, e) {
        if ('function' != typeof n) throw Error('Fn must not be null and must be a function');
        return ei.setTimeout(function () {
          n();
        }, e);
      }
      (Ri.Ma = 'serverreachability'),
        jr(Sr, Sn),
        (Ri.STAT_EVENT = 'statevent'),
        jr(Ca, Sn),
        (Ri.Na = 'timingevent'),
        jr(Cs, Sn);
      var ws = { NO_ERROR: 0, lb: 1, yb: 2, xb: 3, sb: 4, wb: 5, zb: 6, Ja: 7, TIMEOUT: 8, Cb: 9 },
        ao = {
          qb: 'complete',
          Mb: 'success',
          Ka: 'error',
          Ja: 'abort',
          Eb: 'ready',
          Fb: 'readystatechange',
          TIMEOUT: 'timeout',
          Ab: 'incrementaldata',
          Db: 'progress',
          tb: 'downloadprogress',
          Ub: 'uploadprogress',
        };
      function qa() {}
      function No() {}
      qa.prototype.h = null;
      var ta,
        gr = { OPEN: 'a', pb: 'b', Ka: 'c', Bb: 'd' };
      function Pc() {
        Sn.call(this, 'd');
      }
      function Zo() {
        Sn.call(this, 'c');
      }
      function ll() {}
      function na(n, e, t, i) {
        (this.l = n),
          (this.j = e),
          (this.m = t),
          (this.X = i || 1),
          (this.V = new Lo(this)),
          (this.P = _u),
          (this.W = new Yr((n = us ? 125 : void 0))),
          (this.H = null),
          (this.i = !1),
          (this.s = this.A = this.v = this.K = this.F = this.Y = this.B = null),
          (this.D = []),
          (this.g = null),
          (this.C = 0),
          (this.o = this.u = null),
          (this.N = -1),
          (this.I = !1),
          (this.O = 0),
          (this.L = null),
          (this.aa = this.J = this.$ = this.U = !1),
          (this.h = new Fc());
      }
      function Fc() {
        (this.i = null), (this.g = ''), (this.h = !1);
      }
      jr(Pc, Sn),
        jr(Zo, Sn),
        jr(ll, qa),
        (ll.prototype.g = function () {
          return new XMLHttpRequest();
        }),
        (ll.prototype.i = function () {
          return {};
        }),
        (ta = new ll());
      var _u = 45e3,
        yu = {},
        Za = {};
      function Jl(n, e, t) {
        (n.K = 1), (n.v = Qs(On(e))), (n.s = t), (n.U = !0), wa(n, null);
      }
      function wa(n, e) {
        (n.F = Date.now()), ra(n), (n.A = On(n.v));
        var t = n.A,
          i = n.X;
        Array.isArray(i) || (i = [String(i)]),
          Qa(t.h, 't', i),
          (n.C = 0),
          (t = n.l.H),
          (n.h = new Fc()),
          (n.g = $i(n.l, t ? e : null, !n.s)),
          0 < n.O && (n.L = new bs(Hi(n.Ia, n, n.g), n.O)),
          qs(n.V, n.g, 'readystatechange', n.gb),
          (e = n.H ? Po(n.H) : {}),
          n.s
            ? (n.u || (n.u = 'POST'),
              (e['Content-Type'] = 'application/x-www-form-urlencoded'),
              n.g.ea(n.A, n.u, n.s, e))
            : ((n.u = 'GET'), n.g.ea(n.A, n.u, null, e)),
          ba(1),
          (function Vn(n, e, t, i, o, c) {
            n.info(function () {
              if (n.g)
                if (c)
                  for (var p = '', C = c.split('&'), I = 0; I < C.length; I++) {
                    var U = C[I].split('=');
                    if (1 < U.length) {
                      var se = U[0];
                      U = U[1];
                      var xe = se.split('_');
                      p = 2 <= xe.length && 'type' == xe[1] ? p + (se + '=') + U + '&' : p + (se + '=redacted&');
                    }
                  }
                else p = null;
              else p = c;
              return 'XMLHTTP REQ (' + i + ') [attempt ' + o + ']: ' + e + '\n' + t + '\n' + p;
            });
          })(n.j, n.u, n.A, n.m, n.X, n.s);
      }
      function Zs(n) {
        return !!n.g && 'GET' == n.u && 2 != n.K && n.l.Ba;
      }
      function ia(n, e, t) {
        let o,
          i = !0;
        for (; !n.I && n.C < t.length; ) {
          if (((o = ec(n, t)), o == Za)) {
            4 == e && ((n.o = 4), Gi(14), (i = !1)), oi(n.j, n.m, null, '[Incomplete Response]');
            break;
          }
          if (o == yu) {
            (n.o = 4), Gi(15), oi(n.j, n.m, t, '[Invalid Chunk]'), (i = !1);
            break;
          }
          oi(n.j, n.m, o, null), L(n, o);
        }
        Zs(n) && o != Za && o != yu && ((n.h.g = ''), (n.C = 0)),
          4 != e || 0 != t.length || n.h.h || ((n.o = 1), Gi(16), (i = !1)),
          (n.i = n.i && i),
          i
            ? 0 < t.length &&
              !n.aa &&
              ((n.aa = !0),
              (e = n.l).g == n &&
                e.$ &&
                !e.L &&
                (e.h.info('Great, no buffering proxy detected. Bytes received: ' + t.length), K(e), (e.L = !0), Gi(11)))
            : (oi(n.j, n.m, t, '[Invalid Chunked Response]'), Bo(n), Ar(n));
      }
      function ec(n, e) {
        var t = n.C,
          i = e.indexOf('\n', t);
        return -1 == i
          ? Za
          : ((t = Number(e.substring(t, i))),
            isNaN(t) ? yu : (i += 1) + t > e.length ? Za : ((e = e.substr(i, t)), (n.C = i + t), e));
      }
      function ra(n) {
        (n.Y = Date.now() + n.P), Pa(n, n.P);
      }
      function Pa(n, e) {
        if (null != n.B) throw Error('WatchDog timer not null');
        n.B = qr(Hi(n.eb, n), e);
      }
      function Qo(n) {
        n.B && (ei.clearTimeout(n.B), (n.B = null));
      }
      function Ar(n) {
        0 == n.l.G || n.I || Bt(n.l, n);
      }
      function Bo(n) {
        Qo(n);
        var e = n.L;
        e && 'function' == typeof e.na && e.na(),
          (n.L = null),
          Kr(n.W),
          qo(n.V),
          n.g && ((e = n.g), (n.g = null), e.abort(), e.na());
      }
      function L(n, e) {
        try {
          var t = n.l;
          if (0 != t.G && (t.g == n || Ah(t.i, n)))
            if (((t.I = n.N), !n.J && Ah(t.i, n) && 3 == t.G)) {
              try {
                var i = t.Ca.g.parse(e);
              } catch (U) {
                i = null;
              }
              if (Array.isArray(i) && 3 == i.length) {
                var o = i;
                if (0 == o[0])
                  e: if (t.u)
                    (t.ta = o[1]),
                      0 < t.ta - t.U && 37500 > o[2] && t.N && 0 == t.A && !t.v && (t.v = qr(Hi(t.ab, t), 6e3));
                  else {
                    if (t.g) {
                      if (!(t.g.F + 3e3 < n.F)) break e;
                      ct(t), Uo(t);
                    }
                    j(t), Gi(18);
                  }
                if (1 >= kf(t.i) && t.ka) {
                  try {
                    t.ka();
                  } catch (U) {}
                  t.ka = void 0;
                }
              } else Cn(t, 11);
            } else if (((n.J || t.g == n) && ct(t), !ys(e)))
              for (o = t.Ca.g.parse(e), e = 0; e < o.length; e++) {
                let U = o[e];
                if (((t.U = U[0]), (U = U[1]), 2 == t.G))
                  if ('c' == U[0]) {
                    (t.J = U[1]), (t.la = U[2]);
                    const se = U[3];
                    null != se && ((t.ma = se), t.h.info('VER=' + t.ma));
                    const xe = U[4];
                    null != xe && ((t.za = xe), t.h.info('SVER=' + t.za));
                    const rt = U[5];
                    null != rt &&
                      'number' == typeof rt &&
                      0 < rt &&
                      ((t.K = i = 1.5 * rt), t.h.info('backChannelRequestTimeoutMs_=' + i)),
                      (i = t);
                    const Ut = n.g;
                    if (Ut) {
                      const qt = Ut.g ? Ut.g.getResponseHeader('X-Client-Wire-Protocol') : null;
                      if (qt) {
                        var c = i.i;
                        !c.g &&
                          (Bi(qt, 'spdy') || Bi(qt, 'quic') || Bi(qt, 'h2')) &&
                          ((c.j = c.l), (c.g = new Set()), c.h && (Bd(c, c.h), (c.h = null)));
                      }
                      if (i.D) {
                        const Mn = Ut.g ? Ut.g.getResponseHeader('X-HTTP-Session-Id') : null;
                        Mn && ((i.sa = Mn), zi(i.F, i.D, Mn));
                      }
                    }
                    (t.G = 3),
                      t.j && t.j.xa(),
                      t.$ && ((t.O = Date.now() - n.F), t.h.info('Handshake RTT: ' + t.O + 'ms'));
                    var p = n;
                    if ((((i = t).oa = $n(i, i.H ? i.la : null, i.W)), p.J)) {
                      Of(i.i, p);
                      var C = p,
                        I = i.K;
                      I && C.setTimeout(I), C.B && (Qo(C), ra(C)), (i.g = p);
                    } else cc(i);
                    0 < t.l.length && Ll(t);
                  } else ('stop' != U[0] && 'close' != U[0]) || Cn(t, 7);
                else
                  3 == t.G &&
                    ('stop' == U[0] || 'close' == U[0]
                      ? 'stop' == U[0]
                        ? Cn(t, 7)
                        : dl(t)
                      : 'noop' != U[0] && t.j && t.j.wa(U),
                    (t.A = 0));
              }
          ba(4);
        } catch (U) {}
      }
      function R(n, e) {
        if (n.forEach && 'function' == typeof n.forEach) n.forEach(e, void 0);
        else if (Ur(n) || 'string' == typeof n) _a(n, e, void 0);
        else {
          if (n.T && 'function' == typeof n.T) var t = n.T();
          else if (n.R && 'function' == typeof n.R) t = void 0;
          else if (Ur(n) || 'string' == typeof n) {
            t = [];
            for (var i = n.length, o = 0; o < i; o++) t.push(o);
          } else for (o in ((t = []), (i = 0), n)) t[i++] = o;
          (i = (function P(n) {
            if (n.R && 'function' == typeof n.R) return n.R();
            if ('string' == typeof n) return n.split('');
            if (Ur(n)) {
              for (var e = [], t = n.length, i = 0; i < t; i++) e.push(n[i]);
              return e;
            }
            for (i in ((e = []), (t = 0), n)) e[t++] = n[i];
            return e;
          })(n)),
            (o = i.length);
          for (var c = 0; c < o; c++) e.call(void 0, i[c], t && t[c], n);
        }
      }
      function G(n, e) {
        (this.h = {}), (this.g = []), (this.i = 0);
        var t = arguments.length;
        if (1 < t) {
          if (t % 2) throw Error('Uneven number of arguments');
          for (var i = 0; i < t; i += 2) this.set(arguments[i], arguments[i + 1]);
        } else if (n)
          if (n instanceof G) for (t = n.T(), i = 0; i < t.length; i++) this.set(t[i], n.get(t[i]));
          else for (i in n) this.set(i, n[i]);
      }
      function te(n) {
        if (n.i != n.g.length) {
          for (var e = 0, t = 0; e < n.g.length; ) {
            var i = n.g[e];
            Ae(n.h, i) && (n.g[t++] = i), e++;
          }
          n.g.length = t;
        }
        if (n.i != n.g.length) {
          var o = {};
          for (t = e = 0; e < n.g.length; ) Ae(o, (i = n.g[e])) || ((n.g[t++] = i), (o[i] = 1)), e++;
          n.g.length = t;
        }
      }
      function Ae(n, e) {
        return Object.prototype.hasOwnProperty.call(n, e);
      }
      ((Bn = na.prototype).setTimeout = function (n) {
        this.P = n;
      }),
        (Bn.gb = function (n) {
          n = n.target;
          const e = this.L;
          e && 3 == el(n) ? e.l() : this.Ia(n);
        }),
        (Bn.Ia = function (n) {
          try {
            if (n == this.g)
              e: {
                const se = el(this.g);
                var e = this.g.Da();
                const xe = this.g.ba();
                if (!(3 > se) && (3 != se || us || (this.g && (this.h.h || this.g.ga() || Uc(this.g))))) {
                  this.I || 4 != se || 7 == e || ba(8 == e || 0 >= xe ? 3 : 2), Qo(this);
                  var t = this.g.ba();
                  this.N = t;
                  t: if (Zs(this)) {
                    var i = Uc(this.g);
                    n = '';
                    var o = i.length,
                      c = 4 == el(this.g);
                    if (!this.h.i) {
                      if ('undefined' == typeof TextDecoder) {
                        Bo(this), Ar(this);
                        var p = '';
                        break t;
                      }
                      this.h.i = new ei.TextDecoder();
                    }
                    for (e = 0; e < o; e++) (this.h.h = !0), (n += this.h.i.decode(i[e], { stream: c && e == o - 1 }));
                    i.splice(0, o), (this.h.g += n), (this.C = 0), (p = this.h.g);
                  } else p = this.g.ga();
                  if (
                    ((this.i = 200 == t),
                    (function li(n, e, t, i, o, c, p) {
                      n.info(function () {
                        return 'XMLHTTP RESP (' + i + ') [ attempt ' + o + ']: ' + e + '\n' + t + '\n' + c + ' ' + p;
                      });
                    })(this.j, this.u, this.A, this.m, this.X, se, t),
                    this.i)
                  ) {
                    if (this.$ && !this.J) {
                      t: {
                        if (this.g) {
                          var C,
                            I = this.g;
                          if ((C = I.g ? I.g.getResponseHeader('X-HTTP-Initial-Response') : null) && !ys(C)) {
                            var U = C;
                            break t;
                          }
                        }
                        U = null;
                      }
                      if (!(t = U)) {
                        (this.i = !1), (this.o = 3), Gi(12), Bo(this), Ar(this);
                        break e;
                      }
                      oi(this.j, this.m, t, 'Initial handshake response via X-HTTP-Initial-Response'),
                        (this.J = !0),
                        L(this, t);
                    }
                    this.U
                      ? (ia(this, se, p),
                        us && this.i && 3 == se && (qs(this.V, this.W, 'tick', this.fb), this.W.start()))
                      : (oi(this.j, this.m, p, null), L(this, p)),
                      4 == se && Bo(this),
                      this.i && !this.I && (4 == se ? Bt(this.l, this) : ((this.i = !1), ra(this)));
                  } else
                    400 == t && 0 < p.indexOf('Unknown SID') ? ((this.o = 3), Gi(12)) : ((this.o = 0), Gi(13)),
                      Bo(this),
                      Ar(this);
                }
              }
          } catch (se) {}
        }),
        (Bn.fb = function () {
          if (this.g) {
            var n = el(this.g),
              e = this.g.ga();
            this.C < e.length && (Qo(this), ia(this, n, e), this.i && 4 != n && ra(this));
          }
        }),
        (Bn.cancel = function () {
          (this.I = !0), Bo(this);
        }),
        (Bn.eb = function () {
          this.B = null;
          const n = Date.now();
          0 <= n - this.Y
            ? ((function gi(n, e) {
                n.info(function () {
                  return 'TIMEOUT: ' + e;
                });
              })(this.j, this.A),
              2 != this.K && (ba(3), Gi(17)),
              Bo(this),
              (this.o = 2),
              Ar(this))
            : Pa(this, this.Y - n);
        }),
        ((Bn = G.prototype).R = function () {
          te(this);
          for (var n = [], e = 0; e < this.g.length; e++) n.push(this.h[this.g[e]]);
          return n;
        }),
        (Bn.T = function () {
          return te(this), this.g.concat();
        }),
        (Bn.get = function (n, e) {
          return Ae(this.h, n) ? this.h[n] : e;
        }),
        (Bn.set = function (n, e) {
          Ae(this.h, n) || (this.i++, this.g.push(n)), (this.h[n] = e);
        }),
        (Bn.forEach = function (n, e) {
          for (var t = this.T(), i = 0; i < t.length; i++) {
            var o = t[i],
              c = this.get(o);
            n.call(e, c, o, this);
          }
        });
      var ut =
        /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
      function nn(n, e) {
        if (
          ((this.i = this.s = this.j = ''), (this.m = null), (this.o = this.l = ''), (this.g = !1), n instanceof nn)
        ) {
          (this.g = void 0 !== e ? e : n.g),
            Mi(this, n.j),
            (this.s = n.s),
            ai(this, n.i),
            Di(this, n.m),
            (this.l = n.l),
            (e = n.h);
          var t = new Xo();
          (t.i = e.i), e.g && ((t.g = new G(e.g)), (t.h = e.h)), Xi(this, t), (this.o = n.o);
        } else
          n && (t = String(n).match(ut))
            ? ((this.g = !!e),
              Mi(this, t[1] || '', !0),
              (this.s = Bs(t[2] || '')),
              ai(this, t[3] || '', !0),
              Di(this, t[4]),
              (this.l = Bs(t[5] || '', !0)),
              Xi(this, t[6] || '', !0),
              (this.o = Bs(t[7] || '')))
            : ((this.g = !!e), (this.h = new Xo(null, this.g)));
      }
      function On(n) {
        return new nn(n);
      }
      function Mi(n, e, t) {
        (n.j = t ? Bs(e, !0) : e), n.j && (n.j = n.j.replace(/:$/, ''));
      }
      function ai(n, e, t) {
        n.i = t ? Bs(e, !0) : e;
      }
      function Di(n, e) {
        if (e) {
          if (((e = Number(e)), isNaN(e) || 0 > e)) throw Error('Bad port number ' + e);
          n.m = e;
        } else n.m = null;
      }
      function Xi(n, e, t) {
        e instanceof Xo
          ? ((n.h = e),
            (function Qu(n, e) {
              e &&
                !n.j &&
                (Vo(n),
                (n.i = null),
                n.g.forEach(function (t, i) {
                  var o = i.toLowerCase();
                  i != o && (La(this, i), Qa(this, o, t));
                }, n)),
                (n.j = e);
            })(n.h, n.g))
          : (t || (e = lo(e, nc)), (n.h = new Xo(e, n.g)));
      }
      function zi(n, e, t) {
        n.h.set(e, t);
      }
      function Qs(n) {
        return (
          zi(
            n,
            'zx',
            Math.floor(2147483648 * Math.random()).toString(36) +
              Math.abs(Math.floor(2147483648 * Math.random()) ^ Date.now()).toString(36)
          ),
          n
        );
      }
      function Bs(n, e) {
        return n ? (e ? decodeURI(n.replace(/%25/g, '%2525')) : decodeURIComponent(n)) : '';
      }
      function lo(n, e, t) {
        return 'string' == typeof n
          ? ((n = encodeURI(n).replace(e, Ol)), t && (n = n.replace(/%25([0-9a-fA-F]{2})/g, '%$1')), n)
          : null;
      }
      function Ol(n) {
        return '%' + (((n = n.charCodeAt(0)) >> 4) & 15).toString(16) + (15 & n).toString(16);
      }
      nn.prototype.toString = function () {
        var n = [],
          e = this.j;
        e && n.push(lo(e, Fa, !0), ':');
        var t = this.i;
        return (
          (t || 'file' == e) &&
            (n.push('//'),
            (e = this.s) && n.push(lo(e, Fa, !0), '@'),
            n.push(encodeURIComponent(String(t)).replace(/%25([0-9a-fA-F]{2})/g, '%$1')),
            null != (t = this.m) && n.push(':', String(t))),
          (t = this.l) &&
            (this.i && '/' != t.charAt(0) && n.push('/'), n.push(lo(t, '/' == t.charAt(0) ? vu : tc, !0))),
          (t = this.h.toString()) && n.push('?', t),
          (t = this.o) && n.push('#', lo(t, ic)),
          n.join('')
        );
      };
      var Fa = /[#\/\?@]/g,
        tc = /[#\?:]/g,
        vu = /[#\?]/g,
        nc = /[#\?@]/g,
        ic = /#/g;
      function Xo(n, e) {
        (this.h = this.g = null), (this.i = n || null), (this.j = !!e);
      }
      function Vo(n) {
        n.g ||
          ((n.g = new G()),
          (n.h = 0),
          n.i &&
            (function Mt(n, e) {
              if (n) {
                n = n.split('&');
                for (var t = 0; t < n.length; t++) {
                  var i = n[t].indexOf('='),
                    o = null;
                  if (0 <= i) {
                    var c = n[t].substring(0, i);
                    o = n[t].substring(i + 1);
                  } else c = n[t];
                  e(c, o ? decodeURIComponent(o.replace(/\+/g, ' ')) : '');
                }
              }
            })(n.i, function (e, t) {
              n.add(decodeURIComponent(e.replace(/\+/g, ' ')), t);
            }));
      }
      function La(n, e) {
        Vo(n),
          (e = xo(n, e)),
          Ae(n.g.h, e) &&
            ((n.i = null),
            (n.h -= n.g.get(e).length),
            Ae((n = n.g).h, e) && (delete n.h[e], n.i--, n.g.length > 2 * n.i && te(n)));
      }
      function Zu(n, e) {
        return Vo(n), (e = xo(n, e)), Ae(n.g.h, e);
      }
      function Qa(n, e, t) {
        La(n, e), 0 < t.length && ((n.i = null), n.g.set(xo(n, e), _s(t)), (n.h += t.length));
      }
      function xo(n, e) {
        return (e = String(e)), n.j && (e = e.toLowerCase()), e;
      }
      function Zr(n) {
        (this.l = n || Xu),
          (n = ei.PerformanceNavigationTiming
            ? 0 < (n = ei.performance.getEntriesByType('navigation')).length &&
              ('hq' == n[0].nextHopProtocol || 'h2' == n[0].nextHopProtocol)
            : !!(ei.g && ei.g.Ea && ei.g.Ea() && ei.g.Ea().Zb)),
          (this.j = n ? this.l : 1),
          (this.g = null),
          1 < this.j && (this.g = new Set()),
          (this.h = null),
          (this.i = []);
      }
      ((Bn = Xo.prototype).add = function (n, e) {
        Vo(this), (this.i = null), (n = xo(this, n));
        var t = this.g.get(n);
        return t || this.g.set(n, (t = [])), t.push(e), (this.h += 1), this;
      }),
        (Bn.forEach = function (n, e) {
          Vo(this),
            this.g.forEach(function (t, i) {
              _a(
                t,
                function (o) {
                  n.call(e, o, i, this);
                },
                this
              );
            }, this);
        }),
        (Bn.T = function () {
          Vo(this);
          for (var n = this.g.R(), e = this.g.T(), t = [], i = 0; i < e.length; i++)
            for (var o = n[i], c = 0; c < o.length; c++) t.push(e[i]);
          return t;
        }),
        (Bn.R = function (n) {
          Vo(this);
          var e = [];
          if ('string' == typeof n) Zu(this, n) && (e = al(e, this.g.get(xo(this, n))));
          else {
            n = this.g.R();
            for (var t = 0; t < n.length; t++) e = al(e, n[t]);
          }
          return e;
        }),
        (Bn.set = function (n, e) {
          return (
            Vo(this),
            (this.i = null),
            Zu(this, (n = xo(this, n))) && (this.h -= this.g.get(n).length),
            this.g.set(n, [e]),
            (this.h += 1),
            this
          );
        }),
        (Bn.get = function (n, e) {
          return n && 0 < (n = this.R(n)).length ? String(n[0]) : e;
        }),
        (Bn.toString = function () {
          if (this.i) return this.i;
          if (!this.g) return '';
          for (var n = [], e = this.g.T(), t = 0; t < e.length; t++) {
            var i = e[t],
              o = encodeURIComponent(String(i));
            i = this.R(i);
            for (var c = 0; c < i.length; c++) {
              var p = o;
              '' !== i[c] && (p += '=' + encodeURIComponent(String(i[c]))), n.push(p);
            }
          }
          return (this.i = n.join('&'));
        });
      var Xu = 10;
      function Ju(n) {
        return !!n.h || (!!n.g && n.g.size >= n.j);
      }
      function kf(n) {
        return n.h ? 1 : n.g ? n.g.size : 0;
      }
      function Ah(n, e) {
        return n.h ? n.h == e : !!n.g && n.g.has(e);
      }
      function Bd(n, e) {
        n.g ? n.g.add(e) : (n.h = e);
      }
      function Of(n, e) {
        n.h && n.h == e ? (n.h = null) : n.g && n.g.has(e) && n.g.delete(e);
      }
      function Vd(n) {
        if (null != n.h) return n.i.concat(n.h.D);
        if (null != n.g && 0 !== n.g.size) {
          let e = n.i;
          for (const t of n.g.values()) e = e.concat(t.D);
          return e;
        }
        return _s(n.i);
      }
      function cl() {}
      function Ud() {
        this.g = new cl();
      }
      function Vs(n, e, t) {
        const i = t || '';
        try {
          R(n, function (o, c) {
            let p = o;
            Ps(o) && (p = Tn(o)), e.push(i + c + '=' + encodeURIComponent(p));
          });
        } catch (o) {
          throw (e.push(i + 'type=' + encodeURIComponent('_badmap')), o);
        }
      }
      function ul(n, e, t, i, o) {
        try {
          (e.onload = null), (e.onerror = null), (e.onabort = null), (e.ontimeout = null), o(i);
        } catch (c) {}
      }
      function rc(n) {
        (this.l = n.$b || null), (this.j = n.ib || !1);
      }
      function Nc(n, e) {
        gt.call(this),
          (this.D = n),
          (this.u = e),
          (this.m = void 0),
          (this.readyState = co),
          (this.status = 0),
          (this.responseType = this.responseText = this.response = this.statusText = ''),
          (this.onreadystatechange = null),
          (this.v = new Headers()),
          (this.h = null),
          (this.C = 'GET'),
          (this.B = ''),
          (this.g = !1),
          (this.A = this.j = this.l = null);
      }
      (Zr.prototype.cancel = function () {
        if (((this.i = Vd(this)), this.h)) this.h.cancel(), (this.h = null);
        else if (this.g && 0 !== this.g.size) {
          for (const n of this.g.values()) n.cancel();
          this.g.clear();
        }
      }),
        (cl.prototype.stringify = function (n) {
          return ei.JSON.stringify(n, void 0);
        }),
        (cl.prototype.parse = function (n) {
          return ei.JSON.parse(n, void 0);
        }),
        jr(rc, qa),
        (rc.prototype.g = function () {
          return new Nc(this.l, this.j);
        }),
        (rc.prototype.i = (function (n) {
          return function () {
            return n;
          };
        })({})),
        jr(Nc, gt);
      var co = 0;
      function Ea(n) {
        n.j.read().then(n.Sa.bind(n)).catch(n.ha.bind(n));
      }
      function Xa(n) {
        (n.readyState = 4), (n.l = null), (n.j = null), (n.A = null), sa(n);
      }
      function sa(n) {
        n.onreadystatechange && n.onreadystatechange.call(n);
      }
      ((Bn = Nc.prototype).open = function (n, e) {
        if (this.readyState != co) throw (this.abort(), Error('Error reopening a connection'));
        (this.C = n), (this.B = e), (this.readyState = 1), sa(this);
      }),
        (Bn.send = function (n) {
          if (1 != this.readyState) throw (this.abort(), Error('need to call open() first. '));
          this.g = !0;
          const e = { headers: this.v, method: this.C, credentials: this.m, cache: void 0 };
          n && (e.body = n), (this.D || ei).fetch(new Request(this.B, e)).then(this.Va.bind(this), this.ha.bind(this));
        }),
        (Bn.abort = function () {
          (this.response = this.responseText = ''),
            (this.v = new Headers()),
            (this.status = 0),
            this.j && this.j.cancel('Request was aborted.'),
            1 <= this.readyState && this.g && 4 != this.readyState && ((this.g = !1), Xa(this)),
            (this.readyState = co);
        }),
        (Bn.Va = function (n) {
          if (
            this.g &&
            ((this.l = n),
            this.h ||
              ((this.status = this.l.status),
              (this.statusText = this.l.statusText),
              (this.h = n.headers),
              (this.readyState = 2),
              sa(this)),
            this.g && ((this.readyState = 3), sa(this), this.g))
          )
            if ('arraybuffer' === this.responseType) n.arrayBuffer().then(this.Ta.bind(this), this.ha.bind(this));
            else if (void 0 !== ei.ReadableStream && 'body' in n) {
              if (((this.j = n.body.getReader()), this.u)) {
                if (this.responseType)
                  throw Error('responseType must be empty for "streamBinaryChunks" mode responses.');
                this.response = [];
              } else (this.response = this.responseText = ''), (this.A = new TextDecoder());
              Ea(this);
            } else n.text().then(this.Ua.bind(this), this.ha.bind(this));
        }),
        (Bn.Sa = function (n) {
          if (this.g) {
            if (this.u && n.value) this.response.push(n.value);
            else if (!this.u) {
              var e = n.value ? n.value : new Uint8Array(0);
              (e = this.A.decode(e, { stream: !n.done })) && (this.response = this.responseText += e);
            }
            n.done ? Xa(this) : sa(this), 3 == this.readyState && Ea(this);
          }
        }),
        (Bn.Ua = function (n) {
          this.g && ((this.response = this.responseText = n), Xa(this));
        }),
        (Bn.Ta = function (n) {
          this.g && ((this.response = n), Xa(this));
        }),
        (Bn.ha = function () {
          this.g && Xa(this);
        }),
        (Bn.setRequestHeader = function (n, e) {
          this.v.append(n, e);
        }),
        (Bn.getResponseHeader = function (n) {
          return (this.h && this.h.get(n.toLowerCase())) || '';
        }),
        (Bn.getAllResponseHeaders = function () {
          if (!this.h) return '';
          const n = [],
            e = this.h.entries();
          for (var t = e.next(); !t.done; ) n.push((t = t.value)[0] + ': ' + t[1]), (t = e.next());
          return n.join('\r\n');
        }),
        Object.defineProperty(Nc.prototype, 'withCredentials', {
          get: function () {
            return 'include' === this.m;
          },
          set: function (n) {
            this.m = n ? 'include' : 'same-origin';
          },
        });
      var Ja = ei.JSON.parse;
      function ss(n) {
        gt.call(this),
          (this.headers = new G()),
          (this.u = n || null),
          (this.h = !1),
          (this.C = this.g = null),
          (this.H = ''),
          (this.m = 0),
          (this.j = ''),
          (this.l = this.F = this.v = this.D = !1),
          (this.B = 0),
          (this.A = null),
          (this.J = sc),
          (this.K = this.L = !1);
      }
      jr(ss, gt);
      var sc = '',
        Pl = /^https?$/i,
        Na = ['POST', 'PUT'];
      function Vc(n) {
        return 'content-type' == n.toLowerCase();
      }
      function mo(n, e) {
        (n.h = !1), n.g && ((n.l = !0), n.g.abort(), (n.l = !1)), (n.j = e), (n.m = 5), Fl(n), bu(n);
      }
      function Fl(n) {
        n.D || ((n.D = !0), Vt(n, 'complete'), Vt(n, 'error'));
      }
      function oa(n) {
        if (n.h && void 0 !== ko && (!n.C[1] || 4 != el(n) || 2 != n.ba()))
          if (n.v && 4 == el(n)) hs(n.Fa, 0, n);
          else if ((Vt(n, 'readystatechange'), 4 == el(n))) {
            n.h = !1;
            try {
              const C = n.ba();
              e: switch (C) {
                case 200:
                case 201:
                case 202:
                case 204:
                case 206:
                case 304:
                case 1223:
                  var e = !0;
                  break e;
                default:
                  e = !1;
              }
              var t;
              if (!(t = e)) {
                var i;
                if ((i = 0 === C)) {
                  var o = String(n.H).match(ut)[1] || null;
                  if (!o && ei.self && ei.self.location) {
                    var c = ei.self.location.protocol;
                    o = c.substr(0, c.length - 1);
                  }
                  i = !Pl.test(o ? o.toLowerCase() : '');
                }
                t = i;
              }
              if (t) Vt(n, 'complete'), Vt(n, 'success');
              else {
                n.m = 6;
                try {
                  var p = 2 < el(n) ? n.g.statusText : '';
                } catch (I) {
                  p = '';
                }
                (n.j = p + ' [' + n.ba() + ']'), Fl(n);
              }
            } finally {
              bu(n);
            }
          }
      }
      function bu(n, e) {
        if (n.g) {
          ed(n);
          const t = n.g,
            i = n.C[0] ? Li : null;
          (n.g = null), (n.C = null), e || Vt(n, 'ready');
          try {
            t.onreadystatechange = i;
          } catch (o) {}
        }
      }
      function ed(n) {
        n.g && n.K && (n.g.ontimeout = null), n.A && (ei.clearTimeout(n.A), (n.A = null));
      }
      function el(n) {
        return n.g ? n.g.readyState : 0;
      }
      function Uc(n) {
        try {
          if (!n.g) return null;
          if ('response' in n.g) return n.g.response;
          switch (n.J) {
            case sc:
            case 'text':
              return n.g.responseText;
            case 'arraybuffer':
              if ('mozResponseArrayBuffer' in n.g) return n.g.mozResponseArrayBuffer;
          }
          return null;
        } catch (e) {
          return null;
        }
      }
      function xa(n, e, t) {
        e: {
          for (i in t) {
            var i = !1;
            break e;
          }
          i = !0;
        }
        i ||
          ((t = (function jd(n) {
            let e = '';
            return (
              Ys(n, function (t, i) {
                (e += i), (e += ':'), (e += t), (e += '\r\n');
              }),
              e
            );
          })(t)),
          'string' == typeof n ? null != t && encodeURIComponent(String(t)) : zi(n, e, t));
      }
      function Xs(n, e, t) {
        return (t && t.internalChannelParams && t.internalChannelParams[n]) || e;
      }
      function oc(n) {
        (this.za = 0),
          (this.l = []),
          (this.h = new ea()),
          (this.la = this.oa = this.F = this.W = this.g = this.sa = this.D = this.aa = this.o = this.P = this.s = null),
          (this.Za = this.V = 0),
          (this.Xa = Xs('failFast', !1, n)),
          (this.N = this.v = this.u = this.m = this.j = null),
          (this.X = !0),
          (this.I = this.ta = this.U = -1),
          (this.Y = this.A = this.C = 0),
          (this.Pa = Xs('baseRetryDelayMs', 5e3, n)),
          (this.$a = Xs('retryDelaySeedMs', 1e4, n)),
          (this.Ya = Xs('forwardChannelMaxRetries', 2, n)),
          (this.ra = Xs('forwardChannelRequestTimeoutMs', 2e4, n)),
          (this.qa = (n && n.xmlHttpFactory) || void 0),
          (this.Ba = (n && n.Yb) || !1),
          (this.K = void 0),
          (this.H = (n && n.supportsCrossDomainXhr) || !1),
          (this.J = ''),
          (this.i = new Zr(n && n.concurrentRequestLimit)),
          (this.Ca = new Ud()),
          (this.ja = (n && n.fastHandshake) || !1),
          (this.Ra = (n && n.Wb) || !1),
          n && n.Aa && this.h.Aa(),
          n && n.forceLongPolling && (this.X = !1),
          (this.$ = (!this.ja && this.X && n && n.detectBufferingProxy) || !1),
          (this.ka = void 0),
          (this.O = 0),
          (this.L = !1),
          (this.B = null),
          (this.Wa = !n || !1 !== n.Xb);
      }
      function dl(n) {
        if ((jc(n), 3 == n.G)) {
          var e = n.V++,
            t = On(n.F);
          zi(t, 'SID', n.J),
            zi(t, 'RID', e),
            zi(t, 'TYPE', 'terminate'),
            aa(n, t),
            ((e = new na(n, n.h, e, void 0)).K = 2),
            (e.v = Qs(On(t))),
            (t = !1),
            ei.navigator && ei.navigator.sendBeacon && (t = ei.navigator.sendBeacon(e.v.toString(), '')),
            !t && ei.Image && ((new Image().src = e.v), (t = !0)),
            t || ((e.g = $i(e.l, null)), e.g.ea(e.v)),
            (e.F = Date.now()),
            ra(e);
        }
        qn(n);
      }
      function Uo(n) {
        n.g && (K(n), n.g.cancel(), (n.g = null));
      }
      function jc(n) {
        Uo(n),
          n.u && (ei.clearTimeout(n.u), (n.u = null)),
          ct(n),
          n.i.cancel(),
          n.m && ('number' == typeof n.m && ei.clearTimeout(n.m), (n.m = null));
      }
      function jo(n, e) {
        n.l.push(
          new (class {
            constructor(n, e) {
              (this.h = n), (this.g = e);
            }
          })(n.Za++, e)
        ),
          3 == n.G && Ll(n);
      }
      function Ll(n) {
        Ju(n.i) || n.m || ((n.m = !0), vi(n.Ha, n), (n.C = 0));
      }
      function lc(n, e) {
        var t;
        t = e ? e.m : n.V++;
        const i = On(n.F);
        zi(i, 'SID', n.J),
          zi(i, 'RID', t),
          zi(i, 'AID', n.U),
          aa(n, i),
          n.o && n.s && xa(i, n.o, n.s),
          (t = new na(n, n.h, t, n.C + 1)),
          null === n.o && (t.H = n.s),
          e && (n.l = e.D.concat(n.l)),
          (e = Cu(n, t, 1e3)),
          t.setTimeout(Math.round(0.5 * n.ra) + Math.round(0.5 * n.ra * Math.random())),
          Bd(n.i, t),
          Jl(t, i, e);
      }
      function aa(n, e) {
        n.j &&
          R({}, function (t, i) {
            zi(e, i, t);
          });
      }
      function Cu(n, e, t) {
        t = Math.min(n.l.length, t);
        var i = n.j ? Hi(n.j.Oa, n.j, n) : null;
        e: {
          var o = n.l;
          let c = -1;
          for (;;) {
            const p = ['count=' + t];
            -1 == c ? (0 < t ? ((c = o[0].h), p.push('ofs=' + c)) : (c = 0)) : p.push('ofs=' + c);
            let C = !0;
            for (let I = 0; I < t; I++) {
              let U = o[I].h;
              const se = o[I].g;
              if (((U -= c), 0 > U)) (c = Math.max(0, o[I].h - 100)), (C = !1);
              else
                try {
                  Vs(se, p, 'req' + U + '_');
                } catch (xe) {
                  i && i(se);
                }
            }
            if (C) {
              i = p.join('&');
              break e;
            }
          }
        }
        return (n = n.l.splice(0, t)), (e.D = n), i;
      }
      function cc(n) {
        n.g || n.u || ((n.Y = 1), vi(n.Ga, n), (n.A = 0));
      }
      function j(n) {
        return !(n.g || n.u || 3 <= n.A || (n.Y++, (n.u = qr(Hi(n.Ga, n), sn(n, n.A))), n.A++, 0));
      }
      function K(n) {
        null != n.B && (ei.clearTimeout(n.B), (n.B = null));
      }
      function Ee(n) {
        (n.g = new na(n, n.h, 'rpc', n.Y)), null === n.o && (n.g.H = n.s), (n.g.O = 0);
        var e = On(n.oa);
        zi(e, 'RID', 'rpc'),
          zi(e, 'SID', n.J),
          zi(e, 'CI', n.N ? '0' : '1'),
          zi(e, 'AID', n.U),
          aa(n, e),
          zi(e, 'TYPE', 'xmlhttp'),
          n.o && n.s && xa(e, n.o, n.s),
          n.K && n.g.setTimeout(n.K);
        var t = n.g;
        (n = n.la), (t.K = 1), (t.v = Qs(On(e))), (t.s = null), (t.U = !0), wa(t, n);
      }
      function ct(n) {
        null != n.v && (ei.clearTimeout(n.v), (n.v = null));
      }
      function Bt(n, e) {
        var t = null;
        if (n.g == e) {
          ct(n), K(n), (n.g = null);
          var i = 2;
        } else {
          if (!Ah(n.i, e)) return;
          (t = e.D), Of(n.i, e), (i = 1);
        }
        if (((n.I = e.N), 0 != n.G))
          if (e.i)
            if (1 == i) {
              (t = e.s ? e.s.length : 0), (e = Date.now() - e.F);
              var o = n.C;
              Vt((i = Mr()), new Cs(i, t, e, o)), Ll(n);
            } else cc(n);
          else if (
            3 == (o = e.o) ||
            (0 == o && 0 < n.I) ||
            !(
              (1 == i &&
                (function ac(n, e) {
                  return !(
                    kf(n.i) >= n.i.j - (n.m ? 1 : 0) ||
                    (n.m
                      ? ((n.l = e.D.concat(n.l)), 0)
                      : 1 == n.G ||
                        2 == n.G ||
                        n.C >= (n.Xa ? 0 : n.Ya) ||
                        ((n.m = qr(Hi(n.Ha, n, e), sn(n, n.C))), n.C++, 0))
                  );
                })(n, e)) ||
              (2 == i && j(n))
            )
          )
            switch ((t && 0 < t.length && ((e = n.i), (e.i = e.i.concat(t))), o)) {
              case 1:
                Cn(n, 5);
                break;
              case 4:
                Cn(n, 10);
                break;
              case 3:
                Cn(n, 6);
                break;
              default:
                Cn(n, 2);
            }
      }
      function sn(n, e) {
        let t = n.Pa + Math.floor(Math.random() * n.$a);
        return n.j || (t *= 2), t * e;
      }
      function Cn(n, e) {
        if ((n.h.info('Error code ' + e), 2 == e)) {
          var t = null;
          n.j && (t = null);
          var i = Hi(n.jb, n);
          t ||
            ((t = new nn('//www.google.com/images/cleardot.gif')),
            (ei.location && 'http' == ei.location.protocol) || Mi(t, 'https'),
            Qs(t)),
            (function Lc(n, e) {
              const t = new ea();
              if (ei.Image) {
                const i = new Image();
                (i.onload = Ws(ul, t, i, 'TestLoadImage: loaded', !0, e)),
                  (i.onerror = Ws(ul, t, i, 'TestLoadImage: error', !1, e)),
                  (i.onabort = Ws(ul, t, i, 'TestLoadImage: abort', !1, e)),
                  (i.ontimeout = Ws(ul, t, i, 'TestLoadImage: timeout', !1, e)),
                  ei.setTimeout(function () {
                    i.ontimeout && i.ontimeout();
                  }, 1e4),
                  (i.src = n);
              } else e(!1);
            })(t.toString(), i);
        } else Gi(2);
        (n.G = 0), n.j && n.j.va(e), qn(n), jc(n);
      }
      function qn(n) {
        (n.G = 0),
          (n.I = -1),
          n.j &&
            ((0 != Vd(n.i).length || 0 != n.l.length) && ((n.i.i.length = 0), _s(n.l), (n.l.length = 0)), n.j.ua());
      }
      function $n(n, e, t) {
        let i = (function wo(n) {
          return n instanceof nn ? On(n) : new nn(n, void 0);
        })(t);
        if ('' != i.i) e && ai(i, e + '.' + i.i), Di(i, i.m);
        else {
          const o = ei.location;
          i = (function Eo(n, e, t, i) {
            var o = new nn(null, void 0);
            return n && Mi(o, n), e && ai(o, e), t && Di(o, t), i && (o.l = i), o;
          })(o.protocol, e ? e + '.' + o.hostname : o.hostname, +o.port, t);
        }
        return (
          n.aa &&
            Ys(n.aa, function (o, c) {
              zi(i, c, o);
            }),
          (t = n.sa),
          (e = n.D) && t && zi(i, e, t),
          zi(i, 'VER', n.ma),
          aa(n, i),
          i
        );
      }
      function $i(n, e, t) {
        if (e && !n.H) throw Error("Can't create secondary domain capable XhrIo object.");
        return ((e = new ss(t && n.Ba && !n.qa ? new rc({ ib: !0 }) : n.qa)).L = n.H), e;
      }
      function Tr() {}
      function Us() {
        if (Ks && !(10 <= Number(tn))) throw Error('Environmental error: no available transport.');
      }
      function ur(n, e) {
        gt.call(this),
          (this.g = new oc(e)),
          (this.l = n),
          (this.h = (e && e.messageUrlParams) || null),
          (n = (e && e.messageHeaders) || null),
          e &&
            e.clientProtocolHeaderRequired &&
            (n ? (n['X-Client-Protocol'] = 'webchannel') : (n = { 'X-Client-Protocol': 'webchannel' })),
          (this.g.s = n),
          (n = (e && e.initMessageHeaders) || null),
          e &&
            e.messageContentType &&
            (n
              ? (n['X-WebChannel-Content-Type'] = e.messageContentType)
              : (n = { 'X-WebChannel-Content-Type': e.messageContentType })),
          e && e.ya && (n ? (n['X-WebChannel-Client-Profile'] = e.ya) : (n = { 'X-WebChannel-Client-Profile': e.ya })),
          (this.g.P = n),
          (n = e && e.httpHeadersOverwriteParam) && !ys(n) && (this.g.o = n),
          (this.A = (e && e.supportsCrossDomainXhr) || !1),
          (this.v = (e && e.sendRawJson) || !1),
          (e = e && e.httpSessionIdParam) &&
            !ys(e) &&
            ((this.g.D = e), null !== (n = this.h) && e in n && e in (n = this.h) && delete n[e]),
          (this.j = new Do(this));
      }
      function Ir(n) {
        Pc.call(this);
        var e = n.__sm__;
        if (e) {
          e: {
            for (const t in e) {
              n = t;
              break e;
            }
            n = void 0;
          }
          (this.i = n) && ((n = this.i), (e = null !== e && n in e ? e[n] : void 0)), (this.data = e);
        } else this.data = n;
      }
      function Nl() {
        Zo.call(this), (this.status = 1);
      }
      function Do(n) {
        this.g = n;
      }
      ((Bn = ss.prototype).ea = function (n, e, t, i) {
        if (this.g) throw Error('[goog.net.XhrIo] Object is active with another request=' + this.H + '; newUri=' + n);
        (e = e ? e.toUpperCase() : 'GET'),
          (this.H = n),
          (this.j = ''),
          (this.m = 0),
          (this.D = !1),
          (this.h = !0),
          (this.g = this.u ? this.u.g() : ta.g()),
          (this.C = (function Oc(n) {
            return n.h || (n.h = n.i());
          })(this.u ? this.u : ta)),
          (this.g.onreadystatechange = Hi(this.Fa, this));
        try {
          (this.F = !0), this.g.open(e, String(n), !0), (this.F = !1);
        } catch (c) {
          return void mo(this, c);
        }
        n = t || '';
        const o = new G(this.headers);
        i &&
          R(i, function (c, p) {
            o.set(p, c);
          }),
          (i = (function Hr(n) {
            e: {
              var e = Vc;
              const t = n.length,
                i = 'string' == typeof n ? n.split('') : n;
              for (let o = 0; o < t; o++)
                if (o in i && e.call(void 0, i[o], o, n)) {
                  e = o;
                  break e;
                }
              e = -1;
            }
            return 0 > e ? null : 'string' == typeof n ? n.charAt(e) : n[e];
          })(o.T())),
          (t = ei.FormData && n instanceof ei.FormData),
          !(0 <= Ns(Na, e)) || i || t || o.set('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8'),
          o.forEach(function (c, p) {
            this.g.setRequestHeader(p, c);
          }, this),
          this.J && (this.g.responseType = this.J),
          'withCredentials' in this.g && this.g.withCredentials !== this.L && (this.g.withCredentials = this.L);
        try {
          ed(this),
            0 < this.B &&
              ((this.K = (function Bc(n) {
                return (
                  Ks &&
                  (function $() {
                    return (function Or(n) {
                      var e = be;
                      return Object.prototype.hasOwnProperty.call(e, 9) ? e[9] : (e[9] = n(9));
                    })(function () {
                      let n = 0;
                      const e = cs(String(is)).split('.'),
                        t = cs('9').split('.'),
                        i = Math.max(e.length, t.length);
                      for (let p = 0; 0 == n && p < i; p++) {
                        var o = e[p] || '',
                          c = t[p] || '';
                        do {
                          if (
                            ((o = /(\d*)(\D*)(.*)/.exec(o) || ['', '', '', '']),
                            (c = /(\d*)(\D*)(.*)/.exec(c) || ['', '', '', '']),
                            0 == o[0].length && 0 == c[0].length)
                          )
                            break;
                          (n =
                            ns(0 == o[1].length ? 0 : parseInt(o[1], 10), 0 == c[1].length ? 0 : parseInt(c[1], 10)) ||
                            ns(0 == o[2].length, 0 == c[2].length) ||
                            ns(o[2], c[2])),
                            (o = o[3]),
                            (c = c[3]);
                        } while (0 == n);
                      }
                      return 0 <= n;
                    });
                  })() &&
                  'number' == typeof n.timeout &&
                  void 0 !== n.ontimeout
                );
              })(this.g))
                ? ((this.g.timeout = this.B), (this.g.ontimeout = Hi(this.pa, this)))
                : (this.A = hs(this.pa, this.B, this))),
            (this.v = !0),
            this.g.send(n),
            (this.v = !1);
        } catch (c) {
          mo(this, c);
        }
      }),
        (Bn.pa = function () {
          void 0 !== ko &&
            this.g &&
            ((this.j = 'Timed out after ' + this.B + 'ms, aborting'), (this.m = 8), Vt(this, 'timeout'), this.abort(8));
        }),
        (Bn.abort = function (n) {
          this.g &&
            this.h &&
            ((this.h = !1),
            (this.l = !0),
            this.g.abort(),
            (this.l = !1),
            (this.m = n || 7),
            Vt(this, 'complete'),
            Vt(this, 'abort'),
            bu(this));
        }),
        (Bn.M = function () {
          this.g && (this.h && ((this.h = !1), (this.l = !0), this.g.abort(), (this.l = !1)), bu(this, !0)),
            ss.Z.M.call(this);
        }),
        (Bn.Fa = function () {
          this.s || (this.F || this.v || this.l ? oa(this) : this.cb());
        }),
        (Bn.cb = function () {
          oa(this);
        }),
        (Bn.ba = function () {
          try {
            return 2 < el(this) ? this.g.status : -1;
          } catch (n) {
            return -1;
          }
        }),
        (Bn.ga = function () {
          try {
            return this.g ? this.g.responseText : '';
          } catch (n) {
            return '';
          }
        }),
        (Bn.Qa = function (n) {
          if (this.g) {
            var e = this.g.responseText;
            return n && 0 == e.indexOf(n) && (e = e.substring(n.length)), Ja(e);
          }
        }),
        (Bn.Da = function () {
          return this.m;
        }),
        (Bn.La = function () {
          return 'string' == typeof this.j ? this.j : String(this.j);
        }),
        ((Bn = oc.prototype).ma = 8),
        (Bn.G = 1),
        (Bn.hb = function (n) {
          try {
            this.h.info('Origin Trials invoked: ' + n);
          } catch (e) {}
        }),
        (Bn.Ha = function (n) {
          if (this.m)
            if (((this.m = null), 1 == this.G)) {
              if (!n) {
                (this.V = Math.floor(1e5 * Math.random())), (n = this.V++);
                const o = new na(this, this.h, n, void 0);
                let c = this.s;
                if (
                  (this.P && (c ? ((c = Po(c)), Wr(c, this.P)) : (c = this.P)), null === this.o && (o.H = c), this.ja)
                )
                  e: {
                    for (var e = 0, t = 0; t < this.l.length; t++) {
                      var i = this.l[t];
                      if (
                        void 0 === (i = '__data__' in i.g && 'string' == typeof (i = i.g.__data__) ? i.length : void 0)
                      )
                        break;
                      if (4096 < (e += i)) {
                        e = t;
                        break e;
                      }
                      if (4096 === e || t === this.l.length - 1) {
                        e = t + 1;
                        break e;
                      }
                    }
                    e = 1e3;
                  }
                else e = 1e3;
                (e = Cu(this, o, e)),
                  zi((t = On(this.F)), 'RID', n),
                  zi(t, 'CVER', 22),
                  this.D && zi(t, 'X-HTTP-Session-Id', this.D),
                  aa(this, t),
                  this.o && c && xa(t, this.o, c),
                  Bd(this.i, o),
                  this.Ra && zi(t, 'TYPE', 'init'),
                  this.ja ? (zi(t, '$req', e), zi(t, 'SID', 'null'), (o.$ = !0), Jl(o, t, null)) : Jl(o, t, e),
                  (this.G = 2);
              }
            } else 3 == this.G && (n ? lc(this, n) : 0 == this.l.length || Ju(this.i) || lc(this));
        }),
        (Bn.Ga = function () {
          if (((this.u = null), Ee(this), this.$ && !(this.L || null == this.g || 0 >= this.O))) {
            var n = 2 * this.O;
            this.h.info('BP detection timer enabled: ' + n), (this.B = qr(Hi(this.bb, this), n));
          }
        }),
        (Bn.bb = function () {
          this.B &&
            ((this.B = null),
            this.h.info('BP detection timeout reached.'),
            this.h.info('Buffering proxy detected and switch to long-polling!'),
            (this.N = !1),
            (this.L = !0),
            Gi(10),
            Uo(this),
            Ee(this));
        }),
        (Bn.ab = function () {
          null != this.v && ((this.v = null), Uo(this), j(this), Gi(19));
        }),
        (Bn.jb = function (n) {
          n
            ? (this.h.info('Successfully pinged google.com'), Gi(2))
            : (this.h.info('Failed to ping google.com'), Gi(1));
        }),
        ((Bn = Tr.prototype).xa = function () {}),
        (Bn.wa = function () {}),
        (Bn.va = function () {}),
        (Bn.ua = function () {}),
        (Bn.Oa = function () {}),
        (Us.prototype.g = function (n, e) {
          return new ur(n, e);
        }),
        jr(ur, gt),
        (ur.prototype.m = function () {
          (this.g.j = this.j), this.A && (this.g.H = !0);
          var n = this.g,
            e = this.l,
            t = this.h || void 0;
          n.Wa && (n.h.info('Origin Trials enabled.'), vi(Hi(n.hb, n, e))),
            Gi(0),
            (n.W = e),
            (n.aa = t || {}),
            (n.N = n.X),
            (n.F = $n(n, null, n.W)),
            Ll(n);
        }),
        (ur.prototype.close = function () {
          dl(this.g);
        }),
        (ur.prototype.u = function (n) {
          if ('string' == typeof n) {
            var e = {};
            (e.__data__ = n), jo(this.g, e);
          } else this.v ? (((e = {}).__data__ = Tn(n)), jo(this.g, e)) : jo(this.g, n);
        }),
        (ur.prototype.M = function () {
          (this.g.j = null), delete this.j, dl(this.g), delete this.g, ur.Z.M.call(this);
        }),
        jr(Ir, Pc),
        jr(Nl, Zo),
        jr(Do, Tr),
        (Do.prototype.xa = function () {
          Vt(this.g, 'a');
        }),
        (Do.prototype.wa = function (n) {
          Vt(this.g, new Ir(n));
        }),
        (Do.prototype.va = function (n) {
          Vt(this.g, new Nl(n));
        }),
        (Do.prototype.ua = function () {
          Vt(this.g, 'b');
        }),
        (Us.prototype.createWebChannel = Us.prototype.g),
        (ur.prototype.send = ur.prototype.u),
        (ur.prototype.open = ur.prototype.m),
        (ur.prototype.close = ur.prototype.close),
        (ws.NO_ERROR = 0),
        (ws.TIMEOUT = 8),
        (ws.HTTP_ERROR = 6),
        (ao.COMPLETE = 'complete'),
        (No.EventType = gr),
        (gr.OPEN = 'a'),
        (gr.CLOSE = 'b'),
        (gr.ERROR = 'c'),
        (gr.MESSAGE = 'd'),
        (gt.prototype.listen = gt.prototype.N),
        (ss.prototype.listenOnce = ss.prototype.O),
        (ss.prototype.getLastError = ss.prototype.La),
        (ss.prototype.getLastErrorCode = ss.prototype.Da),
        (ss.prototype.getStatus = ss.prototype.ba),
        (ss.prototype.getResponseJson = ss.prototype.Qa),
        (ss.prototype.getResponseText = ss.prototype.ga),
        (ss.prototype.send = ss.prototype.ea);
      var Hc = (nr.createWebChannelTransport = function () {
          return new Us();
        }),
        tl = (nr.getStatEventTarget = function () {
          return Mr();
        }),
        Da = (nr.ErrorCode = ws),
        Ho = (nr.EventType = ao),
        Pf = (nr.Event = Ri),
        Th = (nr.Stat = {
          rb: 0,
          ub: 1,
          vb: 2,
          Ob: 3,
          Tb: 4,
          Qb: 5,
          Rb: 6,
          Pb: 7,
          Nb: 8,
          Sb: 9,
          PROXY: 10,
          NOPROXY: 11,
          Lb: 12,
          Hb: 13,
          Ib: 14,
          Gb: 15,
          Jb: 16,
          Kb: 17,
          nb: 18,
          mb: 19,
          ob: 20,
        }),
        Ih = (nr.FetchXmlHttpFactory = rc),
        Bl = (nr.WebChannel = No),
        td = (nr.XhrIo = ss);
      const nd = '@firebase/firestore';
      class uo {
        constructor(e) {
          this.uid = e;
        }
        isAuthenticated() {
          return null != this.uid;
        }
        toKey() {
          return this.isAuthenticated() ? 'uid:' + this.uid : 'anonymous-user';
        }
        isEqual(e) {
          return e.uid === this.uid;
        }
      }
      (uo.UNAUTHENTICATED = new uo(null)),
        (uo.GOOGLE_CREDENTIALS = new uo('google-credentials-uid')),
        (uo.FIRST_PARTY = new uo('first-party-uid')),
        (uo.MOCK_USER = new uo('mock-user'));
      let uc = '9.6.5';
      const dc = new kr.Yd('@firebase/firestore');
      function Rh() {
        return dc.logLevel;
      }
      function In(n, ...e) {
        if (dc.logLevel <= kr.in.DEBUG) {
          const t = e.map(wu);
          dc.debug(`Firestore (${uc}): ${n}`, ...t);
        }
      }
      function Js(n, ...e) {
        if (dc.logLevel <= kr.in.ERROR) {
          const t = e.map(wu);
          dc.error(`Firestore (${uc}): ${n}`, ...t);
        }
      }
      function hc(n, ...e) {
        if (dc.logLevel <= kr.in.WARN) {
          const t = e.map(wu);
          dc.warn(`Firestore (${uc}): ${n}`, ...t);
        }
      }
      function wu(n) {
        if ('string' == typeof n) return n;
        try {
          return JSON.stringify(n);
        } catch (t) {
          return n;
        }
      }
      function ii(n = 'Unexpected state') {
        const e = `FIRESTORE (${uc}) INTERNAL ASSERTION FAILED: ` + n;
        throw (Js(e), new Error(e));
      }
      function xi(n, e) {
        n || ii();
      }
      function Un(n, e) {
        return n;
      }
      const rn = {
        OK: 'ok',
        CANCELLED: 'cancelled',
        UNKNOWN: 'unknown',
        INVALID_ARGUMENT: 'invalid-argument',
        DEADLINE_EXCEEDED: 'deadline-exceeded',
        NOT_FOUND: 'not-found',
        ALREADY_EXISTS: 'already-exists',
        PERMISSION_DENIED: 'permission-denied',
        UNAUTHENTICATED: 'unauthenticated',
        RESOURCE_EXHAUSTED: 'resource-exhausted',
        FAILED_PRECONDITION: 'failed-precondition',
        ABORTED: 'aborted',
        OUT_OF_RANGE: 'out-of-range',
        UNIMPLEMENTED: 'unimplemented',
        INTERNAL: 'internal',
        UNAVAILABLE: 'unavailable',
        DATA_LOSS: 'data-loss',
      };
      class En extends je.ZR {
        constructor(e, t) {
          super(e, t),
            (this.code = e),
            (this.message = t),
            (this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`);
        }
      }
      class ho {
        constructor() {
          this.promise = new Promise((e, t) => {
            (this.resolve = e), (this.reject = t);
          });
        }
      }
      class kh {
        constructor(e, t) {
          (this.user = t),
            (this.type = 'OAuth'),
            (this.headers = new Map()),
            this.headers.set('Authorization', `Bearer ${e}`);
        }
      }
      class Ff {
        getToken() {
          return Promise.resolve(null);
        }
        invalidateToken() {}
        start(e, t) {
          e.enqueueRetryable(() => t(uo.UNAUTHENTICATED));
        }
        shutdown() {}
      }
      class Gc {
        constructor(e) {
          (this.token = e), (this.changeListener = null);
        }
        getToken() {
          return Promise.resolve(this.token);
        }
        invalidateToken() {}
        start(e, t) {
          (this.changeListener = t), e.enqueueRetryable(() => t(this.token.user));
        }
        shutdown() {
          this.changeListener = null;
        }
      }
      class ym {
        constructor(e) {
          (this.t = e),
            (this.currentUser = uo.UNAUTHENTICATED),
            (this.i = 0),
            (this.forceRefresh = !1),
            (this.auth = null);
        }
        start(e, t) {
          var i = this;
          let o = this.i;
          const c = (U) => (this.i !== o ? ((o = this.i), t(U)) : Promise.resolve());
          let p = new ho();
          this.o = () => {
            this.i++,
              (this.currentUser = this.u()),
              p.resolve(),
              (p = new ho()),
              e.enqueueRetryable(() => c(this.currentUser));
          };
          const C = () => {
              const U = p;
              e.enqueueRetryable(
                (0, Jt.Z)(function* () {
                  yield U.promise, yield c(i.currentUser);
                })
              );
            },
            I = (U) => {
              In('FirebaseAuthCredentialsProvider', 'Auth detected'),
                (this.auth = U),
                this.auth.addAuthTokenListener(this.o),
                C();
            };
          this.t.onInit((U) => I(U)),
            setTimeout(() => {
              if (!this.auth) {
                const U = this.t.getImmediate({ optional: !0 });
                U
                  ? I(U)
                  : (In('FirebaseAuthCredentialsProvider', 'Auth not yet detected'), p.resolve(), (p = new ho()));
              }
            }, 0),
            C();
        }
        getToken() {
          const e = this.i,
            t = this.forceRefresh;
          return (
            (this.forceRefresh = !1),
            this.auth
              ? this.auth
                  .getToken(t)
                  .then((i) =>
                    this.i !== e
                      ? (In('FirebaseAuthCredentialsProvider', 'getToken aborted due to token change.'),
                        this.getToken())
                      : i
                      ? (xi('string' == typeof i.accessToken), new kh(i.accessToken, this.currentUser))
                      : null
                  )
              : Promise.resolve(null)
          );
        }
        invalidateToken() {
          this.forceRefresh = !0;
        }
        shutdown() {
          this.auth && this.auth.removeAuthTokenListener(this.o);
        }
        u() {
          const e = this.auth && this.auth.getUid();
          return xi(null === e || 'string' == typeof e), new uo(e);
        }
      }
      class Lf {
        constructor(e, t, i) {
          (this.type = 'FirstParty'),
            (this.user = uo.FIRST_PARTY),
            (this.headers = new Map()),
            this.headers.set('X-Goog-AuthUser', t);
          const o = e.auth.getAuthHeaderValueForFirstParty([]);
          o && this.headers.set('Authorization', o), i && this.headers.set('X-Goog-Iam-Authorization-Token', i);
        }
      }
      class Nf {
        constructor(e, t, i) {
          (this.h = e), (this.l = t), (this.m = i);
        }
        getToken() {
          return Promise.resolve(new Lf(this.h, this.l, this.m));
        }
        start(e, t) {
          e.enqueueRetryable(() => t(uo.FIRST_PARTY));
        }
        shutdown() {}
        invalidateToken() {}
      }
      class Bf {
        constructor(e) {
          (this.value = e),
            (this.type = 'AppCheck'),
            (this.headers = new Map()),
            e && e.length > 0 && this.headers.set('x-firebase-appcheck', this.value);
        }
      }
      class Vf {
        constructor(e) {
          (this.g = e), (this.forceRefresh = !1), (this.appCheck = null);
        }
        start(e, t) {
          this.o = (o) => {
            e.enqueueRetryable(() => {
              return (
                null != (c = o).error &&
                  In(
                    'FirebaseAppCheckTokenProvider',
                    `Error getting App Check token; using placeholder token instead. Error: ${c.error.message}`
                  ),
                t(c.token)
              );
              var c;
            });
          };
          const i = (o) => {
            In('FirebaseAppCheckTokenProvider', 'AppCheck detected'),
              (this.appCheck = o),
              this.appCheck.addTokenListener(this.o);
          };
          this.g.onInit((o) => i(o)),
            setTimeout(() => {
              if (!this.appCheck) {
                const o = this.g.getImmediate({ optional: !0 });
                o ? i(o) : In('FirebaseAppCheckTokenProvider', 'AppCheck not yet detected');
              }
            }, 0);
        }
        getToken() {
          const e = this.forceRefresh;
          return (
            (this.forceRefresh = !1),
            this.appCheck
              ? this.appCheck.getToken(e).then((t) => (t ? (xi('string' == typeof t.token), new Bf(t.token)) : null))
              : Promise.resolve(null)
          );
        }
        invalidateToken() {
          this.forceRefresh = !0;
        }
        shutdown() {
          this.appCheck && this.appCheck.removeTokenListener(this.o);
        }
      }
      class js {
        constructor(e, t) {
          (this.previousValue = e),
            t && ((t.sequenceNumberHandler = (i) => this.p(i)), (this.T = (i) => t.writeSequenceNumber(i)));
        }
        p(e) {
          return (this.previousValue = Math.max(e, this.previousValue)), this.previousValue;
        }
        next() {
          const e = ++this.previousValue;
          return this.T && this.T(e), e;
        }
      }
      function Oh(n) {
        const e = 'undefined' != typeof self && (self.crypto || self.msCrypto),
          t = new Uint8Array(n);
        if (e && 'function' == typeof e.getRandomValues) e.getRandomValues(t);
        else for (let i = 0; i < n; i++) t[i] = Math.floor(256 * Math.random());
        return t;
      }
      js.I = -1;
      class Hd {
        static A() {
          const e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
            t = Math.floor(256 / e.length) * e.length;
          let i = '';
          for (; i.length < 20; ) {
            const o = Oh(40);
            for (let c = 0; c < o.length; ++c) i.length < 20 && o[c] < t && (i += e.charAt(o[c] % e.length));
          }
          return i;
        }
      }
      function Ji(n, e) {
        return n < e ? -1 : n > e ? 1 : 0;
      }
      function zc(n, e, t) {
        return n.length === e.length && n.every((i, o) => t(i, e[o]));
      }
      function Uf(n) {
        return n + '\0';
      }
      class eo {
        constructor(e, t) {
          if (((this.seconds = e), (this.nanoseconds = t), t < 0))
            throw new En(rn.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + t);
          if (t >= 1e9) throw new En(rn.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + t);
          if (e < -62135596800) throw new En(rn.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + e);
          if (e >= 253402300800) throw new En(rn.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + e);
        }
        static now() {
          return eo.fromMillis(Date.now());
        }
        static fromDate(e) {
          return eo.fromMillis(e.getTime());
        }
        static fromMillis(e) {
          const t = Math.floor(e / 1e3),
            i = Math.floor(1e6 * (e - 1e3 * t));
          return new eo(t, i);
        }
        toDate() {
          return new Date(this.toMillis());
        }
        toMillis() {
          return 1e3 * this.seconds + this.nanoseconds / 1e6;
        }
        _compareTo(e) {
          return this.seconds === e.seconds ? Ji(this.nanoseconds, e.nanoseconds) : Ji(this.seconds, e.seconds);
        }
        isEqual(e) {
          return e.seconds === this.seconds && e.nanoseconds === this.nanoseconds;
        }
        toString() {
          return 'Timestamp(seconds=' + this.seconds + ', nanoseconds=' + this.nanoseconds + ')';
        }
        toJSON() {
          return { seconds: this.seconds, nanoseconds: this.nanoseconds };
        }
        valueOf() {
          return (
            String(this.seconds - -62135596800).padStart(12, '0') + '.' + String(this.nanoseconds).padStart(9, '0')
          );
        }
      }
      class Si {
        constructor(e) {
          this.timestamp = e;
        }
        static fromTimestamp(e) {
          return new Si(e);
        }
        static min() {
          return new Si(new eo(0, 0));
        }
        compareTo(e) {
          return this.timestamp._compareTo(e.timestamp);
        }
        isEqual(e) {
          return this.timestamp.isEqual(e.timestamp);
        }
        toMicroseconds() {
          return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
        }
        toString() {
          return 'SnapshotVersion(' + this.timestamp.toString() + ')';
        }
        toTimestamp() {
          return this.timestamp;
        }
      }
      function Ph(n) {
        let e = 0;
        for (const t in n) Object.prototype.hasOwnProperty.call(n, t) && e++;
        return e;
      }
      function fc(n, e) {
        for (const t in n) Object.prototype.hasOwnProperty.call(n, t) && e(t, n[t]);
      }
      function Fh(n) {
        for (const e in n) if (Object.prototype.hasOwnProperty.call(n, e)) return !1;
        return !0;
      }
      class $c {
        constructor(e, t, i) {
          void 0 === t ? (t = 0) : t > e.length && ii(),
            void 0 === i ? (i = e.length - t) : i > e.length - t && ii(),
            (this.segments = e),
            (this.offset = t),
            (this.len = i);
        }
        get length() {
          return this.len;
        }
        isEqual(e) {
          return 0 === $c.comparator(this, e);
        }
        child(e) {
          const t = this.segments.slice(this.offset, this.limit());
          return (
            e instanceof $c
              ? e.forEach((i) => {
                  t.push(i);
                })
              : t.push(e),
            this.construct(t)
          );
        }
        limit() {
          return this.offset + this.length;
        }
        popFirst(e) {
          return this.construct(this.segments, this.offset + (e = void 0 === e ? 1 : e), this.length - e);
        }
        popLast() {
          return this.construct(this.segments, this.offset, this.length - 1);
        }
        firstSegment() {
          return this.segments[this.offset];
        }
        lastSegment() {
          return this.get(this.length - 1);
        }
        get(e) {
          return this.segments[this.offset + e];
        }
        isEmpty() {
          return 0 === this.length;
        }
        isPrefixOf(e) {
          if (e.length < this.length) return !1;
          for (let t = 0; t < this.length; t++) if (this.get(t) !== e.get(t)) return !1;
          return !0;
        }
        isImmediateParentOf(e) {
          if (this.length + 1 !== e.length) return !1;
          for (let t = 0; t < this.length; t++) if (this.get(t) !== e.get(t)) return !1;
          return !0;
        }
        forEach(e) {
          for (let t = this.offset, i = this.limit(); t < i; t++) e(this.segments[t]);
        }
        toArray() {
          return this.segments.slice(this.offset, this.limit());
        }
        static comparator(e, t) {
          const i = Math.min(e.length, t.length);
          for (let o = 0; o < i; o++) {
            const c = e.get(o),
              p = t.get(o);
            if (c < p) return -1;
            if (c > p) return 1;
          }
          return e.length < t.length ? -1 : e.length > t.length ? 1 : 0;
        }
      }
      class vr extends $c {
        construct(e, t, i) {
          return new vr(e, t, i);
        }
        canonicalString() {
          return this.toArray().join('/');
        }
        toString() {
          return this.canonicalString();
        }
        static fromString(...e) {
          const t = [];
          for (const i of e) {
            if (i.indexOf('//') >= 0)
              throw new En(rn.INVALID_ARGUMENT, `Invalid segment (${i}). Paths must not contain // in them.`);
            t.push(...i.split('/').filter((o) => o.length > 0));
          }
          return new vr(t);
        }
        static emptyPath() {
          return new vr([]);
        }
      }
      const vm = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
      class Pr extends $c {
        construct(e, t, i) {
          return new Pr(e, t, i);
        }
        static isValidIdentifier(e) {
          return vm.test(e);
        }
        canonicalString() {
          return this.toArray()
            .map(
              (e) => (
                (e = e.replace(/\\/g, '\\\\').replace(/`/g, '\\`')), Pr.isValidIdentifier(e) || (e = '`' + e + '`'), e
              )
            )
            .join('.');
        }
        toString() {
          return this.canonicalString();
        }
        isKeyField() {
          return 1 === this.length && '__name__' === this.get(0);
        }
        static keyField() {
          return new Pr(['__name__']);
        }
        static fromServerFormat(e) {
          const t = [];
          let i = '',
            o = 0;
          const c = () => {
            if (0 === i.length)
              throw new En(
                rn.INVALID_ARGUMENT,
                `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`
              );
            t.push(i), (i = '');
          };
          let p = !1;
          for (; o < e.length; ) {
            const C = e[o];
            if ('\\' === C) {
              if (o + 1 === e.length) throw new En(rn.INVALID_ARGUMENT, 'Path has trailing escape character: ' + e);
              const I = e[o + 1];
              if ('\\' !== I && '.' !== I && '`' !== I)
                throw new En(rn.INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + e);
              (i += I), (o += 2);
            } else '`' === C ? ((p = !p), o++) : '.' !== C || p ? ((i += C), o++) : (c(), o++);
          }
          if ((c(), p)) throw new En(rn.INVALID_ARGUMENT, 'Unterminated ` in path: ' + e);
          return new Pr(t);
        }
        static emptyPath() {
          return new Pr([]);
        }
      }
      class pc {
        constructor(e) {
          (this.fields = e), e.sort(Pr.comparator);
        }
        covers(e) {
          for (const t of this.fields) if (t.isPrefixOf(e)) return !0;
          return !1;
        }
        isEqual(e) {
          return zc(this.fields, e.fields, (t, i) => t.isEqual(i));
        }
      }
      class Qr {
        constructor(e) {
          this.binaryString = e;
        }
        static fromBase64String(e) {
          const t = atob(e);
          return new Qr(t);
        }
        static fromUint8Array(e) {
          const t = (function (i) {
            let o = '';
            for (let c = 0; c < i.length; ++c) o += String.fromCharCode(i[c]);
            return o;
          })(e);
          return new Qr(t);
        }
        [Symbol.iterator]() {
          let e = 0;
          return {
            next: () =>
              e < this.binaryString.length
                ? { value: this.binaryString.charCodeAt(e++), done: !1 }
                : { value: void 0, done: !0 },
          };
        }
        toBase64() {
          return btoa(this.binaryString);
        }
        toUint8Array() {
          return (function (e) {
            const t = new Uint8Array(e.length);
            for (let i = 0; i < e.length; i++) t[i] = e.charCodeAt(i);
            return t;
          })(this.binaryString);
        }
        approximateByteSize() {
          return 2 * this.binaryString.length;
        }
        compareTo(e) {
          return Ji(this.binaryString, e.binaryString);
        }
        isEqual(e) {
          return this.binaryString === e.binaryString;
        }
      }
      Qr.EMPTY_BYTE_STRING = new Qr('');
      const jf = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
      function la(n) {
        if ((xi(!!n), 'string' == typeof n)) {
          let e = 0;
          const t = jf.exec(n);
          if ((xi(!!t), t[1])) {
            let o = t[1];
            (o = (o + '000000000').substr(0, 9)), (e = Number(o));
          }
          const i = new Date(n);
          return { seconds: Math.floor(i.getTime() / 1e3), nanos: e };
        }
        return { seconds: Es(n.seconds), nanos: Es(n.nanos) };
      }
      function Es(n) {
        return 'number' == typeof n ? n : 'string' == typeof n ? Number(n) : 0;
      }
      function Eu(n) {
        return 'string' == typeof n ? Qr.fromBase64String(n) : Qr.fromUint8Array(n);
      }
      function Gd(n) {
        var e, t;
        return (
          'server_timestamp' ===
          (null ===
            (t = ((null === (e = null == n ? void 0 : n.mapValue) || void 0 === e ? void 0 : e.fields) || {})
              .__type__) || void 0 === t
            ? void 0
            : t.stringValue)
        );
      }
      function bm(n) {
        const e = n.mapValue.fields.__previous_value__;
        return Gd(e) ? bm(e) : e;
      }
      function Wc(n) {
        const e = la(n.mapValue.fields.__local_write_time__.timestampValue);
        return new eo(e.seconds, e.nanos);
      }
      function nl(n) {
        return null == n;
      }
      function xu(n) {
        return 0 === n && 1 / n == -1 / 0;
      }
      function Cm(n) {
        return (
          'number' == typeof n &&
          Number.isInteger(n) &&
          !xu(n) &&
          n <= Number.MAX_SAFE_INTEGER &&
          n >= Number.MIN_SAFE_INTEGER
        );
      }
      class ui {
        constructor(e) {
          this.path = e;
        }
        static fromPath(e) {
          return new ui(vr.fromString(e));
        }
        static fromName(e) {
          return new ui(vr.fromString(e).popFirst(5));
        }
        hasCollectionId(e) {
          return this.path.length >= 2 && this.path.get(this.path.length - 2) === e;
        }
        isEqual(e) {
          return null !== e && 0 === vr.comparator(this.path, e.path);
        }
        toString() {
          return this.path.toString();
        }
        static comparator(e, t) {
          return vr.comparator(e.path, t.path);
        }
        static isDocumentKey(e) {
          return e.length % 2 == 0;
        }
        static fromSegments(e) {
          return new ui(new vr(e.slice()));
        }
      }
      function mc(n) {
        return 'nullValue' in n
          ? 0
          : 'booleanValue' in n
          ? 1
          : 'integerValue' in n || 'doubleValue' in n
          ? 2
          : 'timestampValue' in n
          ? 3
          : 'stringValue' in n
          ? 5
          : 'bytesValue' in n
          ? 6
          : 'referenceValue' in n
          ? 7
          : 'geoPointValue' in n
          ? 8
          : 'arrayValue' in n
          ? 9
          : 'mapValue' in n
          ? Gd(n)
            ? 4
            : 10
          : ii();
      }
      function fl(n, e) {
        if (n === e) return !0;
        const t = mc(n);
        if (t !== mc(e)) return !1;
        switch (t) {
          case 0:
            return !0;
          case 1:
            return n.booleanValue === e.booleanValue;
          case 4:
            return Wc(n).isEqual(Wc(e));
          case 3:
            return (function (i, o) {
              if (
                'string' == typeof i.timestampValue &&
                'string' == typeof o.timestampValue &&
                i.timestampValue.length === o.timestampValue.length
              )
                return i.timestampValue === o.timestampValue;
              const c = la(i.timestampValue),
                p = la(o.timestampValue);
              return c.seconds === p.seconds && c.nanos === p.nanos;
            })(n, e);
          case 5:
            return n.stringValue === e.stringValue;
          case 6:
            return (o = e), Eu(n.bytesValue).isEqual(Eu(o.bytesValue));
          case 7:
            return n.referenceValue === e.referenceValue;
          case 8:
            return (function (i, o) {
              return (
                Es(i.geoPointValue.latitude) === Es(o.geoPointValue.latitude) &&
                Es(i.geoPointValue.longitude) === Es(o.geoPointValue.longitude)
              );
            })(n, e);
          case 2:
            return (function (i, o) {
              if ('integerValue' in i && 'integerValue' in o) return Es(i.integerValue) === Es(o.integerValue);
              if ('doubleValue' in i && 'doubleValue' in o) {
                const c = Es(i.doubleValue),
                  p = Es(o.doubleValue);
                return c === p ? xu(c) === xu(p) : isNaN(c) && isNaN(p);
              }
              return !1;
            })(n, e);
          case 9:
            return zc(n.arrayValue.values || [], e.arrayValue.values || [], fl);
          case 10:
            return (function (i, o) {
              const c = i.mapValue.fields || {},
                p = o.mapValue.fields || {};
              if (Ph(c) !== Ph(p)) return !1;
              for (const C in c) if (c.hasOwnProperty(C) && (void 0 === p[C] || !fl(c[C], p[C]))) return !1;
              return !0;
            })(n, e);
          default:
            return ii();
        }
        var o;
      }
      function Du(n, e) {
        return void 0 !== (n.values || []).find((t) => fl(t, e));
      }
      function gc(n, e) {
        if (n === e) return 0;
        const t = mc(n),
          i = mc(e);
        if (t !== i) return Ji(t, i);
        switch (t) {
          case 0:
            return 0;
          case 1:
            return Ji(n.booleanValue, e.booleanValue);
          case 2:
            return (function (o, c) {
              const p = Es(o.integerValue || o.doubleValue),
                C = Es(c.integerValue || c.doubleValue);
              return p < C ? -1 : p > C ? 1 : p === C ? 0 : isNaN(p) ? (isNaN(C) ? 0 : -1) : 1;
            })(n, e);
          case 3:
            return Hf(n.timestampValue, e.timestampValue);
          case 4:
            return Hf(Wc(n), Wc(e));
          case 5:
            return Ji(n.stringValue, e.stringValue);
          case 6:
            return (function (o, c) {
              const p = Eu(o),
                C = Eu(c);
              return p.compareTo(C);
            })(n.bytesValue, e.bytesValue);
          case 7:
            return (function (o, c) {
              const p = o.split('/'),
                C = c.split('/');
              for (let I = 0; I < p.length && I < C.length; I++) {
                const U = Ji(p[I], C[I]);
                if (0 !== U) return U;
              }
              return Ji(p.length, C.length);
            })(n.referenceValue, e.referenceValue);
          case 8:
            return (function (o, c) {
              const p = Ji(Es(o.latitude), Es(c.latitude));
              return 0 !== p ? p : Ji(Es(o.longitude), Es(c.longitude));
            })(n.geoPointValue, e.geoPointValue);
          case 9:
            return (function (o, c) {
              const p = o.values || [],
                C = c.values || [];
              for (let I = 0; I < p.length && I < C.length; ++I) {
                const U = gc(p[I], C[I]);
                if (U) return U;
              }
              return Ji(p.length, C.length);
            })(n.arrayValue, e.arrayValue);
          case 10:
            return (function (o, c) {
              const p = o.fields || {},
                C = Object.keys(p),
                I = c.fields || {},
                U = Object.keys(I);
              C.sort(), U.sort();
              for (let se = 0; se < C.length && se < U.length; ++se) {
                const xe = Ji(C[se], U[se]);
                if (0 !== xe) return xe;
                const rt = gc(p[C[se]], I[U[se]]);
                if (0 !== rt) return rt;
              }
              return Ji(C.length, U.length);
            })(n.mapValue, e.mapValue);
          default:
            throw ii();
        }
      }
      function Hf(n, e) {
        if ('string' == typeof n && 'string' == typeof e && n.length === e.length) return Ji(n, e);
        const t = la(n),
          i = la(e),
          o = Ji(t.seconds, i.seconds);
        return 0 !== o ? o : Ji(t.nanos, i.nanos);
      }
      function id(n) {
        return Ul(n);
      }
      function Ul(n) {
        return 'nullValue' in n
          ? 'null'
          : 'booleanValue' in n
          ? '' + n.booleanValue
          : 'integerValue' in n
          ? '' + n.integerValue
          : 'doubleValue' in n
          ? '' + n.doubleValue
          : 'timestampValue' in n
          ? (function (i) {
              const o = la(i);
              return `time(${o.seconds},${o.nanos})`;
            })(n.timestampValue)
          : 'stringValue' in n
          ? n.stringValue
          : 'bytesValue' in n
          ? Eu(n.bytesValue).toBase64()
          : 'referenceValue' in n
          ? ui.fromName(n.referenceValue).toString()
          : 'geoPointValue' in n
          ? `geo(${(e = n.geoPointValue).latitude},${e.longitude})`
          : 'arrayValue' in n
          ? (function (i) {
              let o = '[',
                c = !0;
              for (const p of i.values || []) c ? (c = !1) : (o += ','), (o += Ul(p));
              return o + ']';
            })(n.arrayValue)
          : 'mapValue' in n
          ? (function (i) {
              const o = Object.keys(i.fields || {}).sort();
              let c = '{',
                p = !0;
              for (const C of o) p ? (p = !1) : (c += ','), (c += `${C}:${Ul(i.fields[C])}`);
              return c + '}';
            })(n.mapValue)
          : ii();
        var e;
      }
      function jl(n, e) {
        return {
          referenceValue: `projects/${n.projectId}/databases/${n.database}/documents/${e.path.canonicalString()}`,
        };
      }
      function _c(n) {
        return !!n && 'integerValue' in n;
      }
      function zd(n) {
        return !!n && 'arrayValue' in n;
      }
      function zr(n) {
        return !!n && 'nullValue' in n;
      }
      function Lh(n) {
        return !!n && 'doubleValue' in n && isNaN(Number(n.doubleValue));
      }
      function rd(n) {
        return !!n && 'mapValue' in n;
      }
      function pl(n) {
        if (n.geoPointValue) return { geoPointValue: Object.assign({}, n.geoPointValue) };
        if (n.timestampValue && 'object' == typeof n.timestampValue)
          return { timestampValue: Object.assign({}, n.timestampValue) };
        if (n.mapValue) {
          const e = { mapValue: { fields: {} } };
          return fc(n.mapValue.fields, (t, i) => (e.mapValue.fields[t] = pl(i))), e;
        }
        if (n.arrayValue) {
          const e = { arrayValue: { values: [] } };
          for (let t = 0; t < (n.arrayValue.values || []).length; ++t)
            e.arrayValue.values[t] = pl(n.arrayValue.values[t]);
          return e;
        }
        return Object.assign({}, n);
      }
      class os {
        constructor(e) {
          this.value = e;
        }
        static empty() {
          return new os({ mapValue: {} });
        }
        field(e) {
          if (e.isEmpty()) return this.value;
          {
            let t = this.value;
            for (let i = 0; i < e.length - 1; ++i) if (((t = (t.mapValue.fields || {})[e.get(i)]), !rd(t))) return null;
            return (t = (t.mapValue.fields || {})[e.lastSegment()]), t || null;
          }
        }
        set(e, t) {
          this.getFieldsMap(e.popLast())[e.lastSegment()] = pl(t);
        }
        setAll(e) {
          let t = Pr.emptyPath(),
            i = {},
            o = [];
          e.forEach((p, C) => {
            if (!t.isImmediateParentOf(C)) {
              const I = this.getFieldsMap(t);
              this.applyChanges(I, i, o), (i = {}), (o = []), (t = C.popLast());
            }
            p ? (i[C.lastSegment()] = pl(p)) : o.push(C.lastSegment());
          });
          const c = this.getFieldsMap(t);
          this.applyChanges(c, i, o);
        }
        delete(e) {
          const t = this.field(e.popLast());
          rd(t) && t.mapValue.fields && delete t.mapValue.fields[e.lastSegment()];
        }
        isEqual(e) {
          return fl(this.value, e.value);
        }
        getFieldsMap(e) {
          let t = this.value;
          t.mapValue.fields || (t.mapValue = { fields: {} });
          for (let i = 0; i < e.length; ++i) {
            let o = t.mapValue.fields[e.get(i)];
            (rd(o) && o.mapValue.fields) || ((o = { mapValue: { fields: {} } }), (t.mapValue.fields[e.get(i)] = o)),
              (t = o);
          }
          return t.mapValue.fields;
        }
        applyChanges(e, t, i) {
          fc(t, (o, c) => (e[o] = c));
          for (const o of i) delete e[o];
        }
        clone() {
          return new os(pl(this.value));
        }
      }
      function Nh(n) {
        const e = [];
        return (
          fc(n.fields, (t, i) => {
            const o = new Pr([t]);
            if (rd(i)) {
              const c = Nh(i.mapValue).fields;
              if (0 === c.length) e.push(o);
              else for (const p of c) e.push(o.child(p));
            } else e.push(o);
          }),
          new pc(e)
        );
      }
      class xr {
        constructor(e, t, i, o, c) {
          (this.key = e), (this.documentType = t), (this.version = i), (this.data = o), (this.documentState = c);
        }
        static newInvalidDocument(e) {
          return new xr(e, 0, Si.min(), os.empty(), 0);
        }
        static newFoundDocument(e, t, i) {
          return new xr(e, 1, t, i, 0);
        }
        static newNoDocument(e, t) {
          return new xr(e, 2, t, os.empty(), 0);
        }
        static newUnknownDocument(e, t) {
          return new xr(e, 3, t, os.empty(), 2);
        }
        convertToFoundDocument(e, t) {
          return (this.version = e), (this.documentType = 1), (this.data = t), (this.documentState = 0), this;
        }
        convertToNoDocument(e) {
          return (this.version = e), (this.documentType = 2), (this.data = os.empty()), (this.documentState = 0), this;
        }
        convertToUnknownDocument(e) {
          return (this.version = e), (this.documentType = 3), (this.data = os.empty()), (this.documentState = 2), this;
        }
        setHasCommittedMutations() {
          return (this.documentState = 2), this;
        }
        setHasLocalMutations() {
          return (this.documentState = 1), this;
        }
        get hasLocalMutations() {
          return 1 === this.documentState;
        }
        get hasCommittedMutations() {
          return 2 === this.documentState;
        }
        get hasPendingWrites() {
          return this.hasLocalMutations || this.hasCommittedMutations;
        }
        isValidDocument() {
          return 0 !== this.documentType;
        }
        isFoundDocument() {
          return 1 === this.documentType;
        }
        isNoDocument() {
          return 2 === this.documentType;
        }
        isUnknownDocument() {
          return 3 === this.documentType;
        }
        isEqual(e) {
          return (
            e instanceof xr &&
            this.key.isEqual(e.key) &&
            this.version.isEqual(e.version) &&
            this.documentType === e.documentType &&
            this.documentState === e.documentState &&
            this.data.isEqual(e.data)
          );
        }
        mutableCopy() {
          return new xr(this.key, this.documentType, this.version, this.data.clone(), this.documentState);
        }
        toString() {
          return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${
            this.documentType
          }}), {documentState: ${this.documentState}})`;
        }
      }
      class Yc {
        constructor(e, t = null, i = [], o = [], c = null, p = null, C = null) {
          (this.path = e),
            (this.collectionGroup = t),
            (this.orderBy = i),
            (this.filters = o),
            (this.limit = c),
            (this.startAt = p),
            (this.endAt = C),
            (this.R = null);
        }
      }
      function Mu(n, e = null, t = [], i = [], o = null, c = null, p = null) {
        return new Yc(n, e, t, i, o, c, p);
      }
      function Hl(n) {
        const e = Un(n);
        if (null === e.R) {
          let t = e.path.canonicalString();
          null !== e.collectionGroup && (t += '|cg:' + e.collectionGroup),
            (t += '|f:'),
            (t += e.filters
              .map((i) =>
                (function sd(n) {
                  return n.field.canonicalString() + n.op.toString() + id(n.value);
                })(i)
              )
              .join(',')),
            (t += '|ob:'),
            (t += e.orderBy
              .map((i) => {
                return (o = i).field.canonicalString() + o.dir;
                var o;
              })
              .join(',')),
            nl(e.limit) || ((t += '|l:'), (t += e.limit)),
            e.startAt && ((t += '|lb:'), (t += gl(e.startAt))),
            e.endAt && ((t += '|ub:'), (t += gl(e.endAt))),
            (e.R = t);
        }
        return e.R;
      }
      function Ma(n, e) {
        if (n.limit !== e.limit || n.orderBy.length !== e.orderBy.length) return !1;
        for (let o = 0; o < n.orderBy.length; o++) if (!Kc(n.orderBy[o], e.orderBy[o])) return !1;
        if (n.filters.length !== e.filters.length) return !1;
        for (let o = 0; o < n.filters.length; o++)
          if ((t = n.filters[o]).op !== (i = e.filters[o]).op || !t.field.isEqual(i.field) || !fl(t.value, i.value))
            return !1;
        var t, i;
        return (
          n.collectionGroup === e.collectionGroup &&
          !!n.path.isEqual(e.path) &&
          !!Sa(n.startAt, e.startAt) &&
          Sa(n.endAt, e.endAt)
        );
      }
      function il(n) {
        return ui.isDocumentKey(n.path) && null === n.collectionGroup && 0 === n.filters.length;
      }
      class _r extends class {} {
        constructor(e, t, i) {
          super(), (this.field = e), (this.op = t), (this.value = i);
        }
        static create(e, t, i) {
          return e.isKeyField()
            ? 'in' === t || 'not-in' === t
              ? this.P(e, t, i)
              : new od(e, t, i)
            : 'array-contains' === t
            ? new $d(e, i)
            : 'in' === t
            ? new Wd(e, i)
            : 'not-in' === t
            ? new Yd(e, i)
            : 'array-contains-any' === t
            ? new Bh(e, i)
            : new _r(e, t, i);
        }
        static P(e, t, i) {
          return 'in' === t ? new ad(e, i) : new Hs(e, i);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return '!=' === this.op
            ? null !== t && this.v(gc(t, this.value))
            : null !== t && mc(this.value) === mc(t) && this.v(gc(t, this.value));
        }
        v(e) {
          switch (this.op) {
            case '<':
              return e < 0;
            case '<=':
              return e <= 0;
            case '==':
              return 0 === e;
            case '!=':
              return 0 !== e;
            case '>':
              return e > 0;
            case '>=':
              return e >= 0;
            default:
              return ii();
          }
        }
        V() {
          return ['<', '<=', '>', '>=', '!=', 'not-in'].indexOf(this.op) >= 0;
        }
      }
      class od extends _r {
        constructor(e, t, i) {
          super(e, t, i), (this.key = ui.fromName(i.referenceValue));
        }
        matches(e) {
          const t = ui.comparator(e.key, this.key);
          return this.v(t);
        }
      }
      class ad extends _r {
        constructor(e, t) {
          super(e, 'in', t), (this.keys = ml(0, t));
        }
        matches(e) {
          return this.keys.some((t) => t.isEqual(e.key));
        }
      }
      class Hs extends _r {
        constructor(e, t) {
          super(e, 'not-in', t), (this.keys = ml(0, t));
        }
        matches(e) {
          return !this.keys.some((t) => t.isEqual(e.key));
        }
      }
      function ml(n, e) {
        var t;
        return ((null === (t = e.arrayValue) || void 0 === t ? void 0 : t.values) || []).map((i) =>
          ui.fromName(i.referenceValue)
        );
      }
      class $d extends _r {
        constructor(e, t) {
          super(e, 'array-contains', t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return zd(t) && Du(t.arrayValue, this.value);
        }
      }
      class Wd extends _r {
        constructor(e, t) {
          super(e, 'in', t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return null !== t && Du(this.value.arrayValue, t);
        }
      }
      class Yd extends _r {
        constructor(e, t) {
          super(e, 'not-in', t);
        }
        matches(e) {
          if (Du(this.value.arrayValue, { nullValue: 'NULL_VALUE' })) return !1;
          const t = e.data.field(this.field);
          return null !== t && !Du(this.value.arrayValue, t);
        }
      }
      class Bh extends _r {
        constructor(e, t) {
          super(e, 'array-contains-any', t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return !(!zd(t) || !t.arrayValue.values) && t.arrayValue.values.some((i) => Du(this.value.arrayValue, i));
        }
      }
      class xs {
        constructor(e, t) {
          (this.position = e), (this.before = t);
        }
      }
      function gl(n) {
        return `${n.before ? 'b' : 'a'}:${n.position.map((e) => id(e)).join(',')}`;
      }
      class yc {
        constructor(e, t = 'asc') {
          (this.field = e), (this.dir = t);
        }
      }
      function Kc(n, e) {
        return n.dir === e.dir && n.field.isEqual(e.field);
      }
      function vc(n, e, t) {
        let i = 0;
        for (let o = 0; o < n.position.length; o++) {
          const c = e[o],
            p = n.position[o];
          if (
            ((i = c.field.isKeyField()
              ? ui.comparator(ui.fromName(p.referenceValue), t.key)
              : gc(p, t.data.field(c.field))),
            'desc' === c.dir && (i *= -1),
            0 !== i)
          )
            break;
        }
        return n.before ? i <= 0 : i < 0;
      }
      function Sa(n, e) {
        if (null === n) return null === e;
        if (null === e || n.before !== e.before || n.position.length !== e.position.length) return !1;
        for (let t = 0; t < n.position.length; t++) if (!fl(n.position[t], e.position[t])) return !1;
        return !0;
      }
      class ca {
        constructor(e, t = null, i = [], o = [], c = null, p = 'F', C = null, I = null) {
          (this.path = e),
            (this.collectionGroup = t),
            (this.explicitOrderBy = i),
            (this.filters = o),
            (this.limit = c),
            (this.limitType = p),
            (this.startAt = C),
            (this.endAt = I),
            (this.S = null),
            (this.D = null);
        }
      }
      function Su(n, e, t, i, o, c, p, C) {
        return new ca(n, e, t, i, o, c, p, C);
      }
      function Gl(n) {
        return new ca(n);
      }
      function Mo(n) {
        return !nl(n.limit) && 'F' === n.limitType;
      }
      function qc(n) {
        return !nl(n.limit) && 'L' === n.limitType;
      }
      function Kd(n) {
        return n.explicitOrderBy.length > 0 ? n.explicitOrderBy[0].field : null;
      }
      function Zc(n) {
        for (const e of n.filters) if (e.V()) return e.field;
        return null;
      }
      function Vh(n) {
        return null !== n.collectionGroup;
      }
      function Qc(n) {
        const e = Un(n);
        if (null === e.S) {
          e.S = [];
          const t = Zc(e),
            i = Kd(e);
          if (null !== t && null === i) t.isKeyField() || e.S.push(new yc(t)), e.S.push(new yc(Pr.keyField(), 'asc'));
          else {
            let o = !1;
            for (const c of e.explicitOrderBy) e.S.push(c), c.field.isKeyField() && (o = !0);
            if (!o) {
              const c = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : 'asc';
              e.S.push(new yc(Pr.keyField(), c));
            }
          }
        }
        return e.S;
      }
      function Xr(n) {
        const e = Un(n);
        if (!e.D)
          if ('F' === e.limitType) e.D = Mu(e.path, e.collectionGroup, Qc(e), e.filters, e.limit, e.startAt, e.endAt);
          else {
            const t = [];
            for (const c of Qc(e)) t.push(new yc(c.field, 'desc' === c.dir ? 'asc' : 'desc'));
            const i = e.endAt ? new xs(e.endAt.position, !e.endAt.before) : null,
              o = e.startAt ? new xs(e.startAt.position, !e.startAt.before) : null;
            e.D = Mu(e.path, e.collectionGroup, t, e.filters, e.limit, i, o);
          }
        return e.D;
      }
      function qd(n, e, t) {
        return new ca(
          n.path,
          n.collectionGroup,
          n.explicitOrderBy.slice(),
          n.filters.slice(),
          e,
          t,
          n.startAt,
          n.endAt
        );
      }
      function Xc(n, e) {
        return Ma(Xr(n), Xr(e)) && n.limitType === e.limitType;
      }
      function Uh(n) {
        return `${Hl(Xr(n))}|lt:${n.limitType}`;
      }
      function rl(n) {
        return `Query(target=${(function wm(n) {
          let e = n.path.canonicalString();
          return (
            null !== n.collectionGroup && (e += ' collectionGroup=' + n.collectionGroup),
            n.filters.length > 0 &&
              (e += `, filters: [${n.filters
                .map((t) => {
                  return `${(i = t).field.canonicalString()} ${i.op} ${id(i.value)}`;
                  var i;
                })
                .join(', ')}]`),
            nl(n.limit) || (e += ', limit: ' + n.limit),
            n.orderBy.length > 0 &&
              (e += `, orderBy: [${n.orderBy
                .map((t) => {
                  return `${(i = t).field.canonicalString()} (${i.dir})`;
                  var i;
                })
                .join(', ')}]`),
            n.startAt && (e += ', startAt: ' + gl(n.startAt)),
            n.endAt && (e += ', endAt: ' + gl(n.endAt)),
            `Target(${e})`
          );
        })(Xr(n))}; limitType=${n.limitType})`;
      }
      function Ba(n, e) {
        return (
          e.isFoundDocument() &&
          (function (t, i) {
            const o = i.key.path;
            return null !== t.collectionGroup
              ? i.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(o)
              : ui.isDocumentKey(t.path)
              ? t.path.isEqual(o)
              : t.path.isImmediateParentOf(o);
          })(n, e) &&
          (function (t, i) {
            for (const o of t.explicitOrderBy) if (!o.field.isKeyField() && null === i.data.field(o.field)) return !1;
            return !0;
          })(n, e) &&
          (function (t, i) {
            for (const o of t.filters) if (!o.matches(i)) return !1;
            return !0;
          })(n, e) &&
          ((i = e), !(((t = n).startAt && !vc(t.startAt, Qc(t), i)) || (t.endAt && vc(t.endAt, Qc(t), i))))
        );
        var t, i;
      }
      function Zd(n) {
        return (e, t) => {
          let i = !1;
          for (const o of Qc(n)) {
            const c = Au(o, e, t);
            if (0 !== c) return c;
            i = i || o.field.isKeyField();
          }
          return 0;
        };
      }
      function Au(n, e, t) {
        const i = n.field.isKeyField()
          ? ui.comparator(e.key, t.key)
          : (function (o, c, p) {
              const C = c.data.field(o),
                I = p.data.field(o);
              return null !== C && null !== I ? gc(C, I) : ii();
            })(n.field, e, t);
        switch (n.dir) {
          case 'asc':
            return i;
          case 'desc':
            return -1 * i;
          default:
            return ii();
        }
      }
      function Jc(n, e) {
        if (n.C) {
          if (isNaN(e)) return { doubleValue: 'NaN' };
          if (e === 1 / 0) return { doubleValue: 'Infinity' };
          if (e === -1 / 0) return { doubleValue: '-Infinity' };
        }
        return { doubleValue: xu(e) ? '-0' : e };
      }
      function bc(n) {
        return { integerValue: '' + n };
      }
      function Tu(n, e) {
        return Cm(e) ? bc(e) : Jc(n, e);
      }
      class Qd {
        constructor() {
          this._ = void 0;
        }
      }
      function Iu(n, e, t) {
        return n instanceof _
          ? (function (i, o) {
              const c = {
                fields: {
                  __type__: { stringValue: 'server_timestamp' },
                  __local_write_time__: { timestampValue: { seconds: i.seconds, nanos: i.nanoseconds } },
                },
              };
              return o && (c.fields.__previous_value__ = o), { mapValue: c };
            })(t, e)
          : n instanceof v
          ? k(n, e)
          : n instanceof Q
          ? ze(n, e)
          : (function (i, o) {
              const c = D(i, o),
                p = pn(c) + pn(i.N);
              return _c(c) && _c(i.N) ? bc(p) : Jc(i.k, p);
            })(n, e);
      }
      function ua(n, e, t) {
        return n instanceof v ? k(n, e) : n instanceof Q ? ze(n, e) : t;
      }
      function D(n, e) {
        return n instanceof Lt ? (_c((t = e)) || ((i = t) && 'doubleValue' in i) ? e : { integerValue: 0 }) : null;
        var i, t;
      }
      class _ extends Qd {}
      class v extends Qd {
        constructor(e) {
          super(), (this.elements = e);
        }
      }
      function k(n, e) {
        const t = Fn(e);
        for (const i of n.elements) t.some((o) => fl(o, i)) || t.push(i);
        return { arrayValue: { values: t } };
      }
      class Q extends Qd {
        constructor(e) {
          super(), (this.elements = e);
        }
      }
      function ze(n, e) {
        let t = Fn(e);
        for (const i of n.elements) t = t.filter((o) => !fl(o, i));
        return { arrayValue: { values: t } };
      }
      class Lt extends Qd {
        constructor(e, t) {
          super(), (this.k = e), (this.N = t);
        }
      }
      function pn(n) {
        return Es(n.integerValue || n.doubleValue);
      }
      function Fn(n) {
        return zd(n) && n.arrayValue.values ? n.arrayValue.values.slice() : [];
      }
      class Kn {
        constructor(e, t) {
          (this.field = e), (this.transform = t);
        }
      }
      class hi {
        constructor(e, t) {
          (this.version = e), (this.transformResults = t);
        }
      }
      class Fi {
        constructor(e, t) {
          (this.updateTime = e), (this.exists = t);
        }
        static none() {
          return new Fi();
        }
        static exists(e) {
          return new Fi(void 0, e);
        }
        static updateTime(e) {
          return new Fi(e);
        }
        get isNone() {
          return void 0 === this.updateTime && void 0 === this.exists;
        }
        isEqual(e) {
          return (
            this.exists === e.exists &&
            (this.updateTime ? !!e.updateTime && this.updateTime.isEqual(e.updateTime) : !e.updateTime)
          );
        }
      }
      function go(n, e) {
        return void 0 !== n.updateTime
          ? e.isFoundDocument() && e.version.isEqual(n.updateTime)
          : void 0 === n.exists || n.exists === e.isFoundDocument();
      }
      class _l {}
      function Gf(n, e, t) {
        n instanceof zl
          ? (function (i, o, c) {
              const p = i.value.clone(),
                C = Xd(i.fieldTransforms, o, c.transformResults);
              p.setAll(C), o.convertToFoundDocument(c.version, p).setHasCommittedMutations();
            })(n, e, t)
          : n instanceof yl
          ? (function (i, o, c) {
              if (!go(i.precondition, o)) return void o.convertToUnknownDocument(c.version);
              const p = Xd(i.fieldTransforms, o, c.transformResults),
                C = o.data;
              C.setAll(dd(i)), C.setAll(p), o.convertToFoundDocument(c.version, C).setHasCommittedMutations();
            })(n, e, t)
          : e.convertToNoDocument(t.version).setHasCommittedMutations();
      }
      function Va(n, e, t) {
        var o;
        n instanceof zl
          ? (function (i, o, c) {
              if (!go(i.precondition, o)) return;
              const p = i.value.clone(),
                C = jh(i.fieldTransforms, c, o);
              p.setAll(C), o.convertToFoundDocument(ud(o), p).setHasLocalMutations();
            })(n, e, t)
          : n instanceof yl
          ? (function (i, o, c) {
              if (!go(i.precondition, o)) return;
              const p = jh(i.fieldTransforms, c, o),
                C = o.data;
              C.setAll(dd(i)), C.setAll(p), o.convertToFoundDocument(ud(o), C).setHasLocalMutations();
            })(n, e, t)
          : go(n.precondition, (o = e)) && o.convertToNoDocument(Si.min());
      }
      function ld(n, e) {
        let t = null;
        for (const i of n.fieldTransforms) {
          const o = e.data.field(i.field),
            c = D(i.transform, o || null);
          null != c && (null == t && (t = os.empty()), t.set(i.field, c));
        }
        return t || null;
      }
      function cd(n, e) {
        return (
          n.type === e.type &&
          !!n.key.isEqual(e.key) &&
          !!n.precondition.isEqual(e.precondition) &&
          ((i = e.fieldTransforms),
          !!(
            (void 0 === (t = n.fieldTransforms) && void 0 === i) ||
            (t &&
              i &&
              zc(t, i, (o, c) =>
                (function wi(n, e) {
                  return (
                    n.field.isEqual(e.field) &&
                    ((i = e.transform),
                    ((t = n.transform) instanceof v && i instanceof v) || (t instanceof Q && i instanceof Q)
                      ? zc(t.elements, i.elements, fl)
                      : t instanceof Lt && i instanceof Lt
                      ? fl(t.N, i.N)
                      : t instanceof _ && i instanceof _)
                  );
                  var t, i;
                })(o, c)
              ))
          )) &&
          (0 === n.type
            ? n.value.isEqual(e.value)
            : 1 !== n.type || (n.data.isEqual(e.data) && n.fieldMask.isEqual(e.fieldMask)))
        );
        var t, i;
      }
      function ud(n) {
        return n.isFoundDocument() ? n.version : Si.min();
      }
      class zl extends _l {
        constructor(e, t, i, o = []) {
          super(),
            (this.key = e),
            (this.value = t),
            (this.precondition = i),
            (this.fieldTransforms = o),
            (this.type = 0);
        }
      }
      class yl extends _l {
        constructor(e, t, i, o, c = []) {
          super(),
            (this.key = e),
            (this.data = t),
            (this.fieldMask = i),
            (this.precondition = o),
            (this.fieldTransforms = c),
            (this.type = 1);
        }
      }
      function dd(n) {
        const e = new Map();
        return (
          n.fieldMask.fields.forEach((t) => {
            if (!t.isEmpty()) {
              const i = n.data.field(t);
              e.set(t, i);
            }
          }),
          e
        );
      }
      function Xd(n, e, t) {
        const i = new Map();
        xi(n.length === t.length);
        for (let o = 0; o < t.length; o++) {
          const c = n[o],
            p = c.transform,
            C = e.data.field(c.field);
          i.set(c.field, ua(p, C, t[o]));
        }
        return i;
      }
      function jh(n, e, t) {
        const i = new Map();
        for (const o of n) {
          const c = o.transform,
            p = t.data.field(o.field);
          i.set(o.field, Iu(c, p, e));
        }
        return i;
      }
      class eu extends _l {
        constructor(e, t) {
          super(), (this.key = e), (this.precondition = t), (this.type = 2), (this.fieldTransforms = []);
        }
      }
      class Jd extends _l {
        constructor(e, t) {
          super(), (this.key = e), (this.precondition = t), (this.type = 3), (this.fieldTransforms = []);
        }
      }
      class Em {
        constructor(e) {
          this.count = e;
        }
      }
      var to, dr;
      function zf(n) {
        switch (n) {
          default:
            return ii();
          case rn.CANCELLED:
          case rn.UNKNOWN:
          case rn.DEADLINE_EXCEEDED:
          case rn.RESOURCE_EXHAUSTED:
          case rn.INTERNAL:
          case rn.UNAVAILABLE:
          case rn.UNAUTHENTICATED:
            return !1;
          case rn.INVALID_ARGUMENT:
          case rn.NOT_FOUND:
          case rn.ALREADY_EXISTS:
          case rn.PERMISSION_DENIED:
          case rn.FAILED_PRECONDITION:
          case rn.ABORTED:
          case rn.OUT_OF_RANGE:
          case rn.UNIMPLEMENTED:
          case rn.DATA_LOSS:
            return !0;
        }
      }
      function y_(n) {
        if (void 0 === n) return Js('GRPC error has no .code'), rn.UNKNOWN;
        switch (n) {
          case to.OK:
            return rn.OK;
          case to.CANCELLED:
            return rn.CANCELLED;
          case to.UNKNOWN:
            return rn.UNKNOWN;
          case to.DEADLINE_EXCEEDED:
            return rn.DEADLINE_EXCEEDED;
          case to.RESOURCE_EXHAUSTED:
            return rn.RESOURCE_EXHAUSTED;
          case to.INTERNAL:
            return rn.INTERNAL;
          case to.UNAVAILABLE:
            return rn.UNAVAILABLE;
          case to.UNAUTHENTICATED:
            return rn.UNAUTHENTICATED;
          case to.INVALID_ARGUMENT:
            return rn.INVALID_ARGUMENT;
          case to.NOT_FOUND:
            return rn.NOT_FOUND;
          case to.ALREADY_EXISTS:
            return rn.ALREADY_EXISTS;
          case to.PERMISSION_DENIED:
            return rn.PERMISSION_DENIED;
          case to.FAILED_PRECONDITION:
            return rn.FAILED_PRECONDITION;
          case to.ABORTED:
            return rn.ABORTED;
          case to.OUT_OF_RANGE:
            return rn.OUT_OF_RANGE;
          case to.UNIMPLEMENTED:
            return rn.UNIMPLEMENTED;
          case to.DATA_LOSS:
            return rn.DATA_LOSS;
          default:
            return ii();
        }
      }
      ((dr = to || (to = {}))[(dr.OK = 0)] = 'OK'),
        (dr[(dr.CANCELLED = 1)] = 'CANCELLED'),
        (dr[(dr.UNKNOWN = 2)] = 'UNKNOWN'),
        (dr[(dr.INVALID_ARGUMENT = 3)] = 'INVALID_ARGUMENT'),
        (dr[(dr.DEADLINE_EXCEEDED = 4)] = 'DEADLINE_EXCEEDED'),
        (dr[(dr.NOT_FOUND = 5)] = 'NOT_FOUND'),
        (dr[(dr.ALREADY_EXISTS = 6)] = 'ALREADY_EXISTS'),
        (dr[(dr.PERMISSION_DENIED = 7)] = 'PERMISSION_DENIED'),
        (dr[(dr.UNAUTHENTICATED = 16)] = 'UNAUTHENTICATED'),
        (dr[(dr.RESOURCE_EXHAUSTED = 8)] = 'RESOURCE_EXHAUSTED'),
        (dr[(dr.FAILED_PRECONDITION = 9)] = 'FAILED_PRECONDITION'),
        (dr[(dr.ABORTED = 10)] = 'ABORTED'),
        (dr[(dr.OUT_OF_RANGE = 11)] = 'OUT_OF_RANGE'),
        (dr[(dr.UNIMPLEMENTED = 12)] = 'UNIMPLEMENTED'),
        (dr[(dr.INTERNAL = 13)] = 'INTERNAL'),
        (dr[(dr.UNAVAILABLE = 14)] = 'UNAVAILABLE'),
        (dr[(dr.DATA_LOSS = 15)] = 'DATA_LOSS');
      class So {
        constructor(e, t) {
          (this.comparator = e), (this.root = t || Go.EMPTY);
        }
        insert(e, t) {
          return new So(
            this.comparator,
            this.root.insert(e, t, this.comparator).copy(null, null, Go.BLACK, null, null)
          );
        }
        remove(e) {
          return new So(this.comparator, this.root.remove(e, this.comparator).copy(null, null, Go.BLACK, null, null));
        }
        get(e) {
          let t = this.root;
          for (; !t.isEmpty(); ) {
            const i = this.comparator(e, t.key);
            if (0 === i) return t.value;
            i < 0 ? (t = t.left) : i > 0 && (t = t.right);
          }
          return null;
        }
        indexOf(e) {
          let t = 0,
            i = this.root;
          for (; !i.isEmpty(); ) {
            const o = this.comparator(e, i.key);
            if (0 === o) return t + i.left.size;
            o < 0 ? (i = i.left) : ((t += i.left.size + 1), (i = i.right));
          }
          return -1;
        }
        isEmpty() {
          return this.root.isEmpty();
        }
        get size() {
          return this.root.size;
        }
        minKey() {
          return this.root.minKey();
        }
        maxKey() {
          return this.root.maxKey();
        }
        inorderTraversal(e) {
          return this.root.inorderTraversal(e);
        }
        forEach(e) {
          this.inorderTraversal((t, i) => (e(t, i), !1));
        }
        toString() {
          const e = [];
          return this.inorderTraversal((t, i) => (e.push(`${t}:${i}`), !1)), `{${e.join(', ')}}`;
        }
        reverseTraversal(e) {
          return this.root.reverseTraversal(e);
        }
        getIterator() {
          return new Hh(this.root, null, this.comparator, !1);
        }
        getIteratorFrom(e) {
          return new Hh(this.root, e, this.comparator, !1);
        }
        getReverseIterator() {
          return new Hh(this.root, null, this.comparator, !0);
        }
        getReverseIteratorFrom(e) {
          return new Hh(this.root, e, this.comparator, !0);
        }
      }
      class Hh {
        constructor(e, t, i, o) {
          (this.isReverse = o), (this.nodeStack = []);
          let c = 1;
          for (; !e.isEmpty(); )
            if (((c = t ? i(e.key, t) : 1), o && (c *= -1), c < 0)) e = this.isReverse ? e.left : e.right;
            else {
              if (0 === c) {
                this.nodeStack.push(e);
                break;
              }
              this.nodeStack.push(e), (e = this.isReverse ? e.right : e.left);
            }
        }
        getNext() {
          let e = this.nodeStack.pop();
          const t = { key: e.key, value: e.value };
          if (this.isReverse) for (e = e.left; !e.isEmpty(); ) this.nodeStack.push(e), (e = e.right);
          else for (e = e.right; !e.isEmpty(); ) this.nodeStack.push(e), (e = e.left);
          return t;
        }
        hasNext() {
          return this.nodeStack.length > 0;
        }
        peek() {
          if (0 === this.nodeStack.length) return null;
          const e = this.nodeStack[this.nodeStack.length - 1];
          return { key: e.key, value: e.value };
        }
      }
      class Go {
        constructor(e, t, i, o, c) {
          (this.key = e),
            (this.value = t),
            (this.color = null != i ? i : Go.RED),
            (this.left = null != o ? o : Go.EMPTY),
            (this.right = null != c ? c : Go.EMPTY),
            (this.size = this.left.size + 1 + this.right.size);
        }
        copy(e, t, i, o, c) {
          return new Go(
            null != e ? e : this.key,
            null != t ? t : this.value,
            null != i ? i : this.color,
            null != o ? o : this.left,
            null != c ? c : this.right
          );
        }
        isEmpty() {
          return !1;
        }
        inorderTraversal(e) {
          return this.left.inorderTraversal(e) || e(this.key, this.value) || this.right.inorderTraversal(e);
        }
        reverseTraversal(e) {
          return this.right.reverseTraversal(e) || e(this.key, this.value) || this.left.reverseTraversal(e);
        }
        min() {
          return this.left.isEmpty() ? this : this.left.min();
        }
        minKey() {
          return this.min().key;
        }
        maxKey() {
          return this.right.isEmpty() ? this.key : this.right.maxKey();
        }
        insert(e, t, i) {
          let o = this;
          const c = i(e, o.key);
          return (
            (o =
              c < 0
                ? o.copy(null, null, null, o.left.insert(e, t, i), null)
                : 0 === c
                ? o.copy(null, t, null, null, null)
                : o.copy(null, null, null, null, o.right.insert(e, t, i))),
            o.fixUp()
          );
        }
        removeMin() {
          if (this.left.isEmpty()) return Go.EMPTY;
          let e = this;
          return (
            e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()),
            (e = e.copy(null, null, null, e.left.removeMin(), null)),
            e.fixUp()
          );
        }
        remove(e, t) {
          let i,
            o = this;
          if (t(e, o.key) < 0)
            o.left.isEmpty() || o.left.isRed() || o.left.left.isRed() || (o = o.moveRedLeft()),
              (o = o.copy(null, null, null, o.left.remove(e, t), null));
          else {
            if (
              (o.left.isRed() && (o = o.rotateRight()),
              o.right.isEmpty() || o.right.isRed() || o.right.left.isRed() || (o = o.moveRedRight()),
              0 === t(e, o.key))
            ) {
              if (o.right.isEmpty()) return Go.EMPTY;
              (i = o.right.min()), (o = o.copy(i.key, i.value, null, null, o.right.removeMin()));
            }
            o = o.copy(null, null, null, null, o.right.remove(e, t));
          }
          return o.fixUp();
        }
        isRed() {
          return this.color;
        }
        fixUp() {
          let e = this;
          return (
            e.right.isRed() && !e.left.isRed() && (e = e.rotateLeft()),
            e.left.isRed() && e.left.left.isRed() && (e = e.rotateRight()),
            e.left.isRed() && e.right.isRed() && (e = e.colorFlip()),
            e
          );
        }
        moveRedLeft() {
          let e = this.colorFlip();
          return (
            e.right.left.isRed() &&
              ((e = e.copy(null, null, null, null, e.right.rotateRight())), (e = e.rotateLeft()), (e = e.colorFlip())),
            e
          );
        }
        moveRedRight() {
          let e = this.colorFlip();
          return e.left.left.isRed() && ((e = e.rotateRight()), (e = e.colorFlip())), e;
        }
        rotateLeft() {
          const e = this.copy(null, null, Go.RED, null, this.right.left);
          return this.right.copy(null, null, this.color, e, null);
        }
        rotateRight() {
          const e = this.copy(null, null, Go.RED, this.left.right, null);
          return this.left.copy(null, null, this.color, null, e);
        }
        colorFlip() {
          const e = this.left.copy(null, null, !this.left.color, null, null),
            t = this.right.copy(null, null, !this.right.color, null, null);
          return this.copy(null, null, !this.color, e, t);
        }
        checkMaxDepth() {
          const e = this.check();
          return Math.pow(2, e) <= this.size + 1;
        }
        check() {
          if ((this.isRed() && this.left.isRed()) || this.right.isRed()) throw ii();
          const e = this.left.check();
          if (e !== this.right.check()) throw ii();
          return e + (this.isRed() ? 0 : 1);
        }
      }
      (Go.EMPTY = null),
        (Go.RED = !0),
        (Go.BLACK = !1),
        (Go.EMPTY = new (class {
          constructor() {
            this.size = 0;
          }
          get key() {
            throw ii();
          }
          get value() {
            throw ii();
          }
          get color() {
            throw ii();
          }
          get left() {
            throw ii();
          }
          get right() {
            throw ii();
          }
          copy(n, e, t, i, o) {
            return this;
          }
          insert(n, e, t) {
            return new Go(n, e);
          }
          remove(n, e) {
            return this;
          }
          isEmpty() {
            return !0;
          }
          inorderTraversal(n) {
            return !1;
          }
          reverseTraversal(n) {
            return !1;
          }
          minKey() {
            return null;
          }
          maxKey() {
            return null;
          }
          isRed() {
            return !1;
          }
          checkMaxDepth() {
            return !0;
          }
          check() {
            return 0;
          }
        })());
      class $r {
        constructor(e) {
          (this.comparator = e), (this.data = new So(this.comparator));
        }
        has(e) {
          return null !== this.data.get(e);
        }
        first() {
          return this.data.minKey();
        }
        last() {
          return this.data.maxKey();
        }
        get size() {
          return this.data.size;
        }
        indexOf(e) {
          return this.data.indexOf(e);
        }
        forEach(e) {
          this.data.inorderTraversal((t, i) => (e(t), !1));
        }
        forEachInRange(e, t) {
          const i = this.data.getIteratorFrom(e[0]);
          for (; i.hasNext(); ) {
            const o = i.getNext();
            if (this.comparator(o.key, e[1]) >= 0) return;
            t(o.key);
          }
        }
        forEachWhile(e, t) {
          let i;
          for (i = void 0 !== t ? this.data.getIteratorFrom(t) : this.data.getIterator(); i.hasNext(); )
            if (!e(i.getNext().key)) return;
        }
        firstAfterOrEqual(e) {
          const t = this.data.getIteratorFrom(e);
          return t.hasNext() ? t.getNext().key : null;
        }
        getIterator() {
          return new xm(this.data.getIterator());
        }
        getIteratorFrom(e) {
          return new xm(this.data.getIteratorFrom(e));
        }
        add(e) {
          return this.copy(this.data.remove(e).insert(e, !0));
        }
        delete(e) {
          return this.has(e) ? this.copy(this.data.remove(e)) : this;
        }
        isEmpty() {
          return this.data.isEmpty();
        }
        unionWith(e) {
          let t = this;
          return (
            t.size < e.size && ((t = e), (e = this)),
            e.forEach((i) => {
              t = t.add(i);
            }),
            t
          );
        }
        isEqual(e) {
          if (!(e instanceof $r) || this.size !== e.size) return !1;
          const t = this.data.getIterator(),
            i = e.data.getIterator();
          for (; t.hasNext(); ) {
            const o = t.getNext().key,
              c = i.getNext().key;
            if (0 !== this.comparator(o, c)) return !1;
          }
          return !0;
        }
        toArray() {
          const e = [];
          return (
            this.forEach((t) => {
              e.push(t);
            }),
            e
          );
        }
        toString() {
          const e = [];
          return this.forEach((t) => e.push(t)), 'SortedSet(' + e.toString() + ')';
        }
        copy(e) {
          const t = new $r(this.comparator);
          return (t.data = e), t;
        }
      }
      class xm {
        constructor(e) {
          this.iter = e;
        }
        getNext() {
          return this.iter.getNext().key;
        }
        hasNext() {
          return this.iter.hasNext();
        }
      }
      const v_ = new So(ui.comparator);
      function vl() {
        return v_;
      }
      const $f = new So(ui.comparator);
      function Dm() {
        return $f;
      }
      const b_ = new So(ui.comparator);
      function Wf() {
        return b_;
      }
      const Mm = new $r(ui.comparator);
      function Dr(...n) {
        let e = Mm;
        for (const t of n) e = e.add(t);
        return e;
      }
      const C_ = new $r(Ji);
      function hd() {
        return C_;
      }
      class Ru {
        constructor(e, t, i, o, c) {
          (this.snapshotVersion = e),
            (this.targetChanges = t),
            (this.targetMismatches = i),
            (this.documentUpdates = o),
            (this.resolvedLimboDocuments = c);
        }
        static createSynthesizedRemoteEventForCurrentChange(e, t) {
          const i = new Map();
          return (
            i.set(e, eh.createSynthesizedTargetChangeForCurrentChange(e, t)), new Ru(Si.min(), i, hd(), vl(), Dr())
          );
        }
      }
      class eh {
        constructor(e, t, i, o, c) {
          (this.resumeToken = e),
            (this.current = t),
            (this.addedDocuments = i),
            (this.modifiedDocuments = o),
            (this.removedDocuments = c);
        }
        static createSynthesizedTargetChangeForCurrentChange(e, t) {
          return new eh(Qr.EMPTY_BYTE_STRING, t, Dr(), Dr(), Dr());
        }
      }
      class fd {
        constructor(e, t, i, o) {
          (this.$ = e), (this.removedTargetIds = t), (this.key = i), (this.O = o);
        }
      }
      class Sm {
        constructor(e, t) {
          (this.targetId = e), (this.M = t);
        }
      }
      class Yf {
        constructor(e, t, i = Qr.EMPTY_BYTE_STRING, o = null) {
          (this.state = e), (this.targetIds = t), (this.resumeToken = i), (this.cause = o);
        }
      }
      class th {
        constructor() {
          (this.F = 0), (this.L = w_()), (this.B = Qr.EMPTY_BYTE_STRING), (this.U = !1), (this.q = !0);
        }
        get current() {
          return this.U;
        }
        get resumeToken() {
          return this.B;
        }
        get K() {
          return 0 !== this.F;
        }
        get j() {
          return this.q;
        }
        W(e) {
          e.approximateByteSize() > 0 && ((this.q = !0), (this.B = e));
        }
        G() {
          let e = Dr(),
            t = Dr(),
            i = Dr();
          return (
            this.L.forEach((o, c) => {
              switch (c) {
                case 0:
                  e = e.add(o);
                  break;
                case 2:
                  t = t.add(o);
                  break;
                case 1:
                  i = i.add(o);
                  break;
                default:
                  ii();
              }
            }),
            new eh(this.B, this.U, e, t, i)
          );
        }
        H() {
          (this.q = !1), (this.L = w_());
        }
        J(e, t) {
          (this.q = !0), (this.L = this.L.insert(e, t));
        }
        Y(e) {
          (this.q = !0), (this.L = this.L.remove(e));
        }
        X() {
          this.F += 1;
        }
        Z() {
          this.F -= 1;
        }
        tt() {
          (this.q = !0), (this.U = !0);
        }
      }
      class Ob {
        constructor(e) {
          (this.et = e), (this.nt = new Map()), (this.st = vl()), (this.it = Am()), (this.rt = new $r(Ji));
        }
        ot(e) {
          for (const t of e.$) e.O && e.O.isFoundDocument() ? this.ct(t, e.O) : this.at(t, e.key, e.O);
          for (const t of e.removedTargetIds) this.at(t, e.key, e.O);
        }
        ut(e) {
          this.forEachTarget(e, (t) => {
            const i = this.ht(t);
            switch (e.state) {
              case 0:
                this.lt(t) && i.W(e.resumeToken);
                break;
              case 1:
                i.Z(), i.K || i.H(), i.W(e.resumeToken);
                break;
              case 2:
                i.Z(), i.K || this.removeTarget(t);
                break;
              case 3:
                this.lt(t) && (i.tt(), i.W(e.resumeToken));
                break;
              case 4:
                this.lt(t) && (this.ft(t), i.W(e.resumeToken));
                break;
              default:
                ii();
            }
          });
        }
        forEachTarget(e, t) {
          e.targetIds.length > 0
            ? e.targetIds.forEach(t)
            : this.nt.forEach((i, o) => {
                this.lt(o) && t(o);
              });
        }
        dt(e) {
          const t = e.targetId,
            i = e.M.count,
            o = this.wt(t);
          if (o) {
            const c = o.target;
            if (il(c))
              if (0 === i) {
                const p = new ui(c.path);
                this.at(t, p, xr.newNoDocument(p, Si.min()));
              } else xi(1 === i);
            else this._t(t) !== i && (this.ft(t), (this.rt = this.rt.add(t)));
          }
        }
        gt(e) {
          const t = new Map();
          this.nt.forEach((c, p) => {
            const C = this.wt(p);
            if (C) {
              if (c.current && il(C.target)) {
                const I = new ui(C.target.path);
                null !== this.st.get(I) || this.yt(p, I) || this.at(p, I, xr.newNoDocument(I, e));
              }
              c.j && (t.set(p, c.G()), c.H());
            }
          });
          let i = Dr();
          this.it.forEach((c, p) => {
            let C = !0;
            p.forEachWhile((I) => {
              const U = this.wt(I);
              return !U || 2 === U.purpose || ((C = !1), !1);
            }),
              C && (i = i.add(c));
          });
          const o = new Ru(e, t, this.rt, this.st, i);
          return (this.st = vl()), (this.it = Am()), (this.rt = new $r(Ji)), o;
        }
        ct(e, t) {
          if (!this.lt(e)) return;
          const i = this.yt(e, t.key) ? 2 : 0;
          this.ht(e).J(t.key, i),
            (this.st = this.st.insert(t.key, t)),
            (this.it = this.it.insert(t.key, this.Tt(t.key).add(e)));
        }
        at(e, t, i) {
          if (!this.lt(e)) return;
          const o = this.ht(e);
          this.yt(e, t) ? o.J(t, 1) : o.Y(t),
            (this.it = this.it.insert(t, this.Tt(t).delete(e))),
            i && (this.st = this.st.insert(t, i));
        }
        removeTarget(e) {
          this.nt.delete(e);
        }
        _t(e) {
          const t = this.ht(e).G();
          return this.et.getRemoteKeysForTarget(e).size + t.addedDocuments.size - t.removedDocuments.size;
        }
        X(e) {
          this.ht(e).X();
        }
        ht(e) {
          let t = this.nt.get(e);
          return t || ((t = new th()), this.nt.set(e, t)), t;
        }
        Tt(e) {
          let t = this.it.get(e);
          return t || ((t = new $r(Ji)), (this.it = this.it.insert(e, t))), t;
        }
        lt(e) {
          const t = null !== this.wt(e);
          return t || In('WatchChangeAggregator', 'Detected inactive target', e), t;
        }
        wt(e) {
          const t = this.nt.get(e);
          return t && t.K ? null : this.et.Et(e);
        }
        ft(e) {
          this.nt.set(e, new th()),
            this.et.getRemoteKeysForTarget(e).forEach((t) => {
              this.at(e, t, null);
            });
        }
        yt(e, t) {
          return this.et.getRemoteKeysForTarget(e).has(t);
        }
      }
      function Am() {
        return new So(ui.comparator);
      }
      function w_() {
        return new So(ui.comparator);
      }
      const Pb = { asc: 'ASCENDING', desc: 'DESCENDING' },
        E_ = {
          '<': 'LESS_THAN',
          '<=': 'LESS_THAN_OR_EQUAL',
          '>': 'GREATER_THAN',
          '>=': 'GREATER_THAN_OR_EQUAL',
          '==': 'EQUAL',
          '!=': 'NOT_EQUAL',
          'array-contains': 'ARRAY_CONTAINS',
          in: 'IN',
          'not-in': 'NOT_IN',
          'array-contains-any': 'ARRAY_CONTAINS_ANY',
        };
      class Tm {
        constructor(e, t) {
          (this.databaseId = e), (this.C = t);
        }
      }
      function nh(n, e) {
        return n.C
          ? `${new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, '').replace('Z', '')}.${(
              '000000000' + e.nanoseconds
            ).slice(-9)}Z`
          : { seconds: '' + e.seconds, nanos: e.nanoseconds };
      }
      function Fb(n, e) {
        return n.C ? e.toBase64() : e.toUint8Array();
      }
      function x_(n, e) {
        return nh(n, e.toTimestamp());
      }
      function zo(n) {
        return (
          xi(!!n),
          Si.fromTimestamp(
            (function (e) {
              const t = la(e);
              return new eo(t.seconds, t.nanos);
            })(n)
          )
        );
      }
      function Kf(n, e) {
        return ((t = n), new vr(['projects', t.projectId, 'databases', t.database]))
          .child('documents')
          .child(e)
          .canonicalString();
        var t;
      }
      function D_(n) {
        const e = vr.fromString(n);
        return xi(Bb(e)), e;
      }
      function Gh(n, e) {
        return Kf(n.databaseId, e.path);
      }
      function _o(n, e) {
        const t = D_(e);
        if (t.get(1) !== n.databaseId.projectId)
          throw new En(
            rn.INVALID_ARGUMENT,
            'Tried to deserialize key from different project: ' + t.get(1) + ' vs ' + n.databaseId.projectId
          );
        if (t.get(3) !== n.databaseId.database)
          throw new En(
            rn.INVALID_ARGUMENT,
            'Tried to deserialize key from different database: ' + t.get(3) + ' vs ' + n.databaseId.database
          );
        return new ui(M_(t));
      }
      function Im(n, e) {
        return Kf(n.databaseId, e);
      }
      function Rm(n) {
        const e = D_(n);
        return 4 === e.length ? vr.emptyPath() : M_(e);
      }
      function zh(n) {
        return new vr(['projects', n.databaseId.projectId, 'databases', n.databaseId.database]).canonicalString();
      }
      function M_(n) {
        return xi(n.length > 4 && 'documents' === n.get(4)), n.popFirst(5);
      }
      function S_(n, e, t) {
        return { name: Gh(n, e), fields: t.value.mapValue.fields };
      }
      function A_(n, e, t) {
        const i = _o(n, e.name),
          o = zo(e.updateTime),
          c = new os({ mapValue: { fields: e.fields } }),
          p = xr.newFoundDocument(i, o, c);
        return t && p.setHasCommittedMutations(), t ? p.setHasCommittedMutations() : p;
      }
      function qf(n, e) {
        let t;
        if (e instanceof zl) t = { update: S_(n, e.key, e.value) };
        else if (e instanceof eu) t = { delete: Gh(n, e.key) };
        else if (e instanceof yl) t = { update: S_(n, e.key, e.data), updateMask: ih(e.fieldMask) };
        else {
          if (!(e instanceof Jd)) return ii();
          t = { verify: Gh(n, e.key) };
        }
        return (
          e.fieldTransforms.length > 0 &&
            (t.updateTransforms = e.fieldTransforms.map((i) =>
              (function (o, c) {
                const p = c.transform;
                if (p instanceof _) return { fieldPath: c.field.canonicalString(), setToServerValue: 'REQUEST_TIME' };
                if (p instanceof v)
                  return { fieldPath: c.field.canonicalString(), appendMissingElements: { values: p.elements } };
                if (p instanceof Q)
                  return { fieldPath: c.field.canonicalString(), removeAllFromArray: { values: p.elements } };
                if (p instanceof Lt) return { fieldPath: c.field.canonicalString(), increment: p.N };
                throw ii();
              })(0, i)
            )),
          e.precondition.isNone ||
            (t.currentDocument =
              void 0 !== (o = e.precondition).updateTime
                ? { updateTime: x_(n, o.updateTime) }
                : void 0 !== o.exists
                ? { exists: o.exists }
                : ii()),
          t
        );
        var o;
      }
      function I_(n, e) {
        const t = e.currentDocument
            ? void 0 !== (o = e.currentDocument).updateTime
              ? Fi.updateTime(zo(o.updateTime))
              : void 0 !== o.exists
              ? Fi.exists(o.exists)
              : Fi.none()
            : Fi.none(),
          i = e.updateTransforms
            ? e.updateTransforms.map((o) =>
                (function (c, p) {
                  let C = null;
                  'setToServerValue' in p
                    ? (xi('REQUEST_TIME' === p.setToServerValue), (C = new _()))
                    : 'appendMissingElements' in p
                    ? (C = new v(p.appendMissingElements.values || []))
                    : 'removeAllFromArray' in p
                    ? (C = new Q(p.removeAllFromArray.values || []))
                    : 'increment' in p
                    ? (C = new Lt(c, p.increment))
                    : ii();
                  const I = Pr.fromServerFormat(p.fieldPath);
                  return new Kn(I, C);
                })(n, o)
              )
            : [];
        var o;
        if (e.update) {
          const o = _o(n, e.update.name),
            c = new os({ mapValue: { fields: e.update.fields } });
          if (e.updateMask) {
            const p = new pc((e.updateMask.fieldPaths || []).map((U) => Pr.fromServerFormat(U)));
            return new yl(o, c, p, t, i);
          }
          return new zl(o, c, t, i);
        }
        if (e.delete) {
          const o = _o(n, e.delete);
          return new eu(o, t);
        }
        if (e.verify) {
          const o = _o(n, e.verify);
          return new Jd(o, t);
        }
        return ii();
      }
      function km(n, e) {
        return { documents: [Im(n, e.path)] };
      }
      function Om(n, e) {
        const t = { structuredQuery: {} },
          i = e.path;
        null !== e.collectionGroup
          ? ((t.parent = Im(n, i)),
            (t.structuredQuery.from = [{ collectionId: e.collectionGroup, allDescendants: !0 }]))
          : ((t.parent = Im(n, i.popLast())), (t.structuredQuery.from = [{ collectionId: i.lastSegment() }]));
        const o = (function (C) {
          if (0 === C.length) return;
          const I = C.map((U) =>
            (function (se) {
              if ('==' === se.op) {
                if (Lh(se.value)) return { unaryFilter: { field: ku(se.field), op: 'IS_NAN' } };
                if (zr(se.value)) return { unaryFilter: { field: ku(se.field), op: 'IS_NULL' } };
              } else if ('!=' === se.op) {
                if (Lh(se.value)) return { unaryFilter: { field: ku(se.field), op: 'IS_NOT_NAN' } };
                if (zr(se.value)) return { unaryFilter: { field: ku(se.field), op: 'IS_NOT_NULL' } };
              }
              return { fieldFilter: { field: ku(se.field), op: tu(se.op), value: se.value } };
            })(U)
          );
          return 1 === I.length ? I[0] : { compositeFilter: { op: 'AND', filters: I } };
        })(e.filters);
        o && (t.structuredQuery.where = o);
        const c = (function (C) {
          if (0 !== C.length)
            return C.map((I) => {
              return { field: ku((U = I).field), direction: Lm(U.dir) };
              var U;
            });
        })(e.orderBy);
        c && (t.structuredQuery.orderBy = c);
        const p = ((I = e.limit), n.C || nl(I) ? I : { value: I });
        var I;
        return (
          null !== p && (t.structuredQuery.limit = p),
          e.startAt && (t.structuredQuery.startAt = Qf(e.startAt)),
          e.endAt && (t.structuredQuery.endAt = Qf(e.endAt)),
          t
        );
      }
      function Pm(n) {
        let e = Rm(n.parent);
        const t = n.structuredQuery,
          i = t.from ? t.from.length : 0;
        let o = null;
        if (i > 0) {
          xi(1 === i);
          const se = t.from[0];
          se.allDescendants ? (o = se.collectionId) : (e = e.child(se.collectionId));
        }
        let c = [];
        t.where && (c = bl(t.where));
        let p = [];
        t.orderBy &&
          (p = t.orderBy.map((se) => {
            return new yc(
              $l((xe = se).field),
              (function (rt) {
                switch (rt) {
                  case 'ASCENDING':
                    return 'asc';
                  case 'DESCENDING':
                    return 'desc';
                  default:
                    return;
                }
              })(xe.direction)
            );
            var xe;
          }));
        let C = null;
        t.limit &&
          (C = (function (se) {
            let xe;
            return (xe = 'object' == typeof se ? se.value : se), nl(xe) ? null : xe;
          })(t.limit));
        let I = null;
        t.startAt && (I = Fm(t.startAt));
        let U = null;
        return t.endAt && (U = Fm(t.endAt)), Su(e, o, p, c, C, 'F', I, U);
      }
      function bl(n) {
        return n
          ? void 0 !== n.unaryFilter
            ? [Nb(n)]
            : void 0 !== n.fieldFilter
            ? [Ou(n)]
            : void 0 !== n.compositeFilter
            ? n.compositeFilter.filters.map((e) => bl(e)).reduce((e, t) => e.concat(t))
            : ii()
          : [];
      }
      function Qf(n) {
        return { before: n.before, values: n.position };
      }
      function Fm(n) {
        return new xs(n.values || [], !!n.before);
      }
      function Lm(n) {
        return Pb[n];
      }
      function tu(n) {
        return E_[n];
      }
      function ku(n) {
        return { fieldPath: n.canonicalString() };
      }
      function $l(n) {
        return Pr.fromServerFormat(n.fieldPath);
      }
      function Ou(n) {
        return _r.create(
          $l(n.fieldFilter.field),
          (function (e) {
            switch (e) {
              case 'EQUAL':
                return '==';
              case 'NOT_EQUAL':
                return '!=';
              case 'GREATER_THAN':
                return '>';
              case 'GREATER_THAN_OR_EQUAL':
                return '>=';
              case 'LESS_THAN':
                return '<';
              case 'LESS_THAN_OR_EQUAL':
                return '<=';
              case 'ARRAY_CONTAINS':
                return 'array-contains';
              case 'IN':
                return 'in';
              case 'NOT_IN':
                return 'not-in';
              case 'ARRAY_CONTAINS_ANY':
                return 'array-contains-any';
              default:
                return ii();
            }
          })(n.fieldFilter.op),
          n.fieldFilter.value
        );
      }
      function Nb(n) {
        switch (n.unaryFilter.op) {
          case 'IS_NAN':
            const e = $l(n.unaryFilter.field);
            return _r.create(e, '==', { doubleValue: NaN });
          case 'IS_NULL':
            const t = $l(n.unaryFilter.field);
            return _r.create(t, '==', { nullValue: 'NULL_VALUE' });
          case 'IS_NOT_NAN':
            const i = $l(n.unaryFilter.field);
            return _r.create(i, '!=', { doubleValue: NaN });
          case 'IS_NOT_NULL':
            const o = $l(n.unaryFilter.field);
            return _r.create(o, '!=', { nullValue: 'NULL_VALUE' });
          default:
            return ii();
        }
      }
      function ih(n) {
        const e = [];
        return n.fields.forEach((t) => e.push(t.canonicalString())), { fieldPaths: e };
      }
      function Bb(n) {
        return n.length >= 4 && 'projects' === n.get(0) && 'databases' === n.get(2);
      }
      function Ua(n) {
        let e = '';
        for (let t = 0; t < n.length; t++) e.length > 0 && (e = Jf(e)), (e = Xf(n.get(t), e));
        return Jf(e);
      }
      function Xf(n, e) {
        let t = e;
        const i = n.length;
        for (let o = 0; o < i; o++) {
          const c = n.charAt(o);
          switch (c) {
            case '\0':
              t += '\x01\x10';
              break;
            case '\x01':
              t += '\x01\x11';
              break;
            default:
              t += c;
          }
        }
        return t;
      }
      function Jf(n) {
        return n + '\x01\x01';
      }
      function Wl(n) {
        const e = n.length;
        if ((xi(e >= 2), 2 === e)) return xi('\x01' === n.charAt(0) && '\x01' === n.charAt(1)), vr.emptyPath();
        const t = e - 2,
          i = [];
        let o = '';
        for (let c = 0; c < e; ) {
          const p = n.indexOf('\x01', c);
          switch (((p < 0 || p > t) && ii(), n.charAt(p + 1))) {
            case '\x01':
              const C = n.substring(c, p);
              let I;
              0 === o.length ? (I = C) : ((o += C), (I = o), (o = '')), i.push(I);
              break;
            case '\x10':
              (o += n.substring(c, p)), (o += '\0');
              break;
            case '\x11':
              o += n.substring(c, p + 1);
              break;
            default:
              ii();
          }
          c = p + 2;
        }
        return new vr(i);
      }
      class Cl {
        constructor(e, t) {
          (this.seconds = e), (this.nanoseconds = t);
        }
      }
      class no {
        constructor(e, t, i) {
          (this.ownerId = e), (this.allowTabSynchronization = t), (this.leaseTimestampMs = i);
        }
      }
      (no.store = 'owner'), (no.key = 'owner');
      class nu {
        constructor(e, t, i) {
          (this.userId = e), (this.lastAcknowledgedBatchId = t), (this.lastStreamToken = i);
        }
      }
      (nu.store = 'mutationQueues'), (nu.keyPath = 'userId');
      class as {
        constructor(e, t, i, o, c) {
          (this.userId = e),
            (this.batchId = t),
            (this.localWriteTimeMs = i),
            (this.baseMutations = o),
            (this.mutations = c);
        }
      }
      (as.store = 'mutations'),
        (as.keyPath = 'batchId'),
        (as.userMutationsIndex = 'userMutationsIndex'),
        (as.userMutationsKeyPath = ['userId', 'batchId']);
      class Ao {
        constructor() {}
        static prefixForUser(e) {
          return [e];
        }
        static prefixForPath(e, t) {
          return [e, Ua(t)];
        }
        static key(e, t, i) {
          return [e, Ua(t), i];
        }
      }
      (Ao.store = 'documentMutations'), (Ao.PLACEHOLDER = new Ao());
      class R_ {
        constructor(e, t) {
          (this.path = e), (this.readTime = t);
        }
      }
      class $h {
        constructor(e, t) {
          (this.path = e), (this.version = t);
        }
      }
      class Ds {
        constructor(e, t, i, o, c, p) {
          (this.unknownDocument = e),
            (this.noDocument = t),
            (this.document = i),
            (this.hasCommittedMutations = o),
            (this.readTime = c),
            (this.parentPath = p);
        }
      }
      (Ds.store = 'remoteDocuments'),
        (Ds.readTimeIndex = 'readTimeIndex'),
        (Ds.readTimeIndexPath = 'readTime'),
        (Ds.collectionReadTimeIndex = 'collectionReadTimeIndex'),
        (Ds.collectionReadTimeIndexPath = ['parentPath', 'readTime']);
      class Cc {
        constructor(e) {
          this.byteSize = e;
        }
      }
      (Cc.store = 'remoteDocumentGlobal'), (Cc.key = 'remoteDocumentGlobalKey');
      class ja {
        constructor(e, t, i, o, c, p, C) {
          (this.targetId = e),
            (this.canonicalId = t),
            (this.readTime = i),
            (this.resumeToken = o),
            (this.lastListenSequenceNumber = c),
            (this.lastLimboFreeSnapshotVersion = p),
            (this.query = C);
        }
      }
      (ja.store = 'targets'),
        (ja.keyPath = 'targetId'),
        (ja.queryTargetsIndexName = 'queryTargetsIndex'),
        (ja.queryTargetsKeyPath = ['canonicalId', 'targetId']);
      class To {
        constructor(e, t, i) {
          (this.targetId = e), (this.path = t), (this.sequenceNumber = i);
        }
      }
      (To.store = 'targetDocuments'),
        (To.keyPath = ['targetId', 'path']),
        (To.documentTargetsIndex = 'documentTargetsIndex'),
        (To.documentTargetsKeyPath = ['path', 'targetId']);
      class Aa {
        constructor(e, t, i, o) {
          (this.highestTargetId = e),
            (this.highestListenSequenceNumber = t),
            (this.lastRemoteSnapshotVersion = i),
            (this.targetCount = o);
        }
      }
      (Aa.key = 'targetGlobalKey'), (Aa.store = 'targetGlobal');
      class Pu {
        constructor(e, t) {
          (this.collectionId = e), (this.parent = t);
        }
      }
      (Pu.store = 'collectionParents'), (Pu.keyPath = ['collectionId', 'parent']);
      class wl {
        constructor(e, t, i, o) {
          (this.clientId = e), (this.updateTimeMs = t), (this.networkEnabled = i), (this.inForeground = o);
        }
      }
      (wl.store = 'clientMetadata'), (wl.keyPath = 'clientId');
      class rh {
        constructor(e, t, i) {
          (this.bundleId = e), (this.createTime = t), (this.version = i);
        }
      }
      (rh.store = 'bundles'), (rh.keyPath = 'bundleId');
      class Fu {
        constructor(e, t, i) {
          (this.name = e), (this.readTime = t), (this.bundledQuery = i);
        }
      }
      (Fu.store = 'namedQueries'), (Fu.keyPath = 'name');
      const Vb = [
          nu.store,
          as.store,
          Ao.store,
          Ds.store,
          ja.store,
          no.store,
          Aa.store,
          To.store,
          wl.store,
          Cc.store,
          Pu.store,
          rh.store,
          Fu.store,
        ],
        k_ =
          'The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.';
      class Ub {
        constructor() {
          this.onCommittedListeners = [];
        }
        addOnCommittedListener(e) {
          this.onCommittedListeners.push(e);
        }
        raiseOnCommittedEvent() {
          this.onCommittedListeners.forEach((e) => e());
        }
      }
      class Dn {
        constructor(e) {
          (this.nextCallback = null),
            (this.catchCallback = null),
            (this.result = void 0),
            (this.error = void 0),
            (this.isDone = !1),
            (this.callbackAttached = !1),
            e(
              (t) => {
                (this.isDone = !0), (this.result = t), this.nextCallback && this.nextCallback(t);
              },
              (t) => {
                (this.isDone = !0), (this.error = t), this.catchCallback && this.catchCallback(t);
              }
            );
        }
        catch(e) {
          return this.next(void 0, e);
        }
        next(e, t) {
          return (
            this.callbackAttached && ii(),
            (this.callbackAttached = !0),
            this.isDone
              ? this.error
                ? this.wrapFailure(t, this.error)
                : this.wrapSuccess(e, this.result)
              : new Dn((i, o) => {
                  (this.nextCallback = (c) => {
                    this.wrapSuccess(e, c).next(i, o);
                  }),
                    (this.catchCallback = (c) => {
                      this.wrapFailure(t, c).next(i, o);
                    });
                })
          );
        }
        toPromise() {
          return new Promise((e, t) => {
            this.next(e, t);
          });
        }
        wrapUserFunction(e) {
          try {
            const t = e();
            return t instanceof Dn ? t : Dn.resolve(t);
          } catch (t) {
            return Dn.reject(t);
          }
        }
        wrapSuccess(e, t) {
          return e ? this.wrapUserFunction(() => e(t)) : Dn.resolve(t);
        }
        wrapFailure(e, t) {
          return e ? this.wrapUserFunction(() => e(t)) : Dn.reject(t);
        }
        static resolve(e) {
          return new Dn((t, i) => {
            t(e);
          });
        }
        static reject(e) {
          return new Dn((t, i) => {
            i(e);
          });
        }
        static waitFor(e) {
          return new Dn((t, i) => {
            let o = 0,
              c = 0,
              p = !1;
            e.forEach((C) => {
              ++o,
                C.next(
                  () => {
                    ++c, p && c === o && t();
                  },
                  (I) => i(I)
                );
            }),
              (p = !0),
              c === o && t();
          });
        }
        static or(e) {
          let t = Dn.resolve(!1);
          for (const i of e) t = t.next((o) => (o ? Dn.resolve(o) : i()));
          return t;
        }
        static forEach(e, t) {
          const i = [];
          return (
            e.forEach((o, c) => {
              i.push(t.call(this, o, c));
            }),
            this.waitFor(i)
          );
        }
      }
      class Nm {
        constructor(e, t) {
          (this.action = e),
            (this.transaction = t),
            (this.aborted = !1),
            (this.It = new ho()),
            (this.transaction.oncomplete = () => {
              this.It.resolve();
            }),
            (this.transaction.onabort = () => {
              t.error ? this.It.reject(new Wh(e, t.error)) : this.It.resolve();
            }),
            (this.transaction.onerror = (i) => {
              const o = T(i.target.error);
              this.It.reject(new Wh(e, o));
            });
        }
        static open(e, t, i, o) {
          try {
            return new Nm(t, e.transaction(o, i));
          } catch (c) {
            throw new Wh(t, c);
          }
        }
        get At() {
          return this.It.promise;
        }
        abort(e) {
          e && this.It.reject(e),
            this.aborted ||
              (In('SimpleDb', 'Aborting transaction:', e ? e.message : 'Client-initiated abort'),
              (this.aborted = !0),
              this.transaction.abort());
        }
        store(e) {
          const t = this.transaction.objectStore(e);
          return new w(t);
        }
      }
      class wc {
        constructor(e, t, i) {
          (this.name = e),
            (this.version = t),
            (this.Rt = i),
            12.2 === wc.bt((0, je.z$)()) &&
              Js(
                'Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.'
              );
        }
        static delete(e) {
          return In('SimpleDb', 'Removing database:', e), l(window.indexedDB.deleteDatabase(e)).toPromise();
        }
        static Pt() {
          if (!(0, je.hl)()) return !1;
          if (wc.vt()) return !0;
          const e = (0, je.z$)(),
            t = wc.bt(e),
            i = 0 < t && t < 10,
            o = wc.Vt(e),
            c = 0 < o && o < 4.5;
          return !(e.indexOf('MSIE ') > 0 || e.indexOf('Trident/') > 0 || e.indexOf('Edge/') > 0 || i || c);
        }
        static vt() {
          var e;
          return (
            'undefined' != typeof process && 'YES' === (null === (e = process.env) || void 0 === e ? void 0 : e.St)
          );
        }
        static Dt(e, t) {
          return e.store(t);
        }
        static bt(e) {
          const t = e.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
            i = t ? t[1].split('_').slice(0, 2).join('.') : '-1';
          return Number(i);
        }
        static Vt(e) {
          const t = e.match(/Android ([\d.]+)/i),
            i = t ? t[1].split('.').slice(0, 2).join('.') : '-1';
          return Number(i);
        }
        Ct(e) {
          var t = this;
          return (0, Jt.Z)(function* () {
            return (
              t.db ||
                (In('SimpleDb', 'Opening database:', t.name),
                (t.db = yield new Promise((i, o) => {
                  const c = indexedDB.open(t.name, t.version);
                  (c.onsuccess = (p) => {
                    i(p.target.result);
                  }),
                    (c.onblocked = () => {
                      o(
                        new Wh(
                          e,
                          'Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.'
                        )
                      );
                    }),
                    (c.onerror = (p) => {
                      const C = p.target.error;
                      o(
                        'VersionError' === C.name
                          ? new En(
                              rn.FAILED_PRECONDITION,
                              'A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.'
                            )
                          : 'InvalidStateError' === C.name
                          ? new En(
                              rn.FAILED_PRECONDITION,
                              'Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: ' +
                                C
                            )
                          : new Wh(e, C)
                      );
                    }),
                    (c.onupgradeneeded = (p) => {
                      In('SimpleDb', 'Database "' + t.name + '" requires upgrade from version:', p.oldVersion),
                        t.Rt.Nt(p.target.result, c.transaction, p.oldVersion, t.version).next(() => {
                          In('SimpleDb', 'Database upgrade to version ' + t.version + ' complete');
                        });
                    });
                }))),
              t.kt && (t.db.onversionchange = (i) => t.kt(i)),
              t.db
            );
          })();
        }
        xt(e) {
          (this.kt = e), this.db && (this.db.onversionchange = (t) => e(t));
        }
        runTransaction(e, t, i, o) {
          var c = this;
          return (0, Jt.Z)(function* () {
            const p = 'readonly' === t;
            let C = 0;
            for (;;) {
              ++C;
              try {
                c.db = yield c.Ct(e);
                const I = Nm.open(c.db, e, p ? 'readonly' : 'readwrite', i),
                  U = o(I)
                    .catch((se) => (I.abort(se), Dn.reject(se)))
                    .toPromise();
                return U.catch(() => {}), yield I.At, U;
              } catch (I) {
                const U = 'FirebaseError' !== I.name && C < 3;
                if ((In('SimpleDb', 'Transaction failed with error:', I.message, 'Retrying:', U), c.close(), !U))
                  return Promise.reject(I);
              }
            }
          })();
        }
        close() {
          this.db && this.db.close(), (this.db = void 0);
        }
      }
      class jE {
        constructor(e) {
          (this.$t = e), (this.Ot = !1), (this.Mt = null);
        }
        get isDone() {
          return this.Ot;
        }
        get Ft() {
          return this.Mt;
        }
        set cursor(e) {
          this.$t = e;
        }
        done() {
          this.Ot = !0;
        }
        Lt(e) {
          this.Mt = e;
        }
        delete() {
          return l(this.$t.delete());
        }
      }
      class Wh extends En {
        constructor(e, t) {
          super(rn.UNAVAILABLE, `IndexedDB transaction '${e}' failed: ${t}`), (this.name = 'IndexedDbTransactionError');
        }
      }
      function b(n) {
        return 'IndexedDbTransactionError' === n.name;
      }
      class w {
        constructor(e) {
          this.store = e;
        }
        put(e, t) {
          let i;
          return (
            void 0 !== t
              ? (In('SimpleDb', 'PUT', this.store.name, e, t), (i = this.store.put(t, e)))
              : (In('SimpleDb', 'PUT', this.store.name, '<auto-key>', e), (i = this.store.put(e))),
            l(i)
          );
        }
        add(e) {
          return In('SimpleDb', 'ADD', this.store.name, e, e), l(this.store.add(e));
        }
        get(e) {
          return l(this.store.get(e)).next(
            (t) => (void 0 === t && (t = null), In('SimpleDb', 'GET', this.store.name, e, t), t)
          );
        }
        delete(e) {
          return In('SimpleDb', 'DELETE', this.store.name, e), l(this.store.delete(e));
        }
        count() {
          return In('SimpleDb', 'COUNT', this.store.name), l(this.store.count());
        }
        Bt(e, t) {
          const i = this.cursor(this.options(e, t)),
            o = [];
          return this.Ut(i, (c, p) => {
            o.push(p);
          }).next(() => o);
        }
        qt(e, t) {
          In('SimpleDb', 'DELETE ALL', this.store.name);
          const i = this.options(e, t);
          i.Kt = !1;
          const o = this.cursor(i);
          return this.Ut(o, (c, p, C) => C.delete());
        }
        jt(e, t) {
          let i;
          t ? (i = e) : ((i = {}), (t = e));
          const o = this.cursor(i);
          return this.Ut(o, t);
        }
        Qt(e) {
          const t = this.cursor({});
          return new Dn((i, o) => {
            (t.onerror = (c) => {
              const p = T(c.target.error);
              o(p);
            }),
              (t.onsuccess = (c) => {
                const p = c.target.result;
                p
                  ? e(p.primaryKey, p.value).next((C) => {
                      C ? p.continue() : i();
                    })
                  : i();
              });
          });
        }
        Ut(e, t) {
          const i = [];
          return new Dn((o, c) => {
            (e.onerror = (p) => {
              c(p.target.error);
            }),
              (e.onsuccess = (p) => {
                const C = p.target.result;
                if (!C) return void o();
                const I = new jE(C),
                  U = t(C.primaryKey, C.value, I);
                if (U instanceof Dn) {
                  const se = U.catch((xe) => (I.done(), Dn.reject(xe)));
                  i.push(se);
                }
                I.isDone ? o() : null === I.Ft ? C.continue() : C.continue(I.Ft);
              });
          }).next(() => Dn.waitFor(i));
        }
        options(e, t) {
          let i;
          return void 0 !== e && ('string' == typeof e ? (i = e) : (t = e)), { index: i, range: t };
        }
        cursor(e) {
          let t = 'next';
          if ((e.reverse && (t = 'prev'), e.index)) {
            const i = this.store.index(e.index);
            return e.Kt ? i.openKeyCursor(e.range, t) : i.openCursor(e.range, t);
          }
          return this.store.openCursor(e.range, t);
        }
      }
      function l(n) {
        return new Dn((e, t) => {
          (n.onsuccess = (i) => {
            e(i.target.result);
          }),
            (n.onerror = (i) => {
              const o = T(i.target.error);
              t(o);
            });
        });
      }
      let g = !1;
      function T(n) {
        const e = wc.bt((0, je.z$)());
        if (e >= 12.2 && e < 13) {
          const t = 'An internal error was encountered in the Indexed Database server';
          if (n.message.indexOf(t) >= 0) {
            const i = new En(
              'internal',
              `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${t}'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.`
            );
            return (
              g ||
                ((g = !0),
                setTimeout(() => {
                  throw i;
                }, 0)),
              i
            );
          }
        }
        return n;
      }
      class Y extends Ub {
        constructor(e, t) {
          super(), (this.Wt = e), (this.currentSequenceNumber = t);
        }
      }
      function _t(n, e) {
        const t = Un(n);
        return wc.Dt(t.Wt, e);
      }
      class Qt {
        constructor(e, t, i, o) {
          (this.batchId = e), (this.localWriteTime = t), (this.baseMutations = i), (this.mutations = o);
        }
        applyToRemoteDocument(e, t) {
          const i = t.mutationResults;
          for (let o = 0; o < this.mutations.length; o++) {
            const c = this.mutations[o];
            c.key.isEqual(e.key) && Gf(c, e, i[o]);
          }
        }
        applyToLocalView(e) {
          for (const t of this.baseMutations) t.key.isEqual(e.key) && Va(t, e, this.localWriteTime);
          for (const t of this.mutations) t.key.isEqual(e.key) && Va(t, e, this.localWriteTime);
        }
        applyToLocalDocumentSet(e) {
          this.mutations.forEach((t) => {
            const i = e.get(t.key),
              o = i;
            this.applyToLocalView(o), i.isValidDocument() || o.convertToNoDocument(Si.min());
          });
        }
        keys() {
          return this.mutations.reduce((e, t) => e.add(t.key), Dr());
        }
        isEqual(e) {
          return (
            this.batchId === e.batchId &&
            zc(this.mutations, e.mutations, (t, i) => cd(t, i)) &&
            zc(this.baseMutations, e.baseMutations, (t, i) => cd(t, i))
          );
        }
      }
      class vn {
        constructor(e, t, i, o) {
          (this.batch = e), (this.commitVersion = t), (this.mutationResults = i), (this.docVersions = o);
        }
        static from(e, t, i) {
          xi(e.mutations.length === i.length);
          let o = Wf();
          const c = e.mutations;
          for (let p = 0; p < c.length; p++) o = o.insert(c[p].key, i[p].version);
          return new vn(e, t, i, o);
        }
      }
      class Zn {
        constructor(e, t, i, o, c = Si.min(), p = Si.min(), C = Qr.EMPTY_BYTE_STRING) {
          (this.target = e),
            (this.targetId = t),
            (this.purpose = i),
            (this.sequenceNumber = o),
            (this.snapshotVersion = c),
            (this.lastLimboFreeSnapshotVersion = p),
            (this.resumeToken = C);
        }
        withSequenceNumber(e) {
          return new Zn(
            this.target,
            this.targetId,
            this.purpose,
            e,
            this.snapshotVersion,
            this.lastLimboFreeSnapshotVersion,
            this.resumeToken
          );
        }
        withResumeToken(e, t) {
          return new Zn(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            t,
            this.lastLimboFreeSnapshotVersion,
            e
          );
        }
        withLastLimboFreeSnapshotVersion(e) {
          return new Zn(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            this.snapshotVersion,
            e,
            this.resumeToken
          );
        }
      }
      class ti {
        constructor(e) {
          this.Gt = e;
        }
      }
      function Wi(n, e) {
        if (e.document) return A_(n.Gt, e.document, !!e.hasCommittedMutations);
        if (e.noDocument) {
          const t = ui.fromSegments(e.noDocument.path),
            i = Ms(e.noDocument.readTime),
            o = xr.newNoDocument(t, i);
          return e.hasCommittedMutations ? o.setHasCommittedMutations() : o;
        }
        if (e.unknownDocument) {
          const t = ui.fromSegments(e.unknownDocument.path),
            i = Ms(e.unknownDocument.version);
          return xr.newUnknownDocument(t, i);
        }
        return ii();
      }
      function Yi(n, e, t) {
        const i = yo(t),
          o = e.key.path.popLast().toArray();
        if (e.isFoundDocument()) {
          const c = {
            name: Gh((C = n.Gt), (I = e).key),
            fields: I.data.value.mapValue.fields,
            updateTime: nh(C, I.version.toTimestamp()),
          };
          return new Ds(null, null, c, e.hasCommittedMutations, i, o);
        }
        var C, I;
        if (e.isNoDocument()) {
          const c = e.key.path.toArray(),
            p = Ha(e.version),
            C = e.hasCommittedMutations;
          return new Ds(null, new R_(c, p), null, C, i, o);
        }
        if (e.isUnknownDocument()) {
          const c = e.key.path.toArray(),
            p = Ha(e.version);
          return new Ds(new $h(c, p), null, null, !0, i, o);
        }
        return ii();
      }
      function yo(n) {
        const e = n.toTimestamp();
        return [e.seconds, e.nanoseconds];
      }
      function Lu(n) {
        const e = new eo(n[0], n[1]);
        return Si.fromTimestamp(e);
      }
      function Ha(n) {
        const e = n.toTimestamp();
        return new Cl(e.seconds, e.nanoseconds);
      }
      function Ms(n) {
        const e = new eo(n.seconds, n.nanoseconds);
        return Si.fromTimestamp(e);
      }
      function Ga(n, e) {
        const t = (e.baseMutations || []).map((c) => I_(n.Gt, c));
        for (let c = 0; c < e.mutations.length - 1; ++c) {
          const p = e.mutations[c];
          c + 1 < e.mutations.length &&
            void 0 !== e.mutations[c + 1].transform &&
            ((p.updateTransforms = e.mutations[c + 1].transform.fieldTransforms), e.mutations.splice(c + 1, 1), ++c);
        }
        const i = e.mutations.map((c) => I_(n.Gt, c)),
          o = eo.fromMillis(e.localWriteTimeMs);
        return new Qt(e.batchId, o, t, i);
      }
      function pd(n) {
        const e = Ms(n.readTime),
          t = void 0 !== n.lastLimboFreeSnapshotVersion ? Ms(n.lastLimboFreeSnapshotVersion) : Si.min();
        let i;
        var o;
        return (
          void 0 !== n.query.documents
            ? (xi(1 === (o = n.query).documents.length), (i = Xr(Gl(Rm(o.documents[0])))))
            : (i = Xr(Pm(n.query))),
          new Zn(i, n.targetId, 0, n.lastListenSequenceNumber, e, t, Qr.fromBase64String(n.resumeToken))
        );
      }
      function Ec(n, e) {
        const t = Ha(e.snapshotVersion),
          i = Ha(e.lastLimboFreeSnapshotVersion);
        let o;
        o = il(e.target) ? km(n.Gt, e.target) : Om(n.Gt, e.target);
        const c = e.resumeToken.toBase64();
        return new ja(e.targetId, Hl(e.target), t, c, e.sequenceNumber, i, o);
      }
      function Nu(n) {
        const e = Pm({ parent: n.parent, structuredQuery: n.structuredQuery });
        return 'LAST' === n.limitType ? qd(e, e.limit, 'L') : e;
      }
      class Yh {
        getBundleMetadata(e, t) {
          return jb(e)
            .get(t)
            .next((i) => {
              if (i) return { id: (o = i).bundleId, createTime: Ms(o.createTime), version: o.version };
              var o;
            });
        }
        saveBundleMetadata(e, t) {
          return jb(e).put({ bundleId: (i = t).id, createTime: Ha(zo(i.createTime)), version: i.version });
          var i;
        }
        getNamedQuery(e, t) {
          return O_(e)
            .get(t)
            .next((i) => {
              if (i) return { name: (o = i).name, query: Nu(o.bundledQuery), readTime: Ms(o.readTime) };
              var o;
            });
        }
        saveNamedQuery(e, t) {
          return O_(e).put({ name: (i = t).name, readTime: Ha(zo(i.readTime)), bundledQuery: i.bundledQuery });
          var i;
        }
      }
      function jb(n) {
        return _t(n, rh.store);
      }
      function O_(n) {
        return _t(n, Fu.store);
      }
      class Hb {
        constructor() {
          this.zt = new ep();
        }
        addToCollectionParentIndex(e, t) {
          return this.zt.add(t), Dn.resolve();
        }
        getCollectionParents(e, t) {
          return Dn.resolve(this.zt.getEntries(t));
        }
      }
      class ep {
        constructor() {
          this.index = {};
        }
        add(e) {
          const t = e.lastSegment(),
            i = e.popLast(),
            o = this.index[t] || new $r(vr.comparator),
            c = !o.has(i);
          return (this.index[t] = o.add(i)), c;
        }
        has(e) {
          const t = e.lastSegment(),
            i = e.popLast(),
            o = this.index[t];
          return o && o.has(i);
        }
        getEntries(e) {
          return (this.index[e] || new $r(vr.comparator)).toArray();
        }
      }
      class P_ {
        constructor() {
          this.Ht = new ep();
        }
        addToCollectionParentIndex(e, t) {
          if (!this.Ht.has(t)) {
            const i = t.lastSegment(),
              o = t.popLast();
            e.addOnCommittedListener(() => {
              this.Ht.add(t);
            });
            const c = { collectionId: i, parent: Ua(o) };
            return F_(e).put(c);
          }
          return Dn.resolve();
        }
        getCollectionParents(e, t) {
          const i = [],
            o = IDBKeyRange.bound([t, ''], [Uf(t), ''], !1, !0);
          return F_(e)
            .Bt(o)
            .next((c) => {
              for (const p of c) {
                if (p.collectionId !== t) break;
                i.push(Wl(p.parent));
              }
              return i;
            });
        }
      }
      function F_(n) {
        return _t(n, Pu.store);
      }
      const tp = { didRun: !1, sequenceNumbersCollected: 0, targetsRemoved: 0, documentsRemoved: 0 };
      class sl {
        constructor(e, t, i) {
          (this.cacheSizeCollectionThreshold = e),
            (this.percentileToCollect = t),
            (this.maximumSequenceNumbersToCollect = i);
        }
        static withCacheSize(e) {
          return new sl(e, sl.DEFAULT_COLLECTION_PERCENTILE, sl.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);
        }
      }
      function L_(n, e, t) {
        const i = n.store(as.store),
          o = n.store(Ao.store),
          c = [],
          p = IDBKeyRange.only(t.batchId);
        let C = 0;
        const I = i.jt({ range: p }, (se, xe, rt) => (C++, rt.delete()));
        c.push(
          I.next(() => {
            xi(1 === C);
          })
        );
        const U = [];
        for (const se of t.mutations) {
          const xe = Ao.key(e, se.key.path, t.batchId);
          c.push(o.delete(xe)), U.push(se.key);
        }
        return Dn.waitFor(c).next(() => U);
      }
      function N_(n) {
        if (!n) return 0;
        let e;
        if (n.document) e = n.document;
        else if (n.unknownDocument) e = n.unknownDocument;
        else {
          if (!n.noDocument) throw ii();
          e = n.noDocument;
        }
        return JSON.stringify(e).length;
      }
      (sl.DEFAULT_COLLECTION_PERCENTILE = 10),
        (sl.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3),
        (sl.DEFAULT = new sl(41943040, sl.DEFAULT_COLLECTION_PERCENTILE, sl.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT)),
        (sl.DISABLED = new sl(-1, 0, 0));
      class Bm {
        constructor(e, t, i, o) {
          (this.userId = e), (this.k = t), (this.Jt = i), (this.referenceDelegate = o), (this.Yt = {});
        }
        static Xt(e, t, i, o) {
          xi('' !== e.uid);
          const c = e.isAuthenticated() ? e.uid : '';
          return new Bm(c, t, i, o);
        }
        checkEmpty(e) {
          let t = !0;
          const i = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);
          return md(e)
            .jt({ index: as.userMutationsIndex, range: i }, (o, c, p) => {
              (t = !1), p.done();
            })
            .next(() => t);
        }
        addMutationBatch(e, t, i, o) {
          const c = sh(e),
            p = md(e);
          return p.add({}).next((C) => {
            xi('number' == typeof C);
            const I = new Qt(C, t, i, o),
              U = (function (rt, Ut, qt) {
                const Mn = qt.baseMutations.map((Ki) => qf(rt.Gt, Ki)),
                  Ln = qt.mutations.map((Ki) => qf(rt.Gt, Ki));
                return new as(Ut, qt.batchId, qt.localWriteTime.toMillis(), Mn, Ln);
              })(this.k, this.userId, I),
              se = [];
            let xe = new $r((rt, Ut) => Ji(rt.canonicalString(), Ut.canonicalString()));
            for (const rt of o) {
              const Ut = Ao.key(this.userId, rt.key.path, C);
              (xe = xe.add(rt.key.path.popLast())), se.push(p.put(U)), se.push(c.put(Ut, Ao.PLACEHOLDER));
            }
            return (
              xe.forEach((rt) => {
                se.push(this.Jt.addToCollectionParentIndex(e, rt));
              }),
              e.addOnCommittedListener(() => {
                this.Yt[C] = I.keys();
              }),
              Dn.waitFor(se).next(() => I)
            );
          });
        }
        lookupMutationBatch(e, t) {
          return md(e)
            .get(t)
            .next((i) => (i ? (xi(i.userId === this.userId), Ga(this.k, i)) : null));
        }
        Zt(e, t) {
          return this.Yt[t]
            ? Dn.resolve(this.Yt[t])
            : this.lookupMutationBatch(e, t).next((i) => {
                if (i) {
                  const o = i.keys();
                  return (this.Yt[t] = o), o;
                }
                return null;
              });
        }
        getNextMutationBatchAfterBatchId(e, t) {
          const i = t + 1,
            o = IDBKeyRange.lowerBound([this.userId, i]);
          let c = null;
          return md(e)
            .jt({ index: as.userMutationsIndex, range: o }, (p, C, I) => {
              C.userId === this.userId && (xi(C.batchId >= i), (c = Ga(this.k, C))), I.done();
            })
            .next(() => c);
        }
        getHighestUnacknowledgedBatchId(e) {
          const t = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]);
          let i = -1;
          return md(e)
            .jt({ index: as.userMutationsIndex, range: t, reverse: !0 }, (o, c, p) => {
              (i = c.batchId), p.done();
            })
            .next(() => i);
        }
        getAllMutationBatches(e) {
          const t = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);
          return md(e)
            .Bt(as.userMutationsIndex, t)
            .next((i) => i.map((o) => Ga(this.k, o)));
        }
        getAllMutationBatchesAffectingDocumentKey(e, t) {
          const i = Ao.prefixForPath(this.userId, t.path),
            o = IDBKeyRange.lowerBound(i),
            c = [];
          return sh(e)
            .jt({ range: o }, (p, C, I) => {
              const [U, se, xe] = p,
                rt = Wl(se);
              if (U === this.userId && t.path.isEqual(rt))
                return md(e)
                  .get(xe)
                  .next((Ut) => {
                    if (!Ut) throw ii();
                    xi(Ut.userId === this.userId), c.push(Ga(this.k, Ut));
                  });
              I.done();
            })
            .next(() => c);
        }
        getAllMutationBatchesAffectingDocumentKeys(e, t) {
          let i = new $r(Ji);
          const o = [];
          return (
            t.forEach((c) => {
              const p = Ao.prefixForPath(this.userId, c.path),
                C = IDBKeyRange.lowerBound(p),
                I = sh(e).jt({ range: C }, (U, se, xe) => {
                  const [rt, Ut, qt] = U,
                    Mn = Wl(Ut);
                  rt === this.userId && c.path.isEqual(Mn) ? (i = i.add(qt)) : xe.done();
                });
              o.push(I);
            }),
            Dn.waitFor(o).next(() => this.te(e, i))
          );
        }
        getAllMutationBatchesAffectingQuery(e, t) {
          const i = t.path,
            o = i.length + 1,
            c = Ao.prefixForPath(this.userId, i),
            p = IDBKeyRange.lowerBound(c);
          let C = new $r(Ji);
          return sh(e)
            .jt({ range: p }, (I, U, se) => {
              const [xe, rt, Ut] = I,
                qt = Wl(rt);
              xe === this.userId && i.isPrefixOf(qt) ? qt.length === o && (C = C.add(Ut)) : se.done();
            })
            .next(() => this.te(e, C));
        }
        te(e, t) {
          const i = [],
            o = [];
          return (
            t.forEach((c) => {
              o.push(
                md(e)
                  .get(c)
                  .next((p) => {
                    if (null === p) throw ii();
                    xi(p.userId === this.userId), i.push(Ga(this.k, p));
                  })
              );
            }),
            Dn.waitFor(o).next(() => i)
          );
        }
        removeMutationBatch(e, t) {
          return L_(e.Wt, this.userId, t).next(
            (i) => (
              e.addOnCommittedListener(() => {
                this.ee(t.batchId);
              }),
              Dn.forEach(i, (o) => this.referenceDelegate.markPotentiallyOrphaned(e, o))
            )
          );
        }
        ee(e) {
          delete this.Yt[e];
        }
        performConsistencyCheck(e) {
          return this.checkEmpty(e).next((t) => {
            if (!t) return Dn.resolve();
            const i = IDBKeyRange.lowerBound(Ao.prefixForUser(this.userId)),
              o = [];
            return sh(e)
              .jt({ range: i }, (c, p, C) => {
                if (c[0] === this.userId) {
                  const I = Wl(c[1]);
                  o.push(I);
                } else C.done();
              })
              .next(() => {
                xi(0 === o.length);
              });
          });
        }
        containsKey(e, t) {
          return B_(e, this.userId, t);
        }
        ne(e) {
          return Gb(e)
            .get(this.userId)
            .next((t) => t || new nu(this.userId, -1, ''));
        }
      }
      function B_(n, e, t) {
        const i = Ao.prefixForPath(e, t.path),
          o = i[1],
          c = IDBKeyRange.lowerBound(i);
        let p = !1;
        return sh(n)
          .jt({ range: c, Kt: !0 }, (C, I, U) => {
            const [se, xe, rt] = C;
            se === e && xe === o && (p = !0), U.done();
          })
          .next(() => p);
      }
      function md(n) {
        return _t(n, as.store);
      }
      function sh(n) {
        return _t(n, Ao.store);
      }
      function Gb(n) {
        return _t(n, nu.store);
      }
      class oh {
        constructor(e) {
          this.se = e;
        }
        next() {
          return (this.se += 2), this.se;
        }
        static ie() {
          return new oh(0);
        }
        static re() {
          return new oh(-1);
        }
      }
      class El {
        constructor(e, t) {
          (this.referenceDelegate = e), (this.k = t);
        }
        allocateTargetId(e) {
          return this.oe(e).next((t) => {
            const i = new oh(t.highestTargetId);
            return (t.highestTargetId = i.next()), this.ce(e, t).next(() => t.highestTargetId);
          });
        }
        getLastRemoteSnapshotVersion(e) {
          return this.oe(e).next((t) =>
            Si.fromTimestamp(new eo(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds))
          );
        }
        getHighestSequenceNumber(e) {
          return this.oe(e).next((t) => t.highestListenSequenceNumber);
        }
        setTargetsMetadata(e, t, i) {
          return this.oe(e).next(
            (o) => (
              (o.highestListenSequenceNumber = t),
              i && (o.lastRemoteSnapshotVersion = i.toTimestamp()),
              t > o.highestListenSequenceNumber && (o.highestListenSequenceNumber = t),
              this.ce(e, o)
            )
          );
        }
        addTargetData(e, t) {
          return this.ae(e, t).next(() => this.oe(e).next((i) => ((i.targetCount += 1), this.ue(t, i), this.ce(e, i))));
        }
        updateTargetData(e, t) {
          return this.ae(e, t);
        }
        removeTargetData(e, t) {
          return this.removeMatchingKeysForTargetId(e, t.targetId)
            .next(() => Kh(e).delete(t.targetId))
            .next(() => this.oe(e))
            .next((i) => (xi(i.targetCount > 0), (i.targetCount -= 1), this.ce(e, i)));
        }
        removeTargets(e, t, i) {
          let o = 0;
          const c = [];
          return Kh(e)
            .jt((p, C) => {
              const I = pd(C);
              I.sequenceNumber <= t && null === i.get(I.targetId) && (o++, c.push(this.removeTargetData(e, I)));
            })
            .next(() => Dn.waitFor(c))
            .next(() => o);
        }
        forEachTarget(e, t) {
          return Kh(e).jt((i, o) => {
            const c = pd(o);
            t(c);
          });
        }
        oe(e) {
          return zb(e)
            .get(Aa.key)
            .next((t) => (xi(null !== t), t));
        }
        ce(e, t) {
          return zb(e).put(Aa.key, t);
        }
        ae(e, t) {
          return Kh(e).put(Ec(this.k, t));
        }
        ue(e, t) {
          let i = !1;
          return (
            e.targetId > t.highestTargetId && ((t.highestTargetId = e.targetId), (i = !0)),
            e.sequenceNumber > t.highestListenSequenceNumber &&
              ((t.highestListenSequenceNumber = e.sequenceNumber), (i = !0)),
            i
          );
        }
        getTargetCount(e) {
          return this.oe(e).next((t) => t.targetCount);
        }
        getTargetData(e, t) {
          const i = Hl(t),
            o = IDBKeyRange.bound([i, Number.NEGATIVE_INFINITY], [i, Number.POSITIVE_INFINITY]);
          let c = null;
          return Kh(e)
            .jt({ range: o, index: ja.queryTargetsIndexName }, (p, C, I) => {
              const U = pd(C);
              Ma(t, U.target) && ((c = U), I.done());
            })
            .next(() => c);
        }
        addMatchingKeys(e, t, i) {
          const o = [],
            c = ah(e);
          return (
            t.forEach((p) => {
              const C = Ua(p.path);
              o.push(c.put(new To(i, C))), o.push(this.referenceDelegate.addReference(e, i, p));
            }),
            Dn.waitFor(o)
          );
        }
        removeMatchingKeys(e, t, i) {
          const o = ah(e);
          return Dn.forEach(t, (c) => {
            const p = Ua(c.path);
            return Dn.waitFor([o.delete([i, p]), this.referenceDelegate.removeReference(e, i, c)]);
          });
        }
        removeMatchingKeysForTargetId(e, t) {
          const i = ah(e),
            o = IDBKeyRange.bound([t], [t + 1], !1, !0);
          return i.delete(o);
        }
        getMatchingKeysForTargetId(e, t) {
          const i = IDBKeyRange.bound([t], [t + 1], !1, !0),
            o = ah(e);
          let c = Dr();
          return o
            .jt({ range: i, Kt: !0 }, (p, C, I) => {
              const U = Wl(p[1]),
                se = new ui(U);
              c = c.add(se);
            })
            .next(() => c);
        }
        containsKey(e, t) {
          const i = Ua(t.path),
            o = IDBKeyRange.bound([i], [Uf(i)], !1, !0);
          let c = 0;
          return ah(e)
            .jt({ index: To.documentTargetsIndex, Kt: !0, range: o }, ([p, C], I, U) => {
              0 !== p && (c++, U.done());
            })
            .next(() => c > 0);
        }
        Et(e, t) {
          return Kh(e)
            .get(t)
            .next((i) => (i ? pd(i) : null));
        }
      }
      function Kh(n) {
        return _t(n, ja.store);
      }
      function zb(n) {
        return _t(n, Aa.store);
      }
      function ah(n) {
        return _t(n, To.store);
      }
      function qh(n) {
        return Vm.apply(this, arguments);
      }
      function Vm() {
        return (
          (Vm = (0, Jt.Z)(function* (n) {
            if (n.code !== rn.FAILED_PRECONDITION || n.message !== k_) throw n;
            In('LocalStore', 'Unexpectedly lost primary lease');
          })),
          Vm.apply(this, arguments)
        );
      }
      function HE([n, e], [t, i]) {
        const o = Ji(n, t);
        return 0 === o ? Ji(e, i) : o;
      }
      class GE {
        constructor(e) {
          (this.he = e), (this.buffer = new $r(HE)), (this.le = 0);
        }
        fe() {
          return ++this.le;
        }
        de(e) {
          const t = [e, this.fe()];
          if (this.buffer.size < this.he) this.buffer = this.buffer.add(t);
          else {
            const i = this.buffer.last();
            HE(t, i) < 0 && (this.buffer = this.buffer.delete(i).add(t));
          }
        }
        get maxValue() {
          return this.buffer.last()[0];
        }
      }
      class V_ {
        constructor(e, t) {
          (this.garbageCollector = e), (this.asyncQueue = t), (this.we = !1), (this._e = null);
        }
        start(e) {
          -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this.me(e);
        }
        stop() {
          this._e && (this._e.cancel(), (this._e = null));
        }
        get started() {
          return null !== this._e;
        }
        me(e) {
          var t = this;
          const i = this.we ? 3e5 : 6e4;
          In('LruGarbageCollector', `Garbage collection scheduled in ${i}ms`),
            (this._e = this.asyncQueue.enqueueAfterDelay(
              'lru_garbage_collection',
              i,
              (0, Jt.Z)(function* () {
                (t._e = null), (t.we = !0);
                try {
                  yield e.collectGarbage(t.garbageCollector);
                } catch (o) {
                  b(o)
                    ? In('LruGarbageCollector', 'Ignoring IndexedDB error during garbage collection: ', o)
                    : yield qh(o);
                }
                yield t.me(e);
              })
            ));
        }
      }
      class $b {
        constructor(e, t) {
          (this.ge = e), (this.params = t);
        }
        calculateTargetCount(e, t) {
          return this.ge.ye(e).next((i) => Math.floor((t / 100) * i));
        }
        nthSequenceNumber(e, t) {
          if (0 === t) return Dn.resolve(js.I);
          const i = new GE(t);
          return this.ge
            .forEachTarget(e, (o) => i.de(o.sequenceNumber))
            .next(() => this.ge.pe(e, (o) => i.de(o)))
            .next(() => i.maxValue);
        }
        removeTargets(e, t, i) {
          return this.ge.removeTargets(e, t, i);
        }
        removeOrphanedDocuments(e, t) {
          return this.ge.removeOrphanedDocuments(e, t);
        }
        collect(e, t) {
          return -1 === this.params.cacheSizeCollectionThreshold
            ? (In('LruGarbageCollector', 'Garbage collection skipped; disabled'), Dn.resolve(tp))
            : this.getCacheSize(e).next((i) =>
                i < this.params.cacheSizeCollectionThreshold
                  ? (In(
                      'LruGarbageCollector',
                      `Garbage collection skipped; Cache size ${i} is lower than threshold ${this.params.cacheSizeCollectionThreshold}`
                    ),
                    tp)
                  : this.Te(e, t)
              );
        }
        getCacheSize(e) {
          return this.ge.getCacheSize(e);
        }
        Te(e, t) {
          let i, o, c, p, C, I, U;
          const se = Date.now();
          return this.calculateTargetCount(e, this.params.percentileToCollect)
            .next(
              (xe) => (
                xe > this.params.maximumSequenceNumbersToCollect
                  ? (In(
                      'LruGarbageCollector',
                      `Capping sequence numbers to collect down to the maximum of ${this.params.maximumSequenceNumbersToCollect} from ${xe}`
                    ),
                    (o = this.params.maximumSequenceNumbersToCollect))
                  : (o = xe),
                (p = Date.now()),
                this.nthSequenceNumber(e, o)
              )
            )
            .next((xe) => ((i = xe), (C = Date.now()), this.removeTargets(e, i, t)))
            .next((xe) => ((c = xe), (I = Date.now()), this.removeOrphanedDocuments(e, i)))
            .next(
              (xe) => (
                (U = Date.now()),
                Rh() <= kr.in.DEBUG &&
                  In(
                    'LruGarbageCollector',
                    `LRU Garbage Collection\n\tCounted targets in ${
                      p - se
                    }ms\n\tDetermined least recently used ${o} in ` +
                      (C - p) +
                      `ms\n\tRemoved ${c} targets in ` +
                      (I - C) +
                      `ms\n\tRemoved ${xe} documents in ` +
                      (U - I) +
                      `ms\nTotal Duration: ${U - se}ms`
                  ),
                Dn.resolve({ didRun: !0, sequenceNumbersCollected: o, targetsRemoved: c, documentsRemoved: xe })
              )
            );
        }
      }
      class zE {
        constructor(e, t) {
          (this.db = e), (this.garbageCollector = new $b(this, t));
        }
        ye(e) {
          const t = this.Ee(e);
          return this.db
            .getTargetCache()
            .getTargetCount(e)
            .next((i) => t.next((o) => i + o));
        }
        Ee(e) {
          let t = 0;
          return this.pe(e, (i) => {
            t++;
          }).next(() => t);
        }
        forEachTarget(e, t) {
          return this.db.getTargetCache().forEachTarget(e, t);
        }
        pe(e, t) {
          return this.Ie(e, (i, o) => t(o));
        }
        addReference(e, t, i) {
          return Um(e, i);
        }
        removeReference(e, t, i) {
          return Um(e, i);
        }
        removeTargets(e, t, i) {
          return this.db.getTargetCache().removeTargets(e, t, i);
        }
        markPotentiallyOrphaned(e, t) {
          return Um(e, t);
        }
        Ae(e, t) {
          return (function (i, o) {
            let c = !1;
            return Gb(i)
              .Qt((p) => B_(i, p, o).next((C) => (C && (c = !0), Dn.resolve(!C))))
              .next(() => c);
          })(e, t);
        }
        removeOrphanedDocuments(e, t) {
          const i = this.db.getRemoteDocumentCache().newChangeBuffer(),
            o = [];
          let c = 0;
          return this.Ie(e, (p, C) => {
            if (C <= t) {
              const I = this.Ae(e, p).next((U) => {
                if (!U) return c++, i.getEntry(e, p).next(() => (i.removeEntry(p), ah(e).delete([0, Ua(p.path)])));
              });
              o.push(I);
            }
          })
            .next(() => Dn.waitFor(o))
            .next(() => i.apply(e))
            .next(() => c);
        }
        removeTarget(e, t) {
          const i = t.withSequenceNumber(e.currentSequenceNumber);
          return this.db.getTargetCache().updateTargetData(e, i);
        }
        updateLimboDocument(e, t) {
          return Um(e, t);
        }
        Ie(e, t) {
          const i = ah(e);
          let o,
            c = js.I;
          return i
            .jt({ index: To.documentTargetsIndex }, ([p, C], { path: I, sequenceNumber: U }) => {
              0 === p ? (c !== js.I && t(new ui(Wl(o)), c), (c = U), (o = I)) : (c = js.I);
            })
            .next(() => {
              c !== js.I && t(new ui(Wl(o)), c);
            });
        }
        getCacheSize(e) {
          return this.db.getRemoteDocumentCache().getSize(e);
        }
      }
      function Um(n, e) {
        return ah(n).put(((i = n.currentSequenceNumber), new To(0, Ua(e.path), i)));
        var i;
      }
      class Zh {
        constructor(e, t) {
          (this.mapKeyFn = e), (this.equalsFn = t), (this.inner = {});
        }
        get(e) {
          const t = this.mapKeyFn(e),
            i = this.inner[t];
          if (void 0 !== i) for (const [o, c] of i) if (this.equalsFn(o, e)) return c;
        }
        has(e) {
          return void 0 !== this.get(e);
        }
        set(e, t) {
          const i = this.mapKeyFn(e),
            o = this.inner[i];
          if (void 0 !== o) {
            for (let c = 0; c < o.length; c++) if (this.equalsFn(o[c][0], e)) return void (o[c] = [e, t]);
            o.push([e, t]);
          } else this.inner[i] = [[e, t]];
        }
        delete(e) {
          const t = this.mapKeyFn(e),
            i = this.inner[t];
          if (void 0 === i) return !1;
          for (let o = 0; o < i.length; o++)
            if (this.equalsFn(i[o][0], e)) return 1 === i.length ? delete this.inner[t] : i.splice(o, 1), !0;
          return !1;
        }
        forEach(e) {
          fc(this.inner, (t, i) => {
            for (const [o, c] of i) e(o, c);
          });
        }
        isEmpty() {
          return Fh(this.inner);
        }
      }
      class U_ {
        constructor() {
          (this.changes = new Zh(
            (e) => e.toString(),
            (e, t) => e.isEqual(t)
          )),
            (this.changesApplied = !1);
        }
        getReadTime(e) {
          const t = this.changes.get(e);
          return t ? t.readTime : Si.min();
        }
        addEntry(e, t) {
          this.assertNotApplied(), this.changes.set(e.key, { document: e, readTime: t });
        }
        removeEntry(e, t = null) {
          this.assertNotApplied(), this.changes.set(e, { document: xr.newInvalidDocument(e), readTime: t });
        }
        getEntry(e, t) {
          this.assertNotApplied();
          const i = this.changes.get(t);
          return void 0 !== i ? Dn.resolve(i.document) : this.getFromCache(e, t);
        }
        getEntries(e, t) {
          return this.getAllFromCache(e, t);
        }
        apply(e) {
          return this.assertNotApplied(), (this.changesApplied = !0), this.applyChanges(e);
        }
        assertNotApplied() {}
      }
      class $E {
        constructor(e, t) {
          (this.k = e), (this.Jt = t);
        }
        addEntry(e, t, i) {
          return gd(e).put(np(t), i);
        }
        removeEntry(e, t) {
          const i = gd(e),
            o = np(t);
          return i.delete(o);
        }
        updateMetadata(e, t) {
          return this.getMetadata(e).next((i) => ((i.byteSize += t), this.Re(e, i)));
        }
        getEntry(e, t) {
          return gd(e)
            .get(np(t))
            .next((i) => this.be(t, i));
        }
        Pe(e, t) {
          return gd(e)
            .get(np(t))
            .next((i) => ({ document: this.be(t, i), size: N_(i) }));
        }
        getEntries(e, t) {
          let i = vl();
          return this.ve(e, t, (o, c) => {
            const p = this.be(o, c);
            i = i.insert(o, p);
          }).next(() => i);
        }
        Ve(e, t) {
          let i = vl(),
            o = new So(ui.comparator);
          return this.ve(e, t, (c, p) => {
            const C = this.be(c, p);
            (i = i.insert(c, C)), (o = o.insert(c, N_(p)));
          }).next(() => ({ documents: i, Se: o }));
        }
        ve(e, t, i) {
          if (t.isEmpty()) return Dn.resolve();
          const o = IDBKeyRange.bound(t.first().path.toArray(), t.last().path.toArray()),
            c = t.getIterator();
          let p = c.getNext();
          return gd(e)
            .jt({ range: o }, (C, I, U) => {
              const se = ui.fromSegments(C);
              for (; p && ui.comparator(p, se) < 0; ) i(p, null), (p = c.getNext());
              p && p.isEqual(se) && (i(p, I), (p = c.hasNext() ? c.getNext() : null)),
                p ? U.Lt(p.path.toArray()) : U.done();
            })
            .next(() => {
              for (; p; ) i(p, null), (p = c.hasNext() ? c.getNext() : null);
            });
        }
        getDocumentsMatchingQuery(e, t, i) {
          let o = vl();
          const c = t.path.length + 1,
            p = {};
          if (i.isEqual(Si.min())) {
            const C = t.path.toArray();
            p.range = IDBKeyRange.lowerBound(C);
          } else {
            const C = t.path.toArray(),
              I = yo(i);
            (p.range = IDBKeyRange.lowerBound([C, I], !0)), (p.index = Ds.collectionReadTimeIndex);
          }
          return gd(e)
            .jt(p, (C, I, U) => {
              if (C.length !== c) return;
              const se = Wi(this.k, I);
              t.path.isPrefixOf(se.key.path) ? Ba(t, se) && (o = o.insert(se.key, se)) : U.done();
            })
            .next(() => o);
        }
        newChangeBuffer(e) {
          return new Wb(this, !!e && e.trackRemovals);
        }
        getSize(e) {
          return this.getMetadata(e).next((t) => t.byteSize);
        }
        getMetadata(e) {
          return Yb(e)
            .get(Cc.key)
            .next((t) => (xi(!!t), t));
        }
        Re(e, t) {
          return Yb(e).put(Cc.key, t);
        }
        be(e, t) {
          if (t) {
            const i = Wi(this.k, t);
            if (!i.isNoDocument() || !i.version.isEqual(Si.min())) return i;
          }
          return xr.newInvalidDocument(e);
        }
      }
      class Wb extends U_ {
        constructor(e, t) {
          super(),
            (this.De = e),
            (this.trackRemovals = t),
            (this.Ce = new Zh(
              (i) => i.toString(),
              (i, o) => i.isEqual(o)
            ));
        }
        applyChanges(e) {
          const t = [];
          let i = 0,
            o = new $r((c, p) => Ji(c.canonicalString(), p.canonicalString()));
          return (
            this.changes.forEach((c, p) => {
              const C = this.Ce.get(c);
              if (p.document.isValidDocument()) {
                const I = Yi(this.De.k, p.document, this.getReadTime(c));
                (o = o.add(c.path.popLast())), (i += N_(I) - C), t.push(this.De.addEntry(e, c, I));
              } else if (((i -= C), this.trackRemovals)) {
                const I = Yi(this.De.k, xr.newNoDocument(c, Si.min()), this.getReadTime(c));
                t.push(this.De.addEntry(e, c, I));
              } else t.push(this.De.removeEntry(e, c));
            }),
            o.forEach((c) => {
              t.push(this.De.Jt.addToCollectionParentIndex(e, c));
            }),
            t.push(this.De.updateMetadata(e, i)),
            Dn.waitFor(t)
          );
        }
        getFromCache(e, t) {
          return this.De.Pe(e, t).next((i) => (this.Ce.set(t, i.size), i.document));
        }
        getAllFromCache(e, t) {
          return this.De.Ve(e, t).next(
            ({ documents: i, Se: o }) => (
              o.forEach((c, p) => {
                this.Ce.set(c, p);
              }),
              i
            )
          );
        }
      }
      function Yb(n) {
        return _t(n, Cc.store);
      }
      function gd(n) {
        return _t(n, Ds.store);
      }
      function np(n) {
        return n.path.toArray();
      }
      class Kb {
        constructor(e) {
          this.k = e;
        }
        Nt(e, t, i, o) {
          xi(i < o && i >= 0 && o <= 11);
          const c = new Nm('createOrUpgrade', t);
          var C;
          i < 1 &&
            o >= 1 &&
            (e.createObjectStore(no.store),
            (C = e).createObjectStore(nu.store, { keyPath: nu.keyPath }),
            C.createObjectStore(as.store, { keyPath: as.keyPath, autoIncrement: !0 }).createIndex(
              as.userMutationsIndex,
              as.userMutationsKeyPath,
              { unique: !0 }
            ),
            C.createObjectStore(Ao.store),
            qb(e),
            (function (C) {
              C.createObjectStore(Ds.store);
            })(e));
          let p = Dn.resolve();
          return (
            i < 3 &&
              o >= 3 &&
              (0 !== i &&
                ((function (C) {
                  C.deleteObjectStore(To.store), C.deleteObjectStore(ja.store), C.deleteObjectStore(Aa.store);
                })(e),
                qb(e)),
              (p = p.next(() =>
                (function (C) {
                  const I = C.store(Aa.store),
                    U = new Aa(0, 0, Si.min().toTimestamp(), 0);
                  return I.put(Aa.key, U);
                })(c)
              ))),
            i < 4 &&
              o >= 4 &&
              (0 !== i &&
                (p = p.next(() =>
                  (function (C, I) {
                    return I.store(as.store)
                      .Bt()
                      .next((U) => {
                        C.deleteObjectStore(as.store),
                          C.createObjectStore(as.store, { keyPath: as.keyPath, autoIncrement: !0 }).createIndex(
                            as.userMutationsIndex,
                            as.userMutationsKeyPath,
                            { unique: !0 }
                          );
                        const se = I.store(as.store),
                          xe = U.map((rt) => se.put(rt));
                        return Dn.waitFor(xe);
                      });
                  })(e, c)
                )),
              (p = p.next(() => {
                !(function (C) {
                  C.createObjectStore(wl.store, { keyPath: wl.keyPath });
                })(e);
              }))),
            i < 5 && o >= 5 && (p = p.next(() => this.Ne(c))),
            i < 6 &&
              o >= 6 &&
              (p = p.next(
                () => (
                  (function (C) {
                    C.createObjectStore(Cc.store);
                  })(e),
                  this.ke(c)
                )
              )),
            i < 7 && o >= 7 && (p = p.next(() => this.xe(c))),
            i < 8 && o >= 8 && (p = p.next(() => this.$e(e, c))),
            i < 9 &&
              o >= 9 &&
              (p = p.next(() => {
                (function (C) {
                  C.objectStoreNames.contains('remoteDocumentChanges') && C.deleteObjectStore('remoteDocumentChanges');
                })(e),
                  (function (C) {
                    const I = C.objectStore(Ds.store);
                    I.createIndex(Ds.readTimeIndex, Ds.readTimeIndexPath, { unique: !1 }),
                      I.createIndex(Ds.collectionReadTimeIndex, Ds.collectionReadTimeIndexPath, { unique: !1 });
                  })(t);
              })),
            i < 10 && o >= 10 && (p = p.next(() => this.Oe(c))),
            i < 11 &&
              o >= 11 &&
              (p = p.next(() => {
                (function (C) {
                  C.createObjectStore(rh.store, { keyPath: rh.keyPath });
                })(e),
                  (function (C) {
                    C.createObjectStore(Fu.store, { keyPath: Fu.keyPath });
                  })(e);
              })),
            p
          );
        }
        ke(e) {
          let t = 0;
          return e
            .store(Ds.store)
            .jt((i, o) => {
              t += N_(o);
            })
            .next(() => {
              const i = new Cc(t);
              return e.store(Cc.store).put(Cc.key, i);
            });
        }
        Ne(e) {
          const t = e.store(nu.store),
            i = e.store(as.store);
          return t.Bt().next((o) =>
            Dn.forEach(o, (c) => {
              const p = IDBKeyRange.bound([c.userId, -1], [c.userId, c.lastAcknowledgedBatchId]);
              return i.Bt(as.userMutationsIndex, p).next((C) =>
                Dn.forEach(C, (I) => {
                  xi(I.userId === c.userId);
                  const U = Ga(this.k, I);
                  return L_(e, c.userId, U).next(() => {});
                })
              );
            })
          );
        }
        xe(e) {
          const t = e.store(To.store),
            i = e.store(Ds.store);
          return e
            .store(Aa.store)
            .get(Aa.key)
            .next((o) => {
              const c = [];
              return i
                .jt((p, C) => {
                  const I = new vr(p),
                    U = [0, Ua(I)];
                  c.push(
                    t.get(U).next((se) => (se ? Dn.resolve() : t.put(new To(0, Ua(I), o.highestListenSequenceNumber))))
                  );
                })
                .next(() => Dn.waitFor(c));
            });
        }
        $e(e, t) {
          e.createObjectStore(Pu.store, { keyPath: Pu.keyPath });
          const i = t.store(Pu.store),
            o = new ep(),
            c = (p) => {
              if (o.add(p)) {
                const C = p.lastSegment(),
                  I = p.popLast();
                return i.put({ collectionId: C, parent: Ua(I) });
              }
            };
          return t
            .store(Ds.store)
            .jt({ Kt: !0 }, (p, C) => {
              const I = new vr(p);
              return c(I.popLast());
            })
            .next(() =>
              t.store(Ao.store).jt({ Kt: !0 }, ([p, C, I], U) => {
                const se = Wl(C);
                return c(se.popLast());
              })
            );
        }
        Oe(e) {
          const t = e.store(ja.store);
          return t.jt((i, o) => {
            const c = pd(o),
              p = Ec(this.k, c);
            return t.put(p);
          });
        }
      }
      function qb(n) {
        n
          .createObjectStore(To.store, { keyPath: To.keyPath })
          .createIndex(To.documentTargetsIndex, To.documentTargetsKeyPath, { unique: !0 }),
          n
            .createObjectStore(ja.store, { keyPath: ja.keyPath })
            .createIndex(ja.queryTargetsIndexName, ja.queryTargetsKeyPath, { unique: !0 }),
          n.createObjectStore(Aa.store);
      }
      const Yl =
        'Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.';
      class ip {
        constructor(e, t, i, o, c, p, C, I, U, se) {
          if (
            ((this.allowTabSynchronization = e),
            (this.persistenceKey = t),
            (this.clientId = i),
            (this.Me = c),
            (this.window = p),
            (this.document = C),
            (this.Fe = U),
            (this.Le = se),
            (this.Be = null),
            (this.Ue = !1),
            (this.isPrimary = !1),
            (this.networkEnabled = !0),
            (this.qe = null),
            (this.inForeground = !1),
            (this.Ke = null),
            (this.je = null),
            (this.Qe = Number.NEGATIVE_INFINITY),
            (this.We = (xe) => Promise.resolve()),
            !ip.Pt())
          )
            throw new En(
              rn.UNIMPLEMENTED,
              'This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.'
            );
          (this.referenceDelegate = new zE(this, o)),
            (this.Ge = t + 'main'),
            (this.k = new ti(I)),
            (this.ze = new wc(this.Ge, 11, new Kb(this.k))),
            (this.He = new El(this.referenceDelegate, this.k)),
            (this.Jt = new P_()),
            (this.Je = new $E(this.k, this.Jt)),
            (this.Ye = new Yh()),
            this.window && this.window.localStorage
              ? (this.Xe = this.window.localStorage)
              : ((this.Xe = null),
                !1 === se &&
                  Js(
                    'IndexedDbPersistence',
                    'LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.'
                  ));
        }
        start() {
          return this.Ze()
            .then(() => {
              if (!this.isPrimary && !this.allowTabSynchronization) throw new En(rn.FAILED_PRECONDITION, Yl);
              return (
                this.tn(),
                this.en(),
                this.nn(),
                this.runTransaction('getHighestListenSequenceNumber', 'readonly', (e) =>
                  this.He.getHighestSequenceNumber(e)
                )
              );
            })
            .then((e) => {
              this.Be = new js(e, this.Fe);
            })
            .then(() => {
              this.Ue = !0;
            })
            .catch((e) => (this.ze && this.ze.close(), Promise.reject(e)));
        }
        sn(e) {
          var t = this;
          return (
            (this.We = (function () {
              var i = (0, Jt.Z)(function* (o) {
                if (t.started) return e(o);
              });
              return function (o) {
                return i.apply(this, arguments);
              };
            })()),
            e(this.isPrimary)
          );
        }
        setDatabaseDeletedListener(e) {
          this.ze.xt(
            (function () {
              var t = (0, Jt.Z)(function* (i) {
                null === i.newVersion && (yield e());
              });
              return function (i) {
                return t.apply(this, arguments);
              };
            })()
          );
        }
        setNetworkEnabled(e) {
          var t = this;
          this.networkEnabled !== e &&
            ((this.networkEnabled = e),
            this.Me.enqueueAndForget(
              (0, Jt.Z)(function* () {
                t.started && (yield t.Ze());
              })
            ));
        }
        Ze() {
          return this.runTransaction('updateClientMetadataAndTryBecomePrimary', 'readwrite', (e) =>
            jm(e)
              .put(new wl(this.clientId, Date.now(), this.networkEnabled, this.inForeground))
              .next(() => {
                if (this.isPrimary)
                  return this.rn(e).next((t) => {
                    t || ((this.isPrimary = !1), this.Me.enqueueRetryable(() => this.We(!1)));
                  });
              })
              .next(() => this.on(e))
              .next((t) => (this.isPrimary && !t ? this.cn(e).next(() => !1) : !!t && this.an(e).next(() => !0)))
          )
            .catch((e) => {
              if (b(e)) return In('IndexedDbPersistence', 'Failed to extend owner lease: ', e), this.isPrimary;
              if (!this.allowTabSynchronization) throw e;
              return In('IndexedDbPersistence', 'Releasing owner lease after error during lease refresh', e), !1;
            })
            .then((e) => {
              this.isPrimary !== e && this.Me.enqueueRetryable(() => this.We(e)), (this.isPrimary = e);
            });
        }
        rn(e) {
          return rp(e)
            .get(no.key)
            .next((t) => Dn.resolve(this.un(t)));
        }
        hn(e) {
          return jm(e).delete(this.clientId);
        }
        ln() {
          var e = this;
          return (0, Jt.Z)(function* () {
            if (e.isPrimary && !e.fn(e.Qe, 18e5)) {
              e.Qe = Date.now();
              const t = yield e
                .runTransaction('maybeGarbageCollectMultiClientState', 'readwrite-primary', (i) => {
                  const o = _t(i, wl.store);
                  return o.Bt().next((c) => {
                    const p = e.dn(c, 18e5),
                      C = c.filter((I) => -1 === p.indexOf(I));
                    return Dn.forEach(C, (I) => o.delete(I.clientId)).next(() => C);
                  });
                })
                .catch(() => []);
              if (e.Xe) for (const i of t) e.Xe.removeItem(e.wn(i.clientId));
            }
          })();
        }
        nn() {
          this.je = this.Me.enqueueAfterDelay('client_metadata_refresh', 4e3, () =>
            this.Ze()
              .then(() => this.ln())
              .then(() => this.nn())
          );
        }
        un(e) {
          return !!e && e.ownerId === this.clientId;
        }
        on(e) {
          return this.Le
            ? Dn.resolve(!0)
            : rp(e)
                .get(no.key)
                .next((t) => {
                  if (null !== t && this.fn(t.leaseTimestampMs, 5e3) && !this._n(t.ownerId)) {
                    if (this.un(t) && this.networkEnabled) return !0;
                    if (!this.un(t)) {
                      if (!t.allowTabSynchronization) throw new En(rn.FAILED_PRECONDITION, Yl);
                      return !1;
                    }
                  }
                  return (
                    !(!this.networkEnabled || !this.inForeground) ||
                    jm(e)
                      .Bt()
                      .next(
                        (i) =>
                          void 0 ===
                          this.dn(i, 5e3).find((o) => {
                            if (this.clientId !== o.clientId) {
                              const p = !this.inForeground && o.inForeground,
                                C = this.networkEnabled === o.networkEnabled;
                              if ((!this.networkEnabled && o.networkEnabled) || (p && C)) return !0;
                            }
                            return !1;
                          })
                      )
                  );
                })
                .next(
                  (t) => (
                    this.isPrimary !== t &&
                      In('IndexedDbPersistence', `Client ${t ? 'is' : 'is not'} eligible for a primary lease.`),
                    t
                  )
                );
        }
        shutdown() {
          var e = this;
          return (0, Jt.Z)(function* () {
            (e.Ue = !1),
              e.mn(),
              e.je && (e.je.cancel(), (e.je = null)),
              e.gn(),
              e.yn(),
              yield e.ze.runTransaction('shutdown', 'readwrite', [no.store, wl.store], (t) => {
                const i = new Y(t, js.I);
                return e.cn(i).next(() => e.hn(i));
              }),
              e.ze.close(),
              e.pn();
          })();
        }
        dn(e, t) {
          return e.filter((i) => this.fn(i.updateTimeMs, t) && !this._n(i.clientId));
        }
        Tn() {
          return this.runTransaction('getActiveClients', 'readonly', (e) =>
            jm(e)
              .Bt()
              .next((t) => this.dn(t, 18e5).map((i) => i.clientId))
          );
        }
        get started() {
          return this.Ue;
        }
        getMutationQueue(e) {
          return Bm.Xt(e, this.k, this.Jt, this.referenceDelegate);
        }
        getTargetCache() {
          return this.He;
        }
        getRemoteDocumentCache() {
          return this.Je;
        }
        getIndexManager() {
          return this.Jt;
        }
        getBundleCache() {
          return this.Ye;
        }
        runTransaction(e, t, i) {
          let c;
          return (
            In('IndexedDbPersistence', 'Starting transaction:', e),
            this.ze
              .runTransaction(
                e,
                'readonly' === t ? 'readonly' : 'readwrite',
                Vb,
                (p) => (
                  (c = new Y(p, this.Be ? this.Be.next() : js.I)),
                  'readwrite-primary' === t
                    ? this.rn(c)
                        .next((C) => !!C || this.on(c))
                        .next((C) => {
                          if (!C)
                            throw (
                              (Js(`Failed to obtain primary lease for action '${e}'.`),
                              (this.isPrimary = !1),
                              this.Me.enqueueRetryable(() => this.We(!1)),
                              new En(rn.FAILED_PRECONDITION, k_))
                            );
                          return i(c);
                        })
                        .next((C) => this.an(c).next(() => C))
                    : this.En(c).next(() => i(c))
                )
              )
              .then((p) => (c.raiseOnCommittedEvent(), p))
          );
        }
        En(e) {
          return rp(e)
            .get(no.key)
            .next((t) => {
              if (
                null !== t &&
                this.fn(t.leaseTimestampMs, 5e3) &&
                !this._n(t.ownerId) &&
                !this.un(t) &&
                !(this.Le || (this.allowTabSynchronization && t.allowTabSynchronization))
              )
                throw new En(rn.FAILED_PRECONDITION, Yl);
            });
        }
        an(e) {
          const t = new no(this.clientId, this.allowTabSynchronization, Date.now());
          return rp(e).put(no.key, t);
        }
        static Pt() {
          return wc.Pt();
        }
        cn(e) {
          const t = rp(e);
          return t
            .get(no.key)
            .next((i) =>
              this.un(i) ? (In('IndexedDbPersistence', 'Releasing primary lease.'), t.delete(no.key)) : Dn.resolve()
            );
        }
        fn(e, t) {
          const i = Date.now();
          return !(e < i - t || (e > i && (Js(`Detected an update time that is in the future: ${e} > ${i}`), 1)));
        }
        tn() {
          null !== this.document &&
            'function' == typeof this.document.addEventListener &&
            ((this.Ke = () => {
              this.Me.enqueueAndForget(
                () => ((this.inForeground = 'visible' === this.document.visibilityState), this.Ze())
              );
            }),
            this.document.addEventListener('visibilitychange', this.Ke),
            (this.inForeground = 'visible' === this.document.visibilityState));
        }
        gn() {
          this.Ke && (this.document.removeEventListener('visibilitychange', this.Ke), (this.Ke = null));
        }
        en() {
          var e;
          'function' == typeof (null === (e = this.window) || void 0 === e ? void 0 : e.addEventListener) &&
            ((this.qe = () => {
              this.mn(),
                (0, je.G6)() && navigator.appVersion.match(/Version\/1[45]/) && this.Me.enterRestrictedMode(!0),
                this.Me.enqueueAndForget(() => this.shutdown());
            }),
            this.window.addEventListener('pagehide', this.qe));
        }
        yn() {
          this.qe && (this.window.removeEventListener('pagehide', this.qe), (this.qe = null));
        }
        _n(e) {
          var t;
          try {
            const i = null !== (null === (t = this.Xe) || void 0 === t ? void 0 : t.getItem(this.wn(e)));
            return In('IndexedDbPersistence', `Client '${e}' ${i ? 'is' : 'is not'} zombied in LocalStorage`), i;
          } catch (i) {
            return Js('IndexedDbPersistence', 'Failed to get zombied client id.', i), !1;
          }
        }
        mn() {
          if (this.Xe)
            try {
              this.Xe.setItem(this.wn(this.clientId), String(Date.now()));
            } catch (e) {
              Js('Failed to set zombie client id.', e);
            }
        }
        pn() {
          if (this.Xe)
            try {
              this.Xe.removeItem(this.wn(this.clientId));
            } catch (e) {}
        }
        wn(e) {
          return `firestore_zombie_${this.persistenceKey}_${e}`;
        }
      }
      function rp(n) {
        return _t(n, no.store);
      }
      function jm(n) {
        return _t(n, wl.store);
      }
      function Zb(n, e) {
        let t = n.projectId;
        return n.isDefaultDatabase || (t += '.' + n.database), 'firestore/' + e + '/' + t + '/';
      }
      class Qb {
        constructor(e, t) {
          (this.progress = e), (this.In = t);
        }
      }
      class Xb {
        constructor(e, t, i) {
          (this.Je = e), (this.An = t), (this.Jt = i);
        }
        Rn(e, t) {
          return this.An.getAllMutationBatchesAffectingDocumentKey(e, t).next((i) => this.bn(e, t, i));
        }
        bn(e, t, i) {
          return this.Je.getEntry(e, t).next((o) => {
            for (const c of i) c.applyToLocalView(o);
            return o;
          });
        }
        Pn(e, t) {
          e.forEach((i, o) => {
            for (const c of t) c.applyToLocalView(o);
          });
        }
        vn(e, t) {
          return this.Je.getEntries(e, t).next((i) => this.Vn(e, i).next(() => i));
        }
        Vn(e, t) {
          return this.An.getAllMutationBatchesAffectingDocumentKeys(e, t).next((i) => this.Pn(t, i));
        }
        getDocumentsMatchingQuery(e, t, i) {
          return ui.isDocumentKey((o = t).path) && null === o.collectionGroup && 0 === o.filters.length
            ? this.Sn(e, t.path)
            : Vh(t)
            ? this.Dn(e, t, i)
            : this.Cn(e, t, i);
          var o;
        }
        Sn(e, t) {
          return this.Rn(e, new ui(t)).next((i) => {
            let o = Dm();
            return i.isFoundDocument() && (o = o.insert(i.key, i)), o;
          });
        }
        Dn(e, t, i) {
          const o = t.collectionGroup;
          let c = Dm();
          return this.Jt.getCollectionParents(e, o).next((p) =>
            Dn.forEach(p, (C) => {
              const I =
                ((U = t),
                (se = C.child(o)),
                new ca(
                  se,
                  null,
                  U.explicitOrderBy.slice(),
                  U.filters.slice(),
                  U.limit,
                  U.limitType,
                  U.startAt,
                  U.endAt
                ));
              var U, se;
              return this.Cn(e, I, i).next((U) => {
                U.forEach((se, xe) => {
                  c = c.insert(se, xe);
                });
              });
            }).next(() => c)
          );
        }
        Cn(e, t, i) {
          let o, c;
          return this.Je.getDocumentsMatchingQuery(e, t, i)
            .next((p) => ((o = p), this.An.getAllMutationBatchesAffectingQuery(e, t)))
            .next(
              (p) => (
                (c = p),
                this.Nn(e, c, o).next((C) => {
                  o = C;
                  for (const I of c)
                    for (const U of I.mutations) {
                      const se = U.key;
                      let xe = o.get(se);
                      null == xe && ((xe = xr.newInvalidDocument(se)), (o = o.insert(se, xe))),
                        Va(U, xe, I.localWriteTime),
                        xe.isFoundDocument() || (o = o.remove(se));
                    }
                })
              )
            )
            .next(
              () => (
                o.forEach((p, C) => {
                  Ba(t, C) || (o = o.remove(p));
                }),
                o
              )
            );
        }
        Nn(e, t, i) {
          let o = Dr();
          for (const p of t)
            for (const C of p.mutations) C instanceof yl && null === i.get(C.key) && (o = o.add(C.key));
          let c = i;
          return this.Je.getEntries(e, o).next(
            (p) => (
              p.forEach((C, I) => {
                I.isFoundDocument() && (c = c.insert(C, I));
              }),
              c
            )
          );
        }
      }
      class j_ {
        constructor(e, t, i, o) {
          (this.targetId = e), (this.fromCache = t), (this.kn = i), (this.xn = o);
        }
        static $n(e, t) {
          let i = Dr(),
            o = Dr();
          for (const c of t.docChanges)
            switch (c.type) {
              case 0:
                i = i.add(c.doc.key);
                break;
              case 1:
                o = o.add(c.doc.key);
            }
          return new j_(e, t.fromCache, i, o);
        }
      }
      class Jb {
        On(e) {
          this.Mn = e;
        }
        getDocumentsMatchingQuery(e, t, i, o) {
          return (0 === (c = t).filters.length &&
            null === c.limit &&
            null == c.startAt &&
            null == c.endAt &&
            (0 === c.explicitOrderBy.length ||
              (1 === c.explicitOrderBy.length && c.explicitOrderBy[0].field.isKeyField()))) ||
            i.isEqual(Si.min())
            ? this.Fn(e, t)
            : this.Mn.vn(e, o).next((c) => {
                const p = this.Ln(t, c);
                return (Mo(t) || qc(t)) && this.Bn(t.limitType, p, o, i)
                  ? this.Fn(e, t)
                  : (Rh() <= kr.in.DEBUG &&
                      In('QueryEngine', 'Re-using previous result from %s to execute query: %s', i.toString(), rl(t)),
                    this.Mn.getDocumentsMatchingQuery(e, t, i).next(
                      (C) => (
                        p.forEach((I) => {
                          C = C.insert(I.key, I);
                        }),
                        C
                      )
                    ));
              });
          var c;
        }
        Ln(e, t) {
          let i = new $r(Zd(e));
          return (
            t.forEach((o, c) => {
              Ba(e, c) && (i = i.add(c));
            }),
            i
          );
        }
        Bn(e, t, i, o) {
          if (i.size !== t.size) return !0;
          const c = 'F' === e ? t.last() : t.first();
          return !!c && (c.hasPendingWrites || c.version.compareTo(o) > 0);
        }
        Fn(e, t) {
          return (
            Rh() <= kr.in.DEBUG && In('QueryEngine', 'Using full collection scan to execute query:', rl(t)),
            this.Mn.getDocumentsMatchingQuery(e, t, Si.min())
          );
        }
      }
      class H_ {
        constructor(e, t, i, o) {
          (this.persistence = e),
            (this.Un = t),
            (this.k = o),
            (this.qn = new So(Ji)),
            (this.Kn = new Zh((c) => Hl(c), Ma)),
            (this.jn = Si.min()),
            (this.An = e.getMutationQueue(i)),
            (this.Qn = e.getRemoteDocumentCache()),
            (this.He = e.getTargetCache()),
            (this.Wn = new Xb(this.Qn, this.An, this.persistence.getIndexManager())),
            (this.Ye = e.getBundleCache()),
            this.Un.On(this.Wn);
        }
        collectGarbage(e) {
          return this.persistence.runTransaction('Collect garbage', 'readwrite-primary', (t) => e.collect(t, this.qn));
        }
      }
      function e0(n, e, t, i) {
        return new H_(n, e, t, i);
      }
      function t0(n, e) {
        return Qh.apply(this, arguments);
      }
      function Qh() {
        return (
          (Qh = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            let i = t.An,
              o = t.Wn;
            const c = yield t.persistence.runTransaction('Handle user change', 'readonly', (p) => {
              let C;
              return t.An.getAllMutationBatches(p)
                .next(
                  (I) => (
                    (C = I),
                    (i = t.persistence.getMutationQueue(e)),
                    (o = new Xb(t.Qn, i, t.persistence.getIndexManager())),
                    i.getAllMutationBatches(p)
                  )
                )
                .next((I) => {
                  const U = [],
                    se = [];
                  let xe = Dr();
                  for (const rt of C) {
                    U.push(rt.batchId);
                    for (const Ut of rt.mutations) xe = xe.add(Ut.key);
                  }
                  for (const rt of I) {
                    se.push(rt.batchId);
                    for (const Ut of rt.mutations) xe = xe.add(Ut.key);
                  }
                  return o.vn(p, xe).next((rt) => ({ Gn: rt, removedBatchIds: U, addedBatchIds: se }));
                });
            });
            return (t.An = i), (t.Wn = o), t.Un.On(t.Wn), c;
          })),
          Qh.apply(this, arguments)
        );
      }
      function G_(n, e) {
        const t = Un(n);
        return t.persistence.runTransaction('Acknowledge batch', 'readwrite-primary', (i) => {
          const o = e.batch.keys(),
            c = t.Qn.newChangeBuffer({ trackRemovals: !0 });
          return (function (p, C, I, U) {
            const se = I.batch,
              xe = se.keys();
            let rt = Dn.resolve();
            return (
              xe.forEach((Ut) => {
                rt = rt
                  .next(() => U.getEntry(C, Ut))
                  .next((qt) => {
                    const Mn = I.docVersions.get(Ut);
                    xi(null !== Mn),
                      qt.version.compareTo(Mn) < 0 &&
                        (se.applyToRemoteDocument(qt, I), qt.isValidDocument() && U.addEntry(qt, I.commitVersion));
                  });
              }),
              rt.next(() => p.An.removeMutationBatch(C, se))
            );
          })(t, i, e, c)
            .next(() => c.apply(i))
            .next(() => t.An.performConsistencyCheck(i))
            .next(() => t.Wn.vn(i, o));
        });
      }
      function n0(n) {
        const e = Un(n);
        return e.persistence.runTransaction('Get last remote snapshot version', 'readonly', (t) =>
          e.He.getLastRemoteSnapshotVersion(t)
        );
      }
      function z_(n, e) {
        const t = Un(n),
          i = e.snapshotVersion;
        let o = t.qn;
        return t.persistence
          .runTransaction('Apply remote event', 'readwrite-primary', (c) => {
            const p = t.Qn.newChangeBuffer({ trackRemovals: !0 });
            o = t.qn;
            const C = [];
            e.targetChanges.forEach((U, se) => {
              const xe = o.get(se);
              if (!xe) return;
              C.push(
                t.He.removeMatchingKeys(c, U.removedDocuments, se).next(() =>
                  t.He.addMatchingKeys(c, U.addedDocuments, se)
                )
              );
              let rt = xe.withSequenceNumber(c.currentSequenceNumber);
              var Ut, qt, Mn;
              e.targetMismatches.has(se)
                ? (rt = rt.withResumeToken(Qr.EMPTY_BYTE_STRING, Si.min()).withLastLimboFreeSnapshotVersion(Si.min()))
                : U.resumeToken.approximateByteSize() > 0 && (rt = rt.withResumeToken(U.resumeToken, i)),
                (o = o.insert(se, rt)),
                (qt = rt),
                (Mn = U),
                (0 === (Ut = xe).resumeToken.approximateByteSize() ||
                  qt.snapshotVersion.toMicroseconds() - Ut.snapshotVersion.toMicroseconds() >= 3e8 ||
                  Mn.addedDocuments.size + Mn.modifiedDocuments.size + Mn.removedDocuments.size > 0) &&
                  C.push(t.He.updateTargetData(c, rt));
            });
            let I = vl();
            if (
              (e.documentUpdates.forEach((U, se) => {
                e.resolvedLimboDocuments.has(U) && C.push(t.persistence.referenceDelegate.updateLimboDocument(c, U));
              }),
              C.push(
                Hm(c, p, e.documentUpdates, i, void 0).next((U) => {
                  I = U;
                })
              ),
              !i.isEqual(Si.min()))
            ) {
              const U = t.He.getLastRemoteSnapshotVersion(c).next((se) =>
                t.He.setTargetsMetadata(c, c.currentSequenceNumber, i)
              );
              C.push(U);
            }
            return Dn.waitFor(C)
              .next(() => p.apply(c))
              .next(() => t.Wn.Vn(c, I))
              .next(() => I);
          })
          .then((c) => ((t.qn = o), c));
      }
      function Hm(n, e, t, i, o) {
        let c = Dr();
        return (
          t.forEach((p) => (c = c.add(p))),
          e.getEntries(n, c).next((p) => {
            let C = vl();
            return (
              t.forEach((I, U) => {
                const se = p.get(I),
                  xe = (null == o ? void 0 : o.get(I)) || i;
                U.isNoDocument() && U.version.isEqual(Si.min())
                  ? (e.removeEntry(I, xe), (C = C.insert(I, U)))
                  : !se.isValidDocument() ||
                    U.version.compareTo(se.version) > 0 ||
                    (0 === U.version.compareTo(se.version) && se.hasPendingWrites)
                  ? (e.addEntry(U, xe), (C = C.insert(I, U)))
                  : In(
                      'LocalStore',
                      'Ignoring outdated watch update for ',
                      I,
                      '. Current version:',
                      se.version,
                      ' Watch version:',
                      U.version
                    );
              }),
              C
            );
          })
        );
      }
      function r0(n, e) {
        const t = Un(n);
        return t.persistence.runTransaction(
          'Get next mutation batch',
          'readonly',
          (i) => (void 0 === e && (e = -1), t.An.getNextMutationBatchAfterBatchId(i, e))
        );
      }
      function Xh(n, e) {
        const t = Un(n);
        return t.persistence
          .runTransaction('Allocate target', 'readwrite', (i) => {
            let o;
            return t.He.getTargetData(i, e).next((c) =>
              c
                ? ((o = c), Dn.resolve(o))
                : t.He.allocateTargetId(i).next(
                    (p) => ((o = new Zn(e, p, 0, i.currentSequenceNumber)), t.He.addTargetData(i, o).next(() => o))
                  )
            );
          })
          .then((i) => {
            const o = t.qn.get(i.targetId);
            return (
              (null === o || i.snapshotVersion.compareTo(o.snapshotVersion) > 0) &&
                ((t.qn = t.qn.insert(i.targetId, i)), t.Kn.set(e, i.targetId)),
              i
            );
          });
      }
      function Jh(n, e, t) {
        return sp.apply(this, arguments);
      }
      function sp() {
        return (
          (sp = (0, Jt.Z)(function* (n, e, t) {
            const i = Un(n),
              o = i.qn.get(e),
              c = t ? 'readwrite' : 'readwrite-primary';
            try {
              t ||
                (yield i.persistence.runTransaction('Release target', c, (p) =>
                  i.persistence.referenceDelegate.removeTarget(p, o)
                ));
            } catch (p) {
              if (!b(p)) throw p;
              In('LocalStore', `Failed to update sequence numbers for target ${e}: ${p}`);
            }
            (i.qn = i.qn.remove(e)), i.Kn.delete(o.target);
          })),
          sp.apply(this, arguments)
        );
      }
      function $_(n, e, t) {
        const i = Un(n);
        let o = Si.min(),
          c = Dr();
        return i.persistence.runTransaction('Execute query', 'readonly', (p) =>
          (function (C, I, U) {
            const se = Un(C),
              xe = se.Kn.get(U);
            return void 0 !== xe ? Dn.resolve(se.qn.get(xe)) : se.He.getTargetData(I, U);
          })(i, p, Xr(e))
            .next((C) => {
              if (C)
                return (
                  (o = C.lastLimboFreeSnapshotVersion),
                  i.He.getMatchingKeysForTargetId(p, C.targetId).next((I) => {
                    c = I;
                  })
                );
            })
            .next(() => i.Un.getDocumentsMatchingQuery(p, e, t ? o : Si.min(), t ? c : Dr()))
            .next((C) => ({ documents: C, zn: c }))
        );
      }
      function s0(n, e) {
        const t = Un(n),
          i = Un(t.He),
          o = t.qn.get(e);
        return o
          ? Promise.resolve(o.target)
          : t.persistence.runTransaction('Get target data', 'readonly', (c) =>
              i.Et(c, e).next((p) => (p ? p.target : null))
            );
      }
      function W_(n) {
        const e = Un(n);
        return e.persistence
          .runTransaction('Get new document changes', 'readonly', (t) =>
            (function (i, o, c) {
              const p = Un(i);
              let C = vl(),
                I = yo(c);
              const U = gd(o),
                se = IDBKeyRange.lowerBound(I, !0);
              return U.jt({ index: Ds.readTimeIndex, range: se }, (xe, rt) => {
                const Ut = Wi(p.k, rt);
                (C = C.insert(Ut.key, Ut)), (I = rt.readTime);
              }).next(() => ({ In: C, readTime: Lu(I) }));
            })(e.Qn, t, e.jn)
          )
          .then(({ In: t, readTime: i }) => ((e.jn = i), t));
      }
      function Gm() {
        return (
          (Gm = (0, Jt.Z)(function* (n) {
            const e = Un(n);
            return e.persistence
              .runTransaction('Synchronize last document change read time', 'readonly', (t) =>
                (function (i) {
                  const o = gd(i);
                  let c = Si.min();
                  return o
                    .jt({ index: Ds.readTimeIndex, reverse: !0 }, (p, C, I) => {
                      C.readTime && (c = Lu(C.readTime)), I.done();
                    })
                    .next(() => c);
                })(t)
              )
              .then((t) => {
                e.jn = t;
              });
          })),
          Gm.apply(this, arguments)
        );
      }
      function zm() {
        return (
          (zm = (0, Jt.Z)(function* (n, e, t, i) {
            const o = Un(n);
            let c = Dr(),
              p = vl(),
              C = Wf();
            for (const se of t) {
              const xe = e.Hn(se.metadata.name);
              se.document && (c = c.add(xe)),
                (p = p.insert(xe, e.Jn(se))),
                (C = C.insert(xe, e.Yn(se.metadata.readTime)));
            }
            const I = o.Qn.newChangeBuffer({ trackRemovals: !0 }),
              U = yield Xh(o, ((se = i), Xr(Gl(vr.fromString(`__bundle__/docs/${se}`)))));
            var se;
            return o.persistence.runTransaction('Apply bundle documents', 'readwrite', (se) =>
              Hm(se, I, p, Si.min(), C)
                .next((xe) => (I.apply(se), xe))
                .next((xe) =>
                  o.He.removeMatchingKeysForTargetId(se, U.targetId)
                    .next(() => o.He.addMatchingKeys(se, c, U.targetId))
                    .next(() => o.Wn.Vn(se, xe))
                    .next(() => xe)
                )
            );
          })),
          zm.apply(this, arguments)
        );
      }
      function Bu(n, e) {
        return ef.apply(this, arguments);
      }
      function ef() {
        return (
          (ef = (0, Jt.Z)(function* (n, e, t = Dr()) {
            const i = yield Xh(n, Xr(Nu(e.bundledQuery))),
              o = Un(n);
            return o.persistence.runTransaction('Save named query', 'readwrite', (c) => {
              const p = zo(e.readTime);
              if (i.snapshotVersion.compareTo(p) >= 0) return o.Ye.saveNamedQuery(c, e);
              const C = i.withResumeToken(Qr.EMPTY_BYTE_STRING, p);
              return (
                (o.qn = o.qn.insert(C.targetId, C)),
                o.He.updateTargetData(c, C)
                  .next(() => o.He.removeMatchingKeysForTargetId(c, i.targetId))
                  .next(() => o.He.addMatchingKeys(c, t, i.targetId))
                  .next(() => o.Ye.saveNamedQuery(c, e))
              );
            });
          })),
          ef.apply(this, arguments)
        );
      }
      class WE {
        constructor(e) {
          (this.k = e), (this.Xn = new Map()), (this.Zn = new Map());
        }
        getBundleMetadata(e, t) {
          return Dn.resolve(this.Xn.get(t));
        }
        saveBundleMetadata(e, t) {
          var i;
          return this.Xn.set(t.id, { id: (i = t).id, version: i.version, createTime: zo(i.createTime) }), Dn.resolve();
        }
        getNamedQuery(e, t) {
          return Dn.resolve(this.Zn.get(t));
        }
        saveNamedQuery(e, t) {
          return (
            this.Zn.set(t.name, { name: (i = t).name, query: Nu(i.bundledQuery), readTime: zo(i.readTime) }),
            Dn.resolve()
          );
          var i;
        }
      }
      class Y_ {
        constructor() {
          (this.ts = new $r(da.es)), (this.ns = new $r(da.ss));
        }
        isEmpty() {
          return this.ts.isEmpty();
        }
        addReference(e, t) {
          const i = new da(e, t);
          (this.ts = this.ts.add(i)), (this.ns = this.ns.add(i));
        }
        rs(e, t) {
          e.forEach((i) => this.addReference(i, t));
        }
        removeReference(e, t) {
          this.os(new da(e, t));
        }
        cs(e, t) {
          e.forEach((i) => this.removeReference(i, t));
        }
        us(e) {
          const t = new ui(new vr([])),
            i = new da(t, e),
            o = new da(t, e + 1),
            c = [];
          return (
            this.ns.forEachInRange([i, o], (p) => {
              this.os(p), c.push(p.key);
            }),
            c
          );
        }
        hs() {
          this.ts.forEach((e) => this.os(e));
        }
        os(e) {
          (this.ts = this.ts.delete(e)), (this.ns = this.ns.delete(e));
        }
        ls(e) {
          const t = new ui(new vr([])),
            i = new da(t, e),
            o = new da(t, e + 1);
          let c = Dr();
          return (
            this.ns.forEachInRange([i, o], (p) => {
              c = c.add(p.key);
            }),
            c
          );
        }
        containsKey(e) {
          const t = new da(e, 0),
            i = this.ts.firstAfterOrEqual(t);
          return null !== i && e.isEqual(i.key);
        }
      }
      class da {
        constructor(e, t) {
          (this.key = e), (this.fs = t);
        }
        static es(e, t) {
          return ui.comparator(e.key, t.key) || Ji(e.fs, t.fs);
        }
        static ss(e, t) {
          return Ji(e.fs, t.fs) || ui.comparator(e.key, t.key);
        }
      }
      class K_ {
        constructor(e, t) {
          (this.Jt = e), (this.referenceDelegate = t), (this.An = []), (this.ds = 1), (this.ws = new $r(da.es));
        }
        checkEmpty(e) {
          return Dn.resolve(0 === this.An.length);
        }
        addMutationBatch(e, t, i, o) {
          const c = this.ds;
          this.ds++;
          const p = new Qt(c, t, i, o);
          this.An.push(p);
          for (const C of o)
            (this.ws = this.ws.add(new da(C.key, c))), this.Jt.addToCollectionParentIndex(e, C.key.path.popLast());
          return Dn.resolve(p);
        }
        lookupMutationBatch(e, t) {
          return Dn.resolve(this._s(t));
        }
        getNextMutationBatchAfterBatchId(e, t) {
          const o = this.gs(t + 1),
            c = o < 0 ? 0 : o;
          return Dn.resolve(this.An.length > c ? this.An[c] : null);
        }
        getHighestUnacknowledgedBatchId() {
          return Dn.resolve(0 === this.An.length ? -1 : this.ds - 1);
        }
        getAllMutationBatches(e) {
          return Dn.resolve(this.An.slice());
        }
        getAllMutationBatchesAffectingDocumentKey(e, t) {
          const i = new da(t, 0),
            o = new da(t, Number.POSITIVE_INFINITY),
            c = [];
          return (
            this.ws.forEachInRange([i, o], (p) => {
              const C = this._s(p.fs);
              c.push(C);
            }),
            Dn.resolve(c)
          );
        }
        getAllMutationBatchesAffectingDocumentKeys(e, t) {
          let i = new $r(Ji);
          return (
            t.forEach((o) => {
              const c = new da(o, 0),
                p = new da(o, Number.POSITIVE_INFINITY);
              this.ws.forEachInRange([c, p], (C) => {
                i = i.add(C.fs);
              });
            }),
            Dn.resolve(this.ys(i))
          );
        }
        getAllMutationBatchesAffectingQuery(e, t) {
          const i = t.path,
            o = i.length + 1;
          let c = i;
          ui.isDocumentKey(c) || (c = c.child(''));
          const p = new da(new ui(c), 0);
          let C = new $r(Ji);
          return (
            this.ws.forEachWhile((I) => {
              const U = I.key.path;
              return !!i.isPrefixOf(U) && (U.length === o && (C = C.add(I.fs)), !0);
            }, p),
            Dn.resolve(this.ys(C))
          );
        }
        ys(e) {
          const t = [];
          return (
            e.forEach((i) => {
              const o = this._s(i);
              null !== o && t.push(o);
            }),
            t
          );
        }
        removeMutationBatch(e, t) {
          xi(0 === this.ps(t.batchId, 'removed')), this.An.shift();
          let i = this.ws;
          return Dn.forEach(t.mutations, (o) => {
            const c = new da(o.key, t.batchId);
            return (i = i.delete(c)), this.referenceDelegate.markPotentiallyOrphaned(e, o.key);
          }).next(() => {
            this.ws = i;
          });
        }
        ee(e) {}
        containsKey(e, t) {
          const i = new da(t, 0),
            o = this.ws.firstAfterOrEqual(i);
          return Dn.resolve(t.isEqual(o && o.key));
        }
        performConsistencyCheck(e) {
          return Dn.resolve();
        }
        ps(e, t) {
          return this.gs(e);
        }
        gs(e) {
          return 0 === this.An.length ? 0 : e - this.An[0].batchId;
        }
        _s(e) {
          const t = this.gs(e);
          return t < 0 || t >= this.An.length ? null : this.An[t];
        }
      }
      class l0 {
        constructor(e, t) {
          (this.Jt = e), (this.Ts = t), (this.docs = new So(ui.comparator)), (this.size = 0);
        }
        addEntry(e, t, i) {
          const o = t.key,
            c = this.docs.get(o),
            p = c ? c.size : 0,
            C = this.Ts(t);
          return (
            (this.docs = this.docs.insert(o, { document: t.mutableCopy(), size: C, readTime: i })),
            (this.size += C - p),
            this.Jt.addToCollectionParentIndex(e, o.path.popLast())
          );
        }
        removeEntry(e) {
          const t = this.docs.get(e);
          t && ((this.docs = this.docs.remove(e)), (this.size -= t.size));
        }
        getEntry(e, t) {
          const i = this.docs.get(t);
          return Dn.resolve(i ? i.document.mutableCopy() : xr.newInvalidDocument(t));
        }
        getEntries(e, t) {
          let i = vl();
          return (
            t.forEach((o) => {
              const c = this.docs.get(o);
              i = i.insert(o, c ? c.document.mutableCopy() : xr.newInvalidDocument(o));
            }),
            Dn.resolve(i)
          );
        }
        getDocumentsMatchingQuery(e, t, i) {
          let o = vl();
          const c = new ui(t.path.child('')),
            p = this.docs.getIteratorFrom(c);
          for (; p.hasNext(); ) {
            const {
              key: C,
              value: { document: I, readTime: U },
            } = p.getNext();
            if (!t.path.isPrefixOf(C.path)) break;
            U.compareTo(i) <= 0 || (Ba(t, I) && (o = o.insert(I.key, I.mutableCopy())));
          }
          return Dn.resolve(o);
        }
        Es(e, t) {
          return Dn.forEach(this.docs, (i) => t(i));
        }
        newChangeBuffer(e) {
          return new q_(this);
        }
        getSize(e) {
          return Dn.resolve(this.size);
        }
      }
      class q_ extends U_ {
        constructor(e) {
          super(), (this.De = e);
        }
        applyChanges(e) {
          const t = [];
          return (
            this.changes.forEach((i, o) => {
              o.document.isValidDocument()
                ? t.push(this.De.addEntry(e, o.document, this.getReadTime(i)))
                : this.De.removeEntry(i);
            }),
            Dn.waitFor(t)
          );
        }
        getFromCache(e, t) {
          return this.De.getEntry(e, t);
        }
        getAllFromCache(e, t) {
          return this.De.getEntries(e, t);
        }
      }
      class op {
        constructor(e) {
          (this.persistence = e),
            (this.Is = new Zh((t) => Hl(t), Ma)),
            (this.lastRemoteSnapshotVersion = Si.min()),
            (this.highestTargetId = 0),
            (this.As = 0),
            (this.Rs = new Y_()),
            (this.targetCount = 0),
            (this.bs = oh.ie());
        }
        forEachTarget(e, t) {
          return this.Is.forEach((i, o) => t(o)), Dn.resolve();
        }
        getLastRemoteSnapshotVersion(e) {
          return Dn.resolve(this.lastRemoteSnapshotVersion);
        }
        getHighestSequenceNumber(e) {
          return Dn.resolve(this.As);
        }
        allocateTargetId(e) {
          return (this.highestTargetId = this.bs.next()), Dn.resolve(this.highestTargetId);
        }
        setTargetsMetadata(e, t, i) {
          return i && (this.lastRemoteSnapshotVersion = i), t > this.As && (this.As = t), Dn.resolve();
        }
        ae(e) {
          this.Is.set(e.target, e);
          const t = e.targetId;
          t > this.highestTargetId && ((this.bs = new oh(t)), (this.highestTargetId = t)),
            e.sequenceNumber > this.As && (this.As = e.sequenceNumber);
        }
        addTargetData(e, t) {
          return this.ae(t), (this.targetCount += 1), Dn.resolve();
        }
        updateTargetData(e, t) {
          return this.ae(t), Dn.resolve();
        }
        removeTargetData(e, t) {
          return this.Is.delete(t.target), this.Rs.us(t.targetId), (this.targetCount -= 1), Dn.resolve();
        }
        removeTargets(e, t, i) {
          let o = 0;
          const c = [];
          return (
            this.Is.forEach((p, C) => {
              C.sequenceNumber <= t &&
                null === i.get(C.targetId) &&
                (this.Is.delete(p), c.push(this.removeMatchingKeysForTargetId(e, C.targetId)), o++);
            }),
            Dn.waitFor(c).next(() => o)
          );
        }
        getTargetCount(e) {
          return Dn.resolve(this.targetCount);
        }
        getTargetData(e, t) {
          const i = this.Is.get(t) || null;
          return Dn.resolve(i);
        }
        addMatchingKeys(e, t, i) {
          return this.Rs.rs(t, i), Dn.resolve();
        }
        removeMatchingKeys(e, t, i) {
          this.Rs.cs(t, i);
          const o = this.persistence.referenceDelegate,
            c = [];
          return (
            o &&
              t.forEach((p) => {
                c.push(o.markPotentiallyOrphaned(e, p));
              }),
            Dn.waitFor(c)
          );
        }
        removeMatchingKeysForTargetId(e, t) {
          return this.Rs.us(t), Dn.resolve();
        }
        getMatchingKeysForTargetId(e, t) {
          const i = this.Rs.ls(t);
          return Dn.resolve(i);
        }
        containsKey(e, t) {
          return Dn.resolve(this.Rs.containsKey(t));
        }
      }
      class YE {
        constructor(e, t) {
          (this.Ps = {}),
            (this.Be = new js(0)),
            (this.Ue = !1),
            (this.Ue = !0),
            (this.referenceDelegate = e(this)),
            (this.He = new op(this)),
            (this.Jt = new Hb()),
            (this.Je = new l0(this.Jt, (i) => this.referenceDelegate.vs(i))),
            (this.k = new ti(t)),
            (this.Ye = new WE(this.k));
        }
        start() {
          return Promise.resolve();
        }
        shutdown() {
          return (this.Ue = !1), Promise.resolve();
        }
        get started() {
          return this.Ue;
        }
        setDatabaseDeletedListener() {}
        setNetworkEnabled() {}
        getIndexManager() {
          return this.Jt;
        }
        getMutationQueue(e) {
          let t = this.Ps[e.toKey()];
          return t || ((t = new K_(this.Jt, this.referenceDelegate)), (this.Ps[e.toKey()] = t)), t;
        }
        getTargetCache() {
          return this.He;
        }
        getRemoteDocumentCache() {
          return this.Je;
        }
        getBundleCache() {
          return this.Ye;
        }
        runTransaction(e, t, i) {
          In('MemoryPersistence', 'Starting transaction:', e);
          const o = new Z_(this.Be.next());
          return (
            this.referenceDelegate.Vs(),
            i(o)
              .next((c) => this.referenceDelegate.Ss(o).next(() => c))
              .toPromise()
              .then((c) => (o.raiseOnCommittedEvent(), c))
          );
        }
        Ds(e, t) {
          return Dn.or(Object.values(this.Ps).map((i) => () => i.containsKey(e, t)));
        }
      }
      class Z_ extends Ub {
        constructor(e) {
          super(), (this.currentSequenceNumber = e);
        }
      }
      class $m {
        constructor(e) {
          (this.persistence = e), (this.Cs = new Y_()), (this.Ns = null);
        }
        static ks(e) {
          return new $m(e);
        }
        get xs() {
          if (this.Ns) return this.Ns;
          throw ii();
        }
        addReference(e, t, i) {
          return this.Cs.addReference(i, t), this.xs.delete(i.toString()), Dn.resolve();
        }
        removeReference(e, t, i) {
          return this.Cs.removeReference(i, t), this.xs.add(i.toString()), Dn.resolve();
        }
        markPotentiallyOrphaned(e, t) {
          return this.xs.add(t.toString()), Dn.resolve();
        }
        removeTarget(e, t) {
          this.Cs.us(t.targetId).forEach((o) => this.xs.add(o.toString()));
          const i = this.persistence.getTargetCache();
          return i
            .getMatchingKeysForTargetId(e, t.targetId)
            .next((o) => {
              o.forEach((c) => this.xs.add(c.toString()));
            })
            .next(() => i.removeTargetData(e, t));
        }
        Vs() {
          this.Ns = new Set();
        }
        Ss(e) {
          const t = this.persistence.getRemoteDocumentCache().newChangeBuffer();
          return Dn.forEach(this.xs, (i) => {
            const o = ui.fromPath(i);
            return this.$s(e, o).next((c) => {
              c || t.removeEntry(o);
            });
          }).next(() => ((this.Ns = null), t.apply(e)));
        }
        updateLimboDocument(e, t) {
          return this.$s(e, t).next((i) => {
            i ? this.xs.delete(t.toString()) : this.xs.add(t.toString());
          });
        }
        vs(e) {
          return 0;
        }
        $s(e, t) {
          return Dn.or([
            () => Dn.resolve(this.Cs.containsKey(t)),
            () => this.persistence.getTargetCache().containsKey(e, t),
            () => this.persistence.Ds(e, t),
          ]);
        }
      }
      function Q_(n, e) {
        return `firestore_clients_${n}_${e}`;
      }
      function X_(n, e, t) {
        let i = `firestore_mutations_${n}_${t}`;
        return e.isAuthenticated() && (i += `_${e.uid}`), i;
      }
      function J_(n, e) {
        return `firestore_targets_${n}_${e}`;
      }
      class tf {
        constructor(e, t, i, o) {
          (this.user = e), (this.batchId = t), (this.state = i), (this.error = o);
        }
        static Os(e, t, i) {
          const o = JSON.parse(i);
          let c,
            p =
              'object' == typeof o &&
              -1 !== ['pending', 'acknowledged', 'rejected'].indexOf(o.state) &&
              (void 0 === o.error || 'object' == typeof o.error);
          return (
            p &&
              o.error &&
              ((p = 'string' == typeof o.error.message && 'string' == typeof o.error.code),
              p && (c = new En(o.error.code, o.error.message))),
            p
              ? new tf(e, t, o.state, c)
              : (Js('SharedClientState', `Failed to parse mutation state for ID '${t}': ${i}`), null)
          );
        }
        Ms() {
          const e = { state: this.state, updateTimeMs: Date.now() };
          return this.error && (e.error = { code: this.error.code, message: this.error.message }), JSON.stringify(e);
        }
      }
      class ap {
        constructor(e, t, i) {
          (this.targetId = e), (this.state = t), (this.error = i);
        }
        static Os(e, t) {
          const i = JSON.parse(t);
          let o,
            c =
              'object' == typeof i &&
              -1 !== ['not-current', 'current', 'rejected'].indexOf(i.state) &&
              (void 0 === i.error || 'object' == typeof i.error);
          return (
            c &&
              i.error &&
              ((c = 'string' == typeof i.error.message && 'string' == typeof i.error.code),
              c && (o = new En(i.error.code, i.error.message))),
            c
              ? new ap(e, i.state, o)
              : (Js('SharedClientState', `Failed to parse target state for ID '${e}': ${t}`), null)
          );
        }
        Ms() {
          const e = { state: this.state, updateTimeMs: Date.now() };
          return this.error && (e.error = { code: this.error.code, message: this.error.message }), JSON.stringify(e);
        }
      }
      class Wm {
        constructor(e, t) {
          (this.clientId = e), (this.activeTargetIds = t);
        }
        static Os(e, t) {
          const i = JSON.parse(t);
          let o = 'object' == typeof i && i.activeTargetIds instanceof Array,
            c = hd();
          for (let p = 0; o && p < i.activeTargetIds.length; ++p)
            (o = Cm(i.activeTargetIds[p])), (c = c.add(i.activeTargetIds[p]));
          return o
            ? new Wm(e, c)
            : (Js('SharedClientState', `Failed to parse client data for instance '${e}': ${t}`), null);
        }
      }
      class Ym {
        constructor(e, t) {
          (this.clientId = e), (this.onlineState = t);
        }
        static Os(e) {
          const t = JSON.parse(e);
          return 'object' == typeof t &&
            -1 !== ['Unknown', 'Online', 'Offline'].indexOf(t.onlineState) &&
            'string' == typeof t.clientId
            ? new Ym(t.clientId, t.onlineState)
            : (Js('SharedClientState', `Failed to parse online state: ${e}`), null);
        }
      }
      class _d {
        constructor() {
          this.activeTargetIds = hd();
        }
        Fs(e) {
          this.activeTargetIds = this.activeTargetIds.add(e);
        }
        Ls(e) {
          this.activeTargetIds = this.activeTargetIds.delete(e);
        }
        Ms() {
          const e = { activeTargetIds: this.activeTargetIds.toArray(), updateTimeMs: Date.now() };
          return JSON.stringify(e);
        }
      }
      class Km {
        constructor(e, t, i, o, c) {
          (this.window = e),
            (this.Me = t),
            (this.persistenceKey = i),
            (this.Bs = o),
            (this.syncEngine = null),
            (this.onlineStateHandler = null),
            (this.sequenceNumberHandler = null),
            (this.Us = this.qs.bind(this)),
            (this.Ks = new So(Ji)),
            (this.started = !1),
            (this.js = []);
          const p = i.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
          (this.storage = this.window.localStorage),
            (this.currentUser = c),
            (this.Qs = Q_(this.persistenceKey, this.Bs)),
            (this.Ws = `firestore_sequence_number_${this.persistenceKey}`),
            (this.Ks = this.Ks.insert(this.Bs, new _d())),
            (this.Gs = new RegExp(`^firestore_clients_${p}_([^_]*)$`)),
            (this.zs = new RegExp(`^firestore_mutations_${p}_(\\d+)(?:_(.*))?$`)),
            (this.Hs = new RegExp(`^firestore_targets_${p}_(\\d+)$`)),
            (this.Js = `firestore_online_state_${this.persistenceKey}`),
            (this.Ys = (function (C) {
              return `firestore_bundle_loaded_${C}`;
            })(this.persistenceKey)),
            this.window.addEventListener('storage', this.Us);
        }
        static Pt(e) {
          return !(!e || !e.localStorage);
        }
        start() {
          var e = this;
          return (0, Jt.Z)(function* () {
            const t = yield e.syncEngine.Tn();
            for (const o of t) {
              if (o === e.Bs) continue;
              const c = e.getItem(Q_(e.persistenceKey, o));
              if (c) {
                const p = Wm.Os(o, c);
                p && (e.Ks = e.Ks.insert(p.clientId, p));
              }
            }
            e.Xs();
            const i = e.storage.getItem(e.Js);
            if (i) {
              const o = e.Zs(i);
              o && e.ti(o);
            }
            for (const o of e.js) e.qs(o);
            (e.js = []), e.window.addEventListener('pagehide', () => e.shutdown()), (e.started = !0);
          })();
        }
        writeSequenceNumber(e) {
          this.setItem(this.Ws, JSON.stringify(e));
        }
        getAllActiveQueryTargets() {
          return this.ei(this.Ks);
        }
        isActiveQueryTarget(e) {
          let t = !1;
          return (
            this.Ks.forEach((i, o) => {
              o.activeTargetIds.has(e) && (t = !0);
            }),
            t
          );
        }
        addPendingMutation(e) {
          this.ni(e, 'pending');
        }
        updateMutationState(e, t, i) {
          this.ni(e, t, i), this.si(e);
        }
        addLocalQueryTarget(e) {
          let t = 'not-current';
          if (this.isActiveQueryTarget(e)) {
            const i = this.storage.getItem(J_(this.persistenceKey, e));
            if (i) {
              const o = ap.Os(e, i);
              o && (t = o.state);
            }
          }
          return this.ii.Fs(e), this.Xs(), t;
        }
        removeLocalQueryTarget(e) {
          this.ii.Ls(e), this.Xs();
        }
        isLocalQueryTarget(e) {
          return this.ii.activeTargetIds.has(e);
        }
        clearQueryState(e) {
          this.removeItem(J_(this.persistenceKey, e));
        }
        updateQueryState(e, t, i) {
          this.ri(e, t, i);
        }
        handleUserChange(e, t, i) {
          t.forEach((o) => {
            this.si(o);
          }),
            (this.currentUser = e),
            i.forEach((o) => {
              this.addPendingMutation(o);
            });
        }
        setOnlineState(e) {
          this.oi(e);
        }
        notifyBundleLoaded() {
          this.ci();
        }
        shutdown() {
          this.started &&
            (this.window.removeEventListener('storage', this.Us), this.removeItem(this.Qs), (this.started = !1));
        }
        getItem(e) {
          const t = this.storage.getItem(e);
          return In('SharedClientState', 'READ', e, t), t;
        }
        setItem(e, t) {
          In('SharedClientState', 'SET', e, t), this.storage.setItem(e, t);
        }
        removeItem(e) {
          In('SharedClientState', 'REMOVE', e), this.storage.removeItem(e);
        }
        qs(e) {
          var t = this;
          const i = e;
          if (i.storageArea === this.storage) {
            if ((In('SharedClientState', 'EVENT', i.key, i.newValue), i.key === this.Qs))
              return void Js(
                'Received WebStorage notification for local change. Another client might have garbage-collected our state'
              );
            this.Me.enqueueRetryable(
              (0, Jt.Z)(function* () {
                if (t.started) {
                  if (null !== i.key)
                    if (t.Gs.test(i.key)) {
                      if (null == i.newValue) {
                        const o = t.ai(i.key);
                        return t.ui(o, null);
                      }
                      {
                        const o = t.hi(i.key, i.newValue);
                        if (o) return t.ui(o.clientId, o);
                      }
                    } else if (t.zs.test(i.key)) {
                      if (null !== i.newValue) {
                        const o = t.li(i.key, i.newValue);
                        if (o) return t.fi(o);
                      }
                    } else if (t.Hs.test(i.key)) {
                      if (null !== i.newValue) {
                        const o = t.di(i.key, i.newValue);
                        if (o) return t.wi(o);
                      }
                    } else if (i.key === t.Js) {
                      if (null !== i.newValue) {
                        const o = t.Zs(i.newValue);
                        if (o) return t.ti(o);
                      }
                    } else if (i.key === t.Ws) {
                      const o = (function (c) {
                        let p = js.I;
                        if (null != c)
                          try {
                            const C = JSON.parse(c);
                            xi('number' == typeof C), (p = C);
                          } catch (C) {
                            Js('SharedClientState', 'Failed to read sequence number from WebStorage', C);
                          }
                        return p;
                      })(i.newValue);
                      o !== js.I && t.sequenceNumberHandler(o);
                    } else if (i.key === t.Ys) return t.syncEngine._i();
                } else t.js.push(i);
              })
            );
          }
        }
        get ii() {
          return this.Ks.get(this.Bs);
        }
        Xs() {
          this.setItem(this.Qs, this.ii.Ms());
        }
        ni(e, t, i) {
          const o = new tf(this.currentUser, e, t, i),
            c = X_(this.persistenceKey, this.currentUser, e);
          this.setItem(c, o.Ms());
        }
        si(e) {
          const t = X_(this.persistenceKey, this.currentUser, e);
          this.removeItem(t);
        }
        oi(e) {
          this.storage.setItem(this.Js, JSON.stringify({ clientId: this.Bs, onlineState: e }));
        }
        ri(e, t, i) {
          const o = J_(this.persistenceKey, e),
            c = new ap(e, t, i);
          this.setItem(o, c.Ms());
        }
        ci() {
          this.setItem(this.Ys, 'value-not-used');
        }
        ai(e) {
          const t = this.Gs.exec(e);
          return t ? t[1] : null;
        }
        hi(e, t) {
          const i = this.ai(e);
          return Wm.Os(i, t);
        }
        li(e, t) {
          const i = this.zs.exec(e),
            o = Number(i[1]);
          return tf.Os(new uo(void 0 !== i[2] ? i[2] : null), o, t);
        }
        di(e, t) {
          const i = this.Hs.exec(e),
            o = Number(i[1]);
          return ap.Os(o, t);
        }
        Zs(e) {
          return Ym.Os(e);
        }
        fi(e) {
          var t = this;
          return (0, Jt.Z)(function* () {
            if (e.user.uid === t.currentUser.uid) return t.syncEngine.mi(e.batchId, e.state, e.error);
            In('SharedClientState', `Ignoring mutation for non-active user ${e.user.uid}`);
          })();
        }
        wi(e) {
          return this.syncEngine.gi(e.targetId, e.state, e.error);
        }
        ui(e, t) {
          const i = t ? this.Ks.insert(e, t) : this.Ks.remove(e),
            o = this.ei(this.Ks),
            c = this.ei(i),
            p = [],
            C = [];
          return (
            c.forEach((I) => {
              o.has(I) || p.push(I);
            }),
            o.forEach((I) => {
              c.has(I) || C.push(I);
            }),
            this.syncEngine.yi(p, C).then(() => {
              this.Ks = i;
            })
          );
        }
        ti(e) {
          this.Ks.get(e.clientId) && this.onlineStateHandler(e.onlineState);
        }
        ei(e) {
          let t = hd();
          return (
            e.forEach((i, o) => {
              t = t.unionWith(o.activeTargetIds);
            }),
            t
          );
        }
      }
      class c0 {
        constructor() {
          (this.pi = new _d()), (this.Ti = {}), (this.onlineStateHandler = null), (this.sequenceNumberHandler = null);
        }
        addPendingMutation(e) {}
        updateMutationState(e, t, i) {}
        addLocalQueryTarget(e) {
          return this.pi.Fs(e), this.Ti[e] || 'not-current';
        }
        updateQueryState(e, t, i) {
          this.Ti[e] = t;
        }
        removeLocalQueryTarget(e) {
          this.pi.Ls(e);
        }
        isLocalQueryTarget(e) {
          return this.pi.activeTargetIds.has(e);
        }
        clearQueryState(e) {
          delete this.Ti[e];
        }
        getAllActiveQueryTargets() {
          return this.pi.activeTargetIds;
        }
        isActiveQueryTarget(e) {
          return this.pi.activeTargetIds.has(e);
        }
        start() {
          return (this.pi = new _d()), Promise.resolve();
        }
        handleUserChange(e, t, i) {}
        setOnlineState(e) {}
        shutdown() {}
        writeSequenceNumber(e) {}
        notifyBundleLoaded() {}
      }
      class KE {
        Ei(e) {}
        shutdown() {}
      }
      class lh {
        constructor() {
          (this.Ii = () => this.Ai()), (this.Ri = () => this.bi()), (this.Pi = []), this.vi();
        }
        Ei(e) {
          this.Pi.push(e);
        }
        shutdown() {
          window.removeEventListener('online', this.Ii), window.removeEventListener('offline', this.Ri);
        }
        vi() {
          window.addEventListener('online', this.Ii), window.addEventListener('offline', this.Ri);
        }
        Ai() {
          In('ConnectivityMonitor', 'Network connectivity changed: AVAILABLE');
          for (const e of this.Pi) e(0);
        }
        bi() {
          In('ConnectivityMonitor', 'Network connectivity changed: UNAVAILABLE');
          for (const e of this.Pi) e(1);
        }
        static Pt() {
          return (
            'undefined' != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener
          );
        }
      }
      const qE = { BatchGetDocuments: 'batchGet', Commit: 'commit', RunQuery: 'runQuery' };
      class ZE {
        constructor(e) {
          (this.Vi = e.Vi), (this.Si = e.Si);
        }
        Di(e) {
          this.Ci = e;
        }
        Ni(e) {
          this.ki = e;
        }
        onMessage(e) {
          this.xi = e;
        }
        close() {
          this.Si();
        }
        send(e) {
          this.Vi(e);
        }
        $i() {
          this.Ci();
        }
        Oi(e) {
          this.ki(e);
        }
        Mi(e) {
          this.xi(e);
        }
      }
      class QE extends class {
        constructor(e) {
          (this.databaseInfo = e),
            (this.databaseId = e.databaseId),
            (this.Fi = (e.ssl ? 'https' : 'http') + '://' + e.host),
            (this.Li =
              'projects/' + this.databaseId.projectId + '/databases/' + this.databaseId.database + '/documents');
        }
        Bi(e, t, i, o, c) {
          const p = this.Ui(e, t);
          In('RestConnection', 'Sending: ', p, i);
          const C = {};
          return (
            this.qi(C, o, c),
            this.Ki(e, p, C, i).then(
              (I) => (In('RestConnection', 'Received: ', I), I),
              (I) => {
                throw (hc('RestConnection', `${e} failed with error: `, I, 'url: ', p, 'request:', i), I);
              }
            )
          );
        }
        ji(e, t, i, o, c) {
          return this.Bi(e, t, i, o, c);
        }
        qi(e, t, i) {
          (e['X-Goog-Api-Client'] = 'gl-js/ fire/' + uc),
            (e['Content-Type'] = 'text/plain'),
            this.databaseInfo.appId && (e['X-Firebase-GMPID'] = this.databaseInfo.appId),
            t && t.headers.forEach((o, c) => (e[c] = o)),
            i && i.headers.forEach((o, c) => (e[c] = o));
        }
        Ui(e, t) {
          return `${this.Fi}/v1/${t}:${qE[e]}`;
        }
      } {
        constructor(e) {
          super(e),
            (this.forceLongPolling = e.forceLongPolling),
            (this.autoDetectLongPolling = e.autoDetectLongPolling),
            (this.useFetchStreams = e.useFetchStreams);
        }
        Ki(e, t, i, o) {
          return new Promise((c, p) => {
            const C = new td();
            C.listenOnce(Ho.COMPLETE, () => {
              try {
                switch (C.getLastErrorCode()) {
                  case Da.NO_ERROR:
                    const U = C.getResponseJson();
                    In('Connection', 'XHR received:', JSON.stringify(U)), c(U);
                    break;
                  case Da.TIMEOUT:
                    In('Connection', 'RPC "' + e + '" timed out'), p(new En(rn.DEADLINE_EXCEEDED, 'Request time out'));
                    break;
                  case Da.HTTP_ERROR:
                    const se = C.getStatus();
                    if (
                      (In(
                        'Connection',
                        'RPC "' + e + '" failed with status:',
                        se,
                        'response text:',
                        C.getResponseText()
                      ),
                      se > 0)
                    ) {
                      const xe = C.getResponseJson().error;
                      if (xe && xe.status && xe.message) {
                        const rt = (function (Ut) {
                          const qt = Ut.toLowerCase().replace(/_/g, '-');
                          return Object.values(rn).indexOf(qt) >= 0 ? qt : rn.UNKNOWN;
                        })(xe.status);
                        p(new En(rt, xe.message));
                      } else p(new En(rn.UNKNOWN, 'Server responded with status ' + C.getStatus()));
                    } else p(new En(rn.UNAVAILABLE, 'Connection failed.'));
                    break;
                  default:
                    ii();
                }
              } finally {
                In('Connection', 'RPC "' + e + '" completed.');
              }
            });
            const I = JSON.stringify(o);
            C.send(t, 'POST', I, i, 15);
          });
        }
        Qi(e, t, i) {
          const o = [this.Fi, '/', 'google.firestore.v1.Firestore', '/', e, '/channel'],
            c = Hc(),
            p = tl(),
            C = {
              httpSessionIdParam: 'gsessionid',
              initMessageHeaders: {},
              messageUrlParams: {
                database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`,
              },
              sendRawJson: !0,
              supportsCrossDomainXhr: !0,
              internalChannelParams: { forwardChannelRequestTimeoutMs: 6e5 },
              forceLongPolling: this.forceLongPolling,
              detectBufferingProxy: this.autoDetectLongPolling,
            };
          this.useFetchStreams && (C.xmlHttpFactory = new Ih({})),
            this.qi(C.initMessageHeaders, t, i),
            (0, je.uI)() ||
              (0, je.b$)() ||
              (0, je.d)() ||
              (0, je.w1)() ||
              (0, je.Mn)() ||
              (0, je.ru)() ||
              (C.httpHeadersOverwriteParam = '$httpHeaders');
          const I = o.join('');
          In('Connection', 'Creating WebChannel: ' + I, C);
          const U = c.createWebChannel(I, C);
          let se = !1,
            xe = !1;
          const rt = new ZE({
              Vi: (qt) => {
                xe
                  ? In('Connection', 'Not sending because WebChannel is closed:', qt)
                  : (se || (In('Connection', 'Opening WebChannel transport.'), U.open(), (se = !0)),
                    In('Connection', 'WebChannel sending:', qt),
                    U.send(qt));
              },
              Si: () => U.close(),
            }),
            Ut = (qt, Mn, Ln) => {
              qt.listen(Mn, (Ki) => {
                try {
                  Ln(Ki);
                } catch (er) {
                  setTimeout(() => {
                    throw er;
                  }, 0);
                }
              });
            };
          return (
            Ut(U, Bl.EventType.OPEN, () => {
              xe || In('Connection', 'WebChannel transport opened.');
            }),
            Ut(U, Bl.EventType.CLOSE, () => {
              xe || ((xe = !0), In('Connection', 'WebChannel transport closed'), rt.Oi());
            }),
            Ut(U, Bl.EventType.ERROR, (qt) => {
              xe ||
                ((xe = !0),
                hc('Connection', 'WebChannel transport errored:', qt),
                rt.Oi(new En(rn.UNAVAILABLE, 'The operation could not be completed')));
            }),
            Ut(U, Bl.EventType.MESSAGE, (qt) => {
              var Mn;
              if (!xe) {
                const Ln = qt.data[0];
                xi(!!Ln);
                const Ki = Ln,
                  er = Ki.error || (null === (Mn = Ki[0]) || void 0 === Mn ? void 0 : Mn.error);
                if (er) {
                  In('Connection', 'WebChannel received error:', er);
                  const yr = er.status;
                  let Ii = (function (ka) {
                      const If = to[ka];
                      if (void 0 !== If) return y_(If);
                    })(yr),
                    Is = er.message;
                  void 0 === Ii &&
                    ((Ii = rn.INTERNAL), (Is = 'Unknown error status: ' + yr + ' with message ' + er.message)),
                    (xe = !0),
                    rt.Oi(new En(Ii, Is)),
                    U.close();
                } else In('Connection', 'WebChannel received:', Ln), rt.Mi(Ln);
              }
            }),
            Ut(p, Pf.STAT_EVENT, (qt) => {
              qt.stat === Th.PROXY
                ? In('Connection', 'Detected buffering proxy')
                : qt.stat === Th.NOPROXY && In('Connection', 'Detected no buffering proxy');
            }),
            setTimeout(() => {
              rt.$i();
            }, 0),
            rt
          );
        }
      }
      function u0() {
        return 'undefined' != typeof window ? window : null;
      }
      function za() {
        return 'undefined' != typeof document ? document : null;
      }
      function ch(n) {
        return new Tm(n, !0);
      }
      class qm {
        constructor(e, t, i = 1e3, o = 1.5, c = 6e4) {
          (this.Me = e),
            (this.timerId = t),
            (this.Wi = i),
            (this.Gi = o),
            (this.zi = c),
            (this.Hi = 0),
            (this.Ji = null),
            (this.Yi = Date.now()),
            this.reset();
        }
        reset() {
          this.Hi = 0;
        }
        Xi() {
          this.Hi = this.zi;
        }
        Zi(e) {
          this.cancel();
          const t = Math.floor(this.Hi + this.tr()),
            i = Math.max(0, Date.now() - this.Yi),
            o = Math.max(0, t - i);
          o > 0 &&
            In(
              'ExponentialBackoff',
              `Backing off for ${o} ms (base delay: ${this.Hi} ms, delay with jitter: ${t} ms, last attempt: ${i} ms ago)`
            ),
            (this.Ji = this.Me.enqueueAfterDelay(this.timerId, o, () => ((this.Yi = Date.now()), e()))),
            (this.Hi *= this.Gi),
            this.Hi < this.Wi && (this.Hi = this.Wi),
            this.Hi > this.zi && (this.Hi = this.zi);
        }
        er() {
          null !== this.Ji && (this.Ji.skipDelay(), (this.Ji = null));
        }
        cancel() {
          null !== this.Ji && (this.Ji.cancel(), (this.Ji = null));
        }
        tr() {
          return (Math.random() - 0.5) * this.Hi;
        }
      }
      class ey {
        constructor(e, t, i, o, c, p, C, I) {
          (this.Me = e),
            (this.nr = i),
            (this.sr = o),
            (this.ir = c),
            (this.authCredentialsProvider = p),
            (this.appCheckCredentialsProvider = C),
            (this.listener = I),
            (this.state = 0),
            (this.rr = 0),
            (this.cr = null),
            (this.ar = null),
            (this.stream = null),
            (this.ur = new qm(e, t));
        }
        hr() {
          return 1 === this.state || 5 === this.state || this.lr();
        }
        lr() {
          return 2 === this.state || 3 === this.state;
        }
        start() {
          4 !== this.state ? this.auth() : this.dr();
        }
        stop() {
          var e = this;
          return (0, Jt.Z)(function* () {
            e.hr() && (yield e.close(0));
          })();
        }
        wr() {
          (this.state = 0), this.ur.reset();
        }
        _r() {
          this.lr() && null === this.cr && (this.cr = this.Me.enqueueAfterDelay(this.nr, 6e4, () => this.mr()));
        }
        gr(e) {
          this.yr(), this.stream.send(e);
        }
        mr() {
          var e = this;
          return (0, Jt.Z)(function* () {
            if (e.lr()) return e.close(0);
          })();
        }
        yr() {
          this.cr && (this.cr.cancel(), (this.cr = null));
        }
        pr() {
          this.ar && (this.ar.cancel(), (this.ar = null));
        }
        close(e, t) {
          var i = this;
          return (0, Jt.Z)(function* () {
            i.yr(),
              i.pr(),
              i.ur.cancel(),
              i.rr++,
              4 !== e
                ? i.ur.reset()
                : t && t.code === rn.RESOURCE_EXHAUSTED
                ? (Js(t.toString()), Js('Using maximum backoff delay to prevent overloading the backend.'), i.ur.Xi())
                : t &&
                  t.code === rn.UNAUTHENTICATED &&
                  3 !== i.state &&
                  (i.authCredentialsProvider.invalidateToken(), i.appCheckCredentialsProvider.invalidateToken()),
              null !== i.stream && (i.Tr(), i.stream.close(), (i.stream = null)),
              (i.state = e),
              yield i.listener.Ni(t);
          })();
        }
        Tr() {}
        auth() {
          this.state = 1;
          const e = this.Er(this.rr),
            t = this.rr;
          Promise.all([this.authCredentialsProvider.getToken(), this.appCheckCredentialsProvider.getToken()]).then(
            ([i, o]) => {
              this.rr === t && this.Ir(i, o);
            },
            (i) => {
              e(() => {
                const o = new En(rn.UNKNOWN, 'Fetching auth token failed: ' + i.message);
                return this.Ar(o);
              });
            }
          );
        }
        Ir(e, t) {
          const i = this.Er(this.rr);
          (this.stream = this.Rr(e, t)),
            this.stream.Di(() => {
              i(
                () => (
                  (this.state = 2),
                  (this.ar = this.Me.enqueueAfterDelay(
                    this.sr,
                    1e4,
                    () => (this.lr() && (this.state = 3), Promise.resolve())
                  )),
                  this.listener.Di()
                )
              );
            }),
            this.stream.Ni((o) => {
              i(() => this.Ar(o));
            }),
            this.stream.onMessage((o) => {
              i(() => this.onMessage(o));
            });
        }
        dr() {
          var e = this;
          (this.state = 5),
            this.ur.Zi(
              (0, Jt.Z)(function* () {
                (e.state = 0), e.start();
              })
            );
        }
        Ar(e) {
          return In('PersistentStream', `close with error: ${e}`), (this.stream = null), this.close(4, e);
        }
        Er(e) {
          return (t) => {
            this.Me.enqueueAndForget(() =>
              this.rr === e
                ? t()
                : (In('PersistentStream', 'stream callback skipped by getCloseGuardedDispatcher.'), Promise.resolve())
            );
          };
        }
      }
      class d0 extends ey {
        constructor(e, t, i, o, c, p) {
          super(e, 'listen_stream_connection_backoff', 'listen_stream_idle', 'health_check_timeout', t, i, o, p),
            (this.k = c);
        }
        Rr(e, t) {
          return this.ir.Qi('Listen', e, t);
        }
        onMessage(e) {
          this.ur.reset();
          const t = (function Lb(n, e) {
              let t;
              if ('targetChange' in e) {
                const i =
                    'NO_CHANGE' === (I = e.targetChange.targetChangeType || 'NO_CHANGE')
                      ? 0
                      : 'ADD' === I
                      ? 1
                      : 'REMOVE' === I
                      ? 2
                      : 'CURRENT' === I
                      ? 3
                      : 'RESET' === I
                      ? 4
                      : ii(),
                  o = e.targetChange.targetIds || [],
                  c = (function (I, U) {
                    return I.C
                      ? (xi(void 0 === U || 'string' == typeof U), Qr.fromBase64String(U || ''))
                      : (xi(void 0 === U || U instanceof Uint8Array), Qr.fromUint8Array(U || new Uint8Array()));
                  })(n, e.targetChange.resumeToken),
                  p = e.targetChange.cause,
                  C =
                    p &&
                    (function (I) {
                      const U = void 0 === I.code ? rn.UNKNOWN : y_(I.code);
                      return new En(U, I.message || '');
                    })(p);
                t = new Yf(i, o, c, C || null);
              } else if ('documentChange' in e) {
                const i = e.documentChange,
                  o = _o(n, i.document.name),
                  c = zo(i.document.updateTime),
                  p = new os({ mapValue: { fields: i.document.fields } }),
                  C = xr.newFoundDocument(o, c, p);
                t = new fd(i.targetIds || [], i.removedTargetIds || [], C.key, C);
              } else if ('documentDelete' in e) {
                const i = e.documentDelete,
                  o = _o(n, i.document),
                  c = i.readTime ? zo(i.readTime) : Si.min(),
                  p = xr.newNoDocument(o, c);
                t = new fd([], i.removedTargetIds || [], p.key, p);
              } else if ('documentRemove' in e) {
                const i = e.documentRemove,
                  o = _o(n, i.document);
                t = new fd([], i.removedTargetIds || [], o, null);
              } else {
                if (!('filter' in e)) return ii();
                {
                  const i = e.filter,
                    c = new Em(i.count || 0);
                  t = new Sm(i.targetId, c);
                }
              }
              var I;
              return t;
            })(this.k, e),
            i = (function (o) {
              if (!('targetChange' in o)) return Si.min();
              const c = o.targetChange;
              return c.targetIds && c.targetIds.length ? Si.min() : c.readTime ? zo(c.readTime) : Si.min();
            })(e);
          return this.listener.br(t, i);
        }
        Pr(e) {
          const t = {};
          (t.database = zh(this.k)),
            (t.addTarget = (function (o, c) {
              let p;
              const C = c.target;
              return (
                (p = il(C) ? { documents: km(o, C) } : { query: Om(o, C) }),
                (p.targetId = c.targetId),
                c.resumeToken.approximateByteSize() > 0
                  ? (p.resumeToken = Fb(o, c.resumeToken))
                  : c.snapshotVersion.compareTo(Si.min()) > 0 && (p.readTime = nh(o, c.snapshotVersion.toTimestamp())),
                p
              );
            })(this.k, e));
          const i = (function Zf(n, e) {
            const t = (function (i, o) {
              switch (o) {
                case 0:
                  return null;
                case 1:
                  return 'existence-filter-mismatch';
                case 2:
                  return 'limbo-document';
                default:
                  return ii();
              }
            })(0, e.purpose);
            return null == t ? null : { 'goog-listen-tags': t };
          })(0, e);
          i && (t.labels = i), this.gr(t);
        }
        vr(e) {
          const t = {};
          (t.database = zh(this.k)), (t.removeTarget = e), this.gr(t);
        }
      }
      class h0 extends ey {
        constructor(e, t, i, o, c, p) {
          super(e, 'write_stream_connection_backoff', 'write_stream_idle', 'health_check_timeout', t, i, o, p),
            (this.k = c),
            (this.Vr = !1);
        }
        get Sr() {
          return this.Vr;
        }
        start() {
          (this.Vr = !1), (this.lastStreamToken = void 0), super.start();
        }
        Tr() {
          this.Vr && this.Dr([]);
        }
        Rr(e, t) {
          return this.ir.Qi('Write', e, t);
        }
        onMessage(e) {
          if ((xi(!!e.streamToken), (this.lastStreamToken = e.streamToken), this.Vr)) {
            this.ur.reset();
            const t = (function Oi(n, e) {
                return n && n.length > 0
                  ? (xi(void 0 !== e),
                    n.map((t) =>
                      (function (i, o) {
                        let c = zo(i.updateTime ? i.updateTime : o);
                        return c.isEqual(Si.min()) && (c = zo(o)), new hi(c, i.transformResults || []);
                      })(t, e)
                    ))
                  : [];
              })(e.writeResults, e.commitTime),
              i = zo(e.commitTime);
            return this.listener.Cr(i, t);
          }
          return xi(!e.writeResults || 0 === e.writeResults.length), (this.Vr = !0), this.listener.Nr();
        }
        kr() {
          const e = {};
          (e.database = zh(this.k)), this.gr(e);
        }
        Dr(e) {
          const t = { streamToken: this.lastStreamToken, writes: e.map((i) => qf(this.k, i)) };
          this.gr(t);
        }
      }
      class XE extends class {} {
        constructor(e, t, i, o) {
          super(),
            (this.authCredentials = e),
            (this.appCheckCredentials = t),
            (this.ir = i),
            (this.k = o),
            (this.$r = !1);
        }
        Or() {
          if (this.$r) throw new En(rn.FAILED_PRECONDITION, 'The client has already been terminated.');
        }
        Bi(e, t, i) {
          return (
            this.Or(),
            Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()])
              .then(([o, c]) => this.ir.Bi(e, t, i, o, c))
              .catch((o) => {
                throw 'FirebaseError' === o.name
                  ? (o.code === rn.UNAUTHENTICATED &&
                      (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()),
                    o)
                  : new En(rn.UNKNOWN, o.toString());
              })
          );
        }
        ji(e, t, i) {
          return (
            this.Or(),
            Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()])
              .then(([o, c]) => this.ir.ji(e, t, i, o, c))
              .catch((o) => {
                throw 'FirebaseError' === o.name
                  ? (o.code === rn.UNAUTHENTICATED &&
                      (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()),
                    o)
                  : new En(rn.UNKNOWN, o.toString());
              })
          );
        }
        terminate() {
          this.$r = !0;
        }
      }
      class JE {
        constructor(e, t) {
          (this.asyncQueue = e),
            (this.onlineStateHandler = t),
            (this.state = 'Unknown'),
            (this.Mr = 0),
            (this.Fr = null),
            (this.Lr = !0);
        }
        Br() {
          0 === this.Mr &&
            (this.Ur('Unknown'),
            (this.Fr = this.asyncQueue.enqueueAfterDelay(
              'online_state_timeout',
              1e4,
              () => (
                (this.Fr = null),
                this.qr("Backend didn't respond within 10 seconds."),
                this.Ur('Offline'),
                Promise.resolve()
              )
            )));
        }
        Kr(e) {
          'Online' === this.state
            ? this.Ur('Unknown')
            : (this.Mr++,
              this.Mr >= 1 &&
                (this.jr(),
                this.qr(`Connection failed 1 times. Most recent error: ${e.toString()}`),
                this.Ur('Offline')));
        }
        set(e) {
          this.jr(), (this.Mr = 0), 'Online' === e && (this.Lr = !1), this.Ur(e);
        }
        Ur(e) {
          e !== this.state && ((this.state = e), this.onlineStateHandler(e));
        }
        qr(e) {
          const t = `Could not reach Cloud Firestore backend. ${e}\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;
          this.Lr ? (Js(t), (this.Lr = !1)) : In('OnlineStateTracker', t);
        }
        jr() {
          null !== this.Fr && (this.Fr.cancel(), (this.Fr = null));
        }
      }
      class ex {
        constructor(e, t, i, o, c) {
          var p = this;
          (this.localStore = e),
            (this.datastore = t),
            (this.asyncQueue = i),
            (this.remoteSyncer = {}),
            (this.Qr = []),
            (this.Wr = new Map()),
            (this.Gr = new Set()),
            (this.zr = []),
            (this.Hr = c),
            this.Hr.Ei((C) => {
              i.enqueueAndForget(
                (0, Jt.Z)(function* () {
                  var I;
                  Vu(p) &&
                    (In('RemoteStore', 'Restarting streams for network reachability change.'),
                    yield ((I = (0, Jt.Z)(function* (U) {
                      const se = Un(U);
                      se.Gr.add(4), yield cp(se), se.Jr.set('Unknown'), se.Gr.delete(4), yield lp(se);
                    })),
                    function (U) {
                      return I.apply(this, arguments);
                    })(p));
                })
              );
            }),
            (this.Jr = new JE(i, o));
        }
      }
      function lp(n) {
        return Zm.apply(this, arguments);
      }
      function Zm() {
        return (
          (Zm = (0, Jt.Z)(function* (n) {
            if (Vu(n)) for (const e of n.zr) yield e(!0);
          })),
          Zm.apply(this, arguments)
        );
      }
      function cp(n) {
        return Qm.apply(this, arguments);
      }
      function Qm() {
        return (
          (Qm = (0, Jt.Z)(function* (n) {
            for (const e of n.zr) yield e(!1);
          })),
          Qm.apply(this, arguments)
        );
      }
      function Xm(n, e) {
        const t = Un(n);
        t.Wr.has(e.targetId) || (t.Wr.set(e.targetId, e), ty(t) ? dp(t) : iu(t).lr() && f0(t, e));
      }
      function up(n, e) {
        const t = Un(n),
          i = iu(t);
        t.Wr.delete(e), i.lr() && tx(t, e), 0 === t.Wr.size && (i.lr() ? i._r() : Vu(t) && t.Jr.set('Unknown'));
      }
      function f0(n, e) {
        n.Yr.X(e.targetId), iu(n).Pr(e);
      }
      function tx(n, e) {
        n.Yr.X(e), iu(n).vr(e);
      }
      function dp(n) {
        (n.Yr = new Ob({
          getRemoteKeysForTarget: (e) => n.remoteSyncer.getRemoteKeysForTarget(e),
          Et: (e) => n.Wr.get(e) || null,
        })),
          iu(n).start(),
          n.Jr.Br();
      }
      function ty(n) {
        return Vu(n) && !iu(n).hr() && n.Wr.size > 0;
      }
      function Vu(n) {
        return 0 === Un(n).Gr.size;
      }
      function ny(n) {
        n.Yr = void 0;
      }
      function IS(n) {
        return xl.apply(this, arguments);
      }
      function xl() {
        return (
          (xl = (0, Jt.Z)(function* (n) {
            n.Wr.forEach((e, t) => {
              f0(n, e);
            });
          })),
          xl.apply(this, arguments)
        );
      }
      function RS(n, e) {
        return p0.apply(this, arguments);
      }
      function p0() {
        return (
          (p0 = (0, Jt.Z)(function* (n, e) {
            ny(n), ty(n) ? (n.Jr.Kr(e), dp(n)) : n.Jr.set('Unknown');
          })),
          p0.apply(this, arguments)
        );
      }
      function m0(n, e, t) {
        return Jm.apply(this, arguments);
      }
      function Jm() {
        return (
          (Jm = (0, Jt.Z)(function* (n, e, t) {
            if ((n.Jr.set('Online'), e instanceof Yf && 2 === e.state && e.cause))
              try {
                yield ((i = (0, Jt.Z)(function* (o, c) {
                  const p = c.cause;
                  for (const C of c.targetIds)
                    o.Wr.has(C) && (yield o.remoteSyncer.rejectListen(C, p), o.Wr.delete(C), o.Yr.removeTarget(C));
                })),
                function (o, c) {
                  return i.apply(this, arguments);
                })(n, e);
              } catch (i) {
                In('RemoteStore', 'Failed to remove targets %s: %s ', e.targetIds.join(','), i), yield hp(n, i);
              }
            else if ((e instanceof fd ? n.Yr.ot(e) : e instanceof Sm ? n.Yr.dt(e) : n.Yr.ut(e), !t.isEqual(Si.min())))
              try {
                const i = yield n0(n.localStore);
                t.compareTo(i) >= 0 &&
                  (yield (function (o, c) {
                    const p = o.Yr.gt(c);
                    return (
                      p.targetChanges.forEach((C, I) => {
                        if (C.resumeToken.approximateByteSize() > 0) {
                          const U = o.Wr.get(I);
                          U && o.Wr.set(I, U.withResumeToken(C.resumeToken, c));
                        }
                      }),
                      p.targetMismatches.forEach((C) => {
                        const I = o.Wr.get(C);
                        if (!I) return;
                        o.Wr.set(C, I.withResumeToken(Qr.EMPTY_BYTE_STRING, I.snapshotVersion)), tx(o, C);
                        const U = new Zn(I.target, C, 1, I.sequenceNumber);
                        f0(o, U);
                      }),
                      o.remoteSyncer.applyRemoteEvent(p)
                    );
                  })(n, t));
              } catch (i) {
                In('RemoteStore', 'Failed to raise snapshot:', i), yield hp(n, i);
              }
            var i;
          })),
          Jm.apply(this, arguments)
        );
      }
      function hp(n, e, t) {
        return iy.apply(this, arguments);
      }
      function iy() {
        return (
          (iy = (0, Jt.Z)(function* (n, e, t) {
            if (!b(e)) throw e;
            n.Gr.add(1),
              yield cp(n),
              n.Jr.set('Offline'),
              t || (t = () => n0(n.localStore)),
              n.asyncQueue.enqueueRetryable(
                (0, Jt.Z)(function* () {
                  In('RemoteStore', 'Retrying IndexedDB access'), yield t(), n.Gr.delete(1), yield lp(n);
                })
              );
          })),
          iy.apply(this, arguments)
        );
      }
      function nx(n, e) {
        return e().catch((t) => hp(n, t, e));
      }
      function uh(n) {
        return fp.apply(this, arguments);
      }
      function fp() {
        return (
          (fp = (0, Jt.Z)(function* (n) {
            const e = Un(n),
              t = io(e);
            let i = e.Qr.length > 0 ? e.Qr[e.Qr.length - 1].batchId : -1;
            for (; ix(e); )
              try {
                const o = yield r0(e.localStore, i);
                if (null === o) {
                  0 === e.Qr.length && t._r();
                  break;
                }
                (i = o.batchId), ry(e, o);
              } catch (o) {
                yield hp(e, o);
              }
            g0(e) && _0(e);
          })),
          fp.apply(this, arguments)
        );
      }
      function ix(n) {
        return Vu(n) && n.Qr.length < 10;
      }
      function ry(n, e) {
        n.Qr.push(e);
        const t = io(n);
        t.lr() && t.Sr && t.Dr(e.mutations);
      }
      function g0(n) {
        return Vu(n) && !io(n).hr() && n.Qr.length > 0;
      }
      function _0(n) {
        io(n).start();
      }
      function rx(n) {
        return sy.apply(this, arguments);
      }
      function sy() {
        return (
          (sy = (0, Jt.Z)(function* (n) {
            io(n).kr();
          })),
          sy.apply(this, arguments)
        );
      }
      function sx(n) {
        return oy.apply(this, arguments);
      }
      function oy() {
        return (
          (oy = (0, Jt.Z)(function* (n) {
            const e = io(n);
            for (const t of n.Qr) e.Dr(t.mutations);
          })),
          oy.apply(this, arguments)
        );
      }
      function eg(n, e, t) {
        return yd.apply(this, arguments);
      }
      function yd() {
        return (
          (yd = (0, Jt.Z)(function* (n, e, t) {
            const i = n.Qr.shift(),
              o = vn.from(i, e, t);
            yield nx(n, () => n.remoteSyncer.applySuccessfulWrite(o)), yield uh(n);
          })),
          yd.apply(this, arguments)
        );
      }
      function ox(n, e) {
        return dh.apply(this, arguments);
      }
      function dh() {
        return (
          (dh = (0, Jt.Z)(function* (n, e) {
            var t;
            e &&
              io(n).Sr &&
              (yield ((t = (0, Jt.Z)(function* (i, o) {
                if (zf((c = o.code)) && c !== rn.ABORTED) {
                  const p = i.Qr.shift();
                  io(i).wr(), yield nx(i, () => i.remoteSyncer.rejectFailedWrite(p.batchId, o)), yield uh(i);
                }
                var c;
              })),
              function (i, o) {
                return t.apply(this, arguments);
              })(n, e)),
              g0(n) && _0(n);
          })),
          dh.apply(this, arguments)
        );
      }
      function y0(n, e) {
        return ay.apply(this, arguments);
      }
      function ay() {
        return (
          (ay = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            t.asyncQueue.verifyOperationInProgress(), In('RemoteStore', 'RemoteStore received new credentials');
            const i = Vu(t);
            t.Gr.add(3),
              yield cp(t),
              i && t.Jr.set('Unknown'),
              yield t.remoteSyncer.handleCredentialChange(e),
              t.Gr.delete(3),
              yield lp(t);
          })),
          ay.apply(this, arguments)
        );
      }
      function pp(n, e) {
        return Kl.apply(this, arguments);
      }
      function Kl() {
        return (
          (Kl = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            e ? (t.Gr.delete(2), yield lp(t)) : e || (t.Gr.add(2), yield cp(t), t.Jr.set('Unknown'));
          })),
          Kl.apply(this, arguments)
        );
      }
      function iu(n) {
        return (
          n.Xr ||
            ((n.Xr = (function (e, t, i) {
              const o = Un(e);
              return o.Or(), new d0(t, o.ir, o.authCredentials, o.appCheckCredentials, o.k, i);
            })(n.datastore, n.asyncQueue, { Di: IS.bind(null, n), Ni: RS.bind(null, n), br: m0.bind(null, n) })),
            n.zr.push(
              (function () {
                var e = (0, Jt.Z)(function* (t) {
                  t ? (n.Xr.wr(), ty(n) ? dp(n) : n.Jr.set('Unknown')) : (yield n.Xr.stop(), ny(n));
                });
                return function (t) {
                  return e.apply(this, arguments);
                };
              })()
            )),
          n.Xr
        );
      }
      function io(n) {
        return (
          n.Zr ||
            ((n.Zr = (function (e, t, i) {
              const o = Un(e);
              return o.Or(), new h0(t, o.ir, o.authCredentials, o.appCheckCredentials, o.k, i);
            })(n.datastore, n.asyncQueue, {
              Di: rx.bind(null, n),
              Ni: ox.bind(null, n),
              Nr: sx.bind(null, n),
              Cr: eg.bind(null, n),
            })),
            n.zr.push(
              (function () {
                var e = (0, Jt.Z)(function* (t) {
                  t
                    ? (n.Zr.wr(), yield uh(n))
                    : (yield n.Zr.stop(),
                      n.Qr.length > 0 &&
                        (In('RemoteStore', `Stopping write stream with ${n.Qr.length} pending writes`), (n.Qr = [])));
                });
                return function (t) {
                  return e.apply(this, arguments);
                };
              })()
            )),
          n.Zr
        );
      }
      class Uu {
        constructor(e, t, i, o, c) {
          (this.asyncQueue = e),
            (this.timerId = t),
            (this.targetTimeMs = i),
            (this.op = o),
            (this.removalCallback = c),
            (this.deferred = new ho()),
            (this.then = this.deferred.promise.then.bind(this.deferred.promise)),
            this.deferred.promise.catch((p) => {});
        }
        static createAndSchedule(e, t, i, o, c) {
          const p = Date.now() + i,
            C = new Uu(e, t, p, o, c);
          return C.start(i), C;
        }
        start(e) {
          this.timerHandle = setTimeout(() => this.handleDelayElapsed(), e);
        }
        skipDelay() {
          return this.handleDelayElapsed();
        }
        cancel(e) {
          null !== this.timerHandle &&
            (this.clearTimeout(),
            this.deferred.reject(new En(rn.CANCELLED, 'Operation cancelled' + (e ? ': ' + e : ''))));
        }
        handleDelayElapsed() {
          this.asyncQueue.enqueueAndForget(() =>
            null !== this.timerHandle
              ? (this.clearTimeout(), this.op().then((e) => this.deferred.resolve(e)))
              : Promise.resolve()
          );
        }
        clearTimeout() {
          null !== this.timerHandle &&
            (this.removalCallback(this), clearTimeout(this.timerHandle), (this.timerHandle = null));
        }
      }
      function ju(n, e) {
        if ((Js('AsyncQueue', `${e}: ${n}`), b(n))) return new En(rn.UNAVAILABLE, `${e}: ${n}`);
        throw n;
      }
      class ha {
        constructor(e) {
          (this.comparator = e
            ? (t, i) => e(t, i) || ui.comparator(t.key, i.key)
            : (t, i) => ui.comparator(t.key, i.key)),
            (this.keyedMap = Dm()),
            (this.sortedSet = new So(this.comparator));
        }
        static emptySet(e) {
          return new ha(e.comparator);
        }
        has(e) {
          return null != this.keyedMap.get(e);
        }
        get(e) {
          return this.keyedMap.get(e);
        }
        first() {
          return this.sortedSet.minKey();
        }
        last() {
          return this.sortedSet.maxKey();
        }
        isEmpty() {
          return this.sortedSet.isEmpty();
        }
        indexOf(e) {
          const t = this.keyedMap.get(e);
          return t ? this.sortedSet.indexOf(t) : -1;
        }
        get size() {
          return this.sortedSet.size;
        }
        forEach(e) {
          this.sortedSet.inorderTraversal((t, i) => (e(t), !1));
        }
        add(e) {
          const t = this.delete(e.key);
          return t.copy(t.keyedMap.insert(e.key, e), t.sortedSet.insert(e, null));
        }
        delete(e) {
          const t = this.get(e);
          return t ? this.copy(this.keyedMap.remove(e), this.sortedSet.remove(t)) : this;
        }
        isEqual(e) {
          if (!(e instanceof ha) || this.size !== e.size) return !1;
          const t = this.sortedSet.getIterator(),
            i = e.sortedSet.getIterator();
          for (; t.hasNext(); ) {
            const o = t.getNext().key,
              c = i.getNext().key;
            if (!o.isEqual(c)) return !1;
          }
          return !0;
        }
        toString() {
          const e = [];
          return (
            this.forEach((t) => {
              e.push(t.toString());
            }),
            0 === e.length ? 'DocumentSet ()' : 'DocumentSet (\n  ' + e.join('  \n') + '\n)'
          );
        }
        copy(e, t) {
          const i = new ha();
          return (i.comparator = this.comparator), (i.keyedMap = e), (i.sortedSet = t), i;
        }
      }
      class tg {
        constructor() {
          this.eo = new So(ui.comparator);
        }
        track(e) {
          const t = e.doc.key,
            i = this.eo.get(t);
          i
            ? 0 !== e.type && 3 === i.type
              ? (this.eo = this.eo.insert(t, e))
              : 3 === e.type && 1 !== i.type
              ? (this.eo = this.eo.insert(t, { type: i.type, doc: e.doc }))
              : 2 === e.type && 2 === i.type
              ? (this.eo = this.eo.insert(t, { type: 2, doc: e.doc }))
              : 2 === e.type && 0 === i.type
              ? (this.eo = this.eo.insert(t, { type: 0, doc: e.doc }))
              : 1 === e.type && 0 === i.type
              ? (this.eo = this.eo.remove(t))
              : 1 === e.type && 2 === i.type
              ? (this.eo = this.eo.insert(t, { type: 1, doc: i.doc }))
              : 0 === e.type && 1 === i.type
              ? (this.eo = this.eo.insert(t, { type: 2, doc: e.doc }))
              : ii()
            : (this.eo = this.eo.insert(t, e));
        }
        no() {
          const e = [];
          return (
            this.eo.inorderTraversal((t, i) => {
              e.push(i);
            }),
            e
          );
        }
      }
      class xc {
        constructor(e, t, i, o, c, p, C, I) {
          (this.query = e),
            (this.docs = t),
            (this.oldDocs = i),
            (this.docChanges = o),
            (this.mutatedKeys = c),
            (this.fromCache = p),
            (this.syncStateChanged = C),
            (this.excludesMetadataChanges = I);
        }
        static fromInitialDocuments(e, t, i, o) {
          const c = [];
          return (
            t.forEach((p) => {
              c.push({ type: 0, doc: p });
            }),
            new xc(e, t, ha.emptySet(t), c, i, o, !0, !1)
          );
        }
        get hasPendingWrites() {
          return !this.mutatedKeys.isEmpty();
        }
        isEqual(e) {
          if (
            !(
              this.fromCache === e.fromCache &&
              this.syncStateChanged === e.syncStateChanged &&
              this.mutatedKeys.isEqual(e.mutatedKeys) &&
              Xc(this.query, e.query) &&
              this.docs.isEqual(e.docs) &&
              this.oldDocs.isEqual(e.oldDocs)
            )
          )
            return !1;
          const t = this.docChanges,
            i = e.docChanges;
          if (t.length !== i.length) return !1;
          for (let o = 0; o < t.length; o++) if (t[o].type !== i[o].type || !t[o].doc.isEqual(i[o].doc)) return !1;
          return !0;
        }
      }
      class nf {
        constructor() {
          (this.so = void 0), (this.listeners = []);
        }
      }
      class rf {
        constructor() {
          (this.queries = new Zh((e) => Uh(e), Xc)), (this.onlineState = 'Unknown'), (this.io = new Set());
        }
      }
      function vd(n, e) {
        return bd.apply(this, arguments);
      }
      function bd() {
        return (
          (bd = (0, Jt.Z)(function* (n, e) {
            const t = Un(n),
              i = e.query;
            let o = !1,
              c = t.queries.get(i);
            if ((c || ((o = !0), (c = new nf())), o))
              try {
                c.so = yield t.onListen(i);
              } catch (p) {
                const C = ju(p, `Initialization of query '${rl(e.query)}' failed`);
                return void e.onError(C);
              }
            t.queries.set(i, c), c.listeners.push(e), e.ro(t.onlineState), c.so && e.oo(c.so) && ng(t);
          })),
          bd.apply(this, arguments)
        );
      }
      function Cd(n, e) {
        return wd.apply(this, arguments);
      }
      function wd() {
        return (
          (wd = (0, Jt.Z)(function* (n, e) {
            const t = Un(n),
              i = e.query;
            let o = !1;
            const c = t.queries.get(i);
            if (c) {
              const p = c.listeners.indexOf(e);
              p >= 0 && (c.listeners.splice(p, 1), (o = 0 === c.listeners.length));
            }
            if (o) return t.queries.delete(i), t.onUnlisten(i);
          })),
          wd.apply(this, arguments)
        );
      }
      function sf(n, e) {
        const t = Un(n);
        let i = !1;
        for (const o of e) {
          const p = t.queries.get(o.query);
          if (p) {
            for (const C of p.listeners) C.oo(o) && (i = !0);
            p.so = o;
          }
        }
        i && ng(t);
      }
      function af(n, e, t) {
        const i = Un(n),
          o = i.queries.get(e);
        if (o) for (const c of o.listeners) c.onError(t);
        i.queries.delete(e);
      }
      function ng(n) {
        n.io.forEach((e) => {
          e.next();
        });
      }
      class ig {
        constructor(e, t, i) {
          (this.query = e),
            (this.co = t),
            (this.ao = !1),
            (this.uo = null),
            (this.onlineState = 'Unknown'),
            (this.options = i || {});
        }
        oo(e) {
          if (!this.options.includeMetadataChanges) {
            const i = [];
            for (const o of e.docChanges) 3 !== o.type && i.push(o);
            e = new xc(e.query, e.docs, e.oldDocs, i, e.mutatedKeys, e.fromCache, e.syncStateChanged, !0);
          }
          let t = !1;
          return (
            this.ao
              ? this.ho(e) && (this.co.next(e), (t = !0))
              : this.lo(e, this.onlineState) && (this.fo(e), (t = !0)),
            (this.uo = e),
            t
          );
        }
        onError(e) {
          this.co.error(e);
        }
        ro(e) {
          this.onlineState = e;
          let t = !1;
          return this.uo && !this.ao && this.lo(this.uo, e) && (this.fo(this.uo), (t = !0)), t;
        }
        lo(e, t) {
          return !e.fromCache || !((this.options.wo && 'Offline' !== t) || (e.docs.isEmpty() && 'Offline' !== t));
        }
        ho(e) {
          return (
            e.docChanges.length > 0 ||
            (!!(e.syncStateChanged || (this.uo && this.uo.hasPendingWrites !== e.hasPendingWrites)) &&
              !0 === this.options.includeMetadataChanges)
          );
        }
        fo(e) {
          (e = xc.fromInitialDocuments(e.query, e.docs, e.mutatedKeys, e.fromCache)), (this.ao = !0), this.co.next(e);
        }
      }
      class v0 {
        constructor(e, t) {
          (this.payload = e), (this.byteLength = t);
        }
        _o() {
          return 'metadata' in this.payload;
        }
      }
      class ly {
        constructor(e) {
          this.k = e;
        }
        Hn(e) {
          return _o(this.k, e);
        }
        Jn(e) {
          return e.metadata.exists
            ? A_(this.k, e.document, !1)
            : xr.newNoDocument(this.Hn(e.metadata.name), this.Yn(e.metadata.readTime));
        }
        Yn(e) {
          return zo(e);
        }
      }
      class b0 {
        constructor(e, t, i) {
          (this.mo = e),
            (this.localStore = t),
            (this.k = i),
            (this.queries = []),
            (this.documents = []),
            (this.progress = cy(e));
        }
        yo(e) {
          this.progress.bytesLoaded += e.byteLength;
          let t = this.progress.documentsLoaded;
          return (
            e.payload.namedQuery
              ? this.queries.push(e.payload.namedQuery)
              : e.payload.documentMetadata
              ? (this.documents.push({ metadata: e.payload.documentMetadata }),
                e.payload.documentMetadata.exists || ++t)
              : e.payload.document && ((this.documents[this.documents.length - 1].document = e.payload.document), ++t),
            t !== this.progress.documentsLoaded
              ? ((this.progress.documentsLoaded = t), Object.assign({}, this.progress))
              : null
          );
        }
        po(e) {
          const t = new Map(),
            i = new ly(this.k);
          for (const o of e)
            if (o.metadata.queries) {
              const c = i.Hn(o.metadata.name);
              for (const p of o.metadata.queries) {
                const C = (t.get(p) || Dr()).add(c);
                t.set(p, C);
              }
            }
          return t;
        }
        complete() {
          var e = this;
          return (0, Jt.Z)(function* () {
            const t = yield (function a0(n, e, t, i) {
                return zm.apply(this, arguments);
              })(e.localStore, new ly(e.k), e.documents, e.mo.id),
              i = e.po(e.documents);
            for (const o of e.queries) yield Bu(e.localStore, o, i.get(o.name));
            return (e.progress.taskState = 'Success'), new Qb(Object.assign({}, e.progress), t);
          })();
        }
      }
      function cy(n) {
        return {
          taskState: 'Running',
          documentsLoaded: 0,
          bytesLoaded: 0,
          totalDocuments: n.totalDocuments,
          totalBytes: n.totalBytes,
        };
      }
      class uy {
        constructor(e) {
          this.key = e;
        }
      }
      class dy {
        constructor(e) {
          this.key = e;
        }
      }
      class hy {
        constructor(e, t) {
          (this.query = e),
            (this.To = t),
            (this.Eo = null),
            (this.current = !1),
            (this.Io = Dr()),
            (this.mutatedKeys = Dr()),
            (this.Ao = Zd(e)),
            (this.Ro = new ha(this.Ao));
        }
        get bo() {
          return this.To;
        }
        Po(e, t) {
          const i = t ? t.vo : new tg(),
            o = t ? t.Ro : this.Ro;
          let c = t ? t.mutatedKeys : this.mutatedKeys,
            p = o,
            C = !1;
          const I = Mo(this.query) && o.size === this.query.limit ? o.last() : null,
            U = qc(this.query) && o.size === this.query.limit ? o.first() : null;
          if (
            (e.inorderTraversal((se, xe) => {
              const rt = o.get(se),
                Ut = Ba(this.query, xe) ? xe : null,
                qt = !!rt && this.mutatedKeys.has(rt.key),
                Mn = !!Ut && (Ut.hasLocalMutations || (this.mutatedKeys.has(Ut.key) && Ut.hasCommittedMutations));
              let Ln = !1;
              rt && Ut
                ? rt.data.isEqual(Ut.data)
                  ? qt !== Mn && (i.track({ type: 3, doc: Ut }), (Ln = !0))
                  : this.Vo(rt, Ut) ||
                    (i.track({ type: 2, doc: Ut }),
                    (Ln = !0),
                    ((I && this.Ao(Ut, I) > 0) || (U && this.Ao(Ut, U) < 0)) && (C = !0))
                : !rt && Ut
                ? (i.track({ type: 0, doc: Ut }), (Ln = !0))
                : rt && !Ut && (i.track({ type: 1, doc: rt }), (Ln = !0), (I || U) && (C = !0)),
                Ln &&
                  (Ut
                    ? ((p = p.add(Ut)), (c = Mn ? c.add(se) : c.delete(se)))
                    : ((p = p.delete(se)), (c = c.delete(se))));
            }),
            Mo(this.query) || qc(this.query))
          )
            for (; p.size > this.query.limit; ) {
              const se = Mo(this.query) ? p.last() : p.first();
              (p = p.delete(se.key)), (c = c.delete(se.key)), i.track({ type: 1, doc: se });
            }
          return { Ro: p, vo: i, Bn: C, mutatedKeys: c };
        }
        Vo(e, t) {
          return e.hasLocalMutations && t.hasCommittedMutations && !t.hasLocalMutations;
        }
        applyChanges(e, t, i) {
          const o = this.Ro;
          (this.Ro = e.Ro), (this.mutatedKeys = e.mutatedKeys);
          const c = e.vo.no();
          c.sort(
            (U, se) =>
              (function (xe, rt) {
                const Ut = (qt) => {
                  switch (qt) {
                    case 0:
                      return 1;
                    case 2:
                    case 3:
                      return 2;
                    case 1:
                      return 0;
                    default:
                      return ii();
                  }
                };
                return Ut(xe) - Ut(rt);
              })(U.type, se.type) || this.Ao(U.doc, se.doc)
          ),
            this.So(i);
          const p = t ? this.Do() : [],
            C = 0 === this.Io.size && this.current ? 1 : 0,
            I = C !== this.Eo;
          return (
            (this.Eo = C),
            0 !== c.length || I
              ? { snapshot: new xc(this.query, e.Ro, o, c, e.mutatedKeys, 0 === C, I, !1), Co: p }
              : { Co: p }
          );
        }
        ro(e) {
          return this.current && 'Offline' === e
            ? ((this.current = !1),
              this.applyChanges({ Ro: this.Ro, vo: new tg(), mutatedKeys: this.mutatedKeys, Bn: !1 }, !1))
            : { Co: [] };
        }
        No(e) {
          return !this.To.has(e) && !!this.Ro.has(e) && !this.Ro.get(e).hasLocalMutations;
        }
        So(e) {
          e &&
            (e.addedDocuments.forEach((t) => (this.To = this.To.add(t))),
            e.modifiedDocuments.forEach((t) => {}),
            e.removedDocuments.forEach((t) => (this.To = this.To.delete(t))),
            (this.current = e.current));
        }
        Do() {
          if (!this.current) return [];
          const e = this.Io;
          (this.Io = Dr()),
            this.Ro.forEach((i) => {
              this.No(i.key) && (this.Io = this.Io.add(i.key));
            });
          const t = [];
          return (
            e.forEach((i) => {
              this.Io.has(i) || t.push(new dy(i));
            }),
            this.Io.forEach((i) => {
              e.has(i) || t.push(new uy(i));
            }),
            t
          );
        }
        ko(e) {
          (this.To = e.zn), (this.Io = Dr());
          const t = this.Po(e.documents);
          return this.applyChanges(t, !0);
        }
        xo() {
          return xc.fromInitialDocuments(this.query, this.Ro, this.mutatedKeys, 0 === this.Eo);
        }
      }
      class ax {
        constructor(e, t, i) {
          (this.query = e), (this.targetId = t), (this.view = i);
        }
      }
      class C0 {
        constructor(e) {
          (this.key = e), (this.$o = !1);
        }
      }
      class lx {
        constructor(e, t, i, o, c, p) {
          (this.localStore = e),
            (this.remoteStore = t),
            (this.eventManager = i),
            (this.sharedClientState = o),
            (this.currentUser = c),
            (this.maxConcurrentLimboResolutions = p),
            (this.Oo = {}),
            (this.Mo = new Zh((C) => Uh(C), Xc)),
            (this.Fo = new Map()),
            (this.Lo = new Set()),
            (this.Bo = new So(ui.comparator)),
            (this.Uo = new Map()),
            (this.qo = new Y_()),
            (this.Ko = {}),
            (this.jo = new Map()),
            (this.Qo = oh.re()),
            (this.onlineState = 'Unknown'),
            (this.Wo = void 0);
        }
        get isPrimaryClient() {
          return !0 === this.Wo;
        }
      }
      function w0(n, e) {
        return rg.apply(this, arguments);
      }
      function rg() {
        return (
          (rg = (0, Jt.Z)(function* (n, e) {
            const t = Ey(n);
            let i, o;
            const c = t.Mo.get(e);
            if (c) (i = c.targetId), t.sharedClientState.addLocalQueryTarget(i), (o = c.view.xo());
            else {
              const p = yield Xh(t.localStore, Xr(e)),
                C = t.sharedClientState.addLocalQueryTarget(p.targetId);
              (i = p.targetId), (o = yield fy(t, e, i, 'current' === C)), t.isPrimaryClient && Xm(t.remoteStore, p);
            }
            return o;
          })),
          rg.apply(this, arguments)
        );
      }
      function fy(n, e, t, i) {
        return py.apply(this, arguments);
      }
      function py() {
        return (
          (py = (0, Jt.Z)(function* (n, e, t, i) {
            n.Go = (se, xe, rt) => {
              return ((Ut = (0, Jt.Z)(function* (qt, Mn, Ln, Ki) {
                let er = Mn.view.Po(Ln);
                er.Bn && (er = yield $_(qt.localStore, Mn.query, !1).then(({ documents: Is }) => Mn.view.Po(Is, er)));
                const yr = Ki && Ki.targetChanges.get(Mn.targetId),
                  Ii = Mn.view.applyChanges(er, qt.isPrimaryClient, yr);
                return og(qt, Mn.targetId, Ii.Co), Ii.snapshot;
              })),
              function (qt, Mn, Ln, Ki) {
                return Ut.apply(this, arguments);
              })(n, se, xe, rt);
              var Ut;
            };
            const o = yield $_(n.localStore, e, !0),
              c = new hy(e, o.zn),
              p = c.Po(o.documents),
              C = eh.createSynthesizedTargetChangeForCurrentChange(t, i && 'Offline' !== n.onlineState),
              I = c.applyChanges(p, n.isPrimaryClient, C);
            og(n, t, I.Co);
            const U = new ax(e, t, c);
            return n.Mo.set(e, U), n.Fo.has(t) ? n.Fo.get(t).push(e) : n.Fo.set(t, [e]), I.snapshot;
          })),
          py.apply(this, arguments)
        );
      }
      function E0(n, e) {
        return my.apply(this, arguments);
      }
      function my() {
        return (
          (my = (0, Jt.Z)(function* (n, e) {
            const t = Un(n),
              i = t.Mo.get(e),
              o = t.Fo.get(i.targetId);
            if (o.length > 1)
              return (
                t.Fo.set(
                  i.targetId,
                  o.filter((c) => !Xc(c, e))
                ),
                void t.Mo.delete(e)
              );
            t.isPrimaryClient
              ? (t.sharedClientState.removeLocalQueryTarget(i.targetId),
                t.sharedClientState.isActiveQueryTarget(i.targetId) ||
                  (yield Jh(t.localStore, i.targetId, !1)
                    .then(() => {
                      t.sharedClientState.clearQueryState(i.targetId), up(t.remoteStore, i.targetId), Dc(t, i.targetId);
                    })
                    .catch(qh)))
              : (Dc(t, i.targetId), yield Jh(t.localStore, i.targetId, !0));
          })),
          my.apply(this, arguments)
        );
      }
      function gy() {
        return (
          (gy = (0, Jt.Z)(function* (n, e, t) {
            const i = bp(n);
            try {
              const o = yield (function (c, p) {
                const C = Un(c),
                  I = eo.now(),
                  U = p.reduce((xe, rt) => xe.add(rt.key), Dr());
                let se;
                return C.persistence
                  .runTransaction('Locally write mutations', 'readwrite', (xe) =>
                    C.Wn.vn(xe, U).next((rt) => {
                      se = rt;
                      const Ut = [];
                      for (const qt of p) {
                        const Mn = ld(qt, se.get(qt.key));
                        null != Mn && Ut.push(new yl(qt.key, Mn, Nh(Mn.value.mapValue), Fi.exists(!0)));
                      }
                      return C.An.addMutationBatch(xe, I, Ut, p);
                    })
                  )
                  .then((xe) => (xe.applyToLocalDocumentSet(se), { batchId: xe.batchId, changes: se }));
              })(i.localStore, e);
              i.sharedClientState.addPendingMutation(o.batchId),
                (function (c, p, C) {
                  let I = c.Ko[c.currentUser.toKey()];
                  I || (I = new So(Ji)), (I = I.insert(p, C)), (c.Ko[c.currentUser.toKey()] = I);
                })(i, o.batchId, t),
                yield ql(i, o.changes),
                yield uh(i.remoteStore);
            } catch (o) {
              const c = ju(o, 'Failed to persist write');
              t.reject(c);
            }
          })),
          gy.apply(this, arguments)
        );
      }
      function D0(n, e) {
        return M0.apply(this, arguments);
      }
      function M0() {
        return (
          (M0 = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            try {
              const i = yield z_(t.localStore, e);
              e.targetChanges.forEach((o, c) => {
                const p = t.Uo.get(c);
                p &&
                  (xi(o.addedDocuments.size + o.modifiedDocuments.size + o.removedDocuments.size <= 1),
                  o.addedDocuments.size > 0
                    ? (p.$o = !0)
                    : o.modifiedDocuments.size > 0
                    ? xi(p.$o)
                    : o.removedDocuments.size > 0 && (xi(p.$o), (p.$o = !1)));
              }),
                yield ql(t, i, e);
            } catch (i) {
              yield qh(i);
            }
          })),
          M0.apply(this, arguments)
        );
      }
      function S0(n, e, t) {
        const i = Un(n);
        if ((i.isPrimaryClient && 0 === t) || (!i.isPrimaryClient && 1 === t)) {
          const o = [];
          i.Mo.forEach((c, p) => {
            const C = p.view.ro(e);
            C.snapshot && o.push(C.snapshot);
          }),
            (function (c, p) {
              const C = Un(c);
              C.onlineState = p;
              let I = !1;
              C.queries.forEach((U, se) => {
                for (const xe of se.listeners) xe.ro(p) && (I = !0);
              }),
                I && ng(C);
            })(i.eventManager, e),
            o.length && i.Oo.br(o),
            (i.onlineState = e),
            i.isPrimaryClient && i.sharedClientState.setOnlineState(e);
        }
      }
      function _y(n, e, t) {
        return mp.apply(this, arguments);
      }
      function mp() {
        return (
          (mp = (0, Jt.Z)(function* (n, e, t) {
            const i = Un(n);
            i.sharedClientState.updateQueryState(e, 'rejected', t);
            const o = i.Uo.get(e),
              c = o && o.key;
            if (c) {
              let p = new So(ui.comparator);
              p = p.insert(c, xr.newNoDocument(c, Si.min()));
              const C = Dr().add(c),
                I = new Ru(Si.min(), new Map(), new $r(Ji), p, C);
              yield D0(i, I), (i.Bo = i.Bo.remove(c)), i.Uo.delete(e), ag(i);
            } else
              yield Jh(i.localStore, e, !1)
                .then(() => Dc(i, e, t))
                .catch(qh);
          })),
          mp.apply(this, arguments)
        );
      }
      function cx(n, e) {
        return A0.apply(this, arguments);
      }
      function A0() {
        return (
          (A0 = (0, Jt.Z)(function* (n, e) {
            const t = Un(n),
              i = e.batch.batchId;
            try {
              const o = yield G_(t.localStore, e);
              yy(t, i, null), I0(t, i), t.sharedClientState.updateMutationState(i, 'acknowledged'), yield ql(t, o);
            } catch (o) {
              yield qh(o);
            }
          })),
          A0.apply(this, arguments)
        );
      }
      function kS(n, e, t) {
        return T0.apply(this, arguments);
      }
      function T0() {
        return (
          (T0 = (0, Jt.Z)(function* (n, e, t) {
            const i = Un(n);
            try {
              const o = yield (function (c, p) {
                const C = Un(c);
                return C.persistence.runTransaction('Reject batch', 'readwrite-primary', (I) => {
                  let U;
                  return C.An.lookupMutationBatch(I, p)
                    .next((se) => (xi(null !== se), (U = se.keys()), C.An.removeMutationBatch(I, se)))
                    .next(() => C.An.performConsistencyCheck(I))
                    .next(() => C.Wn.vn(I, U));
                });
              })(i.localStore, e);
              yy(i, e, t), I0(i, e), i.sharedClientState.updateMutationState(e, 'rejected', t), yield ql(i, o);
            } catch (o) {
              yield qh(o);
            }
          })),
          T0.apply(this, arguments)
        );
      }
      function sg() {
        return (
          (sg = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            Vu(t.remoteStore) ||
              In(
                'SyncEngine',
                "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."
              );
            try {
              const i = yield (function (c) {
                const p = Un(c);
                return p.persistence.runTransaction('Get highest unacknowledged batch id', 'readonly', (C) =>
                  p.An.getHighestUnacknowledgedBatchId(C)
                );
              })(t.localStore);
              if (-1 === i) return void e.resolve();
              const o = t.jo.get(i) || [];
              o.push(e), t.jo.set(i, o);
            } catch (i) {
              const o = ju(i, 'Initialization of waitForPendingWrites() operation failed');
              e.reject(o);
            }
          })),
          sg.apply(this, arguments)
        );
      }
      function I0(n, e) {
        (n.jo.get(e) || []).forEach((t) => {
          t.resolve();
        }),
          n.jo.delete(e);
      }
      function yy(n, e, t) {
        const i = Un(n);
        let o = i.Ko[i.currentUser.toKey()];
        if (o) {
          const c = o.get(e);
          c && (t ? c.reject(t) : c.resolve(), (o = o.remove(e))), (i.Ko[i.currentUser.toKey()] = o);
        }
      }
      function Dc(n, e, t = null) {
        n.sharedClientState.removeLocalQueryTarget(e);
        for (const i of n.Fo.get(e)) n.Mo.delete(i), t && n.Oo.zo(i, t);
        n.Fo.delete(e),
          n.isPrimaryClient &&
            n.qo.us(e).forEach((i) => {
              n.qo.containsKey(i) || R0(n, i);
            });
      }
      function R0(n, e) {
        n.Lo.delete(e.path.canonicalString());
        const t = n.Bo.get(e);
        null !== t && (up(n.remoteStore, t), (n.Bo = n.Bo.remove(e)), n.Uo.delete(t), ag(n));
      }
      function og(n, e, t) {
        for (const i of t)
          i instanceof uy
            ? (n.qo.addReference(i.key, e), dx(n, i))
            : i instanceof dy
            ? (In('SyncEngine', 'Document no longer in limbo: ' + i.key),
              n.qo.removeReference(i.key, e),
              n.qo.containsKey(i.key) || R0(n, i.key))
            : ii();
      }
      function dx(n, e) {
        const t = e.key,
          i = t.path.canonicalString();
        n.Bo.get(t) || n.Lo.has(i) || (In('SyncEngine', 'New document in limbo: ' + t), n.Lo.add(i), ag(n));
      }
      function ag(n) {
        for (; n.Lo.size > 0 && n.Bo.size < n.maxConcurrentLimboResolutions; ) {
          const e = n.Lo.values().next().value;
          n.Lo.delete(e);
          const t = new ui(vr.fromString(e)),
            i = n.Qo.next();
          n.Uo.set(i, new C0(t)), (n.Bo = n.Bo.insert(t, i)), Xm(n.remoteStore, new Zn(Xr(Gl(t.path)), i, 2, js.I));
        }
      }
      function ql(n, e, t) {
        return vy.apply(this, arguments);
      }
      function vy() {
        return (
          (vy = (0, Jt.Z)(function* (n, e, t) {
            const i = Un(n),
              o = [],
              c = [],
              p = [];
            var C;
            i.Mo.isEmpty() ||
              (i.Mo.forEach((C, I) => {
                p.push(
                  i.Go(I, e, t).then((U) => {
                    if (U) {
                      i.isPrimaryClient &&
                        i.sharedClientState.updateQueryState(I.targetId, U.fromCache ? 'not-current' : 'current'),
                        o.push(U);
                      const se = j_.$n(I.targetId, U);
                      c.push(se);
                    }
                  })
                );
              }),
              yield Promise.all(p),
              i.Oo.br(o),
              yield ((C = (0, Jt.Z)(function* (I, U) {
                const se = Un(I);
                try {
                  yield se.persistence.runTransaction('notifyLocalViewChanges', 'readwrite', (xe) =>
                    Dn.forEach(U, (rt) =>
                      Dn.forEach(rt.kn, (Ut) =>
                        se.persistence.referenceDelegate.addReference(xe, rt.targetId, Ut)
                      ).next(() =>
                        Dn.forEach(rt.xn, (Ut) => se.persistence.referenceDelegate.removeReference(xe, rt.targetId, Ut))
                      )
                    )
                  );
                } catch (xe) {
                  if (!b(xe)) throw xe;
                  In('LocalStore', 'Failed to update sequence numbers: ' + xe);
                }
                for (const xe of U) {
                  const rt = xe.targetId;
                  if (!xe.fromCache) {
                    const Ut = se.qn.get(rt),
                      Mn = Ut.withLastLimboFreeSnapshotVersion(Ut.snapshotVersion);
                    se.qn = se.qn.insert(rt, Mn);
                  }
                }
              })),
              function (I, U) {
                return C.apply(this, arguments);
              })(i.localStore, c));
          })),
          vy.apply(this, arguments)
        );
      }
      function k0(n, e) {
        return by.apply(this, arguments);
      }
      function by() {
        return (
          (by = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            if (!t.currentUser.isEqual(e)) {
              In('SyncEngine', 'User change. New user:', e.toKey());
              const i = yield t0(t.localStore, e);
              (t.currentUser = e),
                (o = t).jo.forEach((p) => {
                  p.forEach((C) => {
                    C.reject(new En(rn.CANCELLED, "'waitForPendingWrites' promise is rejected due to a user change."));
                  });
                }),
                o.jo.clear(),
                t.sharedClientState.handleUserChange(e, i.removedBatchIds, i.addedBatchIds),
                yield ql(t, i.Gn);
            }
            var o;
          })),
          by.apply(this, arguments)
        );
      }
      function hx(n, e) {
        const t = Un(n),
          i = t.Uo.get(e);
        if (i && i.$o) return Dr().add(i.key);
        {
          let o = Dr();
          const c = t.Fo.get(e);
          if (!c) return o;
          for (const p of c) {
            const C = t.Mo.get(p);
            o = o.unionWith(C.view.bo);
          }
          return o;
        }
      }
      function fx(n, e) {
        return Cy.apply(this, arguments);
      }
      function Cy() {
        return (
          (Cy = (0, Jt.Z)(function* (n, e) {
            const t = Un(n),
              i = yield $_(t.localStore, e.query, !0),
              o = e.view.ko(i);
            return t.isPrimaryClient && og(t, e.targetId, o.Co), o;
          })),
          Cy.apply(this, arguments)
        );
      }
      function px(n) {
        return lg.apply(this, arguments);
      }
      function lg() {
        return (
          (lg = (0, Jt.Z)(function* (n) {
            const e = Un(n);
            return W_(e.localStore).then((t) => ql(e, t));
          })),
          lg.apply(this, arguments)
        );
      }
      function mx(n, e, t, i) {
        return cg.apply(this, arguments);
      }
      function cg() {
        return (
          (cg = (0, Jt.Z)(function* (n, e, t, i) {
            const o = Un(n),
              c = yield (function (p, C) {
                const I = Un(p),
                  U = Un(I.An);
                return I.persistence.runTransaction('Lookup mutation documents', 'readonly', (se) =>
                  U.Zt(se, C).next((xe) => (xe ? I.Wn.vn(se, xe) : Dn.resolve(null)))
                );
              })(o.localStore, e);
            var C;
            null !== c
              ? ('pending' === t
                  ? yield uh(o.remoteStore)
                  : 'acknowledged' === t || 'rejected' === t
                  ? (yy(o, e, i || null), I0(o, e), (C = e), Un(Un(o.localStore).An).ee(C))
                  : ii(),
                yield ql(o, c))
              : In('SyncEngine', 'Cannot apply mutation batch with id: ' + e);
          })),
          cg.apply(this, arguments)
        );
      }
      function gp() {
        return (
          (gp = (0, Jt.Z)(function* (n, e) {
            const t = Un(n);
            if ((Ey(t), bp(t), !0 === e && !0 !== t.Wo)) {
              const i = t.sharedClientState.getAllActiveQueryTargets(),
                o = yield gx(t, i.toArray());
              (t.Wo = !0), yield pp(t.remoteStore, !0);
              for (const c of o) Xm(t.remoteStore, c);
            } else if (!1 === e && !1 !== t.Wo) {
              const i = [];
              let o = Promise.resolve();
              t.Fo.forEach((c, p) => {
                t.sharedClientState.isLocalQueryTarget(p)
                  ? i.push(p)
                  : (o = o.then(() => (Dc(t, p), Jh(t.localStore, p, !0)))),
                  up(t.remoteStore, p);
              }),
                yield o,
                yield gx(t, i),
                (function (c) {
                  const p = Un(c);
                  p.Uo.forEach((C, I) => {
                    up(p.remoteStore, I);
                  }),
                    p.qo.hs(),
                    (p.Uo = new Map()),
                    (p.Bo = new So(ui.comparator));
                })(t),
                (t.Wo = !1),
                yield pp(t.remoteStore, !1);
            }
          })),
          gp.apply(this, arguments)
        );
      }
      function gx(n, e, t) {
        return _p.apply(this, arguments);
      }
      function _p() {
        return (
          (_p = (0, Jt.Z)(function* (n, e, t) {
            const i = Un(n),
              o = [],
              c = [];
            for (const p of e) {
              let C;
              const I = i.Fo.get(p);
              if (I && 0 !== I.length) {
                C = yield Xh(i.localStore, Xr(I[0]));
                for (const U of I) {
                  const se = i.Mo.get(U),
                    xe = yield fx(i, se);
                  xe.snapshot && c.push(xe.snapshot);
                }
              } else {
                const U = yield s0(i.localStore, p);
                (C = yield Xh(i.localStore, U)), yield fy(i, P0(U), p, !1);
              }
              o.push(C);
            }
            return i.Oo.br(c), o;
          })),
          _p.apply(this, arguments)
        );
      }
      function P0(n) {
        return Su(n.path, n.collectionGroup, n.orderBy, n.filters, n.limit, 'F', n.startAt, n.endAt);
      }
      function OS(n) {
        const e = Un(n);
        return Un(Un(e.localStore).persistence).Tn();
      }
      function yp(n, e, t, i) {
        return ug.apply(this, arguments);
      }
      function ug() {
        return (
          (ug = (0, Jt.Z)(function* (n, e, t, i) {
            const o = Un(n);
            if (o.Wo) In('SyncEngine', 'Ignoring unexpected query state notification.');
            else if (o.Fo.has(e))
              switch (t) {
                case 'current':
                case 'not-current': {
                  const c = yield W_(o.localStore),
                    p = Ru.createSynthesizedRemoteEventForCurrentChange(e, 'current' === t);
                  yield ql(o, c, p);
                  break;
                }
                case 'rejected':
                  yield Jh(o.localStore, e, !0), Dc(o, e, i);
                  break;
                default:
                  ii();
              }
          })),
          ug.apply(this, arguments)
        );
      }
      function wy(n, e, t) {
        return vp.apply(this, arguments);
      }
      function vp() {
        return (
          (vp = (0, Jt.Z)(function* (n, e, t) {
            const i = Ey(n);
            if (i.Wo) {
              for (const o of e) {
                if (i.Fo.has(o)) {
                  In('SyncEngine', 'Adding an already active target ' + o);
                  continue;
                }
                const c = yield s0(i.localStore, o),
                  p = yield Xh(i.localStore, c);
                yield fy(i, P0(c), p.targetId, !1), Xm(i.remoteStore, p);
              }
              for (const o of t)
                i.Fo.has(o) &&
                  (yield Jh(i.localStore, o, !1)
                    .then(() => {
                      up(i.remoteStore, o), Dc(i, o);
                    })
                    .catch(qh));
            }
          })),
          vp.apply(this, arguments)
        );
      }
      function Ey(n) {
        const e = Un(n);
        return (
          (e.remoteStore.remoteSyncer.applyRemoteEvent = D0.bind(null, e)),
          (e.remoteStore.remoteSyncer.getRemoteKeysForTarget = hx.bind(null, e)),
          (e.remoteStore.remoteSyncer.rejectListen = _y.bind(null, e)),
          (e.Oo.br = sf.bind(null, e.eventManager)),
          (e.Oo.zo = af.bind(null, e.eventManager)),
          e
        );
      }
      function bp(n) {
        const e = Un(n);
        return (
          (e.remoteStore.remoteSyncer.applySuccessfulWrite = cx.bind(null, e)),
          (e.remoteStore.remoteSyncer.rejectFailedWrite = kS.bind(null, e)),
          e
        );
      }
      class Dy {
        constructor() {
          this.synchronizeTabs = !1;
        }
        initialize(e) {
          var t = this;
          return (0, Jt.Z)(function* () {
            (t.k = ch(e.databaseInfo.databaseId)),
              (t.sharedClientState = t.Jo(e)),
              (t.persistence = t.Yo(e)),
              yield t.persistence.start(),
              (t.gcScheduler = t.Xo(e)),
              (t.localStore = t.Zo(e));
          })();
        }
        Xo(e) {
          return null;
        }
        Zo(e) {
          return e0(this.persistence, new Jb(), e.initialUser, this.k);
        }
        Yo(e) {
          return new YE($m.ks, this.k);
        }
        Jo(e) {
          return new c0();
        }
        terminate() {
          var e = this;
          return (0, Jt.Z)(function* () {
            e.gcScheduler && e.gcScheduler.stop(), yield e.sharedClientState.shutdown(), yield e.persistence.shutdown();
          })();
        }
      }
      class _x extends Dy {
        constructor(e, t, i) {
          super(), (this.tc = e), (this.cacheSizeBytes = t), (this.forceOwnership = i), (this.synchronizeTabs = !1);
        }
        initialize(e) {
          var t = () => super.initialize,
            i = this;
          return (0, Jt.Z)(function* () {
            yield t().call(i, e),
              yield (function o0(n) {
                return Gm.apply(this, arguments);
              })(i.localStore),
              yield i.tc.initialize(i, e),
              yield bp(i.tc.syncEngine),
              yield uh(i.tc.remoteStore),
              yield i.persistence.sn(
                () => (i.gcScheduler && !i.gcScheduler.started && i.gcScheduler.start(i.localStore), Promise.resolve())
              );
          })();
        }
        Zo(e) {
          return e0(this.persistence, new Jb(), e.initialUser, this.k);
        }
        Xo(e) {
          return new V_(this.persistence.referenceDelegate.garbageCollector, e.asyncQueue);
        }
        Yo(e) {
          const t = Zb(e.databaseInfo.databaseId, e.databaseInfo.persistenceKey),
            i = void 0 !== this.cacheSizeBytes ? sl.withCacheSize(this.cacheSizeBytes) : sl.DEFAULT;
          return new ip(
            this.synchronizeTabs,
            t,
            e.clientId,
            i,
            e.asyncQueue,
            u0(),
            za(),
            this.k,
            this.sharedClientState,
            !!this.forceOwnership
          );
        }
        Jo(e) {
          return new c0();
        }
      }
      class yx extends _x {
        constructor(e, t) {
          super(e, t, !1), (this.tc = e), (this.cacheSizeBytes = t), (this.synchronizeTabs = !0);
        }
        initialize(e) {
          var t = () => super.initialize,
            i = this;
          return (0, Jt.Z)(function* () {
            yield t().call(i, e);
            const o = i.tc.syncEngine;
            i.sharedClientState instanceof Km &&
              ((i.sharedClientState.syncEngine = {
                mi: mx.bind(null, o),
                gi: yp.bind(null, o),
                yi: wy.bind(null, o),
                Tn: OS.bind(null, o),
                _i: px.bind(null, o),
              }),
              yield i.sharedClientState.start()),
              yield i.persistence.sn(
                (function () {
                  var c = (0, Jt.Z)(function* (p) {
                    yield (function O0(n, e) {
                      return gp.apply(this, arguments);
                    })(i.tc.syncEngine, p),
                      i.gcScheduler &&
                        (p && !i.gcScheduler.started ? i.gcScheduler.start(i.localStore) : p || i.gcScheduler.stop());
                  });
                  return function (p) {
                    return c.apply(this, arguments);
                  };
                })()
              );
          })();
        }
        Jo(e) {
          const t = u0();
          if (!Km.Pt(t))
            throw new En(
              rn.UNIMPLEMENTED,
              'IndexedDB persistence is only available on platforms that support LocalStorage.'
            );
          const i = Zb(e.databaseInfo.databaseId, e.databaseInfo.persistenceKey);
          return new Km(t, e.asyncQueue, i, e.clientId, e.initialUser);
        }
      }
      class Cp {
        initialize(e, t) {
          var i = this;
          return (0, Jt.Z)(function* () {
            i.localStore ||
              ((i.localStore = e.localStore),
              (i.sharedClientState = e.sharedClientState),
              (i.datastore = i.createDatastore(t)),
              (i.remoteStore = i.createRemoteStore(t)),
              (i.eventManager = i.createEventManager(t)),
              (i.syncEngine = i.createSyncEngine(t, !e.synchronizeTabs)),
              (i.sharedClientState.onlineStateHandler = (o) => S0(i.syncEngine, o, 1)),
              (i.remoteStore.remoteSyncer.handleCredentialChange = k0.bind(null, i.syncEngine)),
              yield pp(i.remoteStore, i.syncEngine.isPrimaryClient));
          })();
        }
        createEventManager(e) {
          return new rf();
        }
        createDatastore(e) {
          const t = ch(e.databaseInfo.databaseId),
            i = new QE(e.databaseInfo);
          return new XE(e.authCredentials, e.appCheckCredentials, i, t);
        }
        createRemoteStore(e) {
          return (
            (t = this.localStore),
            (i = this.datastore),
            (o = e.asyncQueue),
            (c = (C) => S0(this.syncEngine, C, 0)),
            (p = lh.Pt() ? new lh() : new KE()),
            new ex(t, i, o, c, p)
          );
          var t, i, o, c, p;
        }
        createSyncEngine(e, t) {
          return (function (i, o, c, p, C, I, U) {
            const se = new lx(i, o, c, p, C, I);
            return U && (se.Wo = !0), se;
          })(
            this.localStore,
            this.remoteStore,
            this.eventManager,
            this.sharedClientState,
            e.initialUser,
            e.maxConcurrentLimboResolutions,
            t
          );
        }
        terminate() {
          return ((e = (0, Jt.Z)(function* (t) {
            const i = Un(t);
            In('RemoteStore', 'RemoteStore shutting down.'),
              i.Gr.add(5),
              yield cp(i),
              i.Hr.shutdown(),
              i.Jr.set('Unknown');
          })),
          function (t) {
            return e.apply(this, arguments);
          })(this.remoteStore);
          var e;
        }
      }
      function dg(n, e = 10240) {
        let t = 0;
        return {
          read: () =>
            (0, Jt.Z)(function* () {
              if (t < n.byteLength) {
                const i = { value: n.slice(t, t + e), done: !1 };
                return (t += e), i;
              }
              return { done: !0 };
            })(),
          cancel: () => (0, Jt.Z)(function* () {})(),
          releaseLock() {},
          closed: Promise.reject('unimplemented'),
        };
      }
      class wp {
        constructor(e) {
          (this.observer = e), (this.muted = !1);
        }
        next(e) {
          this.observer.next && this.ec(this.observer.next, e);
        }
        error(e) {
          this.observer.error
            ? this.ec(this.observer.error, e)
            : console.error('Uncaught Error in snapshot listener:', e);
        }
        nc() {
          this.muted = !0;
        }
        ec(e, t) {
          this.muted ||
            setTimeout(() => {
              this.muted || e(t);
            }, 0);
        }
      }
      class F0 {
        constructor(e, t) {
          (this.sc = e),
            (this.k = t),
            (this.metadata = new ho()),
            (this.buffer = new Uint8Array()),
            (this.ic = new TextDecoder('utf-8')),
            this.rc().then(
              (i) => {
                i && i._o()
                  ? this.metadata.resolve(i.payload.metadata)
                  : this.metadata.reject(
                      new Error(
                        `The first element of the bundle is not a metadata, it is\n             ${JSON.stringify(
                          null == i ? void 0 : i.payload
                        )}`
                      )
                    );
              },
              (i) => this.metadata.reject(i)
            );
        }
        close() {
          return this.sc.cancel();
        }
        getMetadata() {
          var e = this;
          return (0, Jt.Z)(function* () {
            return e.metadata.promise;
          })();
        }
        Ho() {
          var e = this;
          return (0, Jt.Z)(function* () {
            return yield e.getMetadata(), e.rc();
          })();
        }
        rc() {
          var e = this;
          return (0, Jt.Z)(function* () {
            const t = yield e.oc();
            if (null === t) return null;
            const i = e.ic.decode(t),
              o = Number(i);
            isNaN(o) && e.cc(`length string (${i}) is not valid number`);
            const c = yield e.ac(o);
            return new v0(JSON.parse(c), t.length + o);
          })();
        }
        uc() {
          return this.buffer.findIndex((e) => e === '{'.charCodeAt(0));
        }
        oc() {
          var e = this;
          return (0, Jt.Z)(function* () {
            for (; e.uc() < 0 && !(yield e.hc()); );
            if (0 === e.buffer.length) return null;
            const t = e.uc();
            t < 0 && e.cc('Reached the end of bundle when a length string is expected.');
            const i = e.buffer.slice(0, t);
            return (e.buffer = e.buffer.slice(t)), i;
          })();
        }
        ac(e) {
          var t = this;
          return (0, Jt.Z)(function* () {
            for (; t.buffer.length < e; ) (yield t.hc()) && t.cc('Reached the end of bundle when more is expected.');
            const i = t.ic.decode(t.buffer.slice(0, e));
            return (t.buffer = t.buffer.slice(e)), i;
          })();
        }
        cc(e) {
          throw (this.sc.cancel(), new Error(`Invalid bundle format: ${e}`));
        }
        hc() {
          var e = this;
          return (0, Jt.Z)(function* () {
            const t = yield e.sc.read();
            if (!t.done) {
              const i = new Uint8Array(e.buffer.length + t.value.length);
              i.set(e.buffer), i.set(t.value, e.buffer.length), (e.buffer = i);
            }
            return t.done;
          })();
        }
      }
      class My {
        constructor(e) {
          (this.datastore = e),
            (this.readVersions = new Map()),
            (this.mutations = []),
            (this.committed = !1),
            (this.lastWriteError = null),
            (this.writtenDocs = new Set());
        }
        lookup(e) {
          var t = this;
          return (0, Jt.Z)(function* () {
            if ((t.ensureCommitNotCalled(), t.mutations.length > 0))
              throw new En(
                rn.INVALID_ARGUMENT,
                'Firestore transactions require all reads to be executed before all writes.'
              );
            const i = yield ((o = (0, Jt.Z)(function* (c, p) {
              const C = Un(c),
                I = zh(C.k) + '/documents',
                U = { documents: p.map((Ut) => Gh(C.k, Ut)) },
                se = yield C.ji('BatchGetDocuments', I, U),
                xe = new Map();
              se.forEach((Ut) => {
                const qt = (function T_(n, e) {
                  return 'found' in e
                    ? (function (t, i) {
                        xi(!!i.found);
                        const o = _o(t, i.found.name),
                          c = zo(i.found.updateTime),
                          p = new os({ mapValue: { fields: i.found.fields } });
                        return xr.newFoundDocument(o, c, p);
                      })(n, e)
                    : 'missing' in e
                    ? (function (t, i) {
                        xi(!!i.missing), xi(!!i.readTime);
                        const o = _o(t, i.missing),
                          c = zo(i.readTime);
                        return xr.newNoDocument(o, c);
                      })(n, e)
                    : ii();
                })(C.k, Ut);
                xe.set(qt.key.toString(), qt);
              });
              const rt = [];
              return (
                p.forEach((Ut) => {
                  const qt = xe.get(Ut.toString());
                  xi(!!qt), rt.push(qt);
                }),
                rt
              );
            })),
            function (c, p) {
              return o.apply(this, arguments);
            })(t.datastore, e);
            var o;
            return i.forEach((o) => t.recordVersion(o)), i;
          })();
        }
        set(e, t) {
          this.write(t.toMutation(e, this.precondition(e))), this.writtenDocs.add(e.toString());
        }
        update(e, t) {
          try {
            this.write(t.toMutation(e, this.preconditionForUpdate(e)));
          } catch (i) {
            this.lastWriteError = i;
          }
          this.writtenDocs.add(e.toString());
        }
        delete(e) {
          this.write(new eu(e, this.precondition(e))), this.writtenDocs.add(e.toString());
        }
        commit() {
          var e = this;
          return (0, Jt.Z)(function* () {
            if ((e.ensureCommitNotCalled(), e.lastWriteError)) throw e.lastWriteError;
            const t = e.readVersions;
            var i;
            e.mutations.forEach((i) => {
              t.delete(i.key.toString());
            }),
              t.forEach((i, o) => {
                const c = ui.fromPath(o);
                e.mutations.push(new Jd(c, e.precondition(c)));
              }),
              yield ((i = (0, Jt.Z)(function* (o, c) {
                const p = Un(o),
                  C = zh(p.k) + '/documents',
                  I = { writes: c.map((U) => qf(p.k, U)) };
                yield p.Bi('Commit', C, I);
              })),
              function (o, c) {
                return i.apply(this, arguments);
              })(e.datastore, e.mutations),
              (e.committed = !0);
          })();
        }
        recordVersion(e) {
          let t;
          if (e.isFoundDocument()) t = e.version;
          else {
            if (!e.isNoDocument()) throw ii();
            t = Si.min();
          }
          const i = this.readVersions.get(e.key.toString());
          if (i) {
            if (!t.isEqual(i)) throw new En(rn.ABORTED, 'Document version changed between two reads.');
          } else this.readVersions.set(e.key.toString(), t);
        }
        precondition(e) {
          const t = this.readVersions.get(e.toString());
          return !this.writtenDocs.has(e.toString()) && t ? Fi.updateTime(t) : Fi.none();
        }
        preconditionForUpdate(e) {
          const t = this.readVersions.get(e.toString());
          if (!this.writtenDocs.has(e.toString()) && t) {
            if (t.isEqual(Si.min())) throw new En(rn.INVALID_ARGUMENT, "Can't update a document that doesn't exist.");
            return Fi.updateTime(t);
          }
          return Fi.exists(!0);
        }
        write(e) {
          this.ensureCommitNotCalled(), this.mutations.push(e);
        }
        ensureCommitNotCalled() {}
      }
      class L0 {
        constructor(e, t, i, o) {
          (this.asyncQueue = e),
            (this.datastore = t),
            (this.updateFunction = i),
            (this.deferred = o),
            (this.lc = 5),
            (this.ur = new qm(this.asyncQueue, 'transaction_retry'));
        }
        run() {
          (this.lc -= 1), this.fc();
        }
        fc() {
          var e = this;
          this.ur.Zi(
            (0, Jt.Z)(function* () {
              const t = new My(e.datastore),
                i = e.dc(t);
              i &&
                i
                  .then((o) => {
                    e.asyncQueue.enqueueAndForget(() =>
                      t
                        .commit()
                        .then(() => {
                          e.deferred.resolve(o);
                        })
                        .catch((c) => {
                          e.wc(c);
                        })
                    );
                  })
                  .catch((o) => {
                    e.wc(o);
                  });
            })
          );
        }
        dc(e) {
          try {
            const t = this.updateFunction(e);
            return !nl(t) && t.catch && t.then
              ? t
              : (this.deferred.reject(Error('Transaction callback must return a Promise')), null);
          } catch (t) {
            return this.deferred.reject(t), null;
          }
        }
        wc(e) {
          this.lc > 0 && this._c(e)
            ? ((this.lc -= 1), this.asyncQueue.enqueueAndForget(() => (this.fc(), Promise.resolve())))
            : this.deferred.reject(e);
        }
        _c(e) {
          if ('FirebaseError' === e.name) {
            const t = e.code;
            return 'aborted' === t || 'failed-precondition' === t || !zf(t);
          }
          return !1;
        }
      }
      class N0 {
        constructor(e, t, i, o) {
          var c = this;
          (this.authCredentials = e),
            (this.appCheckCredentials = t),
            (this.asyncQueue = i),
            (this.databaseInfo = o),
            (this.user = uo.UNAUTHENTICATED),
            (this.clientId = Hd.A()),
            (this.authCredentialListener = () => Promise.resolve()),
            (this.appCheckCredentialListener = () => Promise.resolve()),
            this.authCredentials.start(
              i,
              (function () {
                var p = (0, Jt.Z)(function* (C) {
                  In('FirestoreClient', 'Received user=', C.uid), yield c.authCredentialListener(C), (c.user = C);
                });
                return function (C) {
                  return p.apply(this, arguments);
                };
              })()
            ),
            this.appCheckCredentials.start(
              i,
              (p) => (
                In('FirestoreClient', 'Received new app check token=', p), this.appCheckCredentialListener(p, this.user)
              )
            );
        }
        getConfiguration() {
          var e = this;
          return (0, Jt.Z)(function* () {
            return {
              asyncQueue: e.asyncQueue,
              databaseInfo: e.databaseInfo,
              clientId: e.clientId,
              authCredentials: e.authCredentials,
              appCheckCredentials: e.appCheckCredentials,
              initialUser: e.user,
              maxConcurrentLimboResolutions: 100,
            };
          })();
        }
        setCredentialChangeListener(e) {
          this.authCredentialListener = e;
        }
        setAppCheckTokenChangeListener(e) {
          this.appCheckCredentialListener = e;
        }
        verifyNotTerminated() {
          if (this.asyncQueue.isShuttingDown)
            throw new En(rn.FAILED_PRECONDITION, 'The client has already been terminated.');
        }
        terminate() {
          var e = this;
          this.asyncQueue.enterRestrictedMode();
          const t = new ho();
          return (
            this.asyncQueue.enqueueAndForgetEvenWhileRestricted(
              (0, Jt.Z)(function* () {
                try {
                  e.onlineComponents && (yield e.onlineComponents.terminate()),
                    e.offlineComponents && (yield e.offlineComponents.terminate()),
                    e.authCredentials.shutdown(),
                    e.appCheckCredentials.shutdown(),
                    t.resolve();
                } catch (i) {
                  const o = ju(i, 'Failed to shutdown persistence');
                  t.reject(o);
                }
              })
            ),
            t.promise
          );
        }
      }
      function hg(n, e) {
        return Ep.apply(this, arguments);
      }
      function Ep() {
        return (
          (Ep = (0, Jt.Z)(function* (n, e) {
            n.asyncQueue.verifyOperationInProgress(), In('FirestoreClient', 'Initializing OfflineComponentProvider');
            const t = yield n.getConfiguration();
            yield e.initialize(t);
            let i = t.initialUser;
            n.setCredentialChangeListener(
              (function () {
                var o = (0, Jt.Z)(function* (c) {
                  i.isEqual(c) || (yield t0(e.localStore, c), (i = c));
                });
                return function (c) {
                  return o.apply(this, arguments);
                };
              })()
            ),
              e.persistence.setDatabaseDeletedListener(() => n.terminate()),
              (n.offlineComponents = e);
          })),
          Ep.apply(this, arguments)
        );
      }
      function B0(n, e) {
        return fg.apply(this, arguments);
      }
      function fg() {
        return (
          (fg = (0, Jt.Z)(function* (n, e) {
            n.asyncQueue.verifyOperationInProgress();
            const t = yield pg(n);
            In('FirestoreClient', 'Initializing OnlineComponentProvider');
            const i = yield n.getConfiguration();
            yield e.initialize(t, i),
              n.setCredentialChangeListener((o) => y0(e.remoteStore, o)),
              n.setAppCheckTokenChangeListener((o, c) => y0(e.remoteStore, c)),
              (n.onlineComponents = e);
          })),
          fg.apply(this, arguments)
        );
      }
      function pg(n) {
        return xp.apply(this, arguments);
      }
      function xp() {
        return (
          (xp = (0, Jt.Z)(function* (n) {
            return (
              n.offlineComponents ||
                (In('FirestoreClient', 'Using default OfflineComponentProvider'), yield hg(n, new Dy())),
              n.offlineComponents
            );
          })),
          xp.apply(this, arguments)
        );
      }
      function Dp(n) {
        return Sy.apply(this, arguments);
      }
      function Sy() {
        return (
          (Sy = (0, Jt.Z)(function* (n) {
            return (
              n.onlineComponents ||
                (In('FirestoreClient', 'Using default OnlineComponentProvider'), yield B0(n, new Cp())),
              n.onlineComponents
            );
          })),
          Sy.apply(this, arguments)
        );
      }
      function Ay(n) {
        return pg(n).then((e) => e.persistence);
      }
      function mg(n) {
        return pg(n).then((e) => e.localStore);
      }
      function Ty(n) {
        return Dp(n).then((e) => e.remoteStore);
      }
      function Mp(n) {
        return Dp(n).then((e) => e.syncEngine);
      }
      function hh(n) {
        return gg.apply(this, arguments);
      }
      function gg() {
        return (
          (gg = (0, Jt.Z)(function* (n) {
            const e = yield Dp(n),
              t = e.eventManager;
            return (t.onListen = w0.bind(null, e.syncEngine)), (t.onUnlisten = E0.bind(null, e.syncEngine)), t;
          })),
          gg.apply(this, arguments)
        );
      }
      function Iy(n, e, t = {}) {
        const i = new ho();
        return (
          n.asyncQueue.enqueueAndForget(
            (0, Jt.Z)(function* () {
              return (function (o, c, p, C, I) {
                const U = new wp({
                    next: (xe) => {
                      c.enqueueAndForget(() => Cd(o, se));
                      const rt = xe.docs.has(p);
                      !rt && xe.fromCache
                        ? I.reject(new En(rn.UNAVAILABLE, 'Failed to get document because the client is offline.'))
                        : rt && xe.fromCache && C && 'server' === C.source
                        ? I.reject(
                            new En(
                              rn.UNAVAILABLE,
                              'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)'
                            )
                          )
                        : I.resolve(xe);
                    },
                    error: (xe) => I.reject(xe),
                  }),
                  se = new ig(Gl(p.path), U, { includeMetadataChanges: !0, wo: !0 });
                return vd(o, se);
              })(yield hh(n), n.asyncQueue, e, t, i);
            })
          ),
          i.promise
        );
      }
      function Ry(n, e, t = {}) {
        const i = new ho();
        return (
          n.asyncQueue.enqueueAndForget(
            (0, Jt.Z)(function* () {
              return (function (o, c, p, C, I) {
                const U = new wp({
                    next: (xe) => {
                      c.enqueueAndForget(() => Cd(o, se)),
                        xe.fromCache && 'server' === C.source
                          ? I.reject(
                              new En(
                                rn.UNAVAILABLE,
                                'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)'
                              )
                            )
                          : I.resolve(xe);
                    },
                    error: (xe) => I.reject(xe),
                  }),
                  se = new ig(p, U, { includeMetadataChanges: !0, wo: !0 });
                return vd(o, se);
              })(yield hh(n), n.asyncQueue, e, t, i);
            })
          ),
          i.promise
        );
      }
      class Cx {
        constructor(e, t, i, o, c, p, C, I) {
          (this.databaseId = e),
            (this.appId = t),
            (this.persistenceKey = i),
            (this.host = o),
            (this.ssl = c),
            (this.forceLongPolling = p),
            (this.autoDetectLongPolling = C),
            (this.useFetchStreams = I);
        }
      }
      class Gs {
        constructor(e, t) {
          (this.projectId = e), (this.database = t || '(default)');
        }
        get isDefaultDatabase() {
          return '(default)' === this.database;
        }
        isEqual(e) {
          return e instanceof Gs && e.projectId === this.projectId && e.database === this.database;
        }
      }
      const ky = new Map();
      function Oy(n, e, t) {
        if (!t) throw new En(rn.INVALID_ARGUMENT, `Function ${n}() cannot be called with an empty ${e}.`);
      }
      function z0(n, e, t, i) {
        if (!0 === e && !0 === i) throw new En(rn.INVALID_ARGUMENT, `${n} and ${t} cannot be used together.`);
      }
      function Py(n) {
        if (!ui.isDocumentKey(n))
          throw new En(
            rn.INVALID_ARGUMENT,
            `Invalid document reference. Document references must have an even number of segments, but ${n} has ${n.length}.`
          );
      }
      function $0(n) {
        if (ui.isDocumentKey(n))
          throw new En(
            rn.INVALID_ARGUMENT,
            `Invalid collection reference. Collection references must have an odd number of segments, but ${n} has ${n.length}.`
          );
      }
      function Sp(n) {
        if (void 0 === n) return 'undefined';
        if (null === n) return 'null';
        if ('string' == typeof n) return n.length > 20 && (n = `${n.substring(0, 20)}...`), JSON.stringify(n);
        if ('number' == typeof n || 'boolean' == typeof n) return '' + n;
        if ('object' == typeof n) {
          if (n instanceof Array) return 'an array';
          {
            const e = (t = n).constructor ? t.constructor.name : null;
            return e ? `a custom ${e} object` : 'an object';
          }
        }
        var t;
        return 'function' == typeof n ? 'a function' : ii();
      }
      function hr(n, e) {
        if (('_delegate' in n && (n = n._delegate), !(n instanceof e))) {
          if (e.name === n.constructor.name)
            throw new En(
              rn.INVALID_ARGUMENT,
              'Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?'
            );
          {
            const t = Sp(n);
            throw new En(rn.INVALID_ARGUMENT, `Expected type '${e.name}', but it was: ${t}`);
          }
        }
        return n;
      }
      function fh(n, e) {
        if (e <= 0) throw new En(rn.INVALID_ARGUMENT, `Function ${n}() requires a positive number, but it was: ${e}.`);
      }
      class W0 {
        constructor(e) {
          var t;
          if (void 0 === e.host) {
            if (void 0 !== e.ssl)
              throw new En(rn.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
            (this.host = 'firestore.googleapis.com'), (this.ssl = !0);
          } else (this.host = e.host), (this.ssl = null === (t = e.ssl) || void 0 === t || t);
          if (
            ((this.credentials = e.credentials),
            (this.ignoreUndefinedProperties = !!e.ignoreUndefinedProperties),
            void 0 === e.cacheSizeBytes)
          )
            this.cacheSizeBytes = 41943040;
          else {
            if (-1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576)
              throw new En(rn.INVALID_ARGUMENT, 'cacheSizeBytes must be at least 1048576');
            this.cacheSizeBytes = e.cacheSizeBytes;
          }
          (this.experimentalForceLongPolling = !!e.experimentalForceLongPolling),
            (this.experimentalAutoDetectLongPolling = !!e.experimentalAutoDetectLongPolling),
            (this.useFetchStreams = !!e.useFetchStreams),
            z0(
              'experimentalForceLongPolling',
              e.experimentalForceLongPolling,
              'experimentalAutoDetectLongPolling',
              e.experimentalAutoDetectLongPolling
            );
        }
        isEqual(e) {
          return (
            this.host === e.host &&
            this.ssl === e.ssl &&
            this.credentials === e.credentials &&
            this.cacheSizeBytes === e.cacheSizeBytes &&
            this.experimentalForceLongPolling === e.experimentalForceLongPolling &&
            this.experimentalAutoDetectLongPolling === e.experimentalAutoDetectLongPolling &&
            this.ignoreUndefinedProperties === e.ignoreUndefinedProperties &&
            this.useFetchStreams === e.useFetchStreams
          );
        }
      }
      class Ap {
        constructor(e, t, i) {
          (this._authCredentials = t),
            (this._appCheckCredentials = i),
            (this.type = 'firestore-lite'),
            (this._persistenceKey = '(lite)'),
            (this._settings = new W0({})),
            (this._settingsFrozen = !1),
            e instanceof Gs
              ? (this._databaseId = e)
              : ((this._app = e),
                (this._databaseId = (function (o) {
                  if (!Object.prototype.hasOwnProperty.apply(o.options, ['projectId']))
                    throw new En(rn.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
                  return new Gs(o.options.projectId);
                })(e)));
        }
        get app() {
          if (!this._app)
            throw new En(
              rn.FAILED_PRECONDITION,
              "Firestore was not initialized using the Firebase SDK. 'app' is not available"
            );
          return this._app;
        }
        get _initialized() {
          return this._settingsFrozen;
        }
        get _terminated() {
          return void 0 !== this._terminateTask;
        }
        _setSettings(e) {
          if (this._settingsFrozen)
            throw new En(
              rn.FAILED_PRECONDITION,
              'Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.'
            );
          (this._settings = new W0(e)),
            void 0 !== e.credentials &&
              (this._authCredentials = (function (t) {
                if (!t) return new Ff();
                switch (t.type) {
                  case 'gapi':
                    const i = t.client;
                    return (
                      xi(!('object' != typeof i || null === i || !i.auth || !i.auth.getAuthHeaderValueForFirstParty)),
                      new Nf(i, t.sessionIndex || '0', t.iamToken || null)
                    );
                  case 'provider':
                    return t.client;
                  default:
                    throw new En(
                      rn.INVALID_ARGUMENT,
                      'makeAuthCredentialsProvider failed due to invalid credential type'
                    );
                }
              })(e.credentials));
        }
        _getSettings() {
          return this._settings;
        }
        _freezeSettings() {
          return (this._settingsFrozen = !0), this._settings;
        }
        _delete() {
          return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
        }
        toJSON() {
          return { app: this._app, databaseId: this._databaseId, settings: this._settings };
        }
        _terminate() {
          return (
            (function (e) {
              const t = ky.get(e);
              t && (In('ComponentProvider', 'Removing Datastore'), ky.delete(e), t.terminate());
            })(this),
            Promise.resolve()
          );
        }
      }
      class Ss {
        constructor(e, t, i) {
          (this.converter = t), (this._key = i), (this.type = 'document'), (this.firestore = e);
        }
        get _path() {
          return this._key.path;
        }
        get id() {
          return this._key.path.lastSegment();
        }
        get path() {
          return this._key.path.canonicalString();
        }
        get parent() {
          return new Hu(this.firestore, this.converter, this._key.path.popLast());
        }
        withConverter(e) {
          return new Ss(this.firestore, e, this._key);
        }
      }
      class fa {
        constructor(e, t, i) {
          (this.converter = t), (this._query = i), (this.type = 'query'), (this.firestore = e);
        }
        withConverter(e) {
          return new fa(this.firestore, e, this._query);
        }
      }
      class Hu extends fa {
        constructor(e, t, i) {
          super(e, t, Gl(i)), (this._path = i), (this.type = 'collection');
        }
        get id() {
          return this._query.path.lastSegment();
        }
        get path() {
          return this._query.path.canonicalString();
        }
        get parent() {
          const e = this._path.popLast();
          return e.isEmpty() ? null : new Ss(this.firestore, null, new ui(e));
        }
        withConverter(e) {
          return new Hu(this.firestore, e, this._path);
        }
      }
      function _g(n, e, ...t) {
        if (((n = (0, je.m9)(n)), Oy('collection', 'path', e), n instanceof Ap)) {
          const i = vr.fromString(e, ...t);
          return $0(i), new Hu(n, null, i);
        }
        {
          if (!(n instanceof Ss || n instanceof Hu))
            throw new En(
              rn.INVALID_ARGUMENT,
              'Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore'
            );
          const i = n._path.child(vr.fromString(e, ...t));
          return $0(i), new Hu(n.firestore, null, i);
        }
      }
      function Dl(n, e, ...t) {
        if (((n = (0, je.m9)(n)), 1 === arguments.length && (e = Hd.A()), Oy('doc', 'path', e), n instanceof Ap)) {
          const i = vr.fromString(e, ...t);
          return Py(i), new Ss(n, null, new ui(i));
        }
        {
          if (!(n instanceof Ss || n instanceof Hu))
            throw new En(
              rn.INVALID_ARGUMENT,
              'Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore'
            );
          const i = n._path.child(vr.fromString(e, ...t));
          return Py(i), new Ss(n.firestore, n instanceof Hu ? n.converter : null, new ui(i));
        }
      }
      function K0(n, e) {
        return (
          (n = (0, je.m9)(n)),
          (e = (0, je.m9)(e)),
          (n instanceof Ss || n instanceof Hu) &&
            (e instanceof Ss || e instanceof Hu) &&
            n.firestore === e.firestore &&
            n.path === e.path &&
            n.converter === e.converter
        );
      }
      function q0(n, e) {
        return (
          (n = (0, je.m9)(n)),
          (e = (0, je.m9)(e)),
          n instanceof fa &&
            e instanceof fa &&
            n.firestore === e.firestore &&
            Xc(n._query, e._query) &&
            n.converter === e.converter
        );
      }
      class ru {
        constructor() {
          (this.mc = Promise.resolve()),
            (this.gc = []),
            (this.yc = !1),
            (this.Tc = []),
            (this.Ec = null),
            (this.Ic = !1),
            (this.Ac = !1),
            (this.Rc = []),
            (this.ur = new qm(this, 'async_queue_retry')),
            (this.bc = () => {
              const t = za();
              t && In('AsyncQueue', 'Visibility state changed to ' + t.visibilityState), this.ur.er();
            });
          const e = za();
          e && 'function' == typeof e.addEventListener && e.addEventListener('visibilitychange', this.bc);
        }
        get isShuttingDown() {
          return this.yc;
        }
        enqueueAndForget(e) {
          this.enqueue(e);
        }
        enqueueAndForgetEvenWhileRestricted(e) {
          this.Pc(), this.vc(e);
        }
        enterRestrictedMode(e) {
          if (!this.yc) {
            (this.yc = !0), (this.Ac = e || !1);
            const t = za();
            t && 'function' == typeof t.removeEventListener && t.removeEventListener('visibilitychange', this.bc);
          }
        }
        enqueue(e) {
          if ((this.Pc(), this.yc)) return new Promise(() => {});
          const t = new ho();
          return this.vc(() =>
            this.yc && this.Ac ? Promise.resolve() : (e().then(t.resolve, t.reject), t.promise)
          ).then(() => t.promise);
        }
        enqueueRetryable(e) {
          this.enqueueAndForget(() => (this.gc.push(e), this.Vc()));
        }
        Vc() {
          var e = this;
          return (0, Jt.Z)(function* () {
            if (0 !== e.gc.length) {
              try {
                yield e.gc[0](), e.gc.shift(), e.ur.reset();
              } catch (t) {
                if (!b(t)) throw t;
                In('AsyncQueue', 'Operation failed with retryable error: ' + t);
              }
              e.gc.length > 0 && e.ur.Zi(() => e.Vc());
            }
          })();
        }
        vc(e) {
          const t = this.mc.then(
            () => (
              (this.Ic = !0),
              e()
                .catch((i) => {
                  throw (
                    ((this.Ec = i),
                    (this.Ic = !1),
                    Js(
                      'INTERNAL UNHANDLED ERROR: ',
                      (function (c) {
                        let p = c.message || '';
                        return c.stack && (p = c.stack.includes(c.message) ? c.stack : c.message + '\n' + c.stack), p;
                      })(i)
                    ),
                    i)
                  );
                })
                .then((i) => ((this.Ic = !1), i))
            )
          );
          return (this.mc = t), t;
        }
        enqueueAfterDelay(e, t, i) {
          this.Pc(), this.Rc.indexOf(e) > -1 && (t = 0);
          const o = Uu.createAndSchedule(this, e, t, i, (c) => this.Sc(c));
          return this.Tc.push(o), o;
        }
        Pc() {
          this.Ec && ii();
        }
        verifyOperationInProgress() {}
        Dc() {
          var e = this;
          return (0, Jt.Z)(function* () {
            let t;
            do {
              (t = e.mc), yield t;
            } while (t !== e.mc);
          })();
        }
        Cc(e) {
          for (const t of this.Tc) if (t.timerId === e) return !0;
          return !1;
        }
        Nc(e) {
          return this.Dc().then(() => {
            this.Tc.sort((t, i) => t.targetTimeMs - i.targetTimeMs);
            for (const t of this.Tc) if ((t.skipDelay(), 'all' !== e && t.timerId === e)) break;
            return this.Dc();
          });
        }
        kc(e) {
          this.Rc.push(e);
        }
        Sc(e) {
          const t = this.Tc.indexOf(e);
          this.Tc.splice(t, 1);
        }
      }
      function Ml(n) {
        return (function (e, t) {
          if ('object' != typeof e || null === e) return !1;
          const i = e;
          for (const o of ['next', 'error', 'complete']) if (o in i && 'function' == typeof i[o]) return !0;
          return !1;
        })(n);
      }
      class Mc {
        constructor() {
          (this._progressObserver = {}),
            (this._taskCompletionResolver = new ho()),
            (this._lastProgress = {
              taskState: 'Running',
              totalBytes: 0,
              totalDocuments: 0,
              bytesLoaded: 0,
              documentsLoaded: 0,
            });
        }
        onProgress(e, t, i) {
          this._progressObserver = { next: e, error: t, complete: i };
        }
        catch(e) {
          return this._taskCompletionResolver.promise.catch(e);
        }
        then(e, t) {
          return this._taskCompletionResolver.promise.then(e, t);
        }
        _completeWith(e) {
          this._updateProgress(e),
            this._progressObserver.complete && this._progressObserver.complete(),
            this._taskCompletionResolver.resolve(e);
        }
        _failWith(e) {
          (this._lastProgress.taskState = 'Error'),
            this._progressObserver.next && this._progressObserver.next(this._lastProgress),
            this._progressObserver.error && this._progressObserver.error(e),
            this._taskCompletionResolver.reject(e);
        }
        _updateProgress(e) {
          (this._lastProgress = e), this._progressObserver.next && this._progressObserver.next(e);
        }
      }
      class As extends Ap {
        constructor(e, t, i) {
          super(e, t, i),
            (this.type = 'firestore'),
            (this._queue = new ru()),
            (this._persistenceKey = 'name' in e ? e.name : '[DEFAULT]');
        }
        _terminate() {
          return this._firestoreClient || Q0(this), this._firestoreClient.terminate();
        }
      }
      function Io(n) {
        return n._firestoreClient || Q0(n), n._firestoreClient.verifyNotTerminated(), n._firestoreClient;
      }
      function Q0(n) {
        var e;
        const t = n._freezeSettings(),
          i =
            ((c = (null === (e = n._app) || void 0 === e ? void 0 : e.options.appId) || ''),
            new Cx(
              n._databaseId,
              c,
              n._persistenceKey,
              (C = t).host,
              C.ssl,
              C.experimentalForceLongPolling,
              C.experimentalAutoDetectLongPolling,
              C.useFetchStreams
            ));
        var c, C;
        n._firestoreClient = new N0(n._authCredentials, n._appCheckCredentials, n._queue, i);
      }
      function X0(n, e, t) {
        const i = new ho();
        return n.asyncQueue
          .enqueue(
            (0, Jt.Z)(function* () {
              try {
                yield hg(n, t), yield B0(n, e), i.resolve();
              } catch (o) {
                if (
                  !('FirebaseError' === (c = o).name
                    ? c.code === rn.FAILED_PRECONDITION || c.code === rn.UNIMPLEMENTED
                    : !('undefined' != typeof DOMException && c instanceof DOMException) ||
                      22 === c.code ||
                      20 === c.code ||
                      11 === c.code)
                )
                  throw o;
                console.warn('Error enabling offline persistence. Falling back to persistence disabled: ' + o),
                  i.reject(o);
              }
              var c;
            })
          )
          .then(() => i.promise);
      }
      function By(n) {
        if (n._initialized || n._terminated)
          throw new En(
            rn.FAILED_PRECONDITION,
            'Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.'
          );
      }
      class Sc {
        constructor(...e) {
          for (let t = 0; t < e.length; ++t)
            if (0 === e[t].length)
              throw new En(
                rn.INVALID_ARGUMENT,
                'Invalid field name at argument $(i + 1). Field names must not be empty.'
              );
          this._internalPath = new Pr(e);
        }
        isEqual(e) {
          return this._internalPath.isEqual(e._internalPath);
        }
      }
      class Ac {
        constructor(e) {
          this._byteString = e;
        }
        static fromBase64String(e) {
          try {
            return new Ac(Qr.fromBase64String(e));
          } catch (t) {
            throw new En(rn.INVALID_ARGUMENT, 'Failed to construct data from Base64 string: ' + t);
          }
        }
        static fromUint8Array(e) {
          return new Ac(Qr.fromUint8Array(e));
        }
        toBase64() {
          return this._byteString.toBase64();
        }
        toUint8Array() {
          return this._byteString.toUint8Array();
        }
        toString() {
          return 'Bytes(base64: ' + this.toBase64() + ')';
        }
        isEqual(e) {
          return this._byteString.isEqual(e._byteString);
        }
      }
      class Ed {
        constructor(e) {
          this._methodName = e;
        }
      }
      class Ip {
        constructor(e, t) {
          if (!isFinite(e) || e < -90 || e > 90)
            throw new En(rn.INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + e);
          if (!isFinite(t) || t < -180 || t > 180)
            throw new En(rn.INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + t);
          (this._lat = e), (this._long = t);
        }
        get latitude() {
          return this._lat;
        }
        get longitude() {
          return this._long;
        }
        isEqual(e) {
          return this._lat === e._lat && this._long === e._long;
        }
        toJSON() {
          return { latitude: this._lat, longitude: this._long };
        }
        _compareTo(e) {
          return Ji(this._lat, e._lat) || Ji(this._long, e._long);
        }
      }
      const iC = /^__.*__$/;
      class rC {
        constructor(e, t, i) {
          (this.data = e), (this.fieldMask = t), (this.fieldTransforms = i);
        }
        toMutation(e, t) {
          return null !== this.fieldMask
            ? new yl(e, this.data, this.fieldMask, t, this.fieldTransforms)
            : new zl(e, this.data, t, this.fieldTransforms);
        }
      }
      class Uy {
        constructor(e, t, i) {
          (this.data = e), (this.fieldMask = t), (this.fieldTransforms = i);
        }
        toMutation(e, t) {
          return new yl(e, this.data, this.fieldMask, t, this.fieldTransforms);
        }
      }
      function jy(n) {
        switch (n) {
          case 0:
          case 2:
          case 1:
            return !0;
          case 3:
          case 4:
            return !1;
          default:
            throw ii();
        }
      }
      class Rp {
        constructor(e, t, i, o, c, p) {
          (this.settings = e),
            (this.databaseId = t),
            (this.k = i),
            (this.ignoreUndefinedProperties = o),
            void 0 === c && this.xc(),
            (this.fieldTransforms = c || []),
            (this.fieldMask = p || []);
        }
        get path() {
          return this.settings.path;
        }
        get $c() {
          return this.settings.$c;
        }
        Oc(e) {
          return new Rp(
            Object.assign(Object.assign({}, this.settings), e),
            this.databaseId,
            this.k,
            this.ignoreUndefinedProperties,
            this.fieldTransforms,
            this.fieldMask
          );
        }
        Mc(e) {
          var t;
          const i = null === (t = this.path) || void 0 === t ? void 0 : t.child(e),
            o = this.Oc({ path: i, Fc: !1 });
          return o.Lc(e), o;
        }
        Bc(e) {
          var t;
          const i = null === (t = this.path) || void 0 === t ? void 0 : t.child(e),
            o = this.Oc({ path: i, Fc: !1 });
          return o.xc(), o;
        }
        Uc(e) {
          return this.Oc({ path: void 0, Fc: !0 });
        }
        qc(e) {
          return Pp(e, this.settings.methodName, this.settings.Kc || !1, this.path, this.settings.jc);
        }
        contains(e) {
          return (
            void 0 !== this.fieldMask.find((t) => e.isPrefixOf(t)) ||
            void 0 !== this.fieldTransforms.find((t) => e.isPrefixOf(t.field))
          );
        }
        xc() {
          if (this.path) for (let e = 0; e < this.path.length; e++) this.Lc(this.path.get(e));
        }
        Lc(e) {
          if (0 === e.length) throw this.qc('Document fields must not be empty');
          if (jy(this.$c) && iC.test(e)) throw this.qc('Document fields cannot begin and end with "__"');
        }
      }
      class xx {
        constructor(e, t, i) {
          (this.databaseId = e), (this.ignoreUndefinedProperties = t), (this.k = i || ch(e));
        }
        Qc(e, t, i, o = !1) {
          return new Rp(
            { $c: e, methodName: t, jc: i, path: Pr.emptyPath(), Fc: !1, Kc: o },
            this.databaseId,
            this.k,
            this.ignoreUndefinedProperties
          );
        }
      }
      function ph(n) {
        const e = n._freezeSettings(),
          t = ch(n._databaseId);
        return new xx(n._databaseId, !!e.ignoreUndefinedProperties, t);
      }
      function yg(n, e, t, i, o, c = {}) {
        const p = n.Qc(c.merge || c.mergeFields ? 2 : 0, e, t, o);
        $y('Data must be an object, but it was:', p, i);
        const C = aC(i, p);
        let I, U;
        if (c.merge) (I = new pc(p.fieldMask)), (U = p.fieldTransforms);
        else if (c.mergeFields) {
          const se = [];
          for (const xe of c.mergeFields) {
            const rt = Wy(e, xe, t);
            if (!p.contains(rt))
              throw new En(
                rn.INVALID_ARGUMENT,
                `Field '${rt}' is specified in your field mask but missing from your input data.`
              );
            Yy(se, rt) || se.push(rt);
          }
          (I = new pc(se)), (U = p.fieldTransforms.filter((xe) => I.covers(xe.field)));
        } else (I = null), (U = p.fieldTransforms);
        return new rC(new os(C), I, U);
      }
      class kp extends Ed {
        _toFieldTransform(e) {
          if (2 !== e.$c)
            throw e.qc(
              1 === e.$c
                ? `${this._methodName}() can only appear at the top level of your update data`
                : `${this._methodName}() cannot be used with set() unless you pass {merge:true}`
            );
          return e.fieldMask.push(e.path), null;
        }
        isEqual(e) {
          return e instanceof kp;
        }
      }
      function sC(n, e, t) {
        return new Rp(
          { $c: 3, jc: e.settings.jc, methodName: n._methodName, Fc: t },
          e.databaseId,
          e.k,
          e.ignoreUndefinedProperties
        );
      }
      class Hy extends Ed {
        _toFieldTransform(e) {
          return new Kn(e.path, new _());
        }
        isEqual(e) {
          return e instanceof Hy;
        }
      }
      class Dx extends Ed {
        constructor(e, t) {
          super(e), (this.Wc = t);
        }
        _toFieldTransform(e) {
          const t = sC(this, e, !0),
            i = this.Wc.map((c) => mh(c, t)),
            o = new v(i);
          return new Kn(e.path, o);
        }
        isEqual(e) {
          return this === e;
        }
      }
      class Mx extends Ed {
        constructor(e, t) {
          super(e), (this.Wc = t);
        }
        _toFieldTransform(e) {
          const t = sC(this, e, !0),
            i = this.Wc.map((c) => mh(c, t)),
            o = new Q(i);
          return new Kn(e.path, o);
        }
        isEqual(e) {
          return this === e;
        }
      }
      class Sx extends Ed {
        constructor(e, t) {
          super(e), (this.Gc = t);
        }
        _toFieldTransform(e) {
          const t = new Lt(e.k, Tu(e.k, this.Gc));
          return new Kn(e.path, t);
        }
        isEqual(e) {
          return this === e;
        }
      }
      function Gy(n, e, t, i) {
        const o = n.Qc(1, e, t);
        $y('Data must be an object, but it was:', o, i);
        const c = [],
          p = os.empty();
        fc(i, (I, U) => {
          const se = Op(e, I, t);
          U = (0, je.m9)(U);
          const xe = o.Bc(se);
          if (U instanceof kp) c.push(se);
          else {
            const rt = mh(U, xe);
            null != rt && (c.push(se), p.set(se, rt));
          }
        });
        const C = new pc(c);
        return new Uy(p, C, o.fieldTransforms);
      }
      function zy(n, e, t, i, o, c) {
        const p = n.Qc(1, e, t),
          C = [Wy(e, i, t)],
          I = [o];
        if (c.length % 2 != 0)
          throw new En(
            rn.INVALID_ARGUMENT,
            `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`
          );
        for (let rt = 0; rt < c.length; rt += 2) C.push(Wy(e, c[rt])), I.push(c[rt + 1]);
        const U = [],
          se = os.empty();
        for (let rt = C.length - 1; rt >= 0; --rt)
          if (!Yy(U, C[rt])) {
            const Ut = C[rt];
            let qt = I[rt];
            qt = (0, je.m9)(qt);
            const Mn = p.Bc(Ut);
            if (qt instanceof kp) U.push(Ut);
            else {
              const Ln = mh(qt, Mn);
              null != Ln && (U.push(Ut), se.set(Ut, Ln));
            }
          }
        const xe = new pc(U);
        return new Uy(se, xe, p.fieldTransforms);
      }
      function oC(n, e, t, i = !1) {
        return mh(t, n.Qc(i ? 4 : 3, e));
      }
      function mh(n, e) {
        if (lC((n = (0, je.m9)(n)))) return $y('Unsupported field value:', e, n), aC(n, e);
        if (n instanceof Ed)
          return (
            (function (t, i) {
              if (!jy(i.$c)) throw i.qc(`${t._methodName}() can only be used with update() and set()`);
              if (!i.path) throw i.qc(`${t._methodName}() is not currently supported inside arrays`);
              const o = t._toFieldTransform(i);
              o && i.fieldTransforms.push(o);
            })(n, e),
            null
          );
        if (void 0 === n && e.ignoreUndefinedProperties) return null;
        if ((e.path && e.fieldMask.push(e.path), n instanceof Array)) {
          if (e.settings.Fc && 4 !== e.$c) throw e.qc('Nested arrays are not supported');
          return (function (t, i) {
            const o = [];
            let c = 0;
            for (const p of t) {
              let C = mh(p, i.Uc(c));
              null == C && (C = { nullValue: 'NULL_VALUE' }), o.push(C), c++;
            }
            return { arrayValue: { values: o } };
          })(n, e);
        }
        return (function (t, i) {
          if (null === (t = (0, je.m9)(t))) return { nullValue: 'NULL_VALUE' };
          if ('number' == typeof t) return Tu(i.k, t);
          if ('boolean' == typeof t) return { booleanValue: t };
          if ('string' == typeof t) return { stringValue: t };
          if (t instanceof Date) {
            const o = eo.fromDate(t);
            return { timestampValue: nh(i.k, o) };
          }
          if (t instanceof eo) {
            const o = new eo(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
            return { timestampValue: nh(i.k, o) };
          }
          if (t instanceof Ip) return { geoPointValue: { latitude: t.latitude, longitude: t.longitude } };
          if (t instanceof Ac) return { bytesValue: Fb(i.k, t._byteString) };
          if (t instanceof Ss) {
            const o = i.databaseId,
              c = t.firestore._databaseId;
            if (!c.isEqual(o))
              throw i.qc(
                `Document reference is for database ${c.projectId}/${c.database} but should be for database ${o.projectId}/${o.database}`
              );
            return { referenceValue: Kf(t.firestore._databaseId || i.databaseId, t._key.path) };
          }
          throw i.qc(`Unsupported field value: ${Sp(t)}`);
        })(n, e);
      }
      function aC(n, e) {
        const t = {};
        return (
          Fh(n)
            ? e.path && e.path.length > 0 && e.fieldMask.push(e.path)
            : fc(n, (i, o) => {
                const c = mh(o, e.Mc(i));
                null != c && (t[i] = c);
              }),
          { mapValue: { fields: t } }
        );
      }
      function lC(n) {
        return !(
          'object' != typeof n ||
          null === n ||
          n instanceof Array ||
          n instanceof Date ||
          n instanceof eo ||
          n instanceof Ip ||
          n instanceof Ac ||
          n instanceof Ss ||
          n instanceof Ed
        );
      }
      function $y(n, e, t) {
        if (
          !lC(t) ||
          'object' != typeof (i = t) ||
          null === i ||
          (Object.getPrototypeOf(i) !== Object.prototype && null !== Object.getPrototypeOf(i))
        ) {
          const i = Sp(t);
          throw e.qc('an object' === i ? n + ' a custom object' : n + ' ' + i);
        }
        var i;
      }
      function Wy(n, e, t) {
        if ((e = (0, je.m9)(e)) instanceof Sc) return e._internalPath;
        if ('string' == typeof e) return Op(n, e);
        throw Pp('Field path arguments must be of type string or ', n, !1, void 0, t);
      }
      const Ax = new RegExp('[~\\*/\\[\\]]');
      function Op(n, e, t) {
        if (e.search(Ax) >= 0)
          throw Pp(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, n, !1, void 0, t);
        try {
          return new Sc(...e.split('.'))._internalPath;
        } catch (i) {
          throw Pp(
            `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
            n,
            !1,
            void 0,
            t
          );
        }
      }
      function Pp(n, e, t, i, o) {
        const c = i && !i.isEmpty(),
          p = void 0 !== o;
        let C = `Function ${e}() called with invalid data`;
        t && (C += ' (via `toFirestore()`)'), (C += '. ');
        let I = '';
        return (
          (c || p) && ((I += ' (found'), c && (I += ` in field ${i}`), p && (I += ` in document ${o}`), (I += ')')),
          new En(rn.INVALID_ARGUMENT, C + n + I)
        );
      }
      function Yy(n, e) {
        return n.some((t) => t.isEqual(e));
      }
      class lf {
        constructor(e, t, i, o, c) {
          (this._firestore = e),
            (this._userDataWriter = t),
            (this._key = i),
            (this._document = o),
            (this._converter = c);
        }
        get id() {
          return this._key.path.lastSegment();
        }
        get ref() {
          return new Ss(this._firestore, this._converter, this._key);
        }
        exists() {
          return null !== this._document;
        }
        data() {
          if (this._document) {
            if (this._converter) {
              const e = new cC(this._firestore, this._userDataWriter, this._key, this._document, null);
              return this._converter.fromFirestore(e);
            }
            return this._userDataWriter.convertValue(this._document.data.value);
          }
        }
        get(e) {
          if (this._document) {
            const t = this._document.data.field(Fp('DocumentSnapshot.get', e));
            if (null !== t) return this._userDataWriter.convertValue(t);
          }
        }
      }
      class cC extends lf {
        data() {
          return super.data();
        }
      }
      function Fp(n, e) {
        return 'string' == typeof e ? Op(n, e) : e instanceof Sc ? e._internalPath : e._delegate._internalPath;
      }
      class xd {
        constructor(e, t) {
          (this.hasPendingWrites = e), (this.fromCache = t);
        }
        isEqual(e) {
          return this.hasPendingWrites === e.hasPendingWrites && this.fromCache === e.fromCache;
        }
      }
      class su extends lf {
        constructor(e, t, i, o, c, p) {
          super(e, t, i, o, p), (this._firestore = e), (this._firestoreImpl = e), (this.metadata = c);
        }
        exists() {
          return super.exists();
        }
        data(e = {}) {
          if (this._document) {
            if (this._converter) {
              const t = new cf(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, null);
              return this._converter.fromFirestore(t, e);
            }
            return this._userDataWriter.convertValue(this._document.data.value, e.serverTimestamps);
          }
        }
        get(e, t = {}) {
          if (this._document) {
            const i = this._document.data.field(Fp('DocumentSnapshot.get', e));
            if (null !== i) return this._userDataWriter.convertValue(i, t.serverTimestamps);
          }
        }
      }
      class cf extends su {
        data(e = {}) {
          return super.data(e);
        }
      }
      class ou {
        constructor(e, t, i, o) {
          (this._firestore = e),
            (this._userDataWriter = t),
            (this._snapshot = o),
            (this.metadata = new xd(o.hasPendingWrites, o.fromCache)),
            (this.query = i);
        }
        get docs() {
          const e = [];
          return this.forEach((t) => e.push(t)), e;
        }
        get size() {
          return this._snapshot.docs.size;
        }
        get empty() {
          return 0 === this.size;
        }
        forEach(e, t) {
          this._snapshot.docs.forEach((i) => {
            e.call(
              t,
              new cf(
                this._firestore,
                this._userDataWriter,
                i.key,
                i,
                new xd(this._snapshot.mutatedKeys.has(i.key), this._snapshot.fromCache),
                this.query.converter
              )
            );
          });
        }
        docChanges(e = {}) {
          const t = !!e.includeMetadataChanges;
          if (t && this._snapshot.excludesMetadataChanges)
            throw new En(
              rn.INVALID_ARGUMENT,
              'To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().'
            );
          return (
            (this._cachedChanges && this._cachedChangesIncludeMetadataChanges === t) ||
              ((this._cachedChanges = (function (i, o) {
                if (i._snapshot.oldDocs.isEmpty()) {
                  let c = 0;
                  return i._snapshot.docChanges.map((p) => ({
                    type: 'added',
                    doc: new cf(
                      i._firestore,
                      i._userDataWriter,
                      p.doc.key,
                      p.doc,
                      new xd(i._snapshot.mutatedKeys.has(p.doc.key), i._snapshot.fromCache),
                      i.query.converter
                    ),
                    oldIndex: -1,
                    newIndex: c++,
                  }));
                }
                {
                  let c = i._snapshot.oldDocs;
                  return i._snapshot.docChanges
                    .filter((p) => o || 3 !== p.type)
                    .map((p) => {
                      const C = new cf(
                        i._firestore,
                        i._userDataWriter,
                        p.doc.key,
                        p.doc,
                        new xd(i._snapshot.mutatedKeys.has(p.doc.key), i._snapshot.fromCache),
                        i.query.converter
                      );
                      let I = -1,
                        U = -1;
                      return (
                        0 !== p.type && ((I = c.indexOf(p.doc.key)), (c = c.delete(p.doc.key))),
                        1 !== p.type && ((c = c.add(p.doc)), (U = c.indexOf(p.doc.key))),
                        { type: Ky(p.type), doc: C, oldIndex: I, newIndex: U }
                      );
                    });
                }
              })(this, t)),
              (this._cachedChangesIncludeMetadataChanges = t)),
            this._cachedChanges
          );
        }
      }
      function Ky(n) {
        switch (n) {
          case 0:
            return 'added';
          case 2:
          case 3:
            return 'modified';
          case 1:
            return 'removed';
          default:
            return ii();
        }
      }
      function Dd(n, e) {
        return n instanceof su && e instanceof su
          ? n._firestore === e._firestore &&
              n._key.isEqual(e._key) &&
              (null === n._document ? null === e._document : n._document.isEqual(e._document)) &&
              n._converter === e._converter
          : n instanceof ou &&
              e instanceof ou &&
              n._firestore === e._firestore &&
              q0(n.query, e.query) &&
              n.metadata.isEqual(e.metadata) &&
              n._snapshot.isEqual(e._snapshot);
      }
      function uC(n) {
        if (qc(n) && 0 === n.explicitOrderBy.length)
          throw new En(rn.UNIMPLEMENTED, 'limitToLast() queries require specifying at least one orderBy() clause');
      }
      class Lp {}
      function Sl(n, ...e) {
        for (const t of e) n = t._apply(n);
        return n;
      }
      class NS extends Lp {
        constructor(e, t, i) {
          super(), (this.zc = e), (this.Hc = t), (this.Jc = i), (this.type = 'where');
        }
        _apply(e) {
          const t = ph(e.firestore),
            i = (function (o, c, p, C, I, U, se) {
              let xe;
              if (I.isKeyField()) {
                if ('array-contains' === U || 'array-contains-any' === U)
                  throw new En(rn.INVALID_ARGUMENT, `Invalid Query. You can't perform '${U}' queries on documentId().`);
                if ('in' === U || 'not-in' === U) {
                  kx(se, U);
                  const Ut = [];
                  for (const qt of se) Ut.push(ro(C, o, qt));
                  xe = { arrayValue: { values: Ut } };
                } else xe = ro(C, o, se);
              } else
                ('in' !== U && 'not-in' !== U && 'array-contains-any' !== U) || kx(se, U),
                  (xe = oC(p, 'where', se, 'in' === U || 'not-in' === U));
              const rt = _r.create(I, U, xe);
              return (
                (function (Ut, qt) {
                  if (qt.V()) {
                    const Ln = Zc(Ut);
                    if (null !== Ln && !Ln.isEqual(qt.field))
                      throw new En(
                        rn.INVALID_ARGUMENT,
                        `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${Ln.toString()}' and '${qt.field.toString()}'`
                      );
                    const Ki = Kd(Ut);
                    null !== Ki && Qy(0, qt.field, Ki);
                  }
                  const Mn = (function (Ln, Ki) {
                    for (const er of Ln.filters) if (Ki.indexOf(er.op) >= 0) return er.op;
                    return null;
                  })(
                    Ut,
                    (function (Ln) {
                      switch (Ln) {
                        case '!=':
                          return ['!=', 'not-in'];
                        case 'array-contains':
                          return ['array-contains', 'array-contains-any', 'not-in'];
                        case 'in':
                          return ['array-contains-any', 'in', 'not-in'];
                        case 'array-contains-any':
                          return ['array-contains', 'array-contains-any', 'in', 'not-in'];
                        case 'not-in':
                          return ['array-contains', 'array-contains-any', 'in', 'not-in', '!='];
                        default:
                          return [];
                      }
                    })(qt.op)
                  );
                  if (null !== Mn)
                    throw new En(
                      rn.INVALID_ARGUMENT,
                      Mn === qt.op
                        ? `Invalid query. You cannot use more than one '${qt.op.toString()}' filter.`
                        : `Invalid query. You cannot use '${qt.op.toString()}' filters with '${Mn.toString()}' filters.`
                    );
                })(o, rt),
                rt
              );
            })(e._query, 0, t, e.firestore._databaseId, this.zc, this.Hc, this.Jc);
          return new fa(
            e.firestore,
            e.converter,
            (function (o, c) {
              const p = o.filters.concat([c]);
              return new ca(
                o.path,
                o.collectionGroup,
                o.explicitOrderBy.slice(),
                p,
                o.limit,
                o.limitType,
                o.startAt,
                o.endAt
              );
            })(e._query, i)
          );
        }
      }
      class BS extends Lp {
        constructor(e, t) {
          super(), (this.zc = e), (this.Yc = t), (this.type = 'orderBy');
        }
        _apply(e) {
          const t = (function (i, o, c) {
            if (null !== i.startAt)
              throw new En(
                rn.INVALID_ARGUMENT,
                'Invalid query. You must not call startAt() or startAfter() before calling orderBy().'
              );
            if (null !== i.endAt)
              throw new En(
                rn.INVALID_ARGUMENT,
                'Invalid query. You must not call endAt() or endBefore() before calling orderBy().'
              );
            const p = new yc(o, c);
            return (
              (function (C, I) {
                if (null === Kd(C)) {
                  const U = Zc(C);
                  null !== U && Qy(0, U, I.field);
                }
              })(i, p),
              p
            );
          })(e._query, this.zc, this.Yc);
          return new fa(
            e.firestore,
            e.converter,
            (function (i, o) {
              const c = i.explicitOrderBy.concat([o]);
              return new ca(i.path, i.collectionGroup, c, i.filters.slice(), i.limit, i.limitType, i.startAt, i.endAt);
            })(e._query, t)
          );
        }
      }
      class Zy extends Lp {
        constructor(e, t, i) {
          super(), (this.type = e), (this.Xc = t), (this.Zc = i);
        }
        _apply(e) {
          return new fa(e.firestore, e.converter, qd(e._query, this.Xc, this.Zc));
        }
      }
      class hC extends Lp {
        constructor(e, t, i) {
          super(), (this.type = e), (this.ta = t), (this.ea = i);
        }
        _apply(e) {
          const t = Bp(e, this.type, this.ta, this.ea);
          return new fa(
            e.firestore,
            e.converter,
            ((o = t),
            new ca(
              (i = e._query).path,
              i.collectionGroup,
              i.explicitOrderBy.slice(),
              i.filters.slice(),
              i.limit,
              i.limitType,
              o,
              i.endAt
            ))
          );
          var i, o;
        }
      }
      class Np extends Lp {
        constructor(e, t, i) {
          super(), (this.type = e), (this.ta = t), (this.ea = i);
        }
        _apply(e) {
          const t = Bp(e, this.type, this.ta, this.ea);
          return new fa(
            e.firestore,
            e.converter,
            ((o = t),
            new ca(
              (i = e._query).path,
              i.collectionGroup,
              i.explicitOrderBy.slice(),
              i.filters.slice(),
              i.limit,
              i.limitType,
              i.startAt,
              o
            ))
          );
          var i, o;
        }
      }
      function Bp(n, e, t, i) {
        if (((t[0] = (0, je.m9)(t[0])), t[0] instanceof lf))
          return (function (o, c, p, C, I) {
            if (!C) throw new En(rn.NOT_FOUND, `Can't use a DocumentSnapshot that doesn't exist for ${p}().`);
            const U = [];
            for (const se of Qc(o))
              if (se.field.isKeyField()) U.push(jl(c, C.key));
              else {
                const xe = C.data.field(se.field);
                if (Gd(xe))
                  throw new En(
                    rn.INVALID_ARGUMENT,
                    'Invalid query. You are trying to start or end a query using a document for which the field "' +
                      se.field +
                      '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)'
                  );
                if (null === xe) {
                  const rt = se.field.canonicalString();
                  throw new En(
                    rn.INVALID_ARGUMENT,
                    `Invalid query. You are trying to start or end a query using a document for which the field '${rt}' (used as the orderBy) does not exist.`
                  );
                }
                U.push(xe);
              }
            return new xs(U, I);
          })(n._query, n.firestore._databaseId, e, t[0]._document, i);
        {
          const o = ph(n.firestore);
          return (function (c, p, C, I, U, se) {
            const xe = c.explicitOrderBy;
            if (U.length > xe.length)
              throw new En(
                rn.INVALID_ARGUMENT,
                `Too many arguments provided to ${I}(). The number of arguments must be less than or equal to the number of orderBy() clauses`
              );
            const rt = [];
            for (let Ut = 0; Ut < U.length; Ut++) {
              const qt = U[Ut];
              if (xe[Ut].field.isKeyField()) {
                if ('string' != typeof qt)
                  throw new En(
                    rn.INVALID_ARGUMENT,
                    `Invalid query. Expected a string for document ID in ${I}(), but got a ${typeof qt}`
                  );
                if (!Vh(c) && -1 !== qt.indexOf('/'))
                  throw new En(
                    rn.INVALID_ARGUMENT,
                    `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${I}() must be a plain document ID, but '${qt}' contains a slash.`
                  );
                const Mn = c.path.child(vr.fromString(qt));
                if (!ui.isDocumentKey(Mn))
                  throw new En(
                    rn.INVALID_ARGUMENT,
                    `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${I}() must result in a valid document path, but '${Mn}' is not because it contains an odd number of segments.`
                  );
                const Ln = new ui(Mn);
                rt.push(jl(p, Ln));
              } else {
                const Mn = oC(C, I, qt);
                rt.push(Mn);
              }
            }
            return new xs(rt, se);
          })(n._query, n.firestore._databaseId, o, e, t, i);
        }
      }
      function ro(n, e, t) {
        if ('string' == typeof (t = (0, je.m9)(t))) {
          if ('' === t)
            throw new En(
              rn.INVALID_ARGUMENT,
              'Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.'
            );
          if (!Vh(e) && -1 !== t.indexOf('/'))
            throw new En(
              rn.INVALID_ARGUMENT,
              `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${t}' contains a '/' character.`
            );
          const i = e.path.child(vr.fromString(t));
          if (!ui.isDocumentKey(i))
            throw new En(
              rn.INVALID_ARGUMENT,
              `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${i}' is not because it has an odd number of segments (${i.length}).`
            );
          return jl(n, new ui(i));
        }
        if (t instanceof Ss) return jl(n, t._key);
        throw new En(
          rn.INVALID_ARGUMENT,
          `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${Sp(
            t
          )}.`
        );
      }
      function kx(n, e) {
        if (!Array.isArray(n) || 0 === n.length)
          throw new En(
            rn.INVALID_ARGUMENT,
            `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`
          );
        if (n.length > 10)
          throw new En(
            rn.INVALID_ARGUMENT,
            `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`
          );
      }
      function Qy(n, e, t) {
        if (!t.isEqual(e))
          throw new En(
            rn.INVALID_ARGUMENT,
            `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${t.toString()}' instead.`
          );
      }
      class Xy {
        convertValue(e, t = 'none') {
          switch (mc(e)) {
            case 0:
              return null;
            case 1:
              return e.booleanValue;
            case 2:
              return Es(e.integerValue || e.doubleValue);
            case 3:
              return this.convertTimestamp(e.timestampValue);
            case 4:
              return this.convertServerTimestamp(e, t);
            case 5:
              return e.stringValue;
            case 6:
              return this.convertBytes(Eu(e.bytesValue));
            case 7:
              return this.convertReference(e.referenceValue);
            case 8:
              return this.convertGeoPoint(e.geoPointValue);
            case 9:
              return this.convertArray(e.arrayValue, t);
            case 10:
              return this.convertObject(e.mapValue, t);
            default:
              throw ii();
          }
        }
        convertObject(e, t) {
          const i = {};
          return (
            fc(e.fields, (o, c) => {
              i[o] = this.convertValue(c, t);
            }),
            i
          );
        }
        convertGeoPoint(e) {
          return new Ip(Es(e.latitude), Es(e.longitude));
        }
        convertArray(e, t) {
          return (e.values || []).map((i) => this.convertValue(i, t));
        }
        convertServerTimestamp(e, t) {
          switch (t) {
            case 'previous':
              const i = bm(e);
              return null == i ? null : this.convertValue(i, t);
            case 'estimate':
              return this.convertTimestamp(Wc(e));
            default:
              return null;
          }
        }
        convertTimestamp(e) {
          const t = la(e);
          return new eo(t.seconds, t.nanos);
        }
        convertDocumentKey(e, t) {
          const i = vr.fromString(e);
          xi(Bb(i));
          const o = new Gs(i.get(1), i.get(3)),
            c = new ui(i.popFirst(5));
          return (
            o.isEqual(t) ||
              Js(
                `Document ${c} contains a document reference within a different database (${o.projectId}/${o.database}) which is not supported. It will be treated as a reference in the current database (${t.projectId}/${t.database}) instead.`
              ),
            c
          );
        }
      }
      function bg(n, e, t) {
        let i;
        return (i = n ? (t && (t.merge || t.mergeFields) ? n.toFirestore(e, t) : n.toFirestore(e)) : e), i;
      }
      class fC extends Xy {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Ac(e);
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return new Ss(this.firestore, null, t);
        }
      }
      class Jy {
        constructor(e, t) {
          (this._firestore = e),
            (this._commitHandler = t),
            (this._mutations = []),
            (this._committed = !1),
            (this._dataReader = ph(e));
        }
        set(e, t, i) {
          this._verifyNotCommitted();
          const o = Gu(e, this._firestore),
            c = bg(o.converter, t, i),
            p = yg(this._dataReader, 'WriteBatch.set', o._key, c, null !== o.converter, i);
          return this._mutations.push(p.toMutation(o._key, Fi.none())), this;
        }
        update(e, t, i, ...o) {
          this._verifyNotCommitted();
          const c = Gu(e, this._firestore);
          let p;
          return (
            (p =
              'string' == typeof (t = (0, je.m9)(t)) || t instanceof Sc
                ? zy(this._dataReader, 'WriteBatch.update', c._key, t, i, o)
                : Gy(this._dataReader, 'WriteBatch.update', c._key, t)),
            this._mutations.push(p.toMutation(c._key, Fi.exists(!0))),
            this
          );
        }
        delete(e) {
          this._verifyNotCommitted();
          const t = Gu(e, this._firestore);
          return (this._mutations = this._mutations.concat(new eu(t._key, Fi.none()))), this;
        }
        commit() {
          return (
            this._verifyNotCommitted(),
            (this._committed = !0),
            this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve()
          );
        }
        _verifyNotCommitted() {
          if (this._committed)
            throw new En(rn.FAILED_PRECONDITION, 'A write batch can no longer be used after commit() has been called.');
        }
      }
      function Gu(n, e) {
        if ((n = (0, je.m9)(n)).firestore !== e)
          throw new En(rn.INVALID_ARGUMENT, 'Provided document reference is from a different Firestore instance.');
        return n;
      }
      class gh extends Xy {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Ac(e);
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return new Ss(this.firestore, null, t);
        }
      }
      function mC(n, e, t) {
        n = hr(n, Ss);
        const i = hr(n.firestore, As),
          o = bg(n.converter, e, t);
        return au(i, [yg(ph(i), 'setDoc', n._key, o, null !== n.converter, t).toMutation(n._key, Fi.none())]);
      }
      function Up(n, e, t, ...i) {
        n = hr(n, Ss);
        const o = hr(n.firestore, As),
          c = ph(o);
        let p;
        return (
          (p =
            'string' == typeof (e = (0, je.m9)(e)) || e instanceof Sc
              ? zy(c, 'updateDoc', n._key, e, t, i)
              : Gy(c, 'updateDoc', n._key, e)),
          au(o, [p.toMutation(n._key, Fi.exists(!0))])
        );
      }
      function ev(n, ...e) {
        var t, i, o;
        n = (0, je.m9)(n);
        let c = { includeMetadataChanges: !1 },
          p = 0;
        'object' != typeof e[p] || Ml(e[p]) || ((c = e[p]), p++);
        const C = { includeMetadataChanges: c.includeMetadataChanges };
        if (Ml(e[p])) {
          const xe = e[p];
          (e[p] = null === (t = xe.next) || void 0 === t ? void 0 : t.bind(xe)),
            (e[p + 1] = null === (i = xe.error) || void 0 === i ? void 0 : i.bind(xe)),
            (e[p + 2] = null === (o = xe.complete) || void 0 === o ? void 0 : o.bind(xe));
        }
        let I, U, se;
        if (n instanceof Ss)
          (U = hr(n.firestore, As)),
            (se = Gl(n._key.path)),
            (I = {
              next: (xe) => {
                e[p] && e[p](_h(U, n, xe));
              },
              error: e[p + 1],
              complete: e[p + 2],
            });
        else {
          const xe = hr(n, fa);
          (U = hr(xe.firestore, As)), (se = xe._query);
          const rt = new gh(U);
          (I = {
            next: (Ut) => {
              e[p] && e[p](new ou(U, rt, xe, Ut));
            },
            error: e[p + 1],
            complete: e[p + 2],
          }),
            uC(n._query);
        }
        return (function (xe, rt, Ut, qt) {
          const Mn = new wp(qt),
            Ln = new ig(rt, Mn, Ut);
          return (
            xe.asyncQueue.enqueueAndForget(
              (0, Jt.Z)(function* () {
                return vd(yield hh(xe), Ln);
              })
            ),
            () => {
              Mn.nc(),
                xe.asyncQueue.enqueueAndForget(
                  (0, Jt.Z)(function* () {
                    return Cd(yield hh(xe), Ln);
                  })
                );
            }
          );
        })(Io(U), se, C, I);
      }
      function au(n, e) {
        return (function (t, i) {
          const o = new ho();
          return (
            t.asyncQueue.enqueueAndForget(
              (0, Jt.Z)(function* () {
                return (function x0(n, e, t) {
                  return gy.apply(this, arguments);
                })(yield Mp(t), i, o);
              })
            ),
            o.promise
          );
        })(Io(n), e);
      }
      function _h(n, e, t) {
        const i = t.docs.get(e._key),
          o = new gh(n);
        return new su(n, o, e._key, i, new xd(t.hasPendingWrites, t.fromCache), e.converter);
      }
      class Bx extends class {
        constructor(e, t) {
          (this._firestore = e), (this._transaction = t), (this._dataReader = ph(e));
        }
        get(e) {
          const t = Gu(e, this._firestore),
            i = new fC(this._firestore);
          return this._transaction.lookup([t._key]).then((o) => {
            if (!o || 1 !== o.length) return ii();
            const c = o[0];
            if (c.isFoundDocument()) return new lf(this._firestore, i, c.key, c, t.converter);
            if (c.isNoDocument()) return new lf(this._firestore, i, t._key, null, t.converter);
            throw ii();
          });
        }
        set(e, t, i) {
          const o = Gu(e, this._firestore),
            c = bg(o.converter, t, i),
            p = yg(this._dataReader, 'Transaction.set', o._key, c, null !== o.converter, i);
          return this._transaction.set(o._key, p), this;
        }
        update(e, t, i, ...o) {
          const c = Gu(e, this._firestore);
          let p;
          return (
            (p =
              'string' == typeof (t = (0, je.m9)(t)) || t instanceof Sc
                ? zy(this._dataReader, 'Transaction.update', c._key, t, i, o)
                : Gy(this._dataReader, 'Transaction.update', c._key, t)),
            this._transaction.update(c._key, p),
            this
          );
        }
        delete(e) {
          const t = Gu(e, this._firestore);
          return this._transaction.delete(t._key), this;
        }
      } {
        constructor(e, t) {
          super(e, t), (this._firestore = e);
        }
        get(e) {
          const t = Gu(e, this._firestore),
            i = new gh(this._firestore);
          return super.get(e).then((o) => new su(this._firestore, i, t._key, o._document, new xd(!1, !1), t.converter));
        }
      }
      function CC(n, e) {
        if (void 0 === e) return { merge: !1 };
        if (void 0 !== e.mergeFields && void 0 !== e.merge)
          throw new En(
            'invalid-argument',
            `Invalid options passed to function ${n}(): You cannot specify both "merge" and "mergeFields".`
          );
        return e;
      }
      function nv() {
        if ('undefined' == typeof Uint8Array)
          throw new En('unimplemented', 'Uint8Arrays are not available in this environment.');
      }
      function jp() {
        if (
          !(function hl() {
            return 'undefined' != typeof atob;
          })()
        )
          throw new En('unimplemented', 'Blobs are unavailable in Firestore in this environment.');
      }
      !(function (n, e = !0) {
        (uc = ji.SDK_VERSION),
          (0, ji._registerComponent)(
            new tr.wA(
              'firestore',
              (t, { options: i }) => {
                const o = t.getProvider('app').getImmediate(),
                  c = new As(o, new ym(t.getProvider('auth-internal')), new Vf(t.getProvider('app-check-internal')));
                return (i = Object.assign({ useFetchStreams: e }, i)), c._setSettings(i), c;
              },
              'PUBLIC'
            )
          ),
          (0, ji.registerVersion)(nd, '3.4.4', n),
          (0, ji.registerVersion)(nd, '3.4.4', 'esm2017');
      })();
      class Hp {
        constructor(e) {
          this._delegate = e;
        }
        static fromBase64String(e) {
          return jp(), new Hp(Ac.fromBase64String(e));
        }
        static fromUint8Array(e) {
          return nv(), new Hp(Ac.fromUint8Array(e));
        }
        toBase64() {
          return jp(), this._delegate.toBase64();
        }
        toUint8Array() {
          return nv(), this._delegate.toUint8Array();
        }
        isEqual(e) {
          return this._delegate.isEqual(e._delegate);
        }
        toString() {
          return 'Blob(base64: ' + this.toBase64() + ')';
        }
      }
      function iv(n) {
        return (function wC(n, e) {
          if ('object' != typeof n || null === n) return !1;
          const t = n;
          for (const i of e) if (i in t && 'function' == typeof t[i]) return !0;
          return !1;
        })(n, ['next', 'error', 'complete']);
      }
      class Gp {
        enableIndexedDbPersistence(e, t) {
          return (function Ly(n, e) {
            By((n = hr(n, As)));
            const t = Io(n),
              i = n._freezeSettings(),
              o = new Cp();
            return X0(t, o, new _x(o, i.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));
          })(e._delegate, { forceOwnership: t });
        }
        enableMultiTabIndexedDbPersistence(e) {
          return (function Tp(n) {
            By((n = hr(n, As)));
            const e = Io(n),
              t = n._freezeSettings(),
              i = new Cp();
            return X0(e, i, new yx(i, t.cacheSizeBytes));
          })(e._delegate);
        }
        clearIndexedDbPersistence(e) {
          return (function J0(n) {
            if (n._initialized && !n._terminated)
              throw new En(
                rn.FAILED_PRECONDITION,
                'Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.'
              );
            const e = new ho();
            return (
              n._queue.enqueueAndForgetEvenWhileRestricted(
                (0, Jt.Z)(function* () {
                  try {
                    yield ((t = (0, Jt.Z)(function* (i) {
                      if (!wc.Pt()) return Promise.resolve();
                      const o = i + 'main';
                      yield wc.delete(o);
                    })),
                    function (i) {
                      return t.apply(this, arguments);
                    })(Zb(n._databaseId, n._persistenceKey)),
                      e.resolve();
                  } catch (t) {
                    e.reject(t);
                  }
                  var t;
                })
              ),
              e.promise
            );
          })(e._delegate);
        }
      }
      class EC {
        constructor(e, t, i) {
          (this._delegate = t),
            (this._persistenceProvider = i),
            (this.INTERNAL = { delete: () => this.terminate() }),
            e instanceof Gs || (this._appCompat = e);
        }
        get _databaseId() {
          return this._delegate._databaseId;
        }
        settings(e) {
          const t = this._delegate._getSettings();
          !e.merge &&
            t.host !== e.host &&
            hc(
              'You are overriding the original host. If you did not intend to override your settings, use {merge: true}.'
            ),
            e.merge && delete (e = Object.assign(Object.assign({}, t), e)).merge,
            this._delegate._setSettings(e);
        }
        useEmulator(e, t, i = {}) {
          !(function Y0(n, e, t, i = {}) {
            var o;
            const c = (n = hr(n, Ap))._getSettings();
            if (
              ('firestore.googleapis.com' !== c.host &&
                c.host !== e &&
                hc('Host has been set in both settings() and useEmulator(), emulator host will be used'),
              n._setSettings(Object.assign(Object.assign({}, c), { host: `${e}:${t}`, ssl: !1 })),
              i.mockUserToken)
            ) {
              let p, C;
              if ('string' == typeof i.mockUserToken) (p = i.mockUserToken), (C = uo.MOCK_USER);
              else {
                p = (0, je.Sg)(i.mockUserToken, null === (o = n._app) || void 0 === o ? void 0 : o.options.projectId);
                const I = i.mockUserToken.sub || i.mockUserToken.user_id;
                if (!I) throw new En(rn.INVALID_ARGUMENT, "mockUserToken must contain 'sub' or 'user_id' field!");
                C = new uo(I);
              }
              n._authCredentials = new Gc(new kh(p, C));
            }
          })(this._delegate, e, t, i);
        }
        enableNetwork() {
          return (function eC(n) {
            return (function V0(n) {
              return n.asyncQueue.enqueue(
                (0, Jt.Z)(function* () {
                  const e = yield Ay(n),
                    t = yield Ty(n);
                  return (
                    e.setNetworkEnabled(!0),
                    (function (i) {
                      const o = Un(i);
                      return o.Gr.delete(0), lp(o);
                    })(t)
                  );
                })
              );
            })(Io((n = hr(n, As))));
          })(this._delegate);
        }
        disableNetwork() {
          return (function tC(n) {
            return (function U0(n) {
              return n.asyncQueue.enqueue(
                (0, Jt.Z)(function* () {
                  const e = yield Ay(n),
                    t = yield Ty(n);
                  return (
                    e.setNetworkEnabled(!1),
                    ((i = (0, Jt.Z)(function* (o) {
                      const c = Un(o);
                      c.Gr.add(0), yield cp(c), c.Jr.set('Offline');
                    })),
                    function (o) {
                      return i.apply(this, arguments);
                    })(t)
                  );
                  var i;
                })
              );
            })(Io((n = hr(n, As))));
          })(this._delegate);
        }
        enablePersistence(e) {
          let t = !1,
            i = !1;
          return (
            e &&
              ((t = !!e.synchronizeTabs),
              (i = !!e.experimentalForceOwningTab),
              z0('synchronizeTabs', t, 'experimentalForceOwningTab', i)),
            t
              ? this._persistenceProvider.enableMultiTabIndexedDbPersistence(this)
              : this._persistenceProvider.enableIndexedDbPersistence(this, i)
          );
        }
        clearPersistence() {
          return this._persistenceProvider.clearIndexedDbPersistence(this);
        }
        terminate() {
          return (
            this._appCompat &&
              (this._appCompat._removeServiceInstance('firestore-compat'),
              this._appCompat._removeServiceInstance('firestore')),
            this._delegate._delete()
          );
        }
        waitForPendingWrites() {
          return (function wx(n) {
            return (function (e) {
              const t = new ho();
              return (
                e.asyncQueue.enqueueAndForget(
                  (0, Jt.Z)(function* () {
                    return (function ux(n, e) {
                      return sg.apply(this, arguments);
                    })(yield Mp(e), t);
                  })
                ),
                t.promise
              );
            })(Io((n = hr(n, As))));
          })(this._delegate);
        }
        onSnapshotsInSync(e) {
          return (function Nx(n, e) {
            return (function PS(n, e) {
              const t = new wp(e);
              return (
                n.asyncQueue.enqueueAndForget(
                  (0, Jt.Z)(function* () {
                    return (i = yield hh(n)), (o = t), Un(i).io.add(o), void o.next();
                    var i, o;
                  })
                ),
                () => {
                  t.nc(),
                    n.asyncQueue.enqueueAndForget(
                      (0, Jt.Z)(function* () {
                        return (i = yield hh(n)), (o = t), void Un(i).io.delete(o);
                        var i, o;
                      })
                    );
                }
              );
            })(Io((n = hr(n, As))), Ml(e) ? e : { next: e });
          })(this._delegate, e);
        }
        get app() {
          if (!this._appCompat)
            throw new En(
              'failed-precondition',
              "Firestore was not initialized using the Firebase SDK. 'app' is not available"
            );
          return this._appCompat;
        }
        collection(e) {
          try {
            return new df(this, _g(this._delegate, e));
          } catch (t) {
            throw $a(t, 'collection()', 'Firestore.collection()');
          }
        }
        doc(e) {
          try {
            return new Zl(this, Dl(this._delegate, e));
          } catch (t) {
            throw $a(t, 'doc()', 'Firestore.doc()');
          }
        }
        collectionGroup(e) {
          try {
            return new Ta(
              this,
              (function Fy(n, e) {
                if (((n = hr(n, Ap)), Oy('collectionGroup', 'collection id', e), e.indexOf('/') >= 0))
                  throw new En(
                    rn.INVALID_ARGUMENT,
                    `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`
                  );
                return new fa(n, null, ((t = e), new ca(vr.emptyPath(), t)));
                var t;
              })(this._delegate, e)
            );
          } catch (t) {
            throw $a(t, 'collectionGroup()', 'Firestore.collectionGroup()');
          }
        }
        runTransaction(e) {
          return (function Vx(n, e) {
            return (function vx(n, e) {
              const t = new ho();
              return (
                n.asyncQueue.enqueueAndForget(
                  (0, Jt.Z)(function* () {
                    const i = yield ((o = n), Dp(o).then((c) => c.datastore));
                    var o;
                    new L0(n.asyncQueue, i, e, t).run();
                  })
                ),
                t.promise
              );
            })(Io((n = hr(n, As))), (t) => e(new Bx(n, t)));
          })(this._delegate, (t) => e(new xC(this, t)));
        }
        batch() {
          return Io(this._delegate), new DC(new Jy(this._delegate, (e) => au(this._delegate, e)));
        }
        loadBundle(e) {
          return (function Ex(n, e) {
            const t = Io((n = hr(n, As))),
              i = new Mc();
            return (
              (function bx(n, e, t, i) {
                const o = (function (c, p) {
                  let C;
                  return (
                    (C = 'string' == typeof c ? new TextEncoder().encode(c) : c),
                    (I = (function (I, U) {
                      if (I instanceof Uint8Array) return dg(I, U);
                      if (I instanceof ArrayBuffer) return dg(new Uint8Array(I), U);
                      if (I instanceof ReadableStream) return I.getReader();
                      throw new Error('Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream');
                    })(C)),
                    new F0(I, p)
                  );
                  var I;
                })(t, ch(e));
                n.asyncQueue.enqueueAndForget(
                  (0, Jt.Z)(function* () {
                    !(function xy(n, e, t) {
                      const i = Un(n);
                      var o;
                      ((o = (0, Jt.Z)(function* (c, p, C) {
                        try {
                          const I = yield p.getMetadata();
                          if (
                            yield (function (rt, Ut) {
                              const qt = Un(rt),
                                Mn = zo(Ut.createTime);
                              return qt.persistence
                                .runTransaction('hasNewerBundle', 'readonly', (Ln) =>
                                  qt.Ye.getBundleMetadata(Ln, Ut.id)
                                )
                                .then((Ln) => !!Ln && Ln.createTime.compareTo(Mn) >= 0);
                            })(c.localStore, I)
                          )
                            return (
                              yield p.close(),
                              void C._completeWith(
                                ((rt = I),
                                {
                                  taskState: 'Success',
                                  documentsLoaded: rt.totalDocuments,
                                  bytesLoaded: rt.totalBytes,
                                  totalDocuments: rt.totalDocuments,
                                  totalBytes: rt.totalBytes,
                                })
                              )
                            );
                          C._updateProgress(cy(I));
                          const U = new b0(I, c.localStore, p.k);
                          let se = yield p.Ho();
                          for (; se; ) {
                            const rt = yield U.yo(se);
                            rt && C._updateProgress(rt), (se = yield p.Ho());
                          }
                          const xe = yield U.complete();
                          yield ql(c, xe.In, void 0),
                            yield (function (rt, Ut) {
                              const qt = Un(rt);
                              return qt.persistence.runTransaction('Save bundle', 'readwrite', (Mn) =>
                                qt.Ye.saveBundleMetadata(Mn, Ut)
                              );
                            })(c.localStore, I),
                            C._completeWith(xe.progress);
                        } catch (I) {
                          hc('SyncEngine', `Loading bundle failed with ${I}`), C._failWith(I);
                        }
                        var rt;
                      })),
                      function (c, p, C) {
                        return o.apply(this, arguments);
                      })(i, e, t).then(() => {
                        i.sharedClientState.notifyBundleLoaded();
                      });
                    })(yield Mp(n), o, i);
                  })
                );
              })(t, n._databaseId, e, i),
              i
            );
          })(this._delegate, e);
        }
        namedQuery(e) {
          return (function nC(n, e) {
            return (function G0(n, e) {
              return n.asyncQueue.enqueue(
                (0, Jt.Z)(function* () {
                  return (function (t, i) {
                    const o = Un(t);
                    return o.persistence.runTransaction('Get named query', 'readonly', (c) => o.Ye.getNamedQuery(c, i));
                  })(yield mg(n), e);
                })
              );
            })(Io((n = hr(n, As))), e).then((t) => (t ? new fa(n, null, t.query) : null));
          })(this._delegate, e).then((t) => (t ? new Ta(this, t) : null));
        }
      }
      class Cg extends Xy {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Hp(new Ac(e));
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return Zl.forKey(t, this.firestore, null);
        }
      }
      class xC {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t), (this._userDataWriter = new Cg(e));
        }
        get(e) {
          const t = zu(e);
          return this._delegate
            .get(t)
            .then(
              (i) =>
                new uf(
                  this._firestore,
                  new su(this._firestore._delegate, this._userDataWriter, i._key, i._document, i.metadata, t.converter)
                )
            );
        }
        set(e, t, i) {
          const o = zu(e);
          return i ? (CC('Transaction.set', i), this._delegate.set(o, t, i)) : this._delegate.set(o, t), this;
        }
        update(e, t, i, ...o) {
          const c = zu(e);
          return 2 === arguments.length ? this._delegate.update(c, t) : this._delegate.update(c, t, i, ...o), this;
        }
        delete(e) {
          const t = zu(e);
          return this._delegate.delete(t), this;
        }
      }
      class DC {
        constructor(e) {
          this._delegate = e;
        }
        set(e, t, i) {
          const o = zu(e);
          return i ? (CC('WriteBatch.set', i), this._delegate.set(o, t, i)) : this._delegate.set(o, t), this;
        }
        update(e, t, i, ...o) {
          const c = zu(e);
          return 2 === arguments.length ? this._delegate.update(c, t) : this._delegate.update(c, t, i, ...o), this;
        }
        delete(e) {
          const t = zu(e);
          return this._delegate.delete(t), this;
        }
        commit() {
          return this._delegate.commit();
        }
      }
      class Md {
        constructor(e, t, i) {
          (this._firestore = e), (this._userDataWriter = t), (this._delegate = i);
        }
        fromFirestore(e, t) {
          const i = new cf(this._firestore._delegate, this._userDataWriter, e._key, e._document, e.metadata, null);
          return this._delegate.fromFirestore(new zp(this._firestore, i), null != t ? t : {});
        }
        toFirestore(e, t) {
          return t ? this._delegate.toFirestore(e, t) : this._delegate.toFirestore(e);
        }
        static getInstance(e, t) {
          const i = Md.INSTANCES;
          let o = i.get(e);
          o || ((o = new WeakMap()), i.set(e, o));
          let c = o.get(t);
          return c || ((c = new Md(e, new Cg(e), t)), o.set(t, c)), c;
        }
      }
      Md.INSTANCES = new WeakMap();
      class Zl {
        constructor(e, t) {
          (this.firestore = e), (this._delegate = t), (this._userDataWriter = new Cg(e));
        }
        static forPath(e, t, i) {
          if (e.length % 2 != 0)
            throw new En(
              'invalid-argument',
              `Invalid document reference. Document references must have an even number of segments, but ${e.canonicalString()} has ${
                e.length
              }`
            );
          return new Zl(t, new Ss(t._delegate, i, new ui(e)));
        }
        static forKey(e, t, i) {
          return new Zl(t, new Ss(t._delegate, i, e));
        }
        get id() {
          return this._delegate.id;
        }
        get parent() {
          return new df(this.firestore, this._delegate.parent);
        }
        get path() {
          return this._delegate.path;
        }
        collection(e) {
          try {
            return new df(this.firestore, _g(this._delegate, e));
          } catch (t) {
            throw $a(t, 'collection()', 'DocumentReference.collection()');
          }
        }
        isEqual(e) {
          return (e = (0, je.m9)(e)) instanceof Ss && K0(this._delegate, e);
        }
        set(e, t) {
          t = CC('DocumentReference.set', t);
          try {
            return t ? mC(this._delegate, e, t) : mC(this._delegate, e);
          } catch (i) {
            throw $a(i, 'setDoc()', 'DocumentReference.set()');
          }
        }
        update(e, t, ...i) {
          try {
            return 1 === arguments.length ? Up(this._delegate, e) : Up(this._delegate, e, t, ...i);
          } catch (o) {
            throw $a(o, 'updateDoc()', 'DocumentReference.update()');
          }
        }
        delete() {
          return (function gC(n) {
            return au(hr(n.firestore, As), [new eu(n._key, Fi.none())]);
          })(this._delegate);
        }
        onSnapshot(...e) {
          const t = yh(e),
            i = MC(
              e,
              (o) =>
                new uf(
                  this.firestore,
                  new su(
                    this.firestore._delegate,
                    this._userDataWriter,
                    o._key,
                    o._document,
                    o.metadata,
                    this._delegate.converter
                  )
                )
            );
          return ev(this._delegate, t, i);
        }
        get(e) {
          let t;
          return (
            (t =
              'cache' === (null == e ? void 0 : e.source)
                ? (function Ox(n) {
                    n = hr(n, Ss);
                    const e = hr(n.firestore, As),
                      t = Io(e),
                      i = new gh(e);
                    return (function j0(n, e) {
                      const t = new ho();
                      return (
                        n.asyncQueue.enqueueAndForget(
                          (0, Jt.Z)(function* () {
                            return ((i = (0, Jt.Z)(function* (o, c, p) {
                              try {
                                const C = yield (function (I, U) {
                                  const se = Un(I);
                                  return se.persistence.runTransaction('read document', 'readonly', (xe) =>
                                    se.Wn.Rn(xe, U)
                                  );
                                })(o, c);
                                C.isFoundDocument()
                                  ? p.resolve(C)
                                  : C.isNoDocument()
                                  ? p.resolve(null)
                                  : p.reject(
                                      new En(
                                        rn.UNAVAILABLE,
                                        "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)"
                                      )
                                    );
                              } catch (C) {
                                const I = ju(C, `Failed to get document '${c} from cache`);
                                p.reject(I);
                              }
                            })),
                            function (o, c, p) {
                              return i.apply(this, arguments);
                            })(yield mg(n), e, t);
                            var i;
                          })
                        ),
                        t.promise
                      );
                    })(t, n._key).then(
                      (o) => new su(e, i, n._key, o, new xd(null !== o && o.hasLocalMutations, !0), n.converter)
                    );
                  })(this._delegate)
                : 'server' === (null == e ? void 0 : e.source)
                ? (function Px(n) {
                    n = hr(n, Ss);
                    const e = hr(n.firestore, As);
                    return Iy(Io(e), n._key, { source: 'server' }).then((t) => _h(e, n, t));
                  })(this._delegate)
                : (function pC(n) {
                    n = hr(n, Ss);
                    const e = hr(n.firestore, As);
                    return Iy(Io(e), n._key).then((t) => _h(e, n, t));
                  })(this._delegate)),
            t.then(
              (i) =>
                new uf(
                  this.firestore,
                  new su(
                    this.firestore._delegate,
                    this._userDataWriter,
                    i._key,
                    i._document,
                    i.metadata,
                    this._delegate.converter
                  )
                )
            )
          );
        }
        withConverter(e) {
          return new Zl(this.firestore, this._delegate.withConverter(e ? Md.getInstance(this.firestore, e) : null));
        }
      }
      function $a(n, e, t) {
        return (n.message = n.message.replace(e, t)), n;
      }
      function yh(n) {
        for (const e of n) if ('object' == typeof e && !iv(e)) return e;
        return {};
      }
      function MC(n, e) {
        var t, i;
        let o;
        return (
          (o = iv(n[0])
            ? n[0]
            : iv(n[1])
            ? n[1]
            : 'function' == typeof n[0]
            ? { next: n[0], error: n[1], complete: n[2] }
            : { next: n[1], error: n[2], complete: n[3] }),
          {
            next: (c) => {
              o.next && o.next(e(c));
            },
            error: null === (t = o.error) || void 0 === t ? void 0 : t.bind(o),
            complete: null === (i = o.complete) || void 0 === i ? void 0 : i.bind(o),
          }
        );
      }
      class uf {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t);
        }
        get ref() {
          return new Zl(this._firestore, this._delegate.ref);
        }
        get id() {
          return this._delegate.id;
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get exists() {
          return this._delegate.exists();
        }
        data(e) {
          return this._delegate.data(e);
        }
        get(e, t) {
          return this._delegate.get(e, t);
        }
        isEqual(e) {
          return Dd(this._delegate, e._delegate);
        }
      }
      class zp extends uf {
        data(e) {
          const t = this._delegate.data(e);
          return (
            (function _m(n, e) {
              n || ii();
            })(void 0 !== t),
            t
          );
        }
      }
      class Ta {
        constructor(e, t) {
          (this.firestore = e), (this._delegate = t), (this._userDataWriter = new Cg(e));
        }
        where(e, t, i) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function qy(n, e, t) {
                  const i = e,
                    o = Fp('where', n);
                  return new NS(o, i, t);
                })(e, t, i)
              )
            );
          } catch (o) {
            throw $a(o, /(orderBy|where)\(\)/, 'Query.$1()');
          }
        }
        orderBy(e, t) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function dC(n, e = 'asc') {
                  const t = e,
                    i = Fp('orderBy', n);
                  return new BS(i, t);
                })(e, t)
              )
            );
          } catch (i) {
            throw $a(i, /(orderBy|where)\(\)/, 'Query.$1()');
          }
        }
        limit(e) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function VS(n) {
                  return fh('limit', n), new Zy('limit', n, 'F');
                })(e)
              )
            );
          } catch (t) {
            throw $a(t, 'limit()', 'Query.limit()');
          }
        }
        limitToLast(e) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function Ei(n) {
                  return fh('limitToLast', n), new Zy('limitToLast', n, 'L');
                })(e)
              )
            );
          } catch (t) {
            throw $a(t, 'limitToLast()', 'Query.limitToLast()');
          }
        }
        startAt(...e) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function Tx(...n) {
                  return new hC('startAt', n, !0);
                })(...e)
              )
            );
          } catch (t) {
            throw $a(t, 'startAt()', 'Query.startAt()');
          }
        }
        startAfter(...e) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function Ix(...n) {
                  return new hC('startAfter', n, !1);
                })(...e)
              )
            );
          } catch (t) {
            throw $a(t, 'startAfter()', 'Query.startAfter()');
          }
        }
        endBefore(...e) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function Rx(...n) {
                  return new Np('endBefore', n, !0);
                })(...e)
              )
            );
          } catch (t) {
            throw $a(t, 'endBefore()', 'Query.endBefore()');
          }
        }
        endAt(...e) {
          try {
            return new Ta(
              this.firestore,
              Sl(
                this._delegate,
                (function vg(...n) {
                  return new Np('endAt', n, !1);
                })(...e)
              )
            );
          } catch (t) {
            throw $a(t, 'endAt()', 'Query.endAt()');
          }
        }
        isEqual(e) {
          return q0(this._delegate, e._delegate);
        }
        get(e) {
          let t;
          return (
            (t =
              'cache' === (null == e ? void 0 : e.source)
                ? (function Fx(n) {
                    n = hr(n, fa);
                    const e = hr(n.firestore, As),
                      t = Io(e),
                      i = new gh(e);
                    return (function H0(n, e) {
                      const t = new ho();
                      return (
                        n.asyncQueue.enqueueAndForget(
                          (0, Jt.Z)(function* () {
                            return ((i = (0, Jt.Z)(function* (o, c, p) {
                              try {
                                const C = yield $_(o, c, !0),
                                  I = new hy(c, C.zn),
                                  U = I.Po(C.documents),
                                  se = I.applyChanges(U, !1);
                                p.resolve(se.snapshot);
                              } catch (C) {
                                const I = ju(C, `Failed to execute query '${c} against cache`);
                                p.reject(I);
                              }
                            })),
                            function (o, c, p) {
                              return i.apply(this, arguments);
                            })(yield mg(n), e, t);
                            var i;
                          })
                        ),
                        t.promise
                      );
                    })(t, n._query).then((o) => new ou(e, i, n, o));
                  })(this._delegate)
                : 'server' === (null == e ? void 0 : e.source)
                ? (function Lx(n) {
                    n = hr(n, fa);
                    const e = hr(n.firestore, As),
                      t = Io(e),
                      i = new gh(e);
                    return Ry(t, n._query, { source: 'server' }).then((o) => new ou(e, i, n, o));
                  })(this._delegate)
                : (function Vp(n) {
                    n = hr(n, fa);
                    const e = hr(n.firestore, As),
                      t = Io(e),
                      i = new gh(e);
                    return uC(n._query), Ry(t, n._query).then((o) => new ou(e, i, n, o));
                  })(this._delegate)),
            t.then(
              (i) =>
                new wg(
                  this.firestore,
                  new ou(this.firestore._delegate, this._userDataWriter, this._delegate, i._snapshot)
                )
            )
          );
        }
        onSnapshot(...e) {
          const t = yh(e),
            i = MC(
              e,
              (o) =>
                new wg(
                  this.firestore,
                  new ou(this.firestore._delegate, this._userDataWriter, this._delegate, o._snapshot)
                )
            );
          return ev(this._delegate, t, i);
        }
        withConverter(e) {
          return new Ta(this.firestore, this._delegate.withConverter(e ? Md.getInstance(this.firestore, e) : null));
        }
      }
      class $x {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t);
        }
        get type() {
          return this._delegate.type;
        }
        get doc() {
          return new zp(this._firestore, this._delegate.doc);
        }
        get oldIndex() {
          return this._delegate.oldIndex;
        }
        get newIndex() {
          return this._delegate.newIndex;
        }
      }
      class wg {
        constructor(e, t) {
          (this._firestore = e), (this._delegate = t);
        }
        get query() {
          return new Ta(this._firestore, this._delegate.query);
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get size() {
          return this._delegate.size;
        }
        get empty() {
          return this._delegate.empty;
        }
        get docs() {
          return this._delegate.docs.map((e) => new zp(this._firestore, e));
        }
        docChanges(e) {
          return this._delegate.docChanges(e).map((t) => new $x(this._firestore, t));
        }
        forEach(e, t) {
          this._delegate.forEach((i) => {
            e.call(t, new zp(this._firestore, i));
          });
        }
        isEqual(e) {
          return Dd(this._delegate, e._delegate);
        }
      }
      class df extends Ta {
        constructor(e, t) {
          super(e, t), (this.firestore = e), (this._delegate = t);
        }
        get id() {
          return this._delegate.id;
        }
        get path() {
          return this._delegate.path;
        }
        get parent() {
          const e = this._delegate.parent;
          return e ? new Zl(this.firestore, e) : null;
        }
        doc(e) {
          try {
            return new Zl(this.firestore, void 0 === e ? Dl(this._delegate) : Dl(this._delegate, e));
          } catch (t) {
            throw $a(t, 'doc()', 'CollectionReference.doc()');
          }
        }
        add(e) {
          return (function _C(n, e) {
            const t = hr(n.firestore, As),
              i = Dl(n),
              o = bg(n.converter, e);
            return au(t, [
              yg(ph(n.firestore), 'addDoc', i._key, o, null !== n.converter, {}).toMutation(i._key, Fi.exists(!1)),
            ]).then(() => i);
          })(this._delegate, e).then((t) => new Zl(this.firestore, t));
        }
        isEqual(e) {
          return K0(this._delegate, e._delegate);
        }
        withConverter(e) {
          return new df(this.firestore, this._delegate.withConverter(e ? Md.getInstance(this.firestore, e) : null));
        }
      }
      function zu(n) {
        return hr(n, Ss);
      }
      class rv {
        constructor(...e) {
          this._delegate = new Sc(...e);
        }
        static documentId() {
          return new rv(Pr.keyField().canonicalString());
        }
        isEqual(e) {
          return (e = (0, je.m9)(e)) instanceof Sc && this._delegate._internalPath.isEqual(e._internalPath);
        }
      }
      class Sd {
        constructor(e) {
          this._delegate = e;
        }
        static serverTimestamp() {
          const e = (function yC() {
            return new Hy('serverTimestamp');
          })();
          return (e._methodName = 'FieldValue.serverTimestamp'), new Sd(e);
        }
        static delete() {
          const e = (function Ux() {
            return new kp('deleteField');
          })();
          return (e._methodName = 'FieldValue.delete'), new Sd(e);
        }
        static arrayUnion(...e) {
          const t = (function vC(...n) {
            return new Dx('arrayUnion', n);
          })(...e);
          return (t._methodName = 'FieldValue.arrayUnion'), new Sd(t);
        }
        static arrayRemove(...e) {
          const t = (function bC(...n) {
            return new Mx('arrayRemove', n);
          })(...e);
          return (t._methodName = 'FieldValue.arrayRemove'), new Sd(t);
        }
        static increment(e) {
          const t = (function jx(n) {
            return new Sx('increment', n);
          })(e);
          return (t._methodName = 'FieldValue.increment'), new Sd(t);
        }
        isEqual(e) {
          return this._delegate.isEqual(e._delegate);
        }
      }
      const SC = {
        Firestore: EC,
        GeoPoint: Ip,
        Timestamp: eo,
        Blob: Hp,
        Transaction: xC,
        WriteBatch: DC,
        DocumentReference: Zl,
        DocumentSnapshot: uf,
        Query: Ta,
        QueryDocumentSnapshot: zp,
        QuerySnapshot: wg,
        CollectionReference: df,
        FieldPath: rv,
        FieldValue: Sd,
        setLogLevel: function zx(n) {
          !(function gm(n) {
            dc.setLogLevel(n);
          })(n);
        },
        CACHE_SIZE_UNLIMITED: -1,
      };
      !(function Yx(n) {
        (function Wx(n, e) {
          n.INTERNAL.registerComponent(
            new tr.wA(
              'firestore-compat',
              (t) => {
                const i = t.getProvider('app-compat').getImmediate(),
                  o = t.getProvider('firestore').getImmediate();
                return e(i, o);
              },
              'PUBLIC'
            ).setServiceProps(Object.assign({}, SC))
          );
        })(n, (e, t) => new EC(e, t, new Gp())),
          n.registerVersion('@firebase/firestore-compat', '0.1.13');
      })(Vr.Z);
      var Eg = x(5363),
        xg = x(3151),
        Kx = x(590);
      function sv(n, e) {
        return (0, $e.m)(e) ? (0, vt.w)(() => n, e) : (0, vt.w)(() => n);
      }
      var ov = x(9468);
      x(5867);
      const Mg = new Map(),
        tD = { activated: !1, tokenObservers: [] },
        nD = { initialized: !1, enabled: !1 };
      function Ro(n) {
        return Mg.get(n) || tD;
      }
      function Tc(n, e) {
        Mg.set(n, e);
      }
      function $p() {
        return nD;
      }
      class Wp {
        constructor(e, t, i, o, c) {
          if (
            ((this.operation = e),
            (this.retryPolicy = t),
            (this.getWaitDuration = i),
            (this.lowerBound = o),
            (this.upperBound = c),
            (this.pending = null),
            (this.nextErrorWaitInterval = o),
            o > c)
          )
            throw new Error('Proactive refresh lower bound greater than upper bound!');
        }
        start() {
          (this.nextErrorWaitInterval = this.lowerBound), this.process(!0).catch(() => {});
        }
        stop() {
          this.pending && (this.pending.reject('cancelled'), (this.pending = null));
        }
        isRunning() {
          return !!this.pending;
        }
        process(e) {
          var t = this;
          return (0, Jt.Z)(function* () {
            t.stop();
            try {
              (t.pending = new je.BH()),
                yield (function oD(n) {
                  return new Promise((e) => {
                    setTimeout(e, n);
                  });
                })(t.getNextRun(e)),
                t.pending.resolve(),
                yield t.pending.promise,
                (t.pending = new je.BH()),
                yield t.operation(),
                t.pending.resolve(),
                yield t.pending.promise,
                t.process(!0).catch(() => {});
            } catch (i) {
              t.retryPolicy(i) ? t.process(!1).catch(() => {}) : t.stop();
            }
          })();
        }
        getNextRun(e) {
          if (e) return (this.nextErrorWaitInterval = this.lowerBound), this.getWaitDuration();
          {
            const t = this.nextErrorWaitInterval;
            return (
              (this.nextErrorWaitInterval *= 2),
              this.nextErrorWaitInterval > this.upperBound && (this.nextErrorWaitInterval = this.upperBound),
              t
            );
          }
        }
      }
      const $o = new je.LL('appCheck', 'AppCheck', {
        'already-initialized':
          'You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.',
        'use-before-activation':
          'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.',
        'fetch-network-error':
          'Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
        'fetch-parse-error': 'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
        'fetch-status-error': 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
        'storage-open': 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
        'storage-get': 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
        'storage-set': 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
        'recaptcha-error': 'ReCAPTCHA error.',
        throttled: 'Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}',
      });
      function aD(n) {
        if (!Ro(n).activated) throw $o.create('use-before-activation', { appName: n.name });
      }
      function uv(n, e) {
        return dv.apply(this, arguments);
      }
      function dv() {
        return (
          (dv = (0, Jt.Z)(function* ({ url: n, body: e }, t) {
            const i = { 'Content-Type': 'application/json' },
              o = t.getImmediate({ optional: !0 });
            o && (i['X-Firebase-Client'] = o.getPlatformInfoString());
            const c = { method: 'POST', body: JSON.stringify(e), headers: i };
            let p, C;
            try {
              p = yield fetch(n, c);
            } catch (xe) {
              throw $o.create('fetch-network-error', { originalErrorMessage: xe.message });
            }
            if (200 !== p.status) throw $o.create('fetch-status-error', { httpStatus: p.status });
            try {
              C = yield p.json();
            } catch (xe) {
              throw $o.create('fetch-parse-error', { originalErrorMessage: xe.message });
            }
            const I = C.ttl.match(/^([\d.]+)(s)$/);
            if (!I || !I[2] || isNaN(Number(I[1])))
              throw $o.create('fetch-parse-error', {
                originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${C.ttl}`,
              });
            const U = 1e3 * Number(I[1]),
              se = Date.now();
            return { token: C.attestationToken, expireTimeMillis: se + U, issuedAtTimeMillis: se };
          })),
          dv.apply(this, arguments)
        );
      }
      function hv(n, e) {
        const { projectId: t, appId: i, apiKey: o } = n.options;
        return {
          url: `https://content-firebaseappcheck.googleapis.com/v1beta/projects/${t}/apps/${i}:exchangeDebugToken?key=${o}`,
          body: { debug_token: e },
        };
      }
      const Kp = 'firebase-app-check-store';
      let qp = null;
      function NC() {
        return (
          qp ||
          ((qp = new Promise((n, e) => {
            try {
              const t = indexedDB.open('firebase-app-check-database', 1);
              (t.onsuccess = (i) => {
                n(i.target.result);
              }),
                (t.onerror = (i) => {
                  var o;
                  e(
                    $o.create('storage-open', {
                      originalErrorMessage: null === (o = i.target.error) || void 0 === o ? void 0 : o.message,
                    })
                  );
                }),
                (t.onupgradeneeded = (i) => {
                  0 === i.oldVersion && i.target.result.createObjectStore(Kp, { keyPath: 'compositeKey' });
                });
            } catch (t) {
              e($o.create('storage-open', { originalErrorMessage: t.message }));
            }
          })),
          qp)
        );
      }
      function mv() {
        return (
          (mv = (0, Jt.Z)(function* (n, e) {
            const i = (yield NC()).transaction(Kp, 'readwrite'),
              c = i.objectStore(Kp).put({ compositeKey: n, value: e });
            return new Promise((p, C) => {
              (c.onsuccess = (I) => {
                p();
              }),
                (i.onerror = (I) => {
                  var U;
                  C(
                    $o.create('storage-set', {
                      originalErrorMessage: null === (U = I.target.error) || void 0 === U ? void 0 : U.message,
                    })
                  );
                });
            });
          })),
          mv.apply(this, arguments)
        );
      }
      const lu = new kr.Yd('@firebase/app-check');
      function VC(n, e) {
        return (0, je.hl)()
          ? (function cD(n, e) {
              return (function dD(n, e) {
                return mv.apply(this, arguments);
              })(
                (function gv(n) {
                  return `${n.options.appId}-${n.name}`;
                })(n),
                e
              );
            })(n, e).catch((t) => {
              lu.warn(`Failed to write token to IndexedDB. Error: ${t}`);
            })
          : Promise.resolve();
      }
      function hD() {
        return $p().enabled;
      }
      function _v() {
        return Zp.apply(this, arguments);
      }
      function Zp() {
        return (
          (Zp = (0, Jt.Z)(function* () {
            const n = $p();
            if (n.enabled && n.token) return n.token.promise;
            throw Error("\n            Can't get debug token in production mode.\n        ");
          })),
          Zp.apply(this, arguments)
        );
      }
      const UC = { error: 'UNKNOWN_ERROR' };
      function pD(n) {
        return je.US.encodeString(JSON.stringify(n), !1);
      }
      function kg(n) {
        return yv.apply(this, arguments);
      }
      function yv() {
        return (
          (yv = (0, Jt.Z)(function* (n, e = !1) {
            const t = n.app;
            aD(t);
            const i = Ro(t);
            let c,
              o = i.token;
            if (!o) {
              const I = yield i.cachedTokenPromise;
              I && Td(I) && (o = I);
            }
            if (!e && o && Td(o)) return { token: o.token };
            let C,
              p = !1;
            if (hD()) {
              i.exchangeTokenPromise ||
                ((i.exchangeTokenPromise = uv(hv(t, yield _v()), n.platformLoggerProvider).then(
                  (U) => ((i.exchangeTokenPromise = void 0), U)
                )),
                (p = !0));
              const I = yield i.exchangeTokenPromise;
              return yield VC(t, I), Tc(t, Object.assign(Object.assign({}, i), { token: I })), { token: I.token };
            }
            try {
              i.exchangeTokenPromise ||
                ((i.exchangeTokenPromise = i.provider.getToken().then((I) => ((i.exchangeTokenPromise = void 0), I))),
                (p = !0)),
                (o = yield i.exchangeTokenPromise);
            } catch (I) {
              'appCheck/throttled' === I.code ? lu.warn(I.message) : lu.error(I), (c = I);
            }
            return (
              o
                ? ((C = { token: o.token }), Tc(t, Object.assign(Object.assign({}, i), { token: o })), yield VC(t, o))
                : (C = GC(c)),
              p && HC(t, C),
              C
            );
          })),
          yv.apply(this, arguments)
        );
      }
      function bv(n, e) {
        const t = Ro(n),
          i = t.tokenObservers.filter((o) => o.next !== e);
        0 === i.length && t.tokenRefresher && t.tokenRefresher.isRunning() && t.tokenRefresher.stop(),
          Tc(n, Object.assign(Object.assign({}, t), { tokenObservers: i }));
      }
      function jC(n) {
        const { app: e } = n,
          t = Ro(e);
        let i = t.tokenRefresher;
        i ||
          ((i = (function mD(n) {
            const { app: e } = n;
            return new Wp(
              (0, Jt.Z)(function* () {
                let i;
                if (((i = Ro(e).token ? yield kg(n, !0) : yield kg(n)), i.error)) throw i.error;
              }),
              () => !0,
              () => {
                const t = Ro(e);
                if (t.token) {
                  let i =
                    t.token.issuedAtTimeMillis + 0.5 * (t.token.expireTimeMillis - t.token.issuedAtTimeMillis) + 3e5;
                  return (i = Math.min(i, t.token.expireTimeMillis - 3e5)), Math.max(0, i - Date.now());
                }
                return 0;
              },
              3e4,
              96e4
            );
          })(n)),
          Tc(e, Object.assign(Object.assign({}, t), { tokenRefresher: i }))),
          !i.isRunning() && t.isTokenAutoRefreshEnabled && i.start();
      }
      function HC(n, e) {
        const t = Ro(n).tokenObservers;
        for (const i of t)
          try {
            'EXTERNAL' === i.type && null != e.error ? i.error(e.error) : i.next(e);
          } catch (o) {}
      }
      function Td(n) {
        return n.expireTimeMillis - Date.now() > 0;
      }
      function GC(n) {
        return { token: pD(UC), error: n };
      }
      class zC {
        constructor(e, t) {
          (this.app = e), (this.platformLoggerProvider = t);
        }
        _delete() {
          const { tokenObservers: e } = Ro(this.app);
          for (const t of e) bv(this.app, t.next);
          return Promise.resolve();
        }
      }
      const Dv = 'app-check-internal';
      !(function CD() {
        (0, ji._registerComponent)(
          new tr.wA(
            'app-check',
            (n) =>
              (function $C(n, e) {
                return new zC(n, e);
              })(n.getProvider('app').getImmediate(), n.getProvider('platform-logger')),
            'PUBLIC'
          )
            .setInstantiationMode('EXPLICIT')
            .setInstanceCreatedCallback((n, e, t) => {
              n.getProvider(Dv).initialize();
            })
        ),
          (0, ji._registerComponent)(
            new tr.wA(
              Dv,
              (n) =>
                (function WC(n) {
                  return {
                    getToken: (e) => kg(n, e),
                    addTokenListener: (e) =>
                      (function vv(n, e, t, i) {
                        const { app: o } = n,
                          c = Ro(o),
                          p = { next: t, error: i, type: e };
                        if (
                          (Tc(o, Object.assign(Object.assign({}, c), { tokenObservers: [...c.tokenObservers, p] })),
                          c.token && Td(c.token))
                        ) {
                          const C = c.token;
                          Promise.resolve()
                            .then(() => {
                              t({ token: C.token }), jC(n);
                            })
                            .catch(() => {});
                        }
                        c.cachedTokenPromise.then(() => jC(n));
                      })(n, 'INTERNAL', e),
                    removeTokenListener: (e) => bv(n.app, e),
                  };
                })(n.getProvider('app-check').getImmediate()),
              'PUBLIC'
            ).setInstantiationMode('EXPLICIT')
          ),
          (0, ji.registerVersion)('@firebase/app-check', '0.5.3');
      })();
      class vh {
        constructor() {
          return (0, _i.vb)('app-check');
        }
      }
      'undefined' != typeof window && window;
      var Xp = x(127);
      const Av = new m.OlP('angularfire2.auth.use-emulator'),
        Ng = new m.OlP('angularfire2.auth.settings'),
        Bg = new m.OlP('angularfire2.auth.tenant-id'),
        pa = new m.OlP('angularfire2.auth.langugage-code'),
        Id = new m.OlP('angularfire2.auth.use-device-language'),
        Tv = new m.OlP('angularfire.auth.persistence'),
        Iv = (n, e, t, i, o, c, p, C) =>
          (0, fi.cc)(
            `${n.name}.auth`,
            'AngularFireAuth',
            n.name,
            () => {
              const I = e.runOutsideAngular(() => n.auth());
              if (
                (t && I.useEmulator(...t), i && (I.tenantId = i), (I.languageCode = o), c && I.useDeviceLanguage(), p)
              )
                for (const [U, se] of Object.entries(p)) I.settings[U] = se;
              return C && I.setPersistence(C), I;
            },
            [t, i, o, c, p, C]
          );
      let Rv = (() => {
          class n {
            constructor(t, i, o, c, p, C, I, U, se, xe, rt, Ut) {
              const qt = new ue.x(),
                Mn = (0, ee.of)(void 0).pipe(
                  (0, Eg.Q)(p.outsideAngular),
                  (0, vt.w)(() => c.runOutsideAngular(() => Promise.resolve().then(x.bind(x, 8999)))),
                  (0, Ze.U)(() => (0, fi.on)(t, c, i)),
                  (0, Ze.U)((Ln) => Iv(Ln, c, C, U, se, xe, I, rt)),
                  (0, xg.d)({ bufferSize: 1, refCount: !1 })
                );
              if ((0, Re.PM)(o))
                this.authState = this.user = this.idToken = this.idTokenResult = this.credential = (0, ee.of)(null);
              else {
                Mn.pipe((0, Kx.P)()).subscribe();
                const Ki = Mn.pipe(
                    (0, vt.w)((Ii) =>
                      Ii.getRedirectResult().then(
                        (Is) => Is,
                        () => null
                      )
                    ),
                    _i.iC,
                    (0, xg.d)({ bufferSize: 1, refCount: !1 })
                  ),
                  er = Mn.pipe(
                    (0, vt.w)(
                      (Ii) =>
                        new Qe.y((Is) => ({
                          unsubscribe: c.runOutsideAngular(() =>
                            Ii.onAuthStateChanged(
                              (ka) => Is.next(ka),
                              (ka) => Is.error(ka),
                              () => Is.complete()
                            )
                          ),
                        }))
                    )
                  ),
                  yr = Mn.pipe(
                    (0, vt.w)(
                      (Ii) =>
                        new Qe.y((Is) => ({
                          unsubscribe: c.runOutsideAngular(() =>
                            Ii.onIdTokenChanged(
                              (ka) => Is.next(ka),
                              (ka) => Is.error(ka),
                              () => Is.complete()
                            )
                          ),
                        }))
                    )
                  );
                (this.authState = Ki.pipe(sv(er), (0, ov.R)(p.outsideAngular), (0, Eg.Q)(p.insideAngular))),
                  (this.user = Ki.pipe(sv(yr), (0, ov.R)(p.outsideAngular), (0, Eg.Q)(p.insideAngular))),
                  (this.idToken = this.user.pipe(
                    (0, vt.w)((Ii) => (Ii ? (0, ge.D)(Ii.getIdToken()) : (0, ee.of)(null)))
                  )),
                  (this.idTokenResult = this.user.pipe(
                    (0, vt.w)((Ii) => (Ii ? (0, ge.D)(Ii.getIdTokenResult()) : (0, ee.of)(null)))
                  )),
                  (this.credential = (0, me.T)(Ki, qt, this.authState.pipe((0, dt.h)((Ii) => !Ii))).pipe(
                    (0, Ze.U)((Ii) => ((null == Ii ? void 0 : Ii.user) ? Ii : null)),
                    (0, ov.R)(p.outsideAngular),
                    (0, Eg.Q)(p.insideAngular)
                  ));
              }
              return (0, fi.pX)(this, Mn, c, {
                spy: {
                  apply: (Ln, Ki, er) => {
                    (Ln.startsWith('signIn') || Ln.startsWith('createUser')) && er.then((yr) => qt.next(yr));
                  },
                },
              });
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                m.LFG(fi.Dh),
                m.LFG(fi.xv, 8),
                m.LFG(m.Lbi),
                m.LFG(m.R0b),
                m.LFG(_i.HU),
                m.LFG(Av, 8),
                m.LFG(Ng, 8),
                m.LFG(Bg, 8),
                m.LFG(pa, 8),
                m.LFG(Id, 8),
                m.LFG(Tv, 8),
                m.LFG(vh, 8)
              );
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'any' })),
            n
          );
        })(),
        Jp = (() => {
          class n {
            constructor() {
              Xp.Z.registerVersion('angularfire', _i.q4.full, 'auth-compat');
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ providers: [Rv] })),
            n
          );
        })();
      function Vg(n, e) {
        return (function TD(n, e = ks.z) {
          return new Qe.y((t) => {
            let i;
            return (
              null != e
                ? e.schedule(() => {
                    i = n.onSnapshot({ includeMetadataChanges: !0 }, t);
                  })
                : (i = n.onSnapshot({ includeMetadataChanges: !0 }, t)),
              () => {
                null != i && i();
              }
            );
          });
        })(n, e);
      }
      function Ug(n, e) {
        return Vg(n, e).pipe((0, Ze.U)((t) => ({ payload: t, type: 'query' })));
      }
      function jg(n, e) {
        return Ug(n, e).pipe(
          (0, Br.O)(void 0),
          lr(),
          (0, Ze.U)(([t, i]) => {
            const o = i.payload.docChanges(),
              c = o.map((p) => ({ type: p.type, payload: p }));
            return (
              t &&
                JSON.stringify(t.payload.metadata) !== JSON.stringify(i.payload.metadata) &&
                i.payload.docs.forEach((p, C) => {
                  const I = o.find((se) => se.doc.ref.isEqual(p.ref)),
                    U = null == t ? void 0 : t.payload.docs.find((se) => se.ref.isEqual(p.ref));
                  (I && JSON.stringify(I.doc.metadata) === JSON.stringify(p.metadata)) ||
                    (!I && U && JSON.stringify(U.metadata) === JSON.stringify(p.metadata)) ||
                    c.push({ type: 'modified', payload: { oldIndex: C, newIndex: C, type: 'modified', doc: p } });
                }),
              c
            );
          })
        );
      }
      function sw(n, e, t) {
        return jg(n, t).pipe(
          (0, ts.R)(
            (i, o) =>
              (function kv(n, e, t) {
                return (
                  e.forEach((i) => {
                    t.indexOf(i.type) > -1 &&
                      (n = (function ow(n, e) {
                        switch (e.type) {
                          case 'added':
                            if (!n[e.newIndex] || !n[e.newIndex].doc.ref.isEqual(e.doc.ref))
                              return Hg(n, e.newIndex, 0, e);
                            break;
                          case 'modified':
                            if (null == n[e.oldIndex] || n[e.oldIndex].doc.ref.isEqual(e.doc.ref)) {
                              if (e.oldIndex !== e.newIndex) {
                                const t = n.slice();
                                return t.splice(e.oldIndex, 1), t.splice(e.newIndex, 0, e), t;
                              }
                              return Hg(n, e.newIndex, 1, e);
                            }
                            break;
                          case 'removed':
                            if (n[e.oldIndex] && n[e.oldIndex].doc.ref.isEqual(e.doc.ref)) return Hg(n, e.oldIndex, 1);
                        }
                        return n;
                      })(n, i));
                  }),
                  n
                );
              })(
                i,
                o.map((c) => c.payload),
                e
              ),
            []
          ),
          (0, Os.x)(),
          (0, Ze.U)((i) => i.map((o) => ({ type: o.type, payload: o })))
        );
      }
      function Hg(n, e, t, ...i) {
        const o = n.slice();
        return o.splice(e, t, ...i), o;
      }
      function em(n) {
        return (!n || 0 === n.length) && (n = ['added', 'removed', 'modified']), n;
      }
      class Gg {
        constructor(e, t, i) {
          (this.ref = e), (this.query = t), (this.afs = i);
        }
        stateChanges(e) {
          let t = jg(this.query, this.afs.schedulers.outsideAngular);
          return (
            e && e.length > 0 && (t = t.pipe((0, Ze.U)((i) => i.filter((o) => e.indexOf(o.type) > -1)))),
            t.pipe(
              (0, Br.O)(void 0),
              lr(),
              (0, dt.h)(([i, o]) => o.length > 0 || !i),
              (0, Ze.U)(([i, o]) => o),
              _i.iC
            )
          );
        }
        auditTrail(e) {
          return this.stateChanges(e).pipe((0, ts.R)((t, i) => [...t, ...i], []));
        }
        snapshotChanges(e) {
          const t = em(e);
          return sw(this.query, t, this.afs.schedulers.outsideAngular).pipe(_i.iC);
        }
        valueChanges(e = {}) {
          return Ug(this.query, this.afs.schedulers.outsideAngular).pipe(
            (0, Ze.U)((t) =>
              t.payload.docs.map((i) =>
                e.idField ? Object.assign(Object.assign({}, i.data()), { [e.idField]: i.id }) : i.data()
              )
            ),
            _i.iC
          );
        }
        get(e) {
          return (0, ge.D)(this.query.get(e)).pipe(_i.iC);
        }
        add(e) {
          return this.ref.add(e);
        }
        doc(e) {
          return new RD(this.ref.doc(e), this.afs);
        }
      }
      class RD {
        constructor(e, t) {
          (this.ref = e), (this.afs = t);
        }
        set(e, t) {
          return this.ref.set(e, t);
        }
        update(e) {
          return this.ref.update(e);
        }
        delete() {
          return this.ref.delete();
        }
        collection(e, t) {
          const i = this.ref.collection(e),
            { ref: o, query: c } = uw(i, t);
          return new Gg(o, c, this.afs);
        }
        snapshotChanges() {
          return (function ID(n, e) {
            return Vg(n, e).pipe(
              (0, Br.O)(void 0),
              lr(),
              (0, Ze.U)(([t, i]) =>
                i.exists
                  ? (null == t ? void 0 : t.exists)
                    ? { payload: i, type: 'modified' }
                    : { payload: i, type: 'added' }
                  : { payload: i, type: 'removed' }
              )
            );
          })(this.ref, this.afs.schedulers.outsideAngular).pipe(_i.iC);
        }
        valueChanges(e = {}) {
          return this.snapshotChanges().pipe(
            (0, Ze.U)(({ payload: t }) =>
              e.idField ? Object.assign(Object.assign({}, t.data()), { [e.idField]: t.id }) : t.data()
            )
          );
        }
        get(e) {
          return (0, ge.D)(this.ref.get(e)).pipe(_i.iC);
        }
      }
      class aw {
        constructor(e, t) {
          (this.query = e), (this.afs = t);
        }
        stateChanges(e) {
          return e && 0 !== e.length
            ? jg(this.query, this.afs.schedulers.outsideAngular).pipe(
                (0, Ze.U)((t) => t.filter((i) => e.indexOf(i.type) > -1)),
                (0, dt.h)((t) => t.length > 0),
                _i.iC
              )
            : jg(this.query, this.afs.schedulers.outsideAngular).pipe(_i.iC);
        }
        auditTrail(e) {
          return this.stateChanges(e).pipe((0, ts.R)((t, i) => [...t, ...i], []));
        }
        snapshotChanges(e) {
          const t = em(e);
          return sw(this.query, t, this.afs.schedulers.outsideAngular).pipe(_i.iC);
        }
        valueChanges(e = {}) {
          return Ug(this.query, this.afs.schedulers.outsideAngular).pipe(
            (0, Ze.U)((i) =>
              i.payload.docs.map((o) => (e.idField ? Object.assign({ [e.idField]: o.id }, o.data()) : o.data()))
            ),
            _i.iC
          );
        }
        get(e) {
          return (0, ge.D)(this.query.get(e)).pipe(_i.iC);
        }
      }
      const lw = new m.OlP('angularfire2.enableFirestorePersistence'),
        Ov = new m.OlP('angularfire2.firestore.persistenceSettings'),
        zg = new m.OlP('angularfire2.firestore.settings'),
        cw = new m.OlP('angularfire2.firestore.use-emulator');
      function uw(n, e = (t) => t) {
        return { query: e(n), ref: n };
      }
      let $g = (() => {
          class n {
            constructor(t, i, o, c, p, C, I, U, se, xe, rt, Ut, qt, Mn, Ln, Ki, er) {
              this.schedulers = I;
              const yr = (0, fi.on)(t, C, i),
                Ii = se;
              xe && Iv(yr, C, rt, qt, Mn, Ln, Ut, Ki),
                ([this.firestore, this.persistenceEnabled$] = (0, fi.cc)(
                  `${yr.name}.firestore`,
                  'AngularFirestore',
                  yr.name,
                  () => {
                    const Is = C.runOutsideAngular(() => yr.firestore());
                    if ((c && Is.settings(c), Ii && Is.useEmulator(...Ii), o && !(0, Re.PM)(p))) {
                      const ka = () => {
                        try {
                          return (0, ge.D)(
                            Is.enablePersistence(U || void 0).then(
                              () => !0,
                              () => !1
                            )
                          );
                        } catch (If) {
                          return 'undefined' != typeof console && console.warn(If), (0, ee.of)(!1);
                        }
                      };
                      return [Is, C.runOutsideAngular(ka)];
                    }
                    return [Is, (0, ee.of)(!1)];
                  },
                  [c, Ii, o]
                ));
            }
            collection(t, i) {
              let o;
              o = 'string' == typeof t ? this.firestore.collection(t) : t;
              const { ref: c, query: p } = uw(o, i),
                C = this.schedulers.ngZone.run(() => c);
              return new Gg(C, p, this);
            }
            collectionGroup(t, i) {
              const o = i || ((p) => p),
                c = this.firestore.collectionGroup(t);
              return new aw(o(c), this);
            }
            doc(t) {
              let i;
              i = 'string' == typeof t ? this.firestore.doc(t) : t;
              const o = this.schedulers.ngZone.run(() => i);
              return new RD(o, this);
            }
            createId() {
              return this.firestore.collection('_').doc().id;
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                m.LFG(fi.Dh),
                m.LFG(fi.xv, 8),
                m.LFG(lw, 8),
                m.LFG(zg, 8),
                m.LFG(m.Lbi),
                m.LFG(m.R0b),
                m.LFG(_i.HU),
                m.LFG(Ov, 8),
                m.LFG(cw, 8),
                m.LFG(Rv, 8),
                m.LFG(Av, 8),
                m.LFG(Ng, 8),
                m.LFG(Bg, 8),
                m.LFG(pa, 8),
                m.LFG(Id, 8),
                m.LFG(Tv, 8),
                m.LFG(vh, 8)
              );
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'any' })),
            n
          );
        })(),
        Pv = (() => {
          class n {
            constructor() {
              Xp.Z.registerVersion('angularfire', _i.q4.full, 'fst-compat');
            }
            static enablePersistence(t) {
              return {
                ngModule: n,
                providers: [
                  { provide: lw, useValue: !0 },
                  { provide: Ov, useValue: t },
                ],
              };
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ providers: [$g] })),
            n
          );
        })(),
        nA = (() => {
          class n {
            constructor(t) {
              this.db = t;
            }
            getData() {
              return this.db.collection('numbers').snapshotChanges();
            }
            addNumber(t, i) {
              var o = { number: t, multiple: i };
              return this.db.collection('numbers').add(o);
            }
            updateNumber(t, i) {
              return this.db.collection('numbers').doc(t).update(i);
            }
            deleteNumber(t) {
              return this.db.collection('number').doc(t).delete();
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(m.LFG($g));
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      var dw = x(3954),
        Fv = x(3322);
      const Wg = function (n) {
        return { 'background-color': n };
      };
      let hw = (() => {
        class n {
          constructor(t, i) {
            (this.quoteService = t),
              (this.firebaseService = i),
              (this.numberCtrl = new d.NI('', [])),
              (this.resultado = 'Resultado'),
              (this.multiplos = [1]),
              (this.color = ''),
              this.getAllNumbers();
          }
          ngOnInit() {}
          getNumber(t) {
            var i, o, c;
            t.preventDefault(), (this.multiplos = [1]);
            var p = this.numberCtrl.value;
            p
              ? (p % 7 == 0 &&
                  (null === (i = this.multiplos) || void 0 === i || i.push(7), (this.color = 'rgb(67, 110, 230)')),
                p % 5 == 0 &&
                  (null === (o = this.multiplos) || void 0 === o || o.push(5), (this.color = 'rgb(230, 113, 67)')),
                p % 3 == 0 &&
                  (null === (c = this.multiplos) || void 0 === c || c.push(3), (this.color = 'rgb(53, 182, 143)')),
                (this.resultado = p),
                this.addNumber(p, this.multiplos))
              : ((this.resultado = 'no se ingreso numero'), (this.color = 'black'));
          }
          addNumber(t, i) {
            this.firebaseService
              .addNumber(t, i)
              .then((o) => {
                console.log(o);
              })
              .catch((o) => {
                console.log(o);
              });
          }
          getAllNumbers() {
            this.firebaseService.getData().subscribe(
              (t) => {
                t.map((i) => {
                  console.log(i.payload.doc.data().number);
                });
              },
              (t) => {
                console.log(t);
              }
            );
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.Y36(ci), m.Y36(nA));
          }),
          (n.ɵcmp = m.Xpm({
            type: n,
            selectors: [['app-home']],
            decls: 51,
            vars: 13,
            consts: [
              [1, 'container'],
              ['src', 'assets/ngx-rocket-logo.png', 'alt', 'angular logo', 1, 'logo'],
              ['translate', ''],
              ['action', ''],
              ['matInput', '', 'type', 'number', 3, 'formControl'],
              ['mat-raised-button', '', 'color', 'primary', 'type', 'button', 3, 'click'],
              [1, 'number-card'],
              ['cols', '3', 'rowHeight', '50px'],
              [3, 'ngStyle'],
            ],
            template: function (t, i) {
              1 & t &&
                (m.TgZ(0, 'div', 0),
                m._uU(1, '\n  '),
                m.TgZ(2, 'mat-card'),
                m._uU(3, '\n    '),
                m.TgZ(4, 'p'),
                m._uU(5, '\n      '),
                m._UZ(6, 'img', 1),
                m._uU(7, '\n    '),
                m.qZA(),
                m._uU(8, '\n    '),
                m.TgZ(9, 'mat-card-content'),
                m._uU(10, '\n      '),
                m.TgZ(11, 'mat-card-title', 2),
                m._uU(12, 'Buenos D\xedas!'),
                m.qZA(),
                m._uU(13, '\n      '),
                m.TgZ(14, 'mat-card-subtitle'),
                m._uU(15, ' ESCRIBA UN N\xdaMERO A EVALUAR '),
                m.qZA(),
                m._uU(16, '\n      '),
                m.TgZ(17, 'form', 3),
                m._uU(18, '\n        '),
                m.TgZ(19, 'mat-form-field'),
                m._uU(20, '\n          '),
                m.TgZ(21, 'mat-label'),
                m._uU(22, 'N\xfamero'),
                m.qZA(),
                m._uU(23, '\n          '),
                m._UZ(24, 'input', 4),
                m._uU(25, '\n        '),
                m.qZA(),
                m._uU(26, '\n\n        '),
                m.TgZ(27, 'button', 5),
                m.NdJ('click', function (c) {
                  return i.getNumber(c);
                }),
                m._uU(28, 'Enviar'),
                m.qZA(),
                m._uU(29, '\n      '),
                m.qZA(),
                m._uU(30, '\n      '),
                m._UZ(31, 'p'),
                m._uU(32, '\n      '),
                m.TgZ(33, 'mat-card', 6),
                m._uU(34),
                m.qZA(),
                m._uU(35, '\n\n      '),
                m.TgZ(36, 'mat-grid-list', 7),
                m._uU(37, '\n        '),
                m.TgZ(38, 'mat-grid-tile', 8),
                m._uU(39, '\n          3\n        '),
                m.qZA(),
                m._uU(40, '\n        '),
                m.TgZ(41, 'mat-grid-tile', 8),
                m._uU(42, '\n          5\n        '),
                m.qZA(),
                m._uU(43, '\n        '),
                m.TgZ(44, 'mat-grid-tile', 8),
                m._uU(45, '\n          7\n        '),
                m.qZA(),
                m._uU(46, '\n      '),
                m.qZA(),
                m._uU(47, '\n    '),
                m.qZA(),
                m._uU(48, '\n  '),
                m.qZA(),
                m._uU(49, '\n'),
                m.qZA(),
                m._uU(50, '\n')),
                2 & t &&
                  (m.xp6(24),
                  m.Q6J('formControl', i.numberCtrl),
                  m.xp6(9),
                  m.Udp('background-color', i.color),
                  m.xp6(1),
                  m.Oqu(i.resultado),
                  m.xp6(4),
                  m.Q6J(
                    'ngStyle',
                    m.VKq(
                      7,
                      Wg,
                      null != i.multiplos && i.multiplos.includes(3) ? 'rgb(53, 182, 143)' : 'rgb(110, 108, 136)'
                    )
                  ),
                  m.xp6(3),
                  m.Q6J(
                    'ngStyle',
                    m.VKq(
                      9,
                      Wg,
                      null != i.multiplos && i.multiplos.includes(5) ? 'rgb(230, 113, 67)' : 'rgb(110, 108, 136)'
                    )
                  ),
                  m.xp6(3),
                  m.Q6J(
                    'ngStyle',
                    m.VKq(
                      11,
                      Wg,
                      null != i.multiplos && i.multiplos.includes(7) ? 'rgb(67, 110, 230)' : 'rgb(110, 108, 136)'
                    )
                  ));
            },
            directives: [
              ar.a8,
              ar.dn,
              ar.n5,
              en.Pi,
              ar.$j,
              d._Y,
              d.JL,
              Rs.KE,
              Rs.hX,
              Rr.Nt,
              d.wV,
              d.Fj,
              d.JJ,
              d.oH,
              Ot.lW,
              dw.Il,
              dw.DX,
              Re.PC,
              Fv.Zl,
            ],
            styles: [
              '@charset "UTF-8";.container[_ngcontent-%COMP%]{text-align:center;padding:1em}.logo[_ngcontent-%COMP%]{width:150px;margin:0 auto}q[_ngcontent-%COMP%]{font-style:italic;quotes:"\\ab  " " \\bb"}.number-card[_ngcontent-%COMP%]{margin:0;background-color:#6e6c88;color:#fff;font-size:large;font-weight:700;font-family:Lucida Sans,Lucida Sans Regular,Lucida Grande,Lucida Sans Unicode,Geneva,Verdana,sans-serif}mat-grid-tile[_ngcontent-%COMP%]{margin-top:7px;background-color:#6e6c88;color:#fff;font-size:large;font-weight:700;font-family:Lucida Sans,Lucida Sans Regular,Lucida Grande,Lucida Sans Unicode,Geneva,Verdana,sans-serif;border-radius:6px}',
            ],
          })),
          n
        );
      })();
      var fw = x(3191),
        pw = x(9841),
        mw = x(5684),
        gw = x(8372),
        kD = x(925);
      const _w = new Set();
      let bh,
        yw = (() => {
          class n {
            constructor(t) {
              (this._platform = t),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia ? window.matchMedia.bind(window) : bw);
            }
            matchMedia(t) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function vw(n) {
                    if (!_w.has(n))
                      try {
                        bh ||
                          ((bh = document.createElement('style')),
                          bh.setAttribute('type', 'text/css'),
                          document.head.appendChild(bh)),
                          bh.sheet && (bh.sheet.insertRule(`@media ${n} {body{ }}`, 0), _w.add(n));
                      } catch (e) {
                        console.error(e);
                      }
                  })(t),
                this._matchMedia(t)
              );
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(m.LFG(kD.t4));
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
            n
          );
        })();
      function bw(n) {
        return { matches: 'all' === n || '' === n, media: n, addListener: () => {}, removeListener: () => {} };
      }
      let PD = (() => {
        class n {
          constructor(t, i) {
            (this._mediaMatcher = t),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new ue.x());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(t) {
            return Cw((0, fw.Eq)(t)).some((o) => this._registerQuery(o).mql.matches);
          }
          observe(t) {
            const o = Cw((0, fw.Eq)(t)).map((p) => this._registerQuery(p).observable);
            let c = (0, pw.a)(o);
            return (
              (c = (0, fe.z)(c.pipe((0, Ve.q)(1)), c.pipe((0, mw.T)(1), (0, gw.b)(0)))),
              c.pipe(
                (0, Ze.U)((p) => {
                  const C = { matches: !1, breakpoints: {} };
                  return (
                    p.forEach(({ matches: I, query: U }) => {
                      (C.matches = C.matches || I), (C.breakpoints[U] = I);
                    }),
                    C
                  );
                })
              )
            );
          }
          _registerQuery(t) {
            if (this._queries.has(t)) return this._queries.get(t);
            const i = this._mediaMatcher.matchMedia(t),
              c = {
                observable: new Qe.y((p) => {
                  const C = (I) => this._zone.run(() => p.next(I));
                  return (
                    i.addListener(C),
                    () => {
                      i.removeListener(C);
                    }
                  );
                }).pipe(
                  (0, Br.O)(i),
                  (0, Ze.U)(({ matches: p }) => ({ query: t, matches: p })),
                  (0, X.R)(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(t, c), c;
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.LFG(yw), m.LFG(m.R0b));
          }),
          (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'root' })),
          n
        );
      })();
      function Cw(n) {
        return n
          .map((e) => e.split(','))
          .reduce((e, t) => e.concat(t))
          .map((e) => e.trim());
      }
      var ww = x(4594),
        Lv = x(4623),
        LD = x(4834);
      let iA = (() => {
        class n {
          constructor(t, i, o, c) {
            (this.router = t), (this.titleService = i), (this.authenticationService = o), (this.credentialsService = c);
          }
          ngOnInit() {}
          logout() {
            this.authenticationService.logout().subscribe(() => this.router.navigate(['/login'], { replaceUrl: !0 }));
          }
          get username() {
            const t = this.credentialsService.credentials;
            return t ? t.username : null;
          }
          get title() {
            return this.titleService.getTitle();
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(m.Y36(N.F0), m.Y36(h.Dx), m.Y36(Jn), m.Y36(Gn));
          }),
          (n.ɵcmp = m.Xpm({
            type: n,
            selectors: [['app-header']],
            inputs: { sidenav: 'sidenav' },
            decls: 70,
            vars: 4,
            consts: [
              ['color', 'primary', 1, 'mat-elevation-z6', 'navbar'],
              ['fxHide.gt-sm', '', 'fxLayoutAlign', 'start center'],
              ['mat-icon-button', '', 1, 'menu-button', 3, 'click'],
              [1, 'title'],
              ['fxHide.lt-md', ''],
              ['href', 'https://github.com/ngx-rocket', 'translate', '', 1, 'brand'],
              ['mat-button', '', 'routerLink', '/home', 'routerLinkActive', 'active'],
              ['translate', ''],
              ['mat-button', '', 'routerLink', '/about', 'routerLinkActive', 'active'],
              ['fxFlex', ''],
              [3, 'icon'],
              ['mat-icon-button', '', 3, 'matMenuTriggerFor'],
              ['userMenu', 'matMenu'],
              ['mat-menu-item', '', 'translate', '', 3, 'click'],
            ],
            template: function (t, i) {
              if (
                (1 & t &&
                  (m.TgZ(0, 'mat-toolbar', 0),
                  m._uU(1, '\n  '),
                  m.TgZ(2, 'div', 1),
                  m._uU(3, '\n    '),
                  m.TgZ(4, 'button', 2),
                  m.NdJ('click', function () {
                    return i.sidenav.toggle();
                  }),
                  m._uU(5, '\n      '),
                  m.TgZ(6, 'mat-icon'),
                  m._uU(7, 'menu'),
                  m.qZA(),
                  m._uU(8, '\n    '),
                  m.qZA(),
                  m._uU(9, '\n    '),
                  m.TgZ(10, 'span', 3),
                  m._uU(11),
                  m.qZA(),
                  m._uU(12, '\n  '),
                  m.qZA(),
                  m._uU(13, '\n  '),
                  m.TgZ(14, 'div', 4),
                  m._uU(15, '\n    '),
                  m.TgZ(16, 'a', 5),
                  m._uU(17, 'APP_NAME'),
                  m.qZA(),
                  m._uU(18, '\n    '),
                  m.TgZ(19, 'button', 6),
                  m._uU(20, '\n      '),
                  m.TgZ(21, 'mat-icon'),
                  m._uU(22, 'home'),
                  m.qZA(),
                  m._uU(23, '\n      '),
                  m.TgZ(24, 'span', 7),
                  m._uU(25, 'Home'),
                  m.qZA(),
                  m._uU(26, '\n    '),
                  m.qZA(),
                  m._uU(27, '\n    '),
                  m.TgZ(28, 'button', 8),
                  m._uU(29, '\n      '),
                  m.TgZ(30, 'mat-icon'),
                  m._uU(31, 'info'),
                  m.qZA(),
                  m._uU(32, '\n      '),
                  m.TgZ(33, 'span', 7),
                  m._uU(34, 'About'),
                  m.qZA(),
                  m._uU(35, '\n    '),
                  m.qZA(),
                  m._uU(36, '\n  '),
                  m.qZA(),
                  m._uU(37, '\n  '),
                  m._UZ(38, 'span', 9),
                  m._uU(39, '\n  '),
                  m._UZ(40, 'app-language-selector', 10),
                  m._uU(41, '\n  '),
                  m.TgZ(42, 'button', 11),
                  m._uU(43, '\n    '),
                  m.TgZ(44, 'mat-icon'),
                  m._uU(45, 'person'),
                  m.qZA(),
                  m._uU(46, '\n  '),
                  m.qZA(),
                  m._uU(47, '\n  '),
                  m.TgZ(48, 'mat-menu', null, 12),
                  m._uU(50, '\n    '),
                  m.TgZ(51, 'mat-list'),
                  m._uU(52, '\n      '),
                  m.TgZ(53, 'mat-list-item'),
                  m._uU(54, '\n        '),
                  m.TgZ(55, 'span', 7),
                  m._uU(56, 'Logged in as'),
                  m.qZA(),
                  m._uU(57, '\xa0'),
                  m.TgZ(58, 'b'),
                  m._uU(59),
                  m.qZA(),
                  m._uU(60, '\n      '),
                  m.qZA(),
                  m._uU(61, '\n      '),
                  m._UZ(62, 'mat-divider'),
                  m._uU(63, '\n    '),
                  m.qZA(),
                  m._uU(64, '\n    '),
                  m.TgZ(65, 'button', 13),
                  m.NdJ('click', function () {
                    return i.logout();
                  }),
                  m._uU(66, 'Logout'),
                  m.qZA(),
                  m._uU(67, '\n  '),
                  m.qZA(),
                  m._uU(68, '\n'),
                  m.qZA(),
                  m._uU(69, '\n')),
                2 & t)
              ) {
                const o = m.MAs(49);
                m.xp6(11),
                  m.Oqu(i.title),
                  m.xp6(29),
                  m.Q6J('icon', !0),
                  m.xp6(2),
                  m.Q6J('matMenuTriggerFor', o),
                  m.xp6(17),
                  m.Oqu(i.username);
              }
            },
            directives: [
              ww.Ye,
              Fv.b8,
              Ci.Wh,
              Ot.lW,
              _n.Hw,
              en.Pi,
              N.rH,
              N.Od,
              Ci.yH,
              wt,
              Yt.p6,
              Yt.VK,
              Lv.i$,
              Lv.Tg,
              LD.d,
              Yt.OP,
            ],
            styles: [
              '.navbar[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;z-index:1}.brand[_ngcontent-%COMP%]{color:#fff;text-decoration:none;padding-right:1rem}.menu-button[_ngcontent-%COMP%]{margin-right:1rem}',
            ],
          })),
          n
        );
      })();
      var Ew = x(2638);
      const rA = ['sidenav'];
      let mf = class {
        constructor(e) {
          this.breakpoint = e;
        }
        ngOnInit() {
          this.breakpoint
            .observe(['(min-width: 600px) and (max-width: 959.98px)', '(max-width: 599.98px)'])
            .pipe(
              (0, dt.h)(({ matches: e }) => !e),
              ye(this)
            )
            .subscribe(() => this.sidenav.close());
        }
      };
      (mf.ɵfac = function (e) {
        return new (e || mf)(m.Y36(PD));
      }),
        (mf.ɵcmp = m.Xpm({
          type: mf,
          selectors: [['app-shell']],
          viewQuery: function (e, t) {
            if ((1 & e && m.Gf(rA, 5), 2 & e)) {
              let i;
              m.iGM((i = m.CRH())) && (t.sidenav = i.first);
            }
          },
          decls: 41,
          vars: 1,
          consts: [
            ['fxFlex', ''],
            [3, 'sidenav'],
            ['fxFill', ''],
            ['mode', 'over', 'ngClass.gt-sm', 'has-border'],
            ['sidenav', ''],
            ['mat-list-item', '', 'routerLink', '/home', 'routerLinkActive', 'active', 3, 'click'],
            ['translate', ''],
            ['mat-list-item', '', 'routerLink', '/about', 'routerLinkActive', 'active', 3, 'click'],
          ],
          template: function (e, t) {
            if (1 & e) {
              const i = m.EpF();
              m.TgZ(0, 'div', 0),
                m._uU(1, '\n  '),
                m._UZ(2, 'app-header', 1),
                m._uU(3, '\n  '),
                m.TgZ(4, 'mat-sidenav-container', 2),
                m._uU(5, '\n    '),
                m.TgZ(6, 'mat-sidenav', 3, 4),
                m._uU(8, '\n      '),
                m.TgZ(9, 'nav'),
                m._uU(10, '\n        '),
                m.TgZ(11, 'mat-list'),
                m._uU(12, '\n          '),
                m._UZ(13, 'mat-divider'),
                m._uU(14, '\n          '),
                m.TgZ(15, 'a', 5),
                m.NdJ('click', function () {
                  return m.CHM(i), m.MAs(7).close();
                }),
                m._uU(16, '\n            '),
                m.TgZ(17, 'span', 6),
                m._uU(18, 'Home'),
                m.qZA(),
                m._uU(19, '\n          '),
                m.qZA(),
                m._uU(20, '\n          '),
                m._UZ(21, 'mat-divider'),
                m._uU(22, '\n          '),
                m.TgZ(23, 'a', 7),
                m.NdJ('click', function () {
                  return m.CHM(i), m.MAs(7).close();
                }),
                m._uU(24, '\n            '),
                m.TgZ(25, 'span', 6),
                m._uU(26, 'About'),
                m.qZA(),
                m._uU(27, '\n          '),
                m.qZA(),
                m._uU(28, '\n          '),
                m._UZ(29, 'mat-divider'),
                m._uU(30, '\n        '),
                m.qZA(),
                m._uU(31, '\n      '),
                m.qZA(),
                m._uU(32, '\n    '),
                m.qZA(),
                m._uU(33, '\n    '),
                m.TgZ(34, 'mat-sidenav-content'),
                m._uU(35, '\n      '),
                m._UZ(36, 'router-outlet'),
                m._uU(37, '\n    '),
                m.qZA(),
                m._uU(38, '\n  '),
                m.qZA(),
                m._uU(39, '\n'),
                m.qZA(),
                m._uU(40, '\n');
            }
            if (2 & e) {
              const i = m.MAs(7);
              m.xp6(2), m.Q6J('sidenav', i);
            }
          },
          directives: [Ci.yH, iA, Ew.TM, Ci.s9, Ew.JX, Fv.oO, Lv.i$, LD.d, Lv.Tg, N.yS, N.Od, en.Pi, Ew.Rh, N.lC],
          styles: [
            '[_nghost-%COMP%]{display:flex;flex:1}.mat-sidenav[_ngcontent-%COMP%]{min-width:270px;max-width:28%}.has-border[_ngcontent-%COMP%]{border-right:1px solid rgba(0,0,0,.12)}.mat-list[_ngcontent-%COMP%]{padding-top:0}.mat-list-item[_ngcontent-%COMP%]{text-decoration:none}.mat-list-item[_ngcontent-%COMP%]:hover{background:rgba(0,0,0,.05)}.mat-drawer-container[_ngcontent-%COMP%]{position:unset}.mat-sidenav[_ngcontent-%COMP%], .mat-drawer-content[_ngcontent-%COMP%], [_nghost-%COMP%]     .mat-drawer-backdrop{top:64px;bottom:0;left:0;right:0;height:auto;position:absolute}@media (max-width: 599px){.mat-sidenav[_ngcontent-%COMP%], .mat-drawer-content[_ngcontent-%COMP%], [_nghost-%COMP%]     .mat-drawer-backdrop{top:56px}}',
          ],
        })),
        (mf = (0, Pt.gn)([le()], mf));
      class ND {
        static childRoutes(e) {
          return { path: '', component: mf, children: e, canActivate: [Nr] };
        }
      }
      const sA = [
        ND.childRoutes([
          { path: '', redirectTo: '/home', pathMatch: 'full' },
          { path: 'home', component: hw, data: { title: (0, nt.J)('Home') } },
        ]),
      ];
      let Yg = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ providers: [], imports: [[N.Bz.forChild(sA)], N.Bz] })),
            n
          );
        })(),
        oA = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ imports: [[Re.ez, en.aw, Zt, ot.o9, Gt.q, Yg, d.UX]] })),
            n
          );
        })(),
        Nv = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ imports: [[Re.ez, en.aw, ot.o9, Gt.q, Wn, he, N.Bz]] })),
            n
          );
        })();
      const gf = new Le('App');
      let Rd = class {
        constructor(e, t, i, o, c) {
          (this.router = e),
            (this.activatedRoute = t),
            (this.titleService = i),
            (this.translateService = o),
            (this.i18nService = c);
        }
        ngOnInit() {
          re.N.production && Le.enableProductionMode(),
            gf.debug('init'),
            this.i18nService.init(re.N.defaultLanguage, re.N.supportedLanguages);
          const e = this.router.events.pipe((0, dt.h)((t) => t instanceof N.m2));
          (0, me.T)(this.translateService.onLangChange, e)
            .pipe(
              (0, Ze.U)(() => {
                let t = this.activatedRoute;
                for (; t.firstChild; ) t = t.firstChild;
                return t;
              }),
              (0, dt.h)((t) => 'primary' === t.outlet),
              (0, vt.w)((t) => t.data),
              ye(this)
            )
            .subscribe((t) => {
              const i = t.title;
              i && this.titleService.setTitle(this.translateService.instant(i));
            });
        }
        ngOnDestroy() {
          this.i18nService.destroy();
        }
      };
      (Rd.ɵfac = function (e) {
        return new (e || Rd)(m.Y36(N.F0), m.Y36(N.gz), m.Y36(h.Dx), m.Y36(en.sK), m.Y36(Xe));
      }),
        (Rd.ɵcmp = m.Xpm({
          type: Rd,
          selectors: [['app-root']],
          decls: 2,
          vars: 0,
          template: function (e, t) {
            1 & e && (m._UZ(0, 'router-outlet'), m._uU(1, '\n'));
          },
          directives: [N.lC],
          styles: ['[_nghost-%COMP%]{display:flex;flex:1}'],
        })),
        (Rd = (0, Pt.gn)([le()], Rd));
      const BD = [
        ND.childRoutes([
          {
            path: 'about',
            loadChildren: () =>
              x
                .e(314)
                .then(x.bind(x, 7314))
                .then((n) => n.AboutModule),
          },
        ]),
        { path: '**', redirectTo: '', pathMatch: 'full' },
      ];
      let VD = (() => {
        class n {}
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = m.oAB({ type: n })),
          (n.ɵinj = m.cJS({ providers: [], imports: [[N.Bz.forRoot(BD, { preloadingStrategy: N.wm })], N.Bz] })),
          n
        );
      })();
      const Kg = 'firebasestorage.googleapis.com',
        Bv = 'storageBucket';
      class vo extends je.ZR {
        constructor(e, t) {
          super(qg(e), `Firebase Storage: ${t} (${qg(e)})`),
            (this.customData = { serverResponse: null }),
            (this._baseMessage = this.message),
            Object.setPrototypeOf(this, vo.prototype);
        }
        _codeEquals(e) {
          return qg(e) === this.code;
        }
        get serverResponse() {
          return this.customData.serverResponse;
        }
        set serverResponse(e) {
          (this.customData.serverResponse = e),
            (this.message = this.customData.serverResponse
              ? `${this._baseMessage}\n${this.customData.serverResponse}`
              : this._baseMessage);
        }
      }
      function qg(n) {
        return 'storage/' + n;
      }
      function _f() {
        return new vo('unknown', 'An unknown error occurred, please check the error payload for server response.');
      }
      function Sw() {
        return new vo('canceled', 'User canceled the upload/download.');
      }
      function Aw() {
        return new vo('cannot-slice-blob', 'Cannot slice blob for upload. Please retry the upload.');
      }
      function kd(n) {
        return new vo('invalid-argument', n);
      }
      function Tw() {
        return new vo('app-deleted', 'The Firebase app was deleted.');
      }
      function Iw(n) {
        return new vo(
          'invalid-root-operation',
          "The operation '" +
            n +
            "' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png')."
        );
      }
      function Ch(n, e) {
        return new vo('invalid-format', "String does not match format '" + n + "': " + e);
      }
      function yf(n) {
        throw new vo('internal-error', 'Internal error: ' + n);
      }
      class ma {
        constructor(e, t) {
          (this.bucket = e), (this.path_ = t);
        }
        get path() {
          return this.path_;
        }
        get isRoot() {
          return 0 === this.path.length;
        }
        fullServerUrl() {
          const e = encodeURIComponent;
          return '/b/' + e(this.bucket) + '/o/' + e(this.path);
        }
        bucketOnlyServerUrl() {
          return '/b/' + encodeURIComponent(this.bucket) + '/o';
        }
        static makeFromBucketSpec(e, t) {
          let i;
          try {
            i = ma.makeFromUrl(e, t);
          } catch (o) {
            return new ma(e, '');
          }
          if ('' === i.path) return i;
          throw (function jD(n) {
            return new vo('invalid-default-bucket', "Invalid default bucket '" + n + "'.");
          })(e);
        }
        static makeFromUrl(e, t) {
          let i = null;
          const o = '([A-Za-z0-9.\\-_]+)',
            C = new RegExp('^gs://' + o + '(/(.*))?$', 'i');
          function U(Ii) {
            Ii.path_ = decodeURIComponent(Ii.path);
          }
          const xe = t.replace(/[.]/g, '\\.'),
            yr = [
              {
                regex: C,
                indices: { bucket: 1, path: 3 },
                postModify: function c(Ii) {
                  '/' === Ii.path.charAt(Ii.path.length - 1) && (Ii.path_ = Ii.path_.slice(0, -1));
                },
              },
              {
                regex: new RegExp(`^https?://${xe}/v[A-Za-z0-9_]+/b/${o}/o(/([^?#]*).*)?$`, 'i'),
                indices: { bucket: 1, path: 3 },
                postModify: U,
              },
              {
                regex: new RegExp(
                  `^https?://${t === Kg ? '(?:storage.googleapis.com|storage.cloud.google.com)' : t}/${o}/([^?#]*)`,
                  'i'
                ),
                indices: { bucket: 1, path: 2 },
                postModify: U,
              },
            ];
          for (let Ii = 0; Ii < yr.length; Ii++) {
            const Is = yr[Ii],
              ka = Is.regex.exec(e);
            if (ka) {
              let kb = ka[Is.indices.path];
              kb || (kb = ''), (i = new ma(ka[Is.indices.bucket], kb)), Is.postModify(i);
              break;
            }
          }
          if (null == i)
            throw (function uA(n) {
              return new vo('invalid-url', "Invalid URL '" + n + "'.");
            })(e);
          return i;
        }
      }
      class GD {
        constructor(e) {
          this.promise_ = Promise.reject(e);
        }
        getPromise() {
          return this.promise_;
        }
        cancel(e = !1) {}
      }
      function ol(n) {
        return 'string' == typeof n || n instanceof String;
      }
      function Ow(n) {
        return Pw() && n instanceof Blob;
      }
      function Pw() {
        return 'undefined' != typeof Blob;
      }
      function Hv(n, e, t, i) {
        if (i < e) throw kd(`Invalid value for '${n}'. Expected ${e} or greater.`);
        if (i > t) throw kd(`Invalid value for '${n}'. Expected ${t} or less.`);
      }
      function uu(n, e, t) {
        let i = e;
        return null == t && (i = `https://${e}`), `${t}://${i}/v0${n}`;
      }
      function Fw(n) {
        const e = encodeURIComponent;
        let t = '?';
        for (const i in n) n.hasOwnProperty(i) && (t = t + (e(i) + '=') + e(n[i]) + '&');
        return (t = t.slice(0, -1)), t;
      }
      var Od = (() => (
        (function (n) {
          (n[(n.NO_ERROR = 0)] = 'NO_ERROR'),
            (n[(n.NETWORK_ERROR = 1)] = 'NETWORK_ERROR'),
            (n[(n.ABORT = 2)] = 'ABORT');
        })(Od || (Od = {})),
        Od
      ))();
      class Lw {
        constructor(e, t, i, o, c, p, C, I, U, se, xe) {
          (this.url_ = e),
            (this.method_ = t),
            (this.headers_ = i),
            (this.body_ = o),
            (this.successCodes_ = c),
            (this.additionalRetryCodes_ = p),
            (this.callback_ = C),
            (this.errorCallback_ = I),
            (this.timeout_ = U),
            (this.progressCallback_ = se),
            (this.connectionFactory_ = xe),
            (this.pendingConnection_ = null),
            (this.backoffId_ = null),
            (this.canceled_ = !1),
            (this.appDelete_ = !1),
            (this.promise_ = new Promise((rt, Ut) => {
              (this.resolve_ = rt), (this.reject_ = Ut), this.start_();
            }));
        }
        start_() {
          const t = (i, o) => {
            const c = this.resolve_,
              p = this.reject_,
              C = o.connection;
            if (o.wasSuccessCode)
              try {
                const I = this.callback_(C, C.getResponse());
                !(function zD(n) {
                  return void 0 !== n;
                })(I)
                  ? c()
                  : c(I);
              } catch (I) {
                p(I);
              }
            else if (null !== C) {
              const I = _f();
              (I.serverResponse = C.getErrorText()), p(this.errorCallback_ ? this.errorCallback_(C, I) : I);
            } else
              p(
                o.canceled
                  ? this.appDelete_
                    ? Tw()
                    : Sw()
                  : (function Vv() {
                      return new vo('retry-limit-exceeded', 'Max retry time for operation exceeded, please try again.');
                    })()
              );
          };
          this.canceled_
            ? t(0, new Zg(!1, null, !0))
            : (this.backoffId_ = (function Rw(n, e, t) {
                let i = 1,
                  o = null,
                  c = null,
                  p = !1,
                  C = 0;
                function I() {
                  return 2 === C;
                }
                let U = !1;
                function se(...Ln) {
                  U || ((U = !0), e.apply(null, Ln));
                }
                function xe(Ln) {
                  o = setTimeout(() => {
                    (o = null), n(Ut, I());
                  }, Ln);
                }
                function rt() {
                  c && clearTimeout(c);
                }
                function Ut(Ln, ...Ki) {
                  if (U) return void rt();
                  if (Ln) return rt(), void se.call(null, Ln, ...Ki);
                  if (I() || p) return rt(), void se.call(null, Ln, ...Ki);
                  let yr;
                  i < 64 && (i *= 2), 1 === C ? ((C = 2), (yr = 0)) : (yr = 1e3 * (i + Math.random())), xe(yr);
                }
                let qt = !1;
                function Mn(Ln) {
                  qt || ((qt = !0), rt(), !U && (null !== o ? (Ln || (C = 2), clearTimeout(o), xe(0)) : Ln || (C = 1)));
                }
                return (
                  xe(0),
                  (c = setTimeout(() => {
                    (p = !0), Mn(!0);
                  }, t)),
                  Mn
                );
              })(
                (i, o) => {
                  if (o) return void i(!1, new Zg(!1, null, !0));
                  const c = this.connectionFactory_();
                  this.pendingConnection_ = c;
                  const p = (C) => {
                    null !== this.progressCallback_ &&
                      this.progressCallback_(C.loaded, C.lengthComputable ? C.total : -1);
                  };
                  null !== this.progressCallback_ && c.addUploadProgressListener(p),
                    c.send(this.url_, this.method_, this.body_, this.headers_).then(() => {
                      null !== this.progressCallback_ && c.removeUploadProgressListener(p),
                        (this.pendingConnection_ = null);
                      const C = c.getErrorCode() === Od.NO_ERROR,
                        I = c.getStatus();
                      if (!C || this.isRetryStatusCode_(I)) {
                        const se = c.getErrorCode() === Od.ABORT;
                        return void i(!1, new Zg(!1, null, se));
                      }
                      const U = -1 !== this.successCodes_.indexOf(I);
                      i(!0, new Zg(U, c));
                    });
                },
                t,
                this.timeout_
              ));
        }
        getPromise() {
          return this.promise_;
        }
        cancel(e) {
          (this.canceled_ = !0),
            (this.appDelete_ = e || !1),
            null !== this.backoffId_ &&
              (function kw(n) {
                n(!1);
              })(this.backoffId_),
            null !== this.pendingConnection_ && this.pendingConnection_.abort();
        }
        isRetryStatusCode_(e) {
          const t = e >= 500 && e < 600,
            o = -1 !== [408, 429].indexOf(e),
            c = -1 !== this.additionalRetryCodes_.indexOf(e);
          return t || o || c;
        }
      }
      class Zg {
        constructor(e, t, i) {
          (this.wasSuccessCode = e), (this.connection = t), (this.canceled = !!i);
        }
      }
      function tm(...n) {
        const e = (function Vw() {
          return 'undefined' != typeof BlobBuilder
            ? BlobBuilder
            : 'undefined' != typeof WebKitBlobBuilder
            ? WebKitBlobBuilder
            : void 0;
        })();
        if (void 0 !== e) {
          const t = new e();
          for (let i = 0; i < n.length; i++) t.append(n[i]);
          return t.getBlob();
        }
        if (Pw()) return new Blob(n);
        throw new vo('unsupported-environment', "This browser doesn't seem to support creating Blobs");
      }
      const Tl = { RAW: 'raw', BASE64: 'base64', BASE64URL: 'base64url', DATA_URL: 'data_url' };
      class Qg {
        constructor(e, t) {
          (this.data = e), (this.contentType = t || null);
        }
      }
      function Xg(n, e) {
        switch (n) {
          case Tl.RAW:
            return new Qg(jw(e));
          case Tl.BASE64:
          case Tl.BASE64URL:
            return new Qg(qD(n, e));
          case Tl.DATA_URL:
            return new Qg(
              (function Hw(n) {
                const e = new ZD(n);
                return e.base64
                  ? qD(Tl.BASE64, e.rest)
                  : (function KD(n) {
                      let e;
                      try {
                        e = decodeURIComponent(n);
                      } catch (t) {
                        throw Ch(Tl.DATA_URL, 'Malformed data URL.');
                      }
                      return jw(e);
                    })(e.rest);
              })(e),
              (function QD(n) {
                return new ZD(n).contentType;
              })(e)
            );
        }
        throw _f();
      }
      function jw(n) {
        const e = [];
        for (let t = 0; t < n.length; t++) {
          let i = n.charCodeAt(t);
          i <= 127
            ? e.push(i)
            : i <= 2047
            ? e.push(192 | (i >> 6), 128 | (63 & i))
            : 55296 == (64512 & i)
            ? t < n.length - 1 && 56320 == (64512 & n.charCodeAt(t + 1))
              ? ((i = 65536 | ((1023 & i) << 10) | (1023 & n.charCodeAt(++t))),
                e.push(240 | (i >> 18), 128 | ((i >> 12) & 63), 128 | ((i >> 6) & 63), 128 | (63 & i)))
              : e.push(239, 191, 189)
            : 56320 == (64512 & i)
            ? e.push(239, 191, 189)
            : e.push(224 | (i >> 12), 128 | ((i >> 6) & 63), 128 | (63 & i));
        }
        return new Uint8Array(e);
      }
      function qD(n, e) {
        switch (n) {
          case Tl.BASE64: {
            const o = -1 !== e.indexOf('-'),
              c = -1 !== e.indexOf('_');
            if (o || c) throw Ch(n, "Invalid character '" + (o ? '-' : '_') + "' found: is it base64url encoded?");
            break;
          }
          case Tl.BASE64URL: {
            const o = -1 !== e.indexOf('+'),
              c = -1 !== e.indexOf('/');
            if (o || c) throw Ch(n, "Invalid character '" + (o ? '+' : '/') + "' found: is it base64 encoded?");
            e = e.replace(/-/g, '+').replace(/_/g, '/');
            break;
          }
        }
        let t;
        try {
          t = (function Uw(n) {
            return atob(n);
          })(e);
        } catch (o) {
          throw Ch(n, 'Invalid character found');
        }
        const i = new Uint8Array(t.length);
        for (let o = 0; o < t.length; o++) i[o] = t.charCodeAt(o);
        return i;
      }
      class ZD {
        constructor(e) {
          (this.base64 = !1), (this.contentType = null);
          const t = e.match(/^data:([^,]+)?,/);
          if (null === t) throw Ch(Tl.DATA_URL, "Must be formatted 'data:[<mediatype>][;base64],<data>");
          const i = t[1] || null;
          null != i &&
            ((this.base64 = (function XD(n, e) {
              return n.length >= e.length && n.substring(n.length - e.length) === e;
            })(i, ';base64')),
            (this.contentType = this.base64 ? i.substring(0, i.length - ';base64'.length) : i)),
            (this.rest = e.substring(e.indexOf(',') + 1));
        }
      }
      class du {
        constructor(e, t) {
          let i = 0,
            o = '';
          Ow(e)
            ? ((this.data_ = e), (i = e.size), (o = e.type))
            : e instanceof ArrayBuffer
            ? (t
                ? (this.data_ = new Uint8Array(e))
                : ((this.data_ = new Uint8Array(e.byteLength)), this.data_.set(new Uint8Array(e))),
              (i = this.data_.length))
            : e instanceof Uint8Array &&
              (t ? (this.data_ = e) : ((this.data_ = new Uint8Array(e.length)), this.data_.set(e)), (i = e.length)),
            (this.size_ = i),
            (this.type_ = o);
        }
        size() {
          return this.size_;
        }
        type() {
          return this.type_;
        }
        slice(e, t) {
          if (Ow(this.data_)) {
            const o = (function Gv(n, e, t) {
              return n.webkitSlice
                ? n.webkitSlice(e, t)
                : n.mozSlice
                ? n.mozSlice(e, t)
                : n.slice
                ? n.slice(e, t)
                : null;
            })(this.data_, e, t);
            return null === o ? null : new du(o);
          }
          {
            const i = new Uint8Array(this.data_.buffer, e, t - e);
            return new du(i, !0);
          }
        }
        static getBlob(...e) {
          if (Pw()) {
            const t = e.map((i) => (i instanceof du ? i.data_ : i));
            return new du(tm.apply(null, t));
          }
          {
            const t = e.map((p) => (ol(p) ? Xg(Tl.RAW, p).data : p.data_));
            let i = 0;
            t.forEach((p) => {
              i += p.byteLength;
            });
            const o = new Uint8Array(i);
            let c = 0;
            return (
              t.forEach((p) => {
                for (let C = 0; C < p.length; C++) o[c++] = p[C];
              }),
              new du(o, !0)
            );
          }
        }
        uploadData() {
          return this.data_;
        }
      }
      function Gw(n) {
        let e;
        try {
          e = JSON.parse(n);
        } catch (t) {
          return null;
        }
        return (function jv(n) {
          return 'object' == typeof n && !Array.isArray(n);
        })(e)
          ? e
          : null;
      }
      function JD(n) {
        const e = n.lastIndexOf('/', n.length - 2);
        return -1 === e ? n : n.slice(e + 1);
      }
      function pA(n, e) {
        return e;
      }
      class Wa {
        constructor(e, t, i, o) {
          (this.server = e), (this.local = t || e), (this.writable = !!i), (this.xform = o || pA);
        }
      }
      let wh = null;
      function nm() {
        if (wh) return wh;
        const n = [];
        n.push(new Wa('bucket')),
          n.push(new Wa('generation')),
          n.push(new Wa('metageneration')),
          n.push(new Wa('name', 'fullPath', !0));
        const t = new Wa('name');
        (t.xform = function e(c, p) {
          return (function eM(n) {
            return !ol(n) || n.length < 2 ? n : JD(n);
          })(p);
        }),
          n.push(t);
        const o = new Wa('size');
        return (
          (o.xform = function i(c, p) {
            return void 0 !== p ? Number(p) : p;
          }),
          n.push(o),
          n.push(new Wa('timeCreated')),
          n.push(new Wa('updated')),
          n.push(new Wa('md5Hash', null, !0)),
          n.push(new Wa('cacheControl', null, !0)),
          n.push(new Wa('contentDisposition', null, !0)),
          n.push(new Wa('contentEncoding', null, !0)),
          n.push(new Wa('contentLanguage', null, !0)),
          n.push(new Wa('contentType', null, !0)),
          n.push(new Wa('metadata', 'customMetadata', !0)),
          (wh = n),
          wh
        );
      }
      function zv(n, e, t) {
        const i = Gw(e);
        return null === i
          ? null
          : (function Eh(n, e, t) {
              const i = { type: 'file' },
                o = t.length;
              for (let c = 0; c < o; c++) {
                const p = t[c];
                i[p.local] = p.xform(i, e[p.server]);
              }
              return (
                (function zw(n, e) {
                  Object.defineProperty(n, 'ref', {
                    get: function t() {
                      const c = new ma(n.bucket, n.fullPath);
                      return e._makeStorageReference(c);
                    },
                  });
                })(i, n),
                i
              );
            })(n, i, t);
      }
      function im(n, e) {
        const t = {},
          i = e.length;
        for (let o = 0; o < i; o++) {
          const c = e[o];
          c.writable && (t[c.server] = n[c.local]);
        }
        return JSON.stringify(t);
      }
      const $w = 'prefixes';
      class Ic {
        constructor(e, t, i, o) {
          (this.url = e),
            (this.method = t),
            (this.handler = i),
            (this.timeout = o),
            (this.urlParams = {}),
            (this.headers = {}),
            (this.body = null),
            (this.errorHandler = null),
            (this.progressCallback = null),
            (this.successCodes = [200]),
            (this.additionalRetryCodes = []);
        }
      }
      function $u(n) {
        if (!n) throw _f();
      }
      function Yv(n, e) {
        return function t(i, o) {
          const c = zv(n, o, e);
          return $u(null !== c), c;
        };
      }
      function rm(n) {
        return function e(t, i) {
          let o;
          return (
            (o =
              401 === t.getStatus()
                ? t.getErrorText().includes('Firebase App Check token is invalid')
                  ? (function cA() {
                      return new vo(
                        'unauthorized-app',
                        'This app does not have permission to access Firebase Storage on this project.'
                      );
                    })()
                  : (function lA() {
                      return new vo(
                        'unauthenticated',
                        'User is not authenticated, please authenticate using Firebase Authentication and try again.'
                      );
                    })()
                : 402 === t.getStatus()
                ? (function aA(n) {
                    return new vo(
                      'quota-exceeded',
                      "Quota for bucket '" +
                        n +
                        "' exceeded, please view quota on https://firebase.google.com/pricing/."
                    );
                  })(n.bucket)
                : 403 === t.getStatus()
                ? (function UD(n) {
                    return new vo('unauthorized', "User does not have permission to access '" + n + "'.");
                  })(n.path)
                : i),
            (o.serverResponse = i.serverResponse),
            o
          );
        };
      }
      function e_(n) {
        const e = rm(n);
        return function t(i, o) {
          let c = e(i, o);
          return (
            404 === i.getStatus() &&
              (c = (function Mw(n) {
                return new vo('object-not-found', "Object '" + n + "' does not exist.");
              })(n.path)),
            (c.serverResponse = o.serverResponse),
            c
          );
        };
      }
      function tM(n, e, t) {
        const o = uu(e.fullServerUrl(), n.host, n._protocol),
          p = n.maxOperationRetryTime,
          C = new Ic(o, 'GET', Yv(n, t), p);
        return (C.errorHandler = e_(e)), C;
      }
      function Yw(n, e, t, i, o) {
        const c = {};
        (c.prefix = e.isRoot ? '' : e.path + '/'),
          t && t.length > 0 && (c.delimiter = t),
          i && (c.pageToken = i),
          o && (c.maxResults = o);
        const C = uu(e.bucketOnlyServerUrl(), n.host, n._protocol),
          U = n.maxOperationRetryTime,
          se = new Ic(
            C,
            'GET',
            (function mA(n, e) {
              return function t(i, o) {
                const c = (function Ww(n, e, t) {
                  const i = Gw(t);
                  return null === i
                    ? null
                    : (function Wv(n, e, t) {
                        const i = { prefixes: [], items: [], nextPageToken: t.nextPageToken };
                        if (t[$w])
                          for (const o of t[$w]) {
                            const c = o.replace(/\/$/, ''),
                              p = n._makeStorageReference(new ma(e, c));
                            i.prefixes.push(p);
                          }
                        if (t.items)
                          for (const o of t.items) {
                            const c = n._makeStorageReference(new ma(e, o.name));
                            i.items.push(c);
                          }
                        return i;
                      })(n, e, i);
                })(n, e, o);
                return $u(null !== c), c;
              };
            })(n, e.bucket),
            U
          );
        return (se.urlParams = c), (se.errorHandler = rm(e)), se;
      }
      function Kv(n, e, t) {
        const i = Object.assign({}, t);
        return (
          (i.fullPath = n.path),
          (i.size = e.size()),
          i.contentType ||
            (i.contentType = (function qw(n, e) {
              return (n && n.contentType) || (e && e.type()) || 'application/octet-stream';
            })(null, e)),
          i
        );
      }
      class t_ {
        constructor(e, t, i, o) {
          (this.current = e), (this.total = t), (this.finalized = !!i), (this.metadata = o || null);
        }
      }
      function Zv(n, e) {
        let t = null;
        try {
          t = n.getResponseHeader('X-Goog-Upload-Status');
        } catch (o) {
          $u(!1);
        }
        return $u(!!t && -1 !== (e || ['active']).indexOf(t)), t;
      }
      const i_ = { STATE_CHANGED: 'state_changed' },
        Ya = { RUNNING: 'running', PAUSED: 'paused', SUCCESS: 'success', CANCELED: 'canceled', ERROR: 'error' };
      function Qv(n) {
        switch (n) {
          case 'running':
          case 'pausing':
          case 'canceling':
            return Ya.RUNNING;
          case 'paused':
            return Ya.PAUSED;
          case 'success':
            return Ya.SUCCESS;
          case 'canceled':
            return Ya.CANCELED;
          default:
            return Ya.ERROR;
        }
      }
      class oM {
        constructor(e, t, i) {
          if (
            (function $D(n) {
              return 'function' == typeof n;
            })(e) ||
            null != t ||
            null != i
          )
            (this.next = e), (this.error = null != t ? t : void 0), (this.complete = null != i ? i : void 0);
          else {
            const c = e;
            (this.next = c.next), (this.error = c.error), (this.complete = c.complete);
          }
        }
      }
      function vf(n) {
        return (...e) => {
          Promise.resolve().then(() => n(...e));
        };
      }
      class cM extends class lM {
        constructor() {
          (this.sent_ = !1),
            (this.xhr_ = new XMLHttpRequest()),
            this.initXhr(),
            (this.errorCode_ = Od.NO_ERROR),
            (this.sendPromise_ = new Promise((e) => {
              this.xhr_.addEventListener('abort', () => {
                (this.errorCode_ = Od.ABORT), e();
              }),
                this.xhr_.addEventListener('error', () => {
                  (this.errorCode_ = Od.NETWORK_ERROR), e();
                }),
                this.xhr_.addEventListener('load', () => {
                  e();
                });
            }));
        }
        send(e, t, i, o) {
          if (this.sent_) throw yf('cannot .send() more than once');
          if (((this.sent_ = !0), this.xhr_.open(t, e, !0), void 0 !== o))
            for (const c in o) o.hasOwnProperty(c) && this.xhr_.setRequestHeader(c, o[c].toString());
          return void 0 !== i ? this.xhr_.send(i) : this.xhr_.send(), this.sendPromise_;
        }
        getErrorCode() {
          if (!this.sent_) throw yf('cannot .getErrorCode() before sending');
          return this.errorCode_;
        }
        getStatus() {
          if (!this.sent_) throw yf('cannot .getStatus() before sending');
          try {
            return this.xhr_.status;
          } catch (e) {
            return -1;
          }
        }
        getResponse() {
          if (!this.sent_) throw yf('cannot .getResponse() before sending');
          return this.xhr_.response;
        }
        getErrorText() {
          if (!this.sent_) throw yf('cannot .getErrorText() before sending');
          return this.xhr_.statusText;
        }
        abort() {
          this.xhr_.abort();
        }
        getResponseHeader(e) {
          return this.xhr_.getResponseHeader(e);
        }
        addUploadProgressListener(e) {
          null != this.xhr_.upload && this.xhr_.upload.addEventListener('progress', e);
        }
        removeUploadProgressListener(e) {
          null != this.xhr_.upload && this.xhr_.upload.removeEventListener('progress', e);
        }
      } {
        initXhr() {
          this.xhr_.responseType = 'text';
        }
      }
      function Rc() {
        return new cM();
      }
      class Xw {
        constructor(e, t, i = null) {
          (this._transferred = 0),
            (this._needToFetchStatus = !1),
            (this._needToFetchMetadata = !1),
            (this._observers = []),
            (this._error = void 0),
            (this._uploadUrl = void 0),
            (this._request = void 0),
            (this._chunkMultiplier = 1),
            (this._resolve = void 0),
            (this._reject = void 0),
            (this._ref = e),
            (this._blob = t),
            (this._metadata = i),
            (this._mappings = nm()),
            (this._resumable = this._shouldDoResumable(this._blob)),
            (this._state = 'running'),
            (this._errorHandler = (o) => {
              (this._request = void 0),
                (this._chunkMultiplier = 1),
                o._codeEquals('canceled')
                  ? ((this._needToFetchStatus = !0), this.completeTransitions_())
                  : ((this._error = o), this._transition('error'));
            }),
            (this._metadataErrorHandler = (o) => {
              (this._request = void 0),
                o._codeEquals('canceled')
                  ? this.completeTransitions_()
                  : ((this._error = o), this._transition('error'));
            }),
            (this._promise = new Promise((o, c) => {
              (this._resolve = o), (this._reject = c), this._start();
            })),
            this._promise.then(null, () => {});
        }
        _makeProgressCallback() {
          const e = this._transferred;
          return (t) => this._updateProgress(e + t);
        }
        _shouldDoResumable(e) {
          return e.size() > 262144;
        }
        _start() {
          'running' === this._state &&
            void 0 === this._request &&
            (this._resumable
              ? void 0 === this._uploadUrl
                ? this._createResumable()
                : this._needToFetchStatus
                ? this._fetchStatus()
                : this._needToFetchMetadata
                ? this._fetchMetadata()
                : this._continueUpload()
              : this._oneShotUpload());
        }
        _resolveToken(e) {
          Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(([t, i]) => {
            switch (this._state) {
              case 'running':
                e(t, i);
                break;
              case 'canceling':
                this._transition('canceled');
                break;
              case 'pausing':
                this._transition('paused');
            }
          });
        }
        _createResumable() {
          this._resolveToken((e, t) => {
            const i = (function Zw(n, e, t, i, o) {
                const c = e.bucketOnlyServerUrl(),
                  p = Kv(e, i, o),
                  C = { name: p.fullPath },
                  I = uu(c, n.host, n._protocol),
                  se = {
                    'X-Goog-Upload-Protocol': 'resumable',
                    'X-Goog-Upload-Command': 'start',
                    'X-Goog-Upload-Header-Content-Length': `${i.size()}`,
                    'X-Goog-Upload-Header-Content-Type': p.contentType,
                    'Content-Type': 'application/json; charset=utf-8',
                  },
                  xe = im(p, t),
                  qt = new Ic(
                    I,
                    'POST',
                    function Ut(Mn) {
                      let Ln;
                      Zv(Mn);
                      try {
                        Ln = Mn.getResponseHeader('X-Goog-Upload-URL');
                      } catch (Ki) {
                        $u(!1);
                      }
                      return $u(ol(Ln)), Ln;
                    },
                    n.maxUploadRetryTime
                  );
                return (qt.urlParams = C), (qt.headers = se), (qt.body = xe), (qt.errorHandler = rm(e)), qt;
              })(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata),
              o = this._ref.storage._makeRequest(i, Rc, e, t);
            (this._request = o),
              o.getPromise().then((c) => {
                (this._request = void 0),
                  (this._uploadUrl = c),
                  (this._needToFetchStatus = !1),
                  this.completeTransitions_();
              }, this._errorHandler);
          });
        }
        _fetchStatus() {
          const e = this._uploadUrl;
          this._resolveToken((t, i) => {
            const o = (function n_(n, e, t, i) {
                const I = new Ic(
                  t,
                  'POST',
                  function c(U) {
                    const se = Zv(U, ['active', 'final']);
                    let xe = null;
                    try {
                      xe = U.getResponseHeader('X-Goog-Upload-Size-Received');
                    } catch (Ut) {
                      $u(!1);
                    }
                    xe || $u(!1);
                    const rt = Number(xe);
                    return $u(!isNaN(rt)), new t_(rt, i.size(), 'final' === se);
                  },
                  n.maxUploadRetryTime
                );
                return (I.headers = { 'X-Goog-Upload-Command': 'query' }), (I.errorHandler = rm(e)), I;
              })(this._ref.storage, this._ref._location, e, this._blob),
              c = this._ref.storage._makeRequest(o, Rc, t, i);
            (this._request = c),
              c.getPromise().then((p) => {
                (p = p),
                  (this._request = void 0),
                  this._updateProgress(p.current),
                  (this._needToFetchStatus = !1),
                  p.finalized && (this._needToFetchMetadata = !0),
                  this.completeTransitions_();
              }, this._errorHandler);
          });
        }
        _continueUpload() {
          const e = 262144 * this._chunkMultiplier,
            t = new t_(this._transferred, this._blob.size()),
            i = this._uploadUrl;
          this._resolveToken((o, c) => {
            let p;
            try {
              p = (function Qw(n, e, t, i, o, c, p, C) {
                const I = new t_(0, 0);
                if (
                  (p ? ((I.current = p.current), (I.total = p.total)) : ((I.current = 0), (I.total = i.size())),
                  i.size() !== I.total)
                )
                  throw (function Al() {
                    return new vo(
                      'server-file-wrong-size',
                      'Server recorded incorrect upload file size, please retry the upload.'
                    );
                  })();
                const U = I.total - I.current;
                let se = U;
                o > 0 && (se = Math.min(se, o));
                const xe = I.current,
                  qt = {
                    'X-Goog-Upload-Command': se === U ? 'upload, finalize' : 'upload',
                    'X-Goog-Upload-Offset': `${I.current}`,
                  },
                  Mn = i.slice(xe, xe + se);
                if (null === Mn) throw Aw();
                const yr = new Ic(
                  t,
                  'POST',
                  function Ln(Ii, Is) {
                    const ka = Zv(Ii, ['active', 'final']),
                      If = I.current + se,
                      kb = i.size();
                    let TS;
                    return (TS = 'final' === ka ? Yv(e, c)(Ii, Is) : null), new t_(If, kb, 'final' === ka, TS);
                  },
                  e.maxUploadRetryTime
                );
                return (
                  (yr.headers = qt),
                  (yr.body = Mn.uploadData()),
                  (yr.progressCallback = C || null),
                  (yr.errorHandler = rm(n)),
                  yr
                );
              })(
                this._ref._location,
                this._ref.storage,
                i,
                this._blob,
                e,
                this._mappings,
                t,
                this._makeProgressCallback()
              );
            } catch (I) {
              return (this._error = I), void this._transition('error');
            }
            const C = this._ref.storage._makeRequest(p, Rc, o, c);
            (this._request = C),
              C.getPromise().then((I) => {
                this._increaseMultiplier(),
                  (this._request = void 0),
                  this._updateProgress(I.current),
                  I.finalized
                    ? ((this._metadata = I.metadata), this._transition('success'))
                    : this.completeTransitions_();
              }, this._errorHandler);
          });
        }
        _increaseMultiplier() {
          262144 * this._chunkMultiplier < 33554432 && (this._chunkMultiplier *= 2);
        }
        _fetchMetadata() {
          this._resolveToken((e, t) => {
            const i = tM(this._ref.storage, this._ref._location, this._mappings),
              o = this._ref.storage._makeRequest(i, Rc, e, t);
            (this._request = o),
              o.getPromise().then((c) => {
                (this._request = void 0), (this._metadata = c), this._transition('success');
              }, this._metadataErrorHandler);
          });
        }
        _oneShotUpload() {
          this._resolveToken((e, t) => {
            const i = (function qv(n, e, t, i, o) {
                const c = e.bucketOnlyServerUrl(),
                  p = { 'X-Goog-Upload-Protocol': 'multipart' },
                  I = (function C() {
                    let yr = '';
                    for (let Ii = 0; Ii < 2; Ii++) yr += Math.random().toString().slice(2);
                    return yr;
                  })();
                p['Content-Type'] = 'multipart/related; boundary=' + I;
                const U = Kv(e, i, o),
                  se = im(U, t),
                  Ut = du.getBlob(
                    '--' +
                      I +
                      '\r\nContent-Type: application/json; charset=utf-8\r\n\r\n' +
                      se +
                      '\r\n--' +
                      I +
                      '\r\nContent-Type: ' +
                      U.contentType +
                      '\r\n\r\n',
                    i,
                    '\r\n--' + I + '--'
                  );
                if (null === Ut) throw Aw();
                const qt = { name: U.fullPath },
                  Mn = uu(c, n.host, n._protocol),
                  Ki = n.maxUploadRetryTime,
                  er = new Ic(Mn, 'POST', Yv(n, t), Ki);
                return (
                  (er.urlParams = qt), (er.headers = p), (er.body = Ut.uploadData()), (er.errorHandler = rm(e)), er
                );
              })(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata),
              o = this._ref.storage._makeRequest(i, Rc, e, t);
            (this._request = o),
              o.getPromise().then((c) => {
                (this._request = void 0),
                  (this._metadata = c),
                  this._updateProgress(this._blob.size()),
                  this._transition('success');
              }, this._errorHandler);
          });
        }
        _updateProgress(e) {
          const t = this._transferred;
          (this._transferred = e), this._transferred !== t && this._notifyObservers();
        }
        _transition(e) {
          if (this._state !== e)
            switch (e) {
              case 'canceling':
              case 'pausing':
                (this._state = e), void 0 !== this._request && this._request.cancel();
                break;
              case 'running':
                const t = 'paused' === this._state;
                (this._state = e), t && (this._notifyObservers(), this._start());
                break;
              case 'paused':
              case 'error':
              case 'success':
                (this._state = e), this._notifyObservers();
                break;
              case 'canceled':
                (this._error = Sw()), (this._state = e), this._notifyObservers();
            }
        }
        completeTransitions_() {
          switch (this._state) {
            case 'pausing':
              this._transition('paused');
              break;
            case 'canceling':
              this._transition('canceled');
              break;
            case 'running':
              this._start();
          }
        }
        get snapshot() {
          const e = Qv(this._state);
          return {
            bytesTransferred: this._transferred,
            totalBytes: this._blob.size(),
            state: e,
            metadata: this._metadata,
            task: this,
            ref: this._ref,
          };
        }
        on(e, t, i, o) {
          const c = new oM(t || void 0, i || void 0, o || void 0);
          return (
            this._addObserver(c),
            () => {
              this._removeObserver(c);
            }
          );
        }
        then(e, t) {
          return this._promise.then(e, t);
        }
        catch(e) {
          return this.then(null, e);
        }
        _addObserver(e) {
          this._observers.push(e), this._notifyObserver(e);
        }
        _removeObserver(e) {
          const t = this._observers.indexOf(e);
          -1 !== t && this._observers.splice(t, 1);
        }
        _notifyObservers() {
          this._finishPromise(),
            this._observers.slice().forEach((t) => {
              this._notifyObserver(t);
            });
        }
        _finishPromise() {
          if (void 0 !== this._resolve) {
            let e = !0;
            switch (Qv(this._state)) {
              case Ya.SUCCESS:
                vf(this._resolve.bind(null, this.snapshot))();
                break;
              case Ya.CANCELED:
              case Ya.ERROR:
                vf(this._reject.bind(null, this._error))();
                break;
              default:
                e = !1;
            }
            e && ((this._resolve = void 0), (this._reject = void 0));
          }
        }
        _notifyObserver(e) {
          switch (Qv(this._state)) {
            case Ya.RUNNING:
            case Ya.PAUSED:
              e.next && vf(e.next.bind(e, this.snapshot))();
              break;
            case Ya.SUCCESS:
              e.complete && vf(e.complete.bind(e))();
              break;
            default:
              e.error && vf(e.error.bind(e, this._error))();
          }
        }
        resume() {
          const e = 'paused' === this._state || 'pausing' === this._state;
          return e && this._transition('running'), e;
        }
        pause() {
          const e = 'running' === this._state;
          return e && this._transition('pausing'), e;
        }
        cancel() {
          const e = 'running' === this._state || 'pausing' === this._state;
          return e && this._transition('canceling'), e;
        }
      }
      class bf {
        constructor(e, t) {
          (this._service = e), (this._location = t instanceof ma ? t : ma.makeFromUrl(t, e.host));
        }
        toString() {
          return 'gs://' + this._location.bucket + '/' + this._location.path;
        }
        _newRef(e, t) {
          return new bf(e, t);
        }
        get root() {
          const e = new ma(this._location.bucket, '');
          return this._newRef(this._service, e);
        }
        get bucket() {
          return this._location.bucket;
        }
        get fullPath() {
          return this._location.path;
        }
        get name() {
          return JD(this._location.path);
        }
        get storage() {
          return this._service;
        }
        get parent() {
          const e = (function hA(n) {
            if (0 === n.length) return null;
            const e = n.lastIndexOf('/');
            return -1 === e ? '' : n.slice(0, e);
          })(this._location.path);
          if (null === e) return null;
          const t = new ma(this._location.bucket, e);
          return new bf(this._service, t);
        }
        _throwIfRoot(e) {
          if ('' === this._location.path) throw Iw(e);
        }
      }
      function gM(n, e, t) {
        return Jw.apply(this, arguments);
      }
      function Jw() {
        return (
          (Jw = (0, Jt.Z)(function* (n, e, t) {
            const o = yield _M(n, { pageToken: t });
            e.prefixes.push(...o.prefixes),
              e.items.push(...o.items),
              null != o.nextPageToken && (yield gM(n, e, o.nextPageToken));
          })),
          Jw.apply(this, arguments)
        );
      }
      function _M(n, e) {
        null != e && 'number' == typeof e.maxResults && Hv('options.maxResults', 1, 1e3, e.maxResults);
        const t = e || {},
          i = Yw(n.storage, n._location, '/', t.pageToken, t.maxResults);
        return n.storage.makeRequestWithTokens(i, Rc);
      }
      function a(n) {
        n._throwIfRoot('getDownloadURL');
        const e = (function nM(n, e, t) {
          const o = uu(e.fullServerUrl(), n.host, n._protocol),
            p = n.maxOperationRetryTime,
            C = new Ic(
              o,
              'GET',
              (function gA(n, e) {
                return function t(i, o) {
                  const c = zv(n, o, e);
                  return (
                    $u(null !== c),
                    (function $v(n, e, t, i) {
                      const o = Gw(e);
                      if (null === o || !ol(o.downloadTokens)) return null;
                      const c = o.downloadTokens;
                      if (0 === c.length) return null;
                      const p = encodeURIComponent;
                      return c.split(',').map((U) => {
                        const xe = n.fullPath;
                        return uu('/b/' + p(n.bucket) + '/o/' + p(xe), t, i) + Fw({ alt: 'media', token: U });
                      })[0];
                    })(c, o, n.host, n._protocol)
                  );
                };
              })(n, t),
              p
            );
          return (C.errorHandler = e_(e)), C;
        })(n.storage, n._location, nm());
        return n.storage.makeRequestWithTokens(e, Rc).then((t) => {
          if (null === t)
            throw (function HD() {
              return new vo('no-download-url', 'The given file does not have any download URLs.');
            })();
          return t;
        });
      }
      function f(n, e) {
        const t = (function fA(n, e) {
            const t = e
              .split('/')
              .filter((i) => i.length > 0)
              .join('/');
            return 0 === n.length ? t : n + '/' + t;
          })(n._location.path, e),
          i = new ma(n._location.bucket, t);
        return new bf(n.storage, i);
      }
      function O(n, e) {
        if (n instanceof tt) {
          const t = n;
          if (null == t._bucket)
            throw (function Uv() {
              return new vo(
                'no-default-bucket',
                "No default bucket found. Did you set the '" + Bv + "' property when initializing the app?"
              );
            })();
          const i = new bf(t, t._bucket);
          return null != e ? O(i, e) : i;
        }
        return void 0 !== e ? f(n, e) : n;
      }
      function V(n, e) {
        if (
          e &&
          (function y(n) {
            return /^[A-Za-z]+:\/\//.test(n);
          })(e)
        ) {
          if (n instanceof tt)
            return (function S(n, e) {
              return new bf(n, e);
            })(n, e);
          throw kd('To use ref(service, url), the first argument must be a Storage instance.');
        }
        return O(n, e);
      }
      function ne(n, e) {
        const t = null == e ? void 0 : e[Bv];
        return null == t ? null : ma.makeFromBucketSpec(t, n);
      }
      class tt {
        constructor(e, t, i, o, c) {
          (this.app = e),
            (this._authProvider = t),
            (this._appCheckProvider = i),
            (this._url = o),
            (this._firebaseVersion = c),
            (this._bucket = null),
            (this._host = Kg),
            (this._protocol = 'https'),
            (this._appId = null),
            (this._deleted = !1),
            (this._maxOperationRetryTime = 12e4),
            (this._maxUploadRetryTime = 6e5),
            (this._requests = new Set()),
            (this._bucket = null != o ? ma.makeFromBucketSpec(o, this._host) : ne(this._host, this.app.options));
        }
        get host() {
          return this._host;
        }
        set host(e) {
          (this._host = e),
            (this._bucket = null != this._url ? ma.makeFromBucketSpec(this._url, e) : ne(e, this.app.options));
        }
        get maxUploadRetryTime() {
          return this._maxUploadRetryTime;
        }
        set maxUploadRetryTime(e) {
          Hv('time', 0, Number.POSITIVE_INFINITY, e), (this._maxUploadRetryTime = e);
        }
        get maxOperationRetryTime() {
          return this._maxOperationRetryTime;
        }
        set maxOperationRetryTime(e) {
          Hv('time', 0, Number.POSITIVE_INFINITY, e), (this._maxOperationRetryTime = e);
        }
        _getAuthToken() {
          var e = this;
          return (0, Jt.Z)(function* () {
            if (e._overrideAuthToken) return e._overrideAuthToken;
            const t = e._authProvider.getImmediate({ optional: !0 });
            if (t) {
              const i = yield t.getToken();
              if (null !== i) return i.accessToken;
            }
            return null;
          })();
        }
        _getAppCheckToken() {
          var e = this;
          return (0, Jt.Z)(function* () {
            const t = e._appCheckProvider.getImmediate({ optional: !0 });
            return t ? (yield t.getToken()).token : null;
          })();
        }
        _delete() {
          return (
            this._deleted || ((this._deleted = !0), this._requests.forEach((e) => e.cancel()), this._requests.clear()),
            Promise.resolve()
          );
        }
        _makeStorageReference(e) {
          return new bf(this, e);
        }
        _makeRequest(e, t, i, o) {
          if (this._deleted) return new GD(Tw());
          {
            const c = (function YD(n, e, t, i, o, c) {
              const p = Fw(n.urlParams),
                C = n.url + p,
                I = Object.assign({}, n.headers);
              return (
                (function Bw(n, e) {
                  e && (n['X-Firebase-GMPID'] = e);
                })(I, e),
                (function dA(n, e) {
                  null !== e && e.length > 0 && (n.Authorization = 'Firebase ' + e);
                })(I, t),
                (function Nw(n, e) {
                  n['X-Firebase-Storage-Version'] = 'webjs/' + (null != e ? e : 'AppManager');
                })(I, c),
                (function WD(n, e) {
                  null !== e && (n['X-Firebase-AppCheck'] = e);
                })(I, i),
                new Lw(
                  C,
                  n.method,
                  I,
                  n.body,
                  n.successCodes,
                  n.additionalRetryCodes,
                  n.handler,
                  n.errorHandler,
                  n.timeout,
                  n.progressCallback,
                  o
                )
              );
            })(e, this._appId, i, o, t, this._firebaseVersion);
            return (
              this._requests.add(c),
              c.getPromise().then(
                () => this._requests.delete(c),
                () => this._requests.delete(c)
              ),
              c
            );
          }
        }
        makeRequestWithTokens(e, t) {
          var i = this;
          return (0, Jt.Z)(function* () {
            const [o, c] = yield Promise.all([i._getAuthToken(), i._getAppCheckToken()]);
            return i._makeRequest(e, t, o, c).getPromise();
          })();
        }
      }
      const Tt = '@firebase/storage';
      function r_(n, e) {
        return V((n = (0, je.m9)(n)), e);
      }
      function tb(n, { instanceIdentifier: e }) {
        const t = n.getProvider('app').getImmediate(),
          i = n.getProvider('auth-internal'),
          o = n.getProvider('app-check-internal');
        return new tt(t, i, o, e, ji.SDK_VERSION);
      }
      !(function nb() {
        (0, ji._registerComponent)(new tr.wA('storage', tb, 'PUBLIC').setMultipleInstances(!0)),
          (0, ji.registerVersion)(Tt, '0.9.2', ''),
          (0, ji.registerVersion)(Tt, '0.9.2', 'esm2017');
      })();
      class iE {
        constructor(e, t, i) {
          (this._delegate = e), (this.task = t), (this.ref = i);
        }
        get bytesTransferred() {
          return this._delegate.bytesTransferred;
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get state() {
          return this._delegate.state;
        }
        get totalBytes() {
          return this._delegate.totalBytes;
        }
      }
      class CA {
        constructor(e, t) {
          (this._delegate = e),
            (this._ref = t),
            (this.cancel = this._delegate.cancel.bind(this._delegate)),
            (this.catch = this._delegate.catch.bind(this._delegate)),
            (this.pause = this._delegate.pause.bind(this._delegate)),
            (this.resume = this._delegate.resume.bind(this._delegate));
        }
        get snapshot() {
          return new iE(this._delegate.snapshot, this, this._ref);
        }
        then(e, t) {
          return this._delegate.then((i) => {
            if (e) return e(new iE(i, this, this._ref));
          }, t);
        }
        on(e, t, i, o) {
          let c;
          return (
            t &&
              (c =
                'function' == typeof t
                  ? (p) => t(new iE(p, this, this._ref))
                  : {
                      next: t.next ? (p) => t.next(new iE(p, this, this._ref)) : void 0,
                      complete: t.complete || void 0,
                      error: t.error || void 0,
                    }),
            this._delegate.on(e, c, i || void 0, o || void 0)
          );
        }
      }
      class wA {
        constructor(e, t) {
          (this._delegate = e), (this._service = t);
        }
        get prefixes() {
          return this._delegate.prefixes.map((e) => new Dh(e, this._service));
        }
        get items() {
          return this._delegate.items.map((e) => new Dh(e, this._service));
        }
        get nextPageToken() {
          return this._delegate.nextPageToken || null;
        }
      }
      class Dh {
        constructor(e, t) {
          (this._delegate = e), (this.storage = t);
        }
        get name() {
          return this._delegate.name;
        }
        get bucket() {
          return this._delegate.bucket;
        }
        get fullPath() {
          return this._delegate.fullPath;
        }
        toString() {
          return this._delegate.toString();
        }
        child(e) {
          const t = (function Jv(n, e) {
            return f(n, e);
          })(this._delegate, e);
          return new Dh(t, this.storage);
        }
        get root() {
          return new Dh(this._delegate.root, this.storage);
        }
        get parent() {
          const e = this._delegate.parent;
          return null == e ? null : new Dh(e, this.storage);
        }
        put(e, t) {
          return (
            this._throwIfRoot('put'),
            new CA(
              (function wn(n, e, t) {
                return (function vA(n, e, t) {
                  return n._throwIfRoot('uploadBytesResumable'), new Xw(n, new du(e), t);
                })((n = (0, je.m9)(n)), e, t);
              })(this._delegate, e, t),
              this
            )
          );
        }
        putString(e, t = Tl.RAW, i) {
          this._throwIfRoot('putString');
          const o = Xg(t, e),
            c = Object.assign({}, i);
          return (
            null == c.contentType && null != o.contentType && (c.contentType = o.contentType),
            new CA(new Xw(this._delegate, new du(o.data, !0), c), this)
          );
        }
        listAll() {
          return (function Il(n) {
            return (function bA(n) {
              const e = { prefixes: [], items: [] };
              return gM(n, e).then(() => e);
            })((n = (0, je.m9)(n)));
          })(this._delegate).then((e) => new wA(e, this.storage));
        }
        list(e) {
          return (function Fr(n, e) {
            return _M((n = (0, je.m9)(n)), e);
          })(this._delegate, e || void 0).then((t) => new wA(t, this.storage));
        }
        getMetadata() {
          return (function bi(n) {
            return (function r(n) {
              n._throwIfRoot('getMetadata');
              const e = tM(n.storage, n._location, nm());
              return n.storage.makeRequestWithTokens(e, Rc);
            })((n = (0, je.m9)(n)));
          })(this._delegate);
        }
        updateMetadata(e) {
          return (function rr(n, e) {
            return (function s(n, e) {
              n._throwIfRoot('updateMetadata');
              const t = (function iM(n, e, t, i) {
                const c = uu(e.fullServerUrl(), n.host, n._protocol),
                  C = im(t, i),
                  U = n.maxOperationRetryTime,
                  se = new Ic(c, 'PATCH', Yv(n, i), U);
                return (
                  (se.headers = { 'Content-Type': 'application/json; charset=utf-8' }),
                  (se.body = C),
                  (se.errorHandler = e_(e)),
                  se
                );
              })(n.storage, n._location, e, nm());
              return n.storage.makeRequestWithTokens(t, Rc);
            })((n = (0, je.m9)(n)), e);
          })(this._delegate, e);
        }
        getDownloadURL() {
          return (function xh(n) {
            return a((n = (0, je.m9)(n)));
          })(this._delegate);
        }
        delete() {
          return (
            this._throwIfRoot('delete'),
            (function Xv(n) {
              return (function u(n) {
                n._throwIfRoot('deleteObject');
                const e = (function rM(n, e) {
                  const i = uu(e.fullServerUrl(), n.host, n._protocol),
                    C = new Ic(i, 'DELETE', function p(I, U) {}, n.maxOperationRetryTime);
                  return (C.successCodes = [200, 204]), (C.errorHandler = e_(e)), C;
                })(n.storage, n._location);
                return n.storage.makeRequestWithTokens(e, Rc);
              })((n = (0, je.m9)(n)));
            })(this._delegate)
          );
        }
        _throwIfRoot(e) {
          if ('' === this._delegate._location.path) throw Iw(e);
        }
      }
      class EA {
        constructor(e, t) {
          (this.app = e), (this._delegate = t);
        }
        get maxOperationRetryTime() {
          return this._delegate.maxOperationRetryTime;
        }
        get maxUploadRetryTime() {
          return this._delegate.maxUploadRetryTime;
        }
        ref(e) {
          if (xA(e)) throw kd('ref() expected a child path but got a URL, use refFromURL instead.');
          return new Dh(r_(this._delegate, e), this);
        }
        refFromURL(e) {
          if (!xA(e)) throw kd('refFromURL() expected a full URL but got a child path, use ref() instead.');
          try {
            ma.makeFromUrl(e, this._delegate.host);
          } catch (t) {
            throw kd('refFromUrl() expected a valid full URL but got an invalid one.');
          }
          return new Dh(r_(this._delegate, e), this);
        }
        setMaxUploadRetryTime(e) {
          this._delegate.maxUploadRetryTime = e;
        }
        setMaxOperationRetryTime(e) {
          this._delegate.maxOperationRetryTime = e;
        }
        useEmulator(e, t, i = {}) {
          !(function eb(n, e, t, i = {}) {
            !(function ve(n, e, t, i = {}) {
              (n.host = `${e}:${t}`), (n._protocol = 'http');
              const { mockUserToken: o } = i;
              o && (n._overrideAuthToken = 'string' == typeof o ? o : (0, je.Sg)(o, n.app.options.projectId));
            })(n, e, t, i);
          })(this._delegate, e, t, i);
        }
      }
      function xA(n) {
        return /^[A-Za-z]+:\/\//.test(n);
      }
      function WI(n, { instanceIdentifier: e }) {
        const t = n.getProvider('app-compat').getImmediate(),
          i = n.getProvider('storage').getImmediate({ identifier: e });
        return new EA(t, i);
      }
      function DA(n) {
        const e = (function KI(n) {
          return new Qe.y((e) => {
            const t = (p) => e.next(p);
            t(n.snapshot);
            const c = n.on('state_changed', t);
            return (
              n.then(
                (p) => {
                  t(p), e.complete();
                },
                (p) => {
                  t(n.snapshot),
                    ((p) => {
                      e.error(p);
                    })(p);
                }
              ),
              function () {
                c();
              }
            );
          }).pipe((0, gw.b)(0));
        })(n);
        return {
          task: n,
          then: n.then.bind(n),
          catch: n.catch.bind(n),
          pause: n.pause.bind(n),
          cancel: n.cancel.bind(n),
          resume: n.resume.bind(n),
          snapshotChanges: () => e,
          percentageChanges: () => e.pipe((0, Ze.U)((t) => (t.bytesTransferred / t.totalBytes) * 100)),
        };
      }
      function rE(n) {
        return {
          getDownloadURL: () =>
            (0, ee.of)(void 0).pipe(
              _i.fc,
              (0, vt.w)(() => n.getDownloadURL()),
              _i.iC
            ),
          getMetadata: () =>
            (0, ee.of)(void 0).pipe(
              _i.fc,
              (0, vt.w)(() => n.getMetadata()),
              _i.iC
            ),
          delete: () => (0, ge.D)(n.delete()),
          child: (e) => rE(n.child(e)),
          updateMetadata: (e) => (0, ge.D)(n.updateMetadata(e)),
          put: (e, t) => DA(n.put(e, t)),
          putString: (e, t, i) => DA(n.putString(e, t, i)),
          list: (e) => (0, ge.D)(n.list(e)),
          listAll: () => (0, ge.D)(n.listAll()),
        };
      }
      !(function YI(n) {
        const e = { TaskState: Ya, TaskEvent: i_, StringFormat: Tl, Storage: EA, Reference: Dh };
        n.INTERNAL.registerComponent(
          new tr.wA('storage-compat', WI, 'PUBLIC').setServiceProps(e).setMultipleInstances(!0)
        ),
          n.registerVersion('@firebase/storage-compat', '0.1.10');
      })(Vr.Z);
      const qI = new m.OlP('angularfire2.storageBucket'),
        ZI = new m.OlP('angularfire2.storage.maxUploadRetryTime'),
        QI = new m.OlP('angularfire2.storage.maxOperationRetryTime'),
        XI = new m.OlP('angularfire2.storage.use-emulator');
      let JI = (() => {
          class n {
            constructor(t, i, o, c, p, C, I, U, se, xe) {
              const rt = (0, fi.on)(t, p, i);
              this.storage = (0, fi.cc)(
                `${rt.name}.storage.${o}`,
                'AngularFireStorage',
                rt.name,
                () => {
                  const Ut = p.runOutsideAngular(() => rt.storage(o || void 0)),
                    qt = se;
                  return (
                    qt && Ut.useEmulator(...qt),
                    I && Ut.setMaxUploadRetryTime(I),
                    U && Ut.setMaxOperationRetryTime(U),
                    Ut
                  );
                },
                [I, U]
              );
            }
            ref(t) {
              return rE(this.storage.ref(t));
            }
            refFromURL(t) {
              return rE(this.storage.refFromURL(t));
            }
            upload(t, i, o) {
              return rE(this.storage.ref(t)).put(i, o);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                m.LFG(fi.Dh),
                m.LFG(fi.xv, 8),
                m.LFG(qI, 8),
                m.LFG(m.Lbi),
                m.LFG(m.R0b),
                m.LFG(_i.HU),
                m.LFG(ZI, 8),
                m.LFG(QI, 8),
                m.LFG(XI, 8),
                m.LFG(vh, 8)
              );
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'any' })),
            n
          );
        })(),
        eR = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({})),
            n
          );
        })(),
        tR = (() => {
          class n {
            constructor() {
              Xp.Z.registerVersion('angularfire', _i.q4.full, 'gcs-compat');
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ providers: [JI], imports: [eR] })),
            n
          );
        })();
      var nR = x(3099),
        iR = x(8421),
        rR = x(4671),
        sR = x(3269);
      const MA = '@firebase/database';
      let yM = '';
      function AA(n) {
        yM = n;
      }
      class lR {
        constructor(e) {
          (this.domStorage_ = e), (this.prefix_ = 'firebase:');
        }
        set(e, t) {
          null == t
            ? this.domStorage_.removeItem(this.prefixedName_(e))
            : this.domStorage_.setItem(this.prefixedName_(e), (0, je.Pz)(t));
        }
        get(e) {
          const t = this.domStorage_.getItem(this.prefixedName_(e));
          return null == t ? null : (0, je.cI)(t);
        }
        remove(e) {
          this.domStorage_.removeItem(this.prefixedName_(e));
        }
        prefixedName_(e) {
          return this.prefix_ + e;
        }
        toString() {
          return this.domStorage_.toString();
        }
      }
      class cR {
        constructor() {
          (this.cache_ = {}), (this.isInMemoryStorage = !0);
        }
        set(e, t) {
          null == t ? delete this.cache_[e] : (this.cache_[e] = t);
        }
        get(e) {
          return (0, je.r3)(this.cache_, e) ? this.cache_[e] : null;
        }
        remove(e) {
          delete this.cache_[e];
        }
      }
      const TA = function (n) {
          try {
            if ('undefined' != typeof window && void 0 !== window[n]) {
              const e = window[n];
              return e.setItem('firebase:sentinel', 'cache'), e.removeItem('firebase:sentinel'), new lR(e);
            }
          } catch (e) {}
          return new cR();
        },
        sm = TA('localStorage'),
        vM = TA('sessionStorage'),
        s_ = new kr.Yd('@firebase/database'),
        IA = (function () {
          let n = 1;
          return function () {
            return n++;
          };
        })(),
        RA = function (n) {
          const e = (0, je.dS)(n),
            t = new je.gQ();
          t.update(e);
          const i = t.digest();
          return je.US.encodeByteArray(i);
        },
        ib = function (...n) {
          let e = '';
          for (let t = 0; t < n.length; t++) {
            const i = n[t];
            Array.isArray(i) || (i && 'object' == typeof i && 'number' == typeof i.length)
              ? (e += ib.apply(null, i))
              : (e += 'object' == typeof i ? (0, je.Pz)(i) : i),
              (e += ' ');
          }
          return e;
        };
      let om = null,
        kA = !0;
      const OA = function (n, e) {
          (0, je.hu)(!e || !0 === n || !1 === n, "Can't turn on custom loggers persistently."),
            !0 === n
              ? ((s_.logLevel = kr.in.VERBOSE), (om = s_.log.bind(s_)), e && vM.set('logging_enabled', !0))
              : 'function' == typeof n
              ? (om = n)
              : ((om = null), vM.remove('logging_enabled'));
        },
        Ia = function (...n) {
          if ((!0 === kA && ((kA = !1), null === om && !0 === vM.get('logging_enabled') && OA(!0)), om)) {
            const e = ib.apply(null, n);
            om(e);
          }
        },
        rb = function (n) {
          return function (...e) {
            Ia(n, ...e);
          };
        },
        bM = function (...n) {
          const e = 'FIREBASE INTERNAL ERROR: ' + ib(...n);
          s_.error(e);
        },
        Pd = function (...n) {
          const e = `FIREBASE FATAL ERROR: ${ib(...n)}`;
          throw (s_.error(e), new Error(e));
        },
        Rl = function (...n) {
          const e = 'FIREBASE WARNING: ' + ib(...n);
          s_.warn(e);
        },
        sE = function (n) {
          return 'number' == typeof n && (n != n || n === Number.POSITIVE_INFINITY || n === Number.NEGATIVE_INFINITY);
        },
        Mh = '[MIN_NAME]',
        Fd = '[MAX_NAME]',
        am = function (n, e) {
          if (n === e) return 0;
          if (n === Mh || e === Fd) return -1;
          if (e === Mh || n === Fd) return 1;
          {
            const t = oE(n),
              i = oE(e);
            return null !== t
              ? null !== i
                ? t - i == 0
                  ? n.length - e.length
                  : t - i
                : -1
              : null !== i
              ? 1
              : n < e
              ? -1
              : 1;
          }
        },
        hR = function (n, e) {
          return n === e ? 0 : n < e ? -1 : 1;
        },
        sb = function (n, e) {
          if (e && n in e) return e[n];
          throw new Error('Missing required key (' + n + ') in object: ' + (0, je.Pz)(e));
        },
        CM = function (n) {
          if ('object' != typeof n || null === n) return (0, je.Pz)(n);
          const e = [];
          for (const i in n) e.push(i);
          e.sort();
          let t = '{';
          for (let i = 0; i < e.length; i++)
            0 !== i && (t += ','), (t += (0, je.Pz)(e[i])), (t += ':'), (t += CM(n[e[i]]));
          return (t += '}'), t;
        },
        PA = function (n, e) {
          const t = n.length;
          if (t <= e) return [n];
          const i = [];
          for (let o = 0; o < t; o += e) i.push(n.substring(o, o + e > t ? t : o + e));
          return i;
        };
      function Ra(n, e) {
        for (const t in n) n.hasOwnProperty(t) && e(t, n[t]);
      }
      const FA = function (n) {
          (0, je.hu)(!sE(n), 'Invalid JSON number');
          const i = 1023;
          let o, c, p, C, I;
          0 === n
            ? ((c = 0), (p = 0), (o = 1 / n == -1 / 0 ? 1 : 0))
            : ((o = n < 0),
              (n = Math.abs(n)) >= Math.pow(2, 1 - i)
                ? ((C = Math.min(Math.floor(Math.log(n) / Math.LN2), i)),
                  (c = C + i),
                  (p = Math.round(n * Math.pow(2, 52 - C) - Math.pow(2, 52))))
                : ((c = 0), (p = Math.round(n / Math.pow(2, -1074)))));
          const U = [];
          for (I = 52; I; I -= 1) U.push(p % 2 ? 1 : 0), (p = Math.floor(p / 2));
          for (I = 11; I; I -= 1) U.push(c % 2 ? 1 : 0), (c = Math.floor(c / 2));
          U.push(o ? 1 : 0), U.reverse();
          const se = U.join('');
          let xe = '';
          for (I = 0; I < 64; I += 8) {
            let rt = parseInt(se.substr(I, 8), 2).toString(16);
            1 === rt.length && (rt = '0' + rt), (xe += rt);
          }
          return xe.toLowerCase();
        },
        gR = new RegExp('^-?(0*)\\d{1,10}$'),
        LA = -2147483648,
        wM = 2147483647,
        oE = function (n) {
          if (gR.test(n)) {
            const e = Number(n);
            if (e >= LA && e <= wM) return e;
          }
          return null;
        },
        o_ = function (n) {
          try {
            n();
          } catch (e) {
            setTimeout(() => {
              throw (Rl('Exception was thrown by user callback.', e.stack || ''), e);
            }, Math.floor(0));
          }
        },
        ob = function (n, e) {
          const t = setTimeout(n, e);
          return 'object' == typeof t && t.unref && t.unref(), t;
        };
      class yR {
        constructor(e, t) {
          (this.appName_ = e),
            (this.appCheckProvider = t),
            (this.appCheck = null == t ? void 0 : t.getImmediate({ optional: !0 })),
            this.appCheck || null == t || t.get().then((i) => (this.appCheck = i));
        }
        getToken(e) {
          return this.appCheck
            ? this.appCheck.getToken(e)
            : new Promise((t, i) => {
                setTimeout(() => {
                  this.appCheck ? this.getToken(e).then(t, i) : t(null);
                }, 0);
              });
        }
        addTokenChangeListener(e) {
          var t;
          null === (t = this.appCheckProvider) || void 0 === t || t.get().then((i) => i.addTokenListener(e));
        }
        notifyForInvalidToken() {
          Rl(
            `Provided AppCheck credentials for the app named "${this.appName_}" are invalid. This usually indicates your app was not initialized correctly.`
          );
        }
      }
      class vR {
        constructor(e, t, i) {
          (this.appName_ = e),
            (this.firebaseOptions_ = t),
            (this.authProvider_ = i),
            (this.auth_ = null),
            (this.auth_ = i.getImmediate({ optional: !0 })),
            this.auth_ || i.onInit((o) => (this.auth_ = o));
        }
        getToken(e) {
          return this.auth_
            ? this.auth_
                .getToken(e)
                .catch((t) =>
                  t && 'auth/token-not-initialized' === t.code
                    ? (Ia('Got auth/token-not-initialized error.  Treating as null token.'), null)
                    : Promise.reject(t)
                )
            : new Promise((t, i) => {
                setTimeout(() => {
                  this.auth_ ? this.getToken(e).then(t, i) : t(null);
                }, 0);
              });
        }
        addTokenChangeListener(e) {
          this.auth_
            ? this.auth_.addAuthTokenListener(e)
            : this.authProvider_.get().then((t) => t.addAuthTokenListener(e));
        }
        removeTokenChangeListener(e) {
          this.authProvider_.get().then((t) => t.removeAuthTokenListener(e));
        }
        notifyForInvalidToken() {
          let e =
            'Provided authentication credentials for the app named "' +
            this.appName_ +
            '" are invalid. This usually indicates your app was not initialized correctly. ';
          (e +=
            'credential' in this.firebaseOptions_
              ? 'Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
              : 'serviceAccount' in this.firebaseOptions_
              ? 'Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.'
              : 'Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.'),
            Rl(e);
        }
      }
      let ab = (() => {
        class n {
          constructor(t) {
            this.accessToken = t;
          }
          getToken(t) {
            return Promise.resolve({ accessToken: this.accessToken });
          }
          addTokenChangeListener(t) {
            t(this.accessToken);
          }
          removeTokenChangeListener(t) {}
          notifyForInvalidToken() {}
        }
        return (n.OWNER = 'owner'), n;
      })();
      const jA = /(console\.firebase|firebase-console-\w+\.corp|firebase\.corp)\.google\.com/,
        GA = 'websocket',
        zA = 'long_polling';
      class xM {
        constructor(e, t, i, o, c = !1, p = '', C = !1) {
          (this.secure = t),
            (this.namespace = i),
            (this.webSocketOnly = o),
            (this.nodeAdmin = c),
            (this.persistenceKey = p),
            (this.includeNamespaceInQueryParams = C),
            (this._host = e.toLowerCase()),
            (this._domain = this._host.substr(this._host.indexOf('.') + 1)),
            (this.internalHost = sm.get('host:' + e) || this._host);
        }
        isCacheableHost() {
          return 's-' === this.internalHost.substr(0, 2);
        }
        isCustomHost() {
          return 'firebaseio.com' !== this._domain && 'firebaseio-demo.com' !== this._domain;
        }
        get host() {
          return this._host;
        }
        set host(e) {
          e !== this.internalHost &&
            ((this.internalHost = e), this.isCacheableHost() && sm.set('host:' + this._host, this.internalHost));
        }
        toString() {
          let e = this.toURLString();
          return this.persistenceKey && (e += '<' + this.persistenceKey + '>'), e;
        }
        toURLString() {
          return `${this.secure ? 'https://' : 'http://'}${this.host}/${
            this.includeNamespaceInQueryParams ? `?ns=${this.namespace}` : ''
          }`;
        }
      }
      function $A(n, e, t) {
        let i;
        if (
          ((0, je.hu)('string' == typeof e, 'typeof type must == string'),
          (0, je.hu)('object' == typeof t, 'typeof params must == object'),
          e === GA)
        )
          i = (n.secure ? 'wss://' : 'ws://') + n.internalHost + '/.ws?';
        else {
          if (e !== zA) throw new Error('Unknown connection type: ' + e);
          i = (n.secure ? 'https://' : 'http://') + n.internalHost + '/.lp?';
        }
        (function CR(n) {
          return n.host !== n.internalHost || n.isCustomHost() || n.includeNamespaceInQueryParams;
        })(n) && (t.ns = n.namespace);
        const o = [];
        return (
          Ra(t, (c, p) => {
            o.push(c + '=' + p);
          }),
          i + o.join('&')
        );
      }
      class wR {
        constructor() {
          this.counters_ = {};
        }
        incrementCounter(e, t = 1) {
          (0, je.r3)(this.counters_, e) || (this.counters_[e] = 0), (this.counters_[e] += t);
        }
        get() {
          return (0, je.p$)(this.counters_);
        }
      }
      const DM = {},
        MM = {};
      function SM(n) {
        const e = n.toString();
        return DM[e] || (DM[e] = new wR()), DM[e];
      }
      class xR {
        constructor(e) {
          (this.onMessage_ = e),
            (this.pendingResponses = []),
            (this.currentResponseNum = 0),
            (this.closeAfterResponse = -1),
            (this.onClose = null);
        }
        closeAfter(e, t) {
          (this.closeAfterResponse = e),
            (this.onClose = t),
            this.closeAfterResponse < this.currentResponseNum && (this.onClose(), (this.onClose = null));
        }
        handleResponse(e, t) {
          for (this.pendingResponses[e] = t; this.pendingResponses[this.currentResponseNum]; ) {
            const i = this.pendingResponses[this.currentResponseNum];
            delete this.pendingResponses[this.currentResponseNum];
            for (let o = 0; o < i.length; ++o)
              i[o] &&
                o_(() => {
                  this.onMessage_(i[o]);
                });
            if (this.currentResponseNum === this.closeAfterResponse) {
              this.onClose && (this.onClose(), (this.onClose = null));
              break;
            }
            this.currentResponseNum++;
          }
        }
      }
      class a_ {
        constructor(e, t, i, o, c, p, C) {
          (this.connId = e),
            (this.repoInfo = t),
            (this.applicationId = i),
            (this.appCheckToken = o),
            (this.authToken = c),
            (this.transportSessionId = p),
            (this.lastSessionId = C),
            (this.bytesSent = 0),
            (this.bytesReceived = 0),
            (this.everConnected_ = !1),
            (this.log_ = rb(e)),
            (this.stats_ = SM(t)),
            (this.urlFn = (I) => (this.appCheckToken && (I.ac = this.appCheckToken), $A(t, zA, I)));
        }
        open(e, t) {
          (this.curSegmentNum = 0),
            (this.onDisconnect_ = t),
            (this.myPacketOrderer = new xR(e)),
            (this.isClosed_ = !1),
            (this.connectTimeoutTimer_ = setTimeout(() => {
              this.log_('Timed out trying to connect.'), this.onClosed_(), (this.connectTimeoutTimer_ = null);
            }, Math.floor(3e4))),
            (function (n) {
              if ((0, je.Yr)() || 'complete' === document.readyState) n();
              else {
                let e = !1;
                const t = function () {
                  document.body ? e || ((e = !0), n()) : setTimeout(t, Math.floor(10));
                };
                document.addEventListener
                  ? (document.addEventListener('DOMContentLoaded', t, !1), window.addEventListener('load', t, !1))
                  : document.attachEvent &&
                    (document.attachEvent('onreadystatechange', () => {
                      'complete' === document.readyState && t();
                    }),
                    window.attachEvent('onload', t));
              }
            })(() => {
              if (this.isClosed_) return;
              this.scriptTagHolder = new AM(
                (...c) => {
                  const [p, C, I, U, se] = c;
                  if ((this.incrementIncomingBytes_(c), this.scriptTagHolder))
                    if (
                      (this.connectTimeoutTimer_ &&
                        (clearTimeout(this.connectTimeoutTimer_), (this.connectTimeoutTimer_ = null)),
                      (this.everConnected_ = !0),
                      'start' === p)
                    )
                      (this.id = C), (this.password = I);
                    else {
                      if ('close' !== p) throw new Error('Unrecognized command received: ' + p);
                      C
                        ? ((this.scriptTagHolder.sendNewPolls = !1),
                          this.myPacketOrderer.closeAfter(C, () => {
                            this.onClosed_();
                          }))
                        : this.onClosed_();
                    }
                },
                (...c) => {
                  const [p, C] = c;
                  this.incrementIncomingBytes_(c), this.myPacketOrderer.handleResponse(p, C);
                },
                () => {
                  this.onClosed_();
                },
                this.urlFn
              );
              const i = { start: 't' };
              (i.ser = Math.floor(1e8 * Math.random())),
                this.scriptTagHolder.uniqueCallbackIdentifier && (i.cb = this.scriptTagHolder.uniqueCallbackIdentifier),
                (i.v = '5'),
                this.transportSessionId && (i.s = this.transportSessionId),
                this.lastSessionId && (i.ls = this.lastSessionId),
                this.applicationId && (i.p = this.applicationId),
                this.appCheckToken && (i.ac = this.appCheckToken),
                'undefined' != typeof location && location.hostname && jA.test(location.hostname) && (i.r = 'f');
              const o = this.urlFn(i);
              this.log_('Connecting via long-poll to ' + o), this.scriptTagHolder.addTag(o, () => {});
            });
        }
        start() {
          this.scriptTagHolder.startLongPoll(this.id, this.password),
            this.addDisconnectPingFrame(this.id, this.password);
        }
        static forceAllow() {
          a_.forceAllow_ = !0;
        }
        static forceDisallow() {
          a_.forceDisallow_ = !0;
        }
        static isAvailable() {
          return !(
            (0, je.Yr)() ||
            (!a_.forceAllow_ &&
              (a_.forceDisallow_ ||
                'undefined' == typeof document ||
                null == document.createElement ||
                ('object' == typeof window &&
                  window.chrome &&
                  window.chrome.extension &&
                  !/^chrome/.test(window.location.href)) ||
                ('object' == typeof Windows && 'object' == typeof Windows.UI)))
          );
        }
        markConnectionHealthy() {}
        shutdown_() {
          (this.isClosed_ = !0),
            this.scriptTagHolder && (this.scriptTagHolder.close(), (this.scriptTagHolder = null)),
            this.myDisconnFrame && (document.body.removeChild(this.myDisconnFrame), (this.myDisconnFrame = null)),
            this.connectTimeoutTimer_ && (clearTimeout(this.connectTimeoutTimer_), (this.connectTimeoutTimer_ = null));
        }
        onClosed_() {
          this.isClosed_ ||
            (this.log_('Longpoll is closing itself'),
            this.shutdown_(),
            this.onDisconnect_ && (this.onDisconnect_(this.everConnected_), (this.onDisconnect_ = null)));
        }
        close() {
          this.isClosed_ || (this.log_('Longpoll is being closed.'), this.shutdown_());
        }
        send(e) {
          const t = (0, je.Pz)(e);
          (this.bytesSent += t.length), this.stats_.incrementCounter('bytes_sent', t.length);
          const i = (0, je.h$)(t),
            o = PA(i, 1840);
          for (let c = 0; c < o.length; c++)
            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, o.length, o[c]), this.curSegmentNum++;
        }
        addDisconnectPingFrame(e, t) {
          if ((0, je.Yr)()) return;
          this.myDisconnFrame = document.createElement('iframe');
          const i = { dframe: 't' };
          (i.id = e),
            (i.pw = t),
            (this.myDisconnFrame.src = this.urlFn(i)),
            (this.myDisconnFrame.style.display = 'none'),
            document.body.appendChild(this.myDisconnFrame);
        }
        incrementIncomingBytes_(e) {
          const t = (0, je.Pz)(e).length;
          (this.bytesReceived += t), this.stats_.incrementCounter('bytes_received', t);
        }
      }
      class AM {
        constructor(e, t, i, o) {
          if (
            ((this.onDisconnect = i),
            (this.urlFn = o),
            (this.outstandingRequests = new Set()),
            (this.pendingSegs = []),
            (this.currentSerial = Math.floor(1e8 * Math.random())),
            (this.sendNewPolls = !0),
            (0, je.Yr)())
          )
            (this.commandCB = e), (this.onMessageCB = t);
          else {
            (this.uniqueCallbackIdentifier = IA()),
              (window['pLPCommand' + this.uniqueCallbackIdentifier] = e),
              (window['pRTLPCB' + this.uniqueCallbackIdentifier] = t),
              (this.myIFrame = AM.createIFrame_());
            let c = '';
            this.myIFrame.src &&
              'javascript:' === this.myIFrame.src.substr(0, 'javascript:'.length) &&
              (c = '<script>document.domain="' + document.domain + '";</script>');
            const p = '<html><body>' + c + '</body></html>';
            try {
              this.myIFrame.doc.open(), this.myIFrame.doc.write(p), this.myIFrame.doc.close();
            } catch (C) {
              Ia('frame writing exception'), C.stack && Ia(C.stack), Ia(C);
            }
          }
        }
        static createIFrame_() {
          const e = document.createElement('iframe');
          if (((e.style.display = 'none'), !document.body))
            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';
          document.body.appendChild(e);
          try {
            e.contentWindow.document || Ia('No IE domain setting required');
          } catch (t) {
            const i = document.domain;
            e.src = "javascript:void((function(){document.open();document.domain='" + i + "';document.close();})())";
          }
          return (
            e.contentDocument
              ? (e.doc = e.contentDocument)
              : e.contentWindow
              ? (e.doc = e.contentWindow.document)
              : e.document && (e.doc = e.document),
            e
          );
        }
        close() {
          (this.alive = !1),
            this.myIFrame &&
              ((this.myIFrame.doc.body.innerHTML = ''),
              setTimeout(() => {
                null !== this.myIFrame && (document.body.removeChild(this.myIFrame), (this.myIFrame = null));
              }, Math.floor(0)));
          const e = this.onDisconnect;
          e && ((this.onDisconnect = null), e());
        }
        startLongPoll(e, t) {
          for (this.myID = e, this.myPW = t, this.alive = !0; this.newRequest_(); );
        }
        newRequest_() {
          if (
            this.alive &&
            this.sendNewPolls &&
            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)
          ) {
            this.currentSerial++;
            const e = {};
            (e.id = this.myID), (e.pw = this.myPW), (e.ser = this.currentSerial);
            let t = this.urlFn(e),
              i = '',
              o = 0;
            for (; this.pendingSegs.length > 0 && this.pendingSegs[0].d.length + 30 + i.length <= 1870; ) {
              const p = this.pendingSegs.shift();
              (i = i + '&seg' + o + '=' + p.seg + '&ts' + o + '=' + p.ts + '&d' + o + '=' + p.d), o++;
            }
            return (t += i), this.addLongPollTag_(t, this.currentSerial), !0;
          }
          return !1;
        }
        enqueueSegment(e, t, i) {
          this.pendingSegs.push({ seg: e, ts: t, d: i }), this.alive && this.newRequest_();
        }
        addLongPollTag_(e, t) {
          this.outstandingRequests.add(t);
          const i = () => {
              this.outstandingRequests.delete(t), this.newRequest_();
            },
            o = setTimeout(i, Math.floor(25e3));
          this.addTag(e, () => {
            clearTimeout(o), i();
          });
        }
        addTag(e, t) {
          (0, je.Yr)()
            ? this.doNodeLongPoll(e, t)
            : setTimeout(() => {
                try {
                  if (!this.sendNewPolls) return;
                  const i = this.myIFrame.doc.createElement('script');
                  (i.type = 'text/javascript'),
                    (i.async = !0),
                    (i.src = e),
                    (i.onload = i.onreadystatechange =
                      function () {
                        const o = i.readyState;
                        (!o || 'loaded' === o || 'complete' === o) &&
                          ((i.onload = i.onreadystatechange = null), i.parentNode && i.parentNode.removeChild(i), t());
                      }),
                    (i.onerror = () => {
                      Ia('Long-poll script failed to load: ' + e), (this.sendNewPolls = !1), this.close();
                    }),
                    this.myIFrame.doc.body.appendChild(i);
                } catch (i) {}
              }, Math.floor(1));
        }
      }
      let lb = null;
      'undefined' != typeof MozWebSocket ? (lb = MozWebSocket) : 'undefined' != typeof WebSocket && (lb = WebSocket);
      let cb = (() => {
        class n {
          constructor(t, i, o, c, p, C, I) {
            (this.connId = t),
              (this.applicationId = o),
              (this.appCheckToken = c),
              (this.authToken = p),
              (this.keepaliveTimer = null),
              (this.frames = null),
              (this.totalFrames = 0),
              (this.bytesSent = 0),
              (this.bytesReceived = 0),
              (this.log_ = rb(this.connId)),
              (this.stats_ = SM(i)),
              (this.connURL = n.connectionURL_(i, C, I, c)),
              (this.nodeAdmin = i.nodeAdmin);
          }
          static connectionURL_(t, i, o, c) {
            const p = { v: '5' };
            return (
              !(0, je.Yr)() &&
                'undefined' != typeof location &&
                location.hostname &&
                jA.test(location.hostname) &&
                (p.r = 'f'),
              i && (p.s = i),
              o && (p.ls = o),
              c && (p.ac = c),
              $A(t, GA, p)
            );
          }
          open(t, i) {
            (this.onDisconnect = i),
              (this.onMessage = t),
              this.log_('Websocket connecting to ' + this.connURL),
              (this.everConnected_ = !1),
              sm.set('previous_websocket_failure', !0);
            try {
              if ((0, je.Yr)()) {
                const c = {
                  headers: {
                    'User-Agent': `Firebase/5/${yM}/${process.platform}/${this.nodeAdmin ? 'AdminNode' : 'Node'}`,
                    'X-Firebase-GMPID': this.applicationId || '',
                  },
                };
                this.authToken && (c.headers.Authorization = `Bearer ${this.authToken}`),
                  this.appCheckToken && (c.headers['X-Firebase-AppCheck'] = this.appCheckToken);
                const p = process.env,
                  C =
                    0 === this.connURL.indexOf('wss://')
                      ? p.HTTPS_PROXY || p.https_proxy
                      : p.HTTP_PROXY || p.http_proxy;
                C && (c.proxy = { origin: C }), (this.mySock = new lb(this.connURL, [], c));
              } else
                this.mySock = new lb(this.connURL, [], {
                  headers: {
                    'X-Firebase-GMPID': this.applicationId || '',
                    'X-Firebase-AppCheck': this.appCheckToken || '',
                  },
                });
            } catch (o) {
              this.log_('Error instantiating WebSocket.');
              const c = o.message || o.data;
              return c && this.log_(c), void this.onClosed_();
            }
            (this.mySock.onopen = () => {
              this.log_('Websocket connected.'), (this.everConnected_ = !0);
            }),
              (this.mySock.onclose = () => {
                this.log_('Websocket connection was disconnected.'), (this.mySock = null), this.onClosed_();
              }),
              (this.mySock.onmessage = (o) => {
                this.handleIncomingFrame(o);
              }),
              (this.mySock.onerror = (o) => {
                this.log_('WebSocket error.  Closing connection.');
                const c = o.message || o.data;
                c && this.log_(c), this.onClosed_();
              });
          }
          start() {}
          static forceDisallow() {
            n.forceDisallow_ = !0;
          }
          static isAvailable() {
            let t = !1;
            if ('undefined' != typeof navigator && navigator.userAgent) {
              const o = navigator.userAgent.match(/Android ([0-9]{0,}\.[0-9]{0,})/);
              o && o.length > 1 && parseFloat(o[1]) < 4.4 && (t = !0);
            }
            return !t && null !== lb && !n.forceDisallow_;
          }
          static previouslyFailed() {
            return sm.isInMemoryStorage || !0 === sm.get('previous_websocket_failure');
          }
          markConnectionHealthy() {
            sm.remove('previous_websocket_failure');
          }
          appendFrame_(t) {
            if ((this.frames.push(t), this.frames.length === this.totalFrames)) {
              const i = this.frames.join('');
              this.frames = null;
              const o = (0, je.cI)(i);
              this.onMessage(o);
            }
          }
          handleNewFrameCount_(t) {
            (this.totalFrames = t), (this.frames = []);
          }
          extractFrameCount_(t) {
            if (((0, je.hu)(null === this.frames, 'We already have a frame buffer'), t.length <= 6)) {
              const i = Number(t);
              if (!isNaN(i)) return this.handleNewFrameCount_(i), null;
            }
            return this.handleNewFrameCount_(1), t;
          }
          handleIncomingFrame(t) {
            if (null === this.mySock) return;
            const i = t.data;
            if (
              ((this.bytesReceived += i.length),
              this.stats_.incrementCounter('bytes_received', i.length),
              this.resetKeepAlive(),
              null !== this.frames)
            )
              this.appendFrame_(i);
            else {
              const o = this.extractFrameCount_(i);
              null !== o && this.appendFrame_(o);
            }
          }
          send(t) {
            this.resetKeepAlive();
            const i = (0, je.Pz)(t);
            (this.bytesSent += i.length), this.stats_.incrementCounter('bytes_sent', i.length);
            const o = PA(i, 16384);
            o.length > 1 && this.sendString_(String(o.length));
            for (let c = 0; c < o.length; c++) this.sendString_(o[c]);
          }
          shutdown_() {
            (this.isClosed_ = !0),
              this.keepaliveTimer && (clearInterval(this.keepaliveTimer), (this.keepaliveTimer = null)),
              this.mySock && (this.mySock.close(), (this.mySock = null));
          }
          onClosed_() {
            this.isClosed_ ||
              (this.log_('WebSocket is closing itself'),
              this.shutdown_(),
              this.onDisconnect && (this.onDisconnect(this.everConnected_), (this.onDisconnect = null)));
          }
          close() {
            this.isClosed_ || (this.log_('WebSocket is being closed'), this.shutdown_());
          }
          resetKeepAlive() {
            clearInterval(this.keepaliveTimer),
              (this.keepaliveTimer = setInterval(() => {
                this.mySock && this.sendString_('0'), this.resetKeepAlive();
              }, Math.floor(45e3)));
          }
          sendString_(t) {
            try {
              this.mySock.send(t);
            } catch (i) {
              this.log_('Exception thrown from WebSocket.send():', i.message || i.data, 'Closing connection.'),
                setTimeout(this.onClosed_.bind(this), 0);
            }
          }
        }
        return (n.responsesRequiredToBeHealthy = 2), (n.healthyTimeout = 3e4), n;
      })();
      class TM {
        constructor(e) {
          this.initTransports_(e);
        }
        static get ALL_TRANSPORTS() {
          return [a_, cb];
        }
        initTransports_(e) {
          const t = cb && cb.isAvailable();
          let i = t && !cb.previouslyFailed();
          if (
            (e.webSocketOnly &&
              (t || Rl("wss:// URL used, but browser isn't known to support websockets.  Trying anyway."), (i = !0)),
            i)
          )
            this.transports_ = [cb];
          else {
            const o = (this.transports_ = []);
            for (const c of TM.ALL_TRANSPORTS) c && c.isAvailable() && o.push(c);
          }
        }
        initialTransport() {
          if (this.transports_.length > 0) return this.transports_[0];
          throw new Error('No transports available');
        }
        upgradeTransport() {
          return this.transports_.length > 1 ? this.transports_[1] : null;
        }
      }
      class rT {
        constructor(e, t, i, o, c, p, C, I, U, se) {
          (this.id = e),
            (this.repoInfo_ = t),
            (this.applicationId_ = i),
            (this.appCheckToken_ = o),
            (this.authToken_ = c),
            (this.onMessage_ = p),
            (this.onReady_ = C),
            (this.onDisconnect_ = I),
            (this.onKill_ = U),
            (this.lastSessionId = se),
            (this.connectionCount = 0),
            (this.pendingDataMessages = []),
            (this.state_ = 0),
            (this.log_ = rb('c:' + this.id + ':')),
            (this.transportManager_ = new TM(t)),
            this.log_('Connection created'),
            this.start_();
        }
        start_() {
          const e = this.transportManager_.initialTransport();
          (this.conn_ = new e(
            this.nextTransportId_(),
            this.repoInfo_,
            this.applicationId_,
            this.appCheckToken_,
            this.authToken_,
            null,
            this.lastSessionId
          )),
            (this.primaryResponsesRequired_ = e.responsesRequiredToBeHealthy || 0);
          const t = this.connReceiver_(this.conn_),
            i = this.disconnReceiver_(this.conn_);
          (this.tx_ = this.conn_),
            (this.rx_ = this.conn_),
            (this.secondaryConn_ = null),
            (this.isHealthy_ = !1),
            setTimeout(() => {
              this.conn_ && this.conn_.open(t, i);
            }, Math.floor(0));
          const o = e.healthyTimeout || 0;
          o > 0 &&
            (this.healthyTimeout_ = ob(() => {
              (this.healthyTimeout_ = null),
                this.isHealthy_ ||
                  (this.conn_ && this.conn_.bytesReceived > 102400
                    ? (this.log_(
                        'Connection exceeded healthy timeout but has received ' +
                          this.conn_.bytesReceived +
                          ' bytes.  Marking connection healthy.'
                      ),
                      (this.isHealthy_ = !0),
                      this.conn_.markConnectionHealthy())
                    : this.conn_ && this.conn_.bytesSent > 10240
                    ? this.log_(
                        'Connection exceeded healthy timeout but has sent ' +
                          this.conn_.bytesSent +
                          ' bytes.  Leaving connection alive.'
                      )
                    : (this.log_('Closing unhealthy connection after timeout.'), this.close()));
            }, Math.floor(o)));
        }
        nextTransportId_() {
          return 'c:' + this.id + ':' + this.connectionCount++;
        }
        disconnReceiver_(e) {
          return (t) => {
            e === this.conn_
              ? this.onConnectionLost_(t)
              : e === this.secondaryConn_
              ? (this.log_('Secondary connection lost.'), this.onSecondaryConnectionLost_())
              : this.log_('closing an old connection');
          };
        }
        connReceiver_(e) {
          return (t) => {
            2 !== this.state_ &&
              (e === this.rx_
                ? this.onPrimaryMessageReceived_(t)
                : e === this.secondaryConn_
                ? this.onSecondaryMessageReceived_(t)
                : this.log_('message on old connection'));
          };
        }
        sendRequest(e) {
          this.sendData_({ t: 'd', d: e });
        }
        tryCleanupConnection() {
          this.tx_ === this.secondaryConn_ &&
            this.rx_ === this.secondaryConn_ &&
            (this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId),
            (this.conn_ = this.secondaryConn_),
            (this.secondaryConn_ = null));
        }
        onSecondaryControl_(e) {
          if ('t' in e) {
            const t = e.t;
            'a' === t
              ? this.upgradeIfSecondaryHealthy_()
              : 'r' === t
              ? (this.log_('Got a reset on secondary, closing it'),
                this.secondaryConn_.close(),
                (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) && this.close())
              : 'o' === t &&
                (this.log_('got pong on secondary.'),
                this.secondaryResponsesRequired_--,
                this.upgradeIfSecondaryHealthy_());
          }
        }
        onSecondaryMessageReceived_(e) {
          const t = sb('t', e),
            i = sb('d', e);
          if ('c' === t) this.onSecondaryControl_(i);
          else {
            if ('d' !== t) throw new Error('Unknown protocol layer: ' + t);
            this.pendingDataMessages.push(i);
          }
        }
        upgradeIfSecondaryHealthy_() {
          this.secondaryResponsesRequired_ <= 0
            ? (this.log_('Secondary connection is healthy.'),
              (this.isHealthy_ = !0),
              this.secondaryConn_.markConnectionHealthy(),
              this.proceedWithUpgrade_())
            : (this.log_('sending ping on secondary.'), this.secondaryConn_.send({ t: 'c', d: { t: 'p', d: {} } }));
        }
        proceedWithUpgrade_() {
          this.secondaryConn_.start(),
            this.log_('sending client ack on secondary'),
            this.secondaryConn_.send({ t: 'c', d: { t: 'a', d: {} } }),
            this.log_('Ending transmission on primary'),
            this.conn_.send({ t: 'c', d: { t: 'n', d: {} } }),
            (this.tx_ = this.secondaryConn_),
            this.tryCleanupConnection();
        }
        onPrimaryMessageReceived_(e) {
          const t = sb('t', e),
            i = sb('d', e);
          'c' === t ? this.onControl_(i) : 'd' === t && this.onDataMessage_(i);
        }
        onDataMessage_(e) {
          this.onPrimaryResponse_(), this.onMessage_(e);
        }
        onPrimaryResponse_() {
          this.isHealthy_ ||
            (this.primaryResponsesRequired_--,
            this.primaryResponsesRequired_ <= 0 &&
              (this.log_('Primary connection is healthy.'),
              (this.isHealthy_ = !0),
              this.conn_.markConnectionHealthy()));
        }
        onControl_(e) {
          const t = sb('t', e);
          if ('d' in e) {
            const i = e.d;
            if ('h' === t) this.onHandshake_(i);
            else if ('n' === t) {
              this.log_('recvd end transmission on primary'), (this.rx_ = this.secondaryConn_);
              for (let o = 0; o < this.pendingDataMessages.length; ++o)
                this.onDataMessage_(this.pendingDataMessages[o]);
              (this.pendingDataMessages = []), this.tryCleanupConnection();
            } else
              's' === t
                ? this.onConnectionShutdown_(i)
                : 'r' === t
                ? this.onReset_(i)
                : 'e' === t
                ? bM('Server Error: ' + i)
                : 'o' === t
                ? (this.log_('got pong on primary.'), this.onPrimaryResponse_(), this.sendPingOnPrimaryIfNecessary_())
                : bM('Unknown control packet command: ' + t);
          }
        }
        onHandshake_(e) {
          const t = e.ts,
            i = e.v,
            o = e.h;
          (this.sessionId = e.s),
            (this.repoInfo_.host = o),
            0 === this.state_ &&
              (this.conn_.start(),
              this.onConnectionEstablished_(this.conn_, t),
              '5' !== i && Rl('Protocol version mismatch detected'),
              this.tryStartUpgrade_());
        }
        tryStartUpgrade_() {
          const e = this.transportManager_.upgradeTransport();
          e && this.startUpgrade_(e);
        }
        startUpgrade_(e) {
          (this.secondaryConn_ = new e(
            this.nextTransportId_(),
            this.repoInfo_,
            this.applicationId_,
            this.appCheckToken_,
            this.authToken_,
            this.sessionId
          )),
            (this.secondaryResponsesRequired_ = e.responsesRequiredToBeHealthy || 0);
          const t = this.connReceiver_(this.secondaryConn_),
            i = this.disconnReceiver_(this.secondaryConn_);
          this.secondaryConn_.open(t, i),
            ob(() => {
              this.secondaryConn_ && (this.log_('Timed out trying to upgrade.'), this.secondaryConn_.close());
            }, Math.floor(6e4));
        }
        onReset_(e) {
          this.log_('Reset packet received.  New host: ' + e),
            (this.repoInfo_.host = e),
            1 === this.state_ ? this.close() : (this.closeConnections_(), this.start_());
        }
        onConnectionEstablished_(e, t) {
          this.log_('Realtime connection established.'),
            (this.conn_ = e),
            (this.state_ = 1),
            this.onReady_ && (this.onReady_(t, this.sessionId), (this.onReady_ = null)),
            0 === this.primaryResponsesRequired_
              ? (this.log_('Primary connection is healthy.'), (this.isHealthy_ = !0))
              : ob(() => {
                  this.sendPingOnPrimaryIfNecessary_();
                }, Math.floor(5e3));
        }
        sendPingOnPrimaryIfNecessary_() {
          !this.isHealthy_ &&
            1 === this.state_ &&
            (this.log_('sending ping on primary.'), this.sendData_({ t: 'c', d: { t: 'p', d: {} } }));
        }
        onSecondaryConnectionLost_() {
          const e = this.secondaryConn_;
          (this.secondaryConn_ = null), (this.tx_ === e || this.rx_ === e) && this.close();
        }
        onConnectionLost_(e) {
          (this.conn_ = null),
            e || 0 !== this.state_
              ? 1 === this.state_ && this.log_('Realtime connection lost.')
              : (this.log_('Realtime connection failed.'),
                this.repoInfo_.isCacheableHost() &&
                  (sm.remove('host:' + this.repoInfo_.host), (this.repoInfo_.internalHost = this.repoInfo_.host))),
            this.close();
        }
        onConnectionShutdown_(e) {
          this.log_('Connection shutdown command received. Shutting down...'),
            this.onKill_ && (this.onKill_(e), (this.onKill_ = null)),
            (this.onDisconnect_ = null),
            this.close();
        }
        sendData_(e) {
          if (1 !== this.state_) throw 'Connection is not connected';
          this.tx_.send(e);
        }
        close() {
          2 !== this.state_ &&
            (this.log_('Closing realtime connection.'),
            (this.state_ = 2),
            this.closeConnections_(),
            this.onDisconnect_ && (this.onDisconnect_(), (this.onDisconnect_ = null)));
        }
        closeConnections_() {
          this.log_('Shutting down all connections'),
            this.conn_ && (this.conn_.close(), (this.conn_ = null)),
            this.secondaryConn_ && (this.secondaryConn_.close(), (this.secondaryConn_ = null)),
            this.healthyTimeout_ && (clearTimeout(this.healthyTimeout_), (this.healthyTimeout_ = null));
        }
      }
      class sT {
        put(e, t, i, o) {}
        merge(e, t, i, o) {}
        refreshAuthToken(e) {}
        refreshAppCheckToken(e) {}
        onDisconnectPut(e, t, i) {}
        onDisconnectMerge(e, t, i) {}
        onDisconnectCancel(e, t) {}
        reportStats(e) {}
      }
      class oT {
        constructor(e) {
          (this.allowedEvents_ = e),
            (this.listeners_ = {}),
            (0, je.hu)(Array.isArray(e) && e.length > 0, 'Requires a non-empty array');
        }
        trigger(e, ...t) {
          if (Array.isArray(this.listeners_[e])) {
            const i = [...this.listeners_[e]];
            for (let o = 0; o < i.length; o++) i[o].callback.apply(i[o].context, t);
          }
        }
        on(e, t, i) {
          this.validateEventType_(e),
            (this.listeners_[e] = this.listeners_[e] || []),
            this.listeners_[e].push({ callback: t, context: i });
          const o = this.getInitialEvent(e);
          o && t.apply(i, o);
        }
        off(e, t, i) {
          this.validateEventType_(e);
          const o = this.listeners_[e] || [];
          for (let c = 0; c < o.length; c++)
            if (o[c].callback === t && (!i || i === o[c].context)) return void o.splice(c, 1);
        }
        validateEventType_(e) {
          (0, je.hu)(
            this.allowedEvents_.find((t) => t === e),
            'Unknown event: ' + e
          );
        }
      }
      class lE extends oT {
        constructor() {
          super(['online']),
            (this.online_ = !0),
            'undefined' != typeof window &&
              void 0 !== window.addEventListener &&
              !(0, je.uI)() &&
              (window.addEventListener(
                'online',
                () => {
                  this.online_ || ((this.online_ = !0), this.trigger('online', !0));
                },
                !1
              ),
              window.addEventListener(
                'offline',
                () => {
                  this.online_ && ((this.online_ = !1), this.trigger('online', !1));
                },
                !1
              ));
        }
        static getInstance() {
          return new lE();
        }
        getInitialEvent(e) {
          return (0, je.hu)('online' === e, 'Unknown event type: ' + e), [this.online_];
        }
        currentlyOnline() {
          return this.online_;
        }
      }
      class Jr {
        constructor(e, t) {
          if (void 0 === t) {
            this.pieces_ = e.split('/');
            let i = 0;
            for (let o = 0; o < this.pieces_.length; o++)
              this.pieces_[o].length > 0 && ((this.pieces_[i] = this.pieces_[o]), i++);
            (this.pieces_.length = i), (this.pieceNum_ = 0);
          } else (this.pieces_ = e), (this.pieceNum_ = t);
        }
        toString() {
          let e = '';
          for (let t = this.pieceNum_; t < this.pieces_.length; t++)
            '' !== this.pieces_[t] && (e += '/' + this.pieces_[t]);
          return e || '/';
        }
      }
      function Lr() {
        return new Jr('');
      }
      function sr(n) {
        return n.pieceNum_ >= n.pieces_.length ? null : n.pieces_[n.pieceNum_];
      }
      function Cf(n) {
        return n.pieces_.length - n.pieceNum_;
      }
      function Ts(n) {
        let e = n.pieceNum_;
        return e < n.pieces_.length && e++, new Jr(n.pieces_, e);
      }
      function RM(n) {
        return n.pieceNum_ < n.pieces_.length ? n.pieces_[n.pieces_.length - 1] : null;
      }
      function ub(n, e = 0) {
        return n.pieces_.slice(n.pieceNum_ + e);
      }
      function cT(n) {
        if (n.pieceNum_ >= n.pieces_.length) return null;
        const e = [];
        for (let t = n.pieceNum_; t < n.pieces_.length - 1; t++) e.push(n.pieces_[t]);
        return new Jr(e, 0);
      }
      function fo(n, e) {
        const t = [];
        for (let i = n.pieceNum_; i < n.pieces_.length; i++) t.push(n.pieces_[i]);
        if (e instanceof Jr) for (let i = e.pieceNum_; i < e.pieces_.length; i++) t.push(e.pieces_[i]);
        else {
          const i = e.split('/');
          for (let o = 0; o < i.length; o++) i[o].length > 0 && t.push(i[o]);
        }
        return new Jr(t, 0);
      }
      function or(n) {
        return n.pieceNum_ >= n.pieces_.length;
      }
      function kl(n, e) {
        const t = sr(n),
          i = sr(e);
        if (null === t) return e;
        if (t === i) return kl(Ts(n), Ts(e));
        throw new Error('INTERNAL ERROR: innerPath (' + e + ') is not within outerPath (' + n + ')');
      }
      function WR(n, e) {
        const t = ub(n, 0),
          i = ub(e, 0);
        for (let o = 0; o < t.length && o < i.length; o++) {
          const c = am(t[o], i[o]);
          if (0 !== c) return c;
        }
        return t.length === i.length ? 0 : t.length < i.length ? -1 : 1;
      }
      function kM(n, e) {
        if (Cf(n) !== Cf(e)) return !1;
        for (let t = n.pieceNum_, i = e.pieceNum_; t <= n.pieces_.length; t++, i++)
          if (n.pieces_[t] !== e.pieces_[i]) return !1;
        return !0;
      }
      function hu(n, e) {
        let t = n.pieceNum_,
          i = e.pieceNum_;
        if (Cf(n) > Cf(e)) return !1;
        for (; t < n.pieces_.length; ) {
          if (n.pieces_[t] !== e.pieces_[i]) return !1;
          ++t, ++i;
        }
        return !0;
      }
      class YR {
        constructor(e, t) {
          (this.errorPrefix_ = t), (this.parts_ = ub(e, 0)), (this.byteLength_ = Math.max(1, this.parts_.length));
          for (let i = 0; i < this.parts_.length; i++) this.byteLength_ += (0, je.ug)(this.parts_[i]);
          uT(this);
        }
      }
      function uT(n) {
        if (n.byteLength_ > 768)
          throw new Error(n.errorPrefix_ + 'has a key path longer than 768 bytes (' + n.byteLength_ + ').');
        if (n.parts_.length > 32)
          throw new Error(
            n.errorPrefix_ +
              'path specified exceeds the maximum depth that can be written (32) or object contains a cycle ' +
              lm(n)
          );
      }
      function lm(n) {
        return 0 === n.parts_.length ? '' : "in property '" + n.parts_.join('.') + "'";
      }
      class OM extends oT {
        constructor() {
          let e, t;
          super(['visible']),
            'undefined' != typeof document &&
              void 0 !== document.addEventListener &&
              (void 0 !== document.hidden
                ? ((t = 'visibilitychange'), (e = 'hidden'))
                : void 0 !== document.mozHidden
                ? ((t = 'mozvisibilitychange'), (e = 'mozHidden'))
                : void 0 !== document.msHidden
                ? ((t = 'msvisibilitychange'), (e = 'msHidden'))
                : void 0 !== document.webkitHidden && ((t = 'webkitvisibilitychange'), (e = 'webkitHidden'))),
            (this.visible_ = !0),
            t &&
              document.addEventListener(
                t,
                () => {
                  const i = !document[e];
                  i !== this.visible_ && ((this.visible_ = i), this.trigger('visible', i));
                },
                !1
              );
        }
        static getInstance() {
          return new OM();
        }
        getInitialEvent(e) {
          return (0, je.hu)('visible' === e, 'Unknown event type: ' + e), [this.visible_];
        }
      }
      const db = 1e3;
      let uE,
        cm = (() => {
          class n extends sT {
            constructor(t, i, o, c, p, C, I, U) {
              if (
                (super(),
                (this.repoInfo_ = t),
                (this.applicationId_ = i),
                (this.onDataUpdate_ = o),
                (this.onConnectStatus_ = c),
                (this.onServerInfoUpdate_ = p),
                (this.authTokenProvider_ = C),
                (this.appCheckTokenProvider_ = I),
                (this.authOverride_ = U),
                (this.id = n.nextPersistentConnectionId_++),
                (this.log_ = rb('p:' + this.id + ':')),
                (this.interruptReasons_ = {}),
                (this.listens = new Map()),
                (this.outstandingPuts_ = []),
                (this.outstandingGets_ = []),
                (this.outstandingPutCount_ = 0),
                (this.outstandingGetCount_ = 0),
                (this.onDisconnectRequestQueue_ = []),
                (this.connected_ = !1),
                (this.reconnectDelay_ = db),
                (this.maxReconnectDelay_ = 3e5),
                (this.securityDebugCallback_ = null),
                (this.lastSessionId = null),
                (this.establishConnectionTimer_ = null),
                (this.visible_ = !1),
                (this.requestCBHash_ = {}),
                (this.requestNumber_ = 0),
                (this.realtime_ = null),
                (this.authToken_ = null),
                (this.appCheckToken_ = null),
                (this.forceTokenRefresh_ = !1),
                (this.invalidAuthTokenCount_ = 0),
                (this.invalidAppCheckTokenCount_ = 0),
                (this.firstConnection_ = !0),
                (this.lastConnectionAttemptTime_ = null),
                (this.lastConnectionEstablishedTime_ = null),
                U && !(0, je.Yr)())
              )
                throw new Error('Auth override specified in options, but not supported on non Node.js platforms');
              OM.getInstance().on('visible', this.onVisible_, this),
                -1 === t.host.indexOf('fblocal') && lE.getInstance().on('online', this.onOnline_, this);
            }
            sendRequest(t, i, o) {
              const c = ++this.requestNumber_,
                p = { r: c, a: t, b: i };
              this.log_((0, je.Pz)(p)),
                (0, je.hu)(this.connected_, "sendRequest call when we're not connected not allowed."),
                this.realtime_.sendRequest(p),
                o && (this.requestCBHash_[c] = o);
            }
            get(t) {
              this.initConnection_();
              const i = new je.BH(),
                o = { p: t._path.toString(), q: t._queryObject },
                c = {
                  action: 'g',
                  request: o,
                  onComplete: (C) => {
                    const I = C.d;
                    'ok' === C.s ? (this.onDataUpdate_(o.p, I, !1, null), i.resolve(I)) : i.reject(I);
                  },
                };
              this.outstandingGets_.push(c), this.outstandingGetCount_++;
              const p = this.outstandingGets_.length - 1;
              return (
                this.connected_ ||
                  setTimeout(() => {
                    const C = this.outstandingGets_[p];
                    void 0 === C ||
                      c !== C ||
                      (delete this.outstandingGets_[p],
                      this.outstandingGetCount_--,
                      0 === this.outstandingGetCount_ && (this.outstandingGets_ = []),
                      this.log_('get ' + p + ' timed out on connection'),
                      i.reject(new Error('Client is offline.')));
                  }, 3e3),
                this.connected_ && this.sendGet_(p),
                i.promise
              );
            }
            listen(t, i, o, c) {
              this.initConnection_();
              const p = t._queryIdentifier,
                C = t._path.toString();
              this.log_('Listen called for ' + C + ' ' + p),
                this.listens.has(C) || this.listens.set(C, new Map()),
                (0, je.hu)(
                  t._queryParams.isDefault() || !t._queryParams.loadsAllData(),
                  'listen() called for non-default but complete query'
                ),
                (0, je.hu)(!this.listens.get(C).has(p), 'listen() called twice for same path/queryId.');
              const I = { onComplete: c, hashFn: i, query: t, tag: o };
              this.listens.get(C).set(p, I), this.connected_ && this.sendListen_(I);
            }
            sendGet_(t) {
              const i = this.outstandingGets_[t];
              this.sendRequest('g', i.request, (o) => {
                delete this.outstandingGets_[t],
                  this.outstandingGetCount_--,
                  0 === this.outstandingGetCount_ && (this.outstandingGets_ = []),
                  i.onComplete && i.onComplete(o);
              });
            }
            sendListen_(t) {
              const i = t.query,
                o = i._path.toString(),
                c = i._queryIdentifier;
              this.log_('Listen on ' + o + ' for ' + c);
              const p = { p: o };
              t.tag && ((p.q = i._queryObject), (p.t = t.tag)),
                (p.h = t.hashFn()),
                this.sendRequest('q', p, (I) => {
                  const U = I.d,
                    se = I.s;
                  n.warnOnListenWarnings_(U, i),
                    (this.listens.get(o) && this.listens.get(o).get(c)) === t &&
                      (this.log_('listen response', I),
                      'ok' !== se && this.removeListen_(o, c),
                      t.onComplete && t.onComplete(se, U));
                });
            }
            static warnOnListenWarnings_(t, i) {
              if (t && 'object' == typeof t && (0, je.r3)(t, 'w')) {
                const o = (0, je.DV)(t, 'w');
                if (Array.isArray(o) && ~o.indexOf('no_index')) {
                  const c = '".indexOn": "' + i._queryParams.getIndex().toString() + '"',
                    p = i._path.toString();
                  Rl(
                    `Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding ${c} at ${p} to your security rules for better performance.`
                  );
                }
              }
            }
            refreshAuthToken(t) {
              (this.authToken_ = t),
                this.log_('Auth token refreshed'),
                this.authToken_ ? this.tryAuth() : this.connected_ && this.sendRequest('unauth', {}, () => {}),
                this.reduceReconnectDelayIfAdminCredential_(t);
            }
            reduceReconnectDelayIfAdminCredential_(t) {
              ((t && 40 === t.length) || (0, je.GJ)(t)) &&
                (this.log_('Admin auth credential detected.  Reducing max reconnect time.'),
                (this.maxReconnectDelay_ = 3e4));
            }
            refreshAppCheckToken(t) {
              (this.appCheckToken_ = t),
                this.log_('App check token refreshed'),
                this.appCheckToken_
                  ? this.tryAppCheck()
                  : this.connected_ && this.sendRequest('unappeck', {}, () => {});
            }
            tryAuth() {
              if (this.connected_ && this.authToken_) {
                const t = this.authToken_,
                  i = (0, je.w9)(t) ? 'auth' : 'gauth',
                  o = { cred: t };
                null === this.authOverride_
                  ? (o.noauth = !0)
                  : 'object' == typeof this.authOverride_ && (o.authvar = this.authOverride_),
                  this.sendRequest(i, o, (c) => {
                    const p = c.s,
                      C = c.d || 'error';
                    this.authToken_ === t &&
                      ('ok' === p ? (this.invalidAuthTokenCount_ = 0) : this.onAuthRevoked_(p, C));
                  });
              }
            }
            tryAppCheck() {
              this.connected_ &&
                this.appCheckToken_ &&
                this.sendRequest('appcheck', { token: this.appCheckToken_ }, (t) => {
                  const i = t.s,
                    o = t.d || 'error';
                  'ok' === i ? (this.invalidAppCheckTokenCount_ = 0) : this.onAppCheckRevoked_(i, o);
                });
            }
            unlisten(t, i) {
              const o = t._path.toString(),
                c = t._queryIdentifier;
              this.log_('Unlisten called for ' + o + ' ' + c),
                (0, je.hu)(
                  t._queryParams.isDefault() || !t._queryParams.loadsAllData(),
                  'unlisten() called for non-default but complete query'
                ),
                this.removeListen_(o, c) && this.connected_ && this.sendUnlisten_(o, c, t._queryObject, i);
            }
            sendUnlisten_(t, i, o, c) {
              this.log_('Unlisten on ' + t + ' for ' + i);
              const p = { p: t };
              c && ((p.q = o), (p.t = c)), this.sendRequest('n', p);
            }
            onDisconnectPut(t, i, o) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_('o', t, i, o)
                  : this.onDisconnectRequestQueue_.push({ pathString: t, action: 'o', data: i, onComplete: o });
            }
            onDisconnectMerge(t, i, o) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_('om', t, i, o)
                  : this.onDisconnectRequestQueue_.push({ pathString: t, action: 'om', data: i, onComplete: o });
            }
            onDisconnectCancel(t, i) {
              this.initConnection_(),
                this.connected_
                  ? this.sendOnDisconnect_('oc', t, null, i)
                  : this.onDisconnectRequestQueue_.push({ pathString: t, action: 'oc', data: null, onComplete: i });
            }
            sendOnDisconnect_(t, i, o, c) {
              const p = { p: i, d: o };
              this.log_('onDisconnect ' + t, p),
                this.sendRequest(t, p, (C) => {
                  c &&
                    setTimeout(() => {
                      c(C.s, C.d);
                    }, Math.floor(0));
                });
            }
            put(t, i, o, c) {
              this.putInternal('p', t, i, o, c);
            }
            merge(t, i, o, c) {
              this.putInternal('m', t, i, o, c);
            }
            putInternal(t, i, o, c, p) {
              this.initConnection_();
              const C = { p: i, d: o };
              void 0 !== p && (C.h = p),
                this.outstandingPuts_.push({ action: t, request: C, onComplete: c }),
                this.outstandingPutCount_++,
                this.connected_ ? this.sendPut_(this.outstandingPuts_.length - 1) : this.log_('Buffering put: ' + i);
            }
            sendPut_(t) {
              const i = this.outstandingPuts_[t].action,
                o = this.outstandingPuts_[t].request,
                c = this.outstandingPuts_[t].onComplete;
              (this.outstandingPuts_[t].queued = this.connected_),
                this.sendRequest(i, o, (p) => {
                  this.log_(i + ' response', p),
                    delete this.outstandingPuts_[t],
                    this.outstandingPutCount_--,
                    0 === this.outstandingPutCount_ && (this.outstandingPuts_ = []),
                    c && c(p.s, p.d);
                });
            }
            reportStats(t) {
              if (this.connected_) {
                const i = { c: t };
                this.log_('reportStats', i),
                  this.sendRequest('s', i, (o) => {
                    'ok' !== o.s && this.log_('reportStats', 'Error sending stats: ' + o.d);
                  });
              }
            }
            onDataMessage_(t) {
              if ('r' in t) {
                this.log_('from server: ' + (0, je.Pz)(t));
                const i = t.r,
                  o = this.requestCBHash_[i];
                o && (delete this.requestCBHash_[i], o(t.b));
              } else {
                if ('error' in t) throw 'A server-side error has occurred: ' + t.error;
                'a' in t && this.onDataPush_(t.a, t.b);
              }
            }
            onDataPush_(t, i) {
              this.log_('handleServerMessage', t, i),
                'd' === t
                  ? this.onDataUpdate_(i.p, i.d, !1, i.t)
                  : 'm' === t
                  ? this.onDataUpdate_(i.p, i.d, !0, i.t)
                  : 'c' === t
                  ? this.onListenRevoked_(i.p, i.q)
                  : 'ac' === t
                  ? this.onAuthRevoked_(i.s, i.d)
                  : 'apc' === t
                  ? this.onAppCheckRevoked_(i.s, i.d)
                  : 'sd' === t
                  ? this.onSecurityDebugPacket_(i)
                  : bM(
                      'Unrecognized action received from server: ' +
                        (0, je.Pz)(t) +
                        '\nAre you using the latest client?'
                    );
            }
            onReady_(t, i) {
              this.log_('connection ready'),
                (this.connected_ = !0),
                (this.lastConnectionEstablishedTime_ = new Date().getTime()),
                this.handleTimestamp_(t),
                (this.lastSessionId = i),
                this.firstConnection_ && this.sendConnectStats_(),
                this.restoreState_(),
                (this.firstConnection_ = !1),
                this.onConnectStatus_(!0);
            }
            scheduleConnect_(t) {
              (0, je.hu)(!this.realtime_, "Scheduling a connect when we're already connected/ing?"),
                this.establishConnectionTimer_ && clearTimeout(this.establishConnectionTimer_),
                (this.establishConnectionTimer_ = setTimeout(() => {
                  (this.establishConnectionTimer_ = null), this.establishConnection_();
                }, Math.floor(t)));
            }
            initConnection_() {
              !this.realtime_ && this.firstConnection_ && this.scheduleConnect_(0);
            }
            onVisible_(t) {
              t &&
                !this.visible_ &&
                this.reconnectDelay_ === this.maxReconnectDelay_ &&
                (this.log_('Window became visible.  Reducing delay.'),
                (this.reconnectDelay_ = db),
                this.realtime_ || this.scheduleConnect_(0)),
                (this.visible_ = t);
            }
            onOnline_(t) {
              t
                ? (this.log_('Browser went online.'),
                  (this.reconnectDelay_ = db),
                  this.realtime_ || this.scheduleConnect_(0))
                : (this.log_('Browser went offline.  Killing connection.'), this.realtime_ && this.realtime_.close());
            }
            onRealtimeDisconnect_() {
              if (
                (this.log_('data client disconnected'),
                (this.connected_ = !1),
                (this.realtime_ = null),
                this.cancelSentTransactions_(),
                (this.requestCBHash_ = {}),
                this.shouldReconnect_())
              ) {
                this.visible_
                  ? this.lastConnectionEstablishedTime_ &&
                    (new Date().getTime() - this.lastConnectionEstablishedTime_ > 3e4 && (this.reconnectDelay_ = db),
                    (this.lastConnectionEstablishedTime_ = null))
                  : (this.log_("Window isn't visible.  Delaying reconnect."),
                    (this.reconnectDelay_ = this.maxReconnectDelay_),
                    (this.lastConnectionAttemptTime_ = new Date().getTime()));
                const t = new Date().getTime() - this.lastConnectionAttemptTime_;
                let i = Math.max(0, this.reconnectDelay_ - t);
                (i = Math.random() * i),
                  this.log_('Trying to reconnect in ' + i + 'ms'),
                  this.scheduleConnect_(i),
                  (this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, 1.3 * this.reconnectDelay_));
              }
              this.onConnectStatus_(!1);
            }
            establishConnection_() {
              var t = this;
              return (0, Jt.Z)(function* () {
                if (t.shouldReconnect_()) {
                  t.log_('Making a connection attempt'),
                    (t.lastConnectionAttemptTime_ = new Date().getTime()),
                    (t.lastConnectionEstablishedTime_ = null);
                  const i = t.onDataMessage_.bind(t),
                    o = t.onReady_.bind(t),
                    c = t.onRealtimeDisconnect_.bind(t),
                    p = t.id + ':' + n.nextConnectionId_++,
                    C = t.lastSessionId;
                  let I = !1,
                    U = null;
                  const se = function () {
                    U ? U.close() : ((I = !0), c());
                  };
                  t.realtime_ = {
                    close: se,
                    sendRequest: function (Ut) {
                      (0, je.hu)(U, "sendRequest call when we're not connected not allowed."), U.sendRequest(Ut);
                    },
                  };
                  const rt = t.forceTokenRefresh_;
                  t.forceTokenRefresh_ = !1;
                  try {
                    const [Ut, qt] = yield Promise.all([
                      t.authTokenProvider_.getToken(rt),
                      t.appCheckTokenProvider_.getToken(rt),
                    ]);
                    I
                      ? Ia('getToken() completed but was canceled')
                      : (Ia('getToken() completed. Creating connection.'),
                        (t.authToken_ = Ut && Ut.accessToken),
                        (t.appCheckToken_ = qt && qt.token),
                        (U = new rT(
                          p,
                          t.repoInfo_,
                          t.applicationId_,
                          t.appCheckToken_,
                          t.authToken_,
                          i,
                          o,
                          c,
                          (Mn) => {
                            Rl(Mn + ' (' + t.repoInfo_.toString() + ')'), t.interrupt('server_kill');
                          },
                          C
                        )));
                  } catch (Ut) {
                    t.log_('Failed to get token: ' + Ut), I || (t.repoInfo_.nodeAdmin && Rl(Ut), se());
                  }
                }
              })();
            }
            interrupt(t) {
              Ia('Interrupting connection for reason: ' + t),
                (this.interruptReasons_[t] = !0),
                this.realtime_
                  ? this.realtime_.close()
                  : (this.establishConnectionTimer_ &&
                      (clearTimeout(this.establishConnectionTimer_), (this.establishConnectionTimer_ = null)),
                    this.connected_ && this.onRealtimeDisconnect_());
            }
            resume(t) {
              Ia('Resuming connection for reason: ' + t),
                delete this.interruptReasons_[t],
                (0, je.xb)(this.interruptReasons_) &&
                  ((this.reconnectDelay_ = db), this.realtime_ || this.scheduleConnect_(0));
            }
            handleTimestamp_(t) {
              const i = t - new Date().getTime();
              this.onServerInfoUpdate_({ serverTimeOffset: i });
            }
            cancelSentTransactions_() {
              for (let t = 0; t < this.outstandingPuts_.length; t++) {
                const i = this.outstandingPuts_[t];
                i &&
                  'h' in i.request &&
                  i.queued &&
                  (i.onComplete && i.onComplete('disconnect'),
                  delete this.outstandingPuts_[t],
                  this.outstandingPutCount_--);
              }
              0 === this.outstandingPutCount_ && (this.outstandingPuts_ = []);
            }
            onListenRevoked_(t, i) {
              let o;
              o = i ? i.map((p) => CM(p)).join('$') : 'default';
              const c = this.removeListen_(t, o);
              c && c.onComplete && c.onComplete('permission_denied');
            }
            removeListen_(t, i) {
              const o = new Jr(t).toString();
              let c;
              if (this.listens.has(o)) {
                const p = this.listens.get(o);
                (c = p.get(i)), p.delete(i), 0 === p.size && this.listens.delete(o);
              } else c = void 0;
              return c;
            }
            onAuthRevoked_(t, i) {
              Ia('Auth token revoked: ' + t + '/' + i),
                (this.authToken_ = null),
                (this.forceTokenRefresh_ = !0),
                this.realtime_.close(),
                ('invalid_token' === t || 'permission_denied' === t) &&
                  (this.invalidAuthTokenCount_++,
                  this.invalidAuthTokenCount_ >= 3 &&
                    ((this.reconnectDelay_ = 3e4), this.authTokenProvider_.notifyForInvalidToken()));
            }
            onAppCheckRevoked_(t, i) {
              Ia('App check token revoked: ' + t + '/' + i),
                (this.appCheckToken_ = null),
                (this.forceTokenRefresh_ = !0),
                ('invalid_token' === t || 'permission_denied' === t) &&
                  (this.invalidAppCheckTokenCount_++,
                  this.invalidAppCheckTokenCount_ >= 3 && this.appCheckTokenProvider_.notifyForInvalidToken());
            }
            onSecurityDebugPacket_(t) {
              this.securityDebugCallback_
                ? this.securityDebugCallback_(t)
                : 'msg' in t && console.log('FIREBASE: ' + t.msg.replace('\n', '\nFIREBASE: '));
            }
            restoreState_() {
              this.tryAuth(), this.tryAppCheck();
              for (const t of this.listens.values()) for (const i of t.values()) this.sendListen_(i);
              for (let t = 0; t < this.outstandingPuts_.length; t++) this.outstandingPuts_[t] && this.sendPut_(t);
              for (; this.onDisconnectRequestQueue_.length; ) {
                const t = this.onDisconnectRequestQueue_.shift();
                this.sendOnDisconnect_(t.action, t.pathString, t.data, t.onComplete);
              }
              for (let t = 0; t < this.outstandingGets_.length; t++) this.outstandingGets_[t] && this.sendGet_(t);
            }
            sendConnectStats_() {
              const t = {};
              let i = 'js';
              (0, je.Yr)() && (i = this.repoInfo_.nodeAdmin ? 'admin_node' : 'node'),
                (t['sdk.' + i + '.' + yM.replace(/\./g, '-')] = 1),
                (0, je.uI)() ? (t['framework.cordova'] = 1) : (0, je.b$)() && (t['framework.reactnative'] = 1),
                this.reportStats(t);
            }
            shouldReconnect_() {
              const t = lE.getInstance().currentlyOnline();
              return (0, je.xb)(this.interruptReasons_) && t;
            }
          }
          return (n.nextPersistentConnectionId_ = 0), (n.nextConnectionId_ = 0), n;
        })();
      class fr {
        constructor(e, t) {
          (this.name = e), (this.node = t);
        }
        static Wrap(e, t) {
          return new fr(e, t);
        }
      }
      class cE {
        getCompare() {
          return this.compare.bind(this);
        }
        indexedValueChanged(e, t) {
          const i = new fr(Mh, e),
            o = new fr(Mh, t);
          return 0 !== this.compare(i, o);
        }
        minPost() {
          return fr.MIN;
        }
      }
      class fT extends cE {
        static get __EMPTY_NODE() {
          return uE;
        }
        static set __EMPTY_NODE(e) {
          uE = e;
        }
        compare(e, t) {
          return am(e.name, t.name);
        }
        isDefinedOn(e) {
          throw (0, je.g5)('KeyIndex.isDefinedOn not expected to be called.');
        }
        indexedValueChanged(e, t) {
          return !1;
        }
        minPost() {
          return fr.MIN;
        }
        maxPost() {
          return new fr(Fd, uE);
        }
        makePost(e, t) {
          return (0, je.hu)('string' == typeof e, 'KeyIndex indexValue must always be a string.'), new fr(e, uE);
        }
        toString() {
          return '.key';
        }
      }
      const Ld = new fT();
      class dE {
        constructor(e, t, i, o, c = null) {
          (this.isReverse_ = o), (this.resultGenerator_ = c), (this.nodeStack_ = []);
          let p = 1;
          for (; !e.isEmpty(); )
            if (((e = e), (p = t ? i(e.key, t) : 1), o && (p *= -1), p < 0)) e = this.isReverse_ ? e.left : e.right;
            else {
              if (0 === p) {
                this.nodeStack_.push(e);
                break;
              }
              this.nodeStack_.push(e), (e = this.isReverse_ ? e.right : e.left);
            }
        }
        getNext() {
          if (0 === this.nodeStack_.length) return null;
          let t,
            e = this.nodeStack_.pop();
          if (
            ((t = this.resultGenerator_ ? this.resultGenerator_(e.key, e.value) : { key: e.key, value: e.value }),
            this.isReverse_)
          )
            for (e = e.left; !e.isEmpty(); ) this.nodeStack_.push(e), (e = e.right);
          else for (e = e.right; !e.isEmpty(); ) this.nodeStack_.push(e), (e = e.left);
          return t;
        }
        hasNext() {
          return this.nodeStack_.length > 0;
        }
        peek() {
          if (0 === this.nodeStack_.length) return null;
          const e = this.nodeStack_[this.nodeStack_.length - 1];
          return this.resultGenerator_ ? this.resultGenerator_(e.key, e.value) : { key: e.key, value: e.value };
        }
      }
      let FM,
        Wu = (() => {
          class n {
            constructor(t, i, o, c, p) {
              (this.key = t),
                (this.value = i),
                (this.color = null != o ? o : n.RED),
                (this.left = null != c ? c : Ql.EMPTY_NODE),
                (this.right = null != p ? p : Ql.EMPTY_NODE);
            }
            copy(t, i, o, c, p) {
              return new n(
                null != t ? t : this.key,
                null != i ? i : this.value,
                null != o ? o : this.color,
                null != c ? c : this.left,
                null != p ? p : this.right
              );
            }
            count() {
              return this.left.count() + 1 + this.right.count();
            }
            isEmpty() {
              return !1;
            }
            inorderTraversal(t) {
              return this.left.inorderTraversal(t) || !!t(this.key, this.value) || this.right.inorderTraversal(t);
            }
            reverseTraversal(t) {
              return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);
            }
            min_() {
              return this.left.isEmpty() ? this : this.left.min_();
            }
            minKey() {
              return this.min_().key;
            }
            maxKey() {
              return this.right.isEmpty() ? this.key : this.right.maxKey();
            }
            insert(t, i, o) {
              let c = this;
              const p = o(t, c.key);
              return (
                (c =
                  p < 0
                    ? c.copy(null, null, null, c.left.insert(t, i, o), null)
                    : 0 === p
                    ? c.copy(null, i, null, null, null)
                    : c.copy(null, null, null, null, c.right.insert(t, i, o))),
                c.fixUp_()
              );
            }
            removeMin_() {
              if (this.left.isEmpty()) return Ql.EMPTY_NODE;
              let t = this;
              return (
                !t.left.isRed_() && !t.left.left.isRed_() && (t = t.moveRedLeft_()),
                (t = t.copy(null, null, null, t.left.removeMin_(), null)),
                t.fixUp_()
              );
            }
            remove(t, i) {
              let o, c;
              if (((o = this), i(t, o.key) < 0))
                !o.left.isEmpty() && !o.left.isRed_() && !o.left.left.isRed_() && (o = o.moveRedLeft_()),
                  (o = o.copy(null, null, null, o.left.remove(t, i), null));
              else {
                if (
                  (o.left.isRed_() && (o = o.rotateRight_()),
                  !o.right.isEmpty() && !o.right.isRed_() && !o.right.left.isRed_() && (o = o.moveRedRight_()),
                  0 === i(t, o.key))
                ) {
                  if (o.right.isEmpty()) return Ql.EMPTY_NODE;
                  (c = o.right.min_()), (o = o.copy(c.key, c.value, null, null, o.right.removeMin_()));
                }
                o = o.copy(null, null, null, null, o.right.remove(t, i));
              }
              return o.fixUp_();
            }
            isRed_() {
              return this.color;
            }
            fixUp_() {
              let t = this;
              return (
                t.right.isRed_() && !t.left.isRed_() && (t = t.rotateLeft_()),
                t.left.isRed_() && t.left.left.isRed_() && (t = t.rotateRight_()),
                t.left.isRed_() && t.right.isRed_() && (t = t.colorFlip_()),
                t
              );
            }
            moveRedLeft_() {
              let t = this.colorFlip_();
              return (
                t.right.left.isRed_() &&
                  ((t = t.copy(null, null, null, null, t.right.rotateRight_())),
                  (t = t.rotateLeft_()),
                  (t = t.colorFlip_())),
                t
              );
            }
            moveRedRight_() {
              let t = this.colorFlip_();
              return t.left.left.isRed_() && ((t = t.rotateRight_()), (t = t.colorFlip_())), t;
            }
            rotateLeft_() {
              const t = this.copy(null, null, n.RED, null, this.right.left);
              return this.right.copy(null, null, this.color, t, null);
            }
            rotateRight_() {
              const t = this.copy(null, null, n.RED, this.left.right, null);
              return this.left.copy(null, null, this.color, null, t);
            }
            colorFlip_() {
              const t = this.left.copy(null, null, !this.left.color, null, null),
                i = this.right.copy(null, null, !this.right.color, null, null);
              return this.copy(null, null, !this.color, t, i);
            }
            checkMaxDepth_() {
              const t = this.check_();
              return Math.pow(2, t) <= this.count() + 1;
            }
            check_() {
              if (this.isRed_() && this.left.isRed_())
                throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');
              if (this.right.isRed_()) throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');
              const t = this.left.check_();
              if (t !== this.right.check_()) throw new Error('Black depths differ');
              return t + (this.isRed_() ? 0 : 1);
            }
          }
          return (n.RED = !0), (n.BLACK = !1), n;
        })();
      class Ql {
        constructor(e, t = Ql.EMPTY_NODE) {
          (this.comparator_ = e), (this.root_ = t);
        }
        insert(e, t) {
          return new Ql(
            this.comparator_,
            this.root_.insert(e, t, this.comparator_).copy(null, null, Wu.BLACK, null, null)
          );
        }
        remove(e) {
          return new Ql(
            this.comparator_,
            this.root_.remove(e, this.comparator_).copy(null, null, Wu.BLACK, null, null)
          );
        }
        get(e) {
          let t,
            i = this.root_;
          for (; !i.isEmpty(); ) {
            if (((t = this.comparator_(e, i.key)), 0 === t)) return i.value;
            t < 0 ? (i = i.left) : t > 0 && (i = i.right);
          }
          return null;
        }
        getPredecessorKey(e) {
          let t,
            i = this.root_,
            o = null;
          for (; !i.isEmpty(); ) {
            if (((t = this.comparator_(e, i.key)), 0 === t)) {
              if (i.left.isEmpty()) return o ? o.key : null;
              for (i = i.left; !i.right.isEmpty(); ) i = i.right;
              return i.key;
            }
            t < 0 ? (i = i.left) : t > 0 && ((o = i), (i = i.right));
          }
          throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');
        }
        isEmpty() {
          return this.root_.isEmpty();
        }
        count() {
          return this.root_.count();
        }
        minKey() {
          return this.root_.minKey();
        }
        maxKey() {
          return this.root_.maxKey();
        }
        inorderTraversal(e) {
          return this.root_.inorderTraversal(e);
        }
        reverseTraversal(e) {
          return this.root_.reverseTraversal(e);
        }
        getIterator(e) {
          return new dE(this.root_, null, this.comparator_, !1, e);
        }
        getIteratorFrom(e, t) {
          return new dE(this.root_, e, this.comparator_, !1, t);
        }
        getReverseIteratorFrom(e, t) {
          return new dE(this.root_, e, this.comparator_, !0, t);
        }
        getReverseIterator(e) {
          return new dE(this.root_, null, this.comparator_, !0, e);
        }
      }
      function nk(n, e) {
        return am(n.name, e.name);
      }
      function PM(n, e) {
        return am(n, e);
      }
      Ql.EMPTY_NODE = new (class tk {
        copy(e, t, i, o, c) {
          return this;
        }
        insert(e, t, i) {
          return new Wu(e, t, null);
        }
        remove(e, t) {
          return this;
        }
        count() {
          return 0;
        }
        isEmpty() {
          return !0;
        }
        inorderTraversal(e) {
          return !1;
        }
        reverseTraversal(e) {
          return !1;
        }
        minKey() {
          return null;
        }
        maxKey() {
          return null;
        }
        check_() {
          return 0;
        }
        isRed_() {
          return !1;
        }
      })();
      const pT = function (n) {
          return 'number' == typeof n ? 'number:' + FA(n) : 'string:' + n;
        },
        mT = function (n) {
          if (n.isLeafNode()) {
            const e = n.val();
            (0, je.hu)(
              'string' == typeof e || 'number' == typeof e || ('object' == typeof e && (0, je.r3)(e, '.sv')),
              'Priority must be a string or number.'
            );
          } else (0, je.hu)(n === FM || n.isEmpty(), 'priority of unexpected type.');
          (0, je.hu)(n === FM || n.getPriority().isEmpty(), "Priority nodes can't have a priority of their own.");
        };
      let gT,
        _T,
        yT,
        l_ = (() => {
          class n {
            constructor(t, i = n.__childrenNodeConstructor.EMPTY_NODE) {
              (this.value_ = t),
                (this.priorityNode_ = i),
                (this.lazyHash_ = null),
                (0, je.hu)(null != this.value_, "LeafNode shouldn't be created with null/undefined value."),
                mT(this.priorityNode_);
            }
            static set __childrenNodeConstructor(t) {
              gT = t;
            }
            static get __childrenNodeConstructor() {
              return gT;
            }
            isLeafNode() {
              return !0;
            }
            getPriority() {
              return this.priorityNode_;
            }
            updatePriority(t) {
              return new n(this.value_, t);
            }
            getImmediateChild(t) {
              return '.priority' === t ? this.priorityNode_ : n.__childrenNodeConstructor.EMPTY_NODE;
            }
            getChild(t) {
              return or(t) ? this : '.priority' === sr(t) ? this.priorityNode_ : n.__childrenNodeConstructor.EMPTY_NODE;
            }
            hasChild() {
              return !1;
            }
            getPredecessorChildName(t, i) {
              return null;
            }
            updateImmediateChild(t, i) {
              return '.priority' === t
                ? this.updatePriority(i)
                : i.isEmpty() && '.priority' !== t
                ? this
                : n.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(t, i).updatePriority(this.priorityNode_);
            }
            updateChild(t, i) {
              const o = sr(t);
              return null === o
                ? i
                : i.isEmpty() && '.priority' !== o
                ? this
                : ((0, je.hu)('.priority' !== o || 1 === Cf(t), '.priority must be the last token in a path'),
                  this.updateImmediateChild(o, n.__childrenNodeConstructor.EMPTY_NODE.updateChild(Ts(t), i)));
            }
            isEmpty() {
              return !1;
            }
            numChildren() {
              return 0;
            }
            forEachChild(t, i) {
              return !1;
            }
            val(t) {
              return t && !this.getPriority().isEmpty()
                ? { '.value': this.getValue(), '.priority': this.getPriority().val() }
                : this.getValue();
            }
            hash() {
              if (null === this.lazyHash_) {
                let t = '';
                this.priorityNode_.isEmpty() || (t += 'priority:' + pT(this.priorityNode_.val()) + ':');
                const i = typeof this.value_;
                (t += i + ':'), (t += 'number' === i ? FA(this.value_) : this.value_), (this.lazyHash_ = RA(t));
              }
              return this.lazyHash_;
            }
            getValue() {
              return this.value_;
            }
            compareTo(t) {
              return t === n.__childrenNodeConstructor.EMPTY_NODE
                ? 1
                : t instanceof n.__childrenNodeConstructor
                ? -1
                : ((0, je.hu)(t.isLeafNode(), 'Unknown node type'), this.compareToLeafNode_(t));
            }
            compareToLeafNode_(t) {
              const i = typeof t.value_,
                o = typeof this.value_,
                c = n.VALUE_TYPE_ORDER.indexOf(i),
                p = n.VALUE_TYPE_ORDER.indexOf(o);
              return (
                (0, je.hu)(c >= 0, 'Unknown leaf type: ' + i),
                (0, je.hu)(p >= 0, 'Unknown leaf type: ' + o),
                c === p ? ('object' === o ? 0 : this.value_ < t.value_ ? -1 : this.value_ === t.value_ ? 0 : 1) : p - c
              );
            }
            withIndex() {
              return this;
            }
            isIndexed() {
              return !0;
            }
            equals(t) {
              if (t === this) return !0;
              if (t.isLeafNode()) {
                const i = t;
                return this.value_ === i.value_ && this.priorityNode_.equals(i.priorityNode_);
              }
              return !1;
            }
          }
          return (n.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string']), n;
        })();
      const zs = new (class ok extends cE {
          compare(e, t) {
            const i = e.node.getPriority(),
              o = t.node.getPriority(),
              c = i.compareTo(o);
            return 0 === c ? am(e.name, t.name) : c;
          }
          isDefinedOn(e) {
            return !e.getPriority().isEmpty();
          }
          indexedValueChanged(e, t) {
            return !e.getPriority().equals(t.getPriority());
          }
          minPost() {
            return fr.MIN;
          }
          maxPost() {
            return new fr(Fd, new l_('[PRIORITY-POST]', yT));
          }
          makePost(e, t) {
            const i = _T(e);
            return new fr(t, new l_('[PRIORITY-POST]', i));
          }
          toString() {
            return '.priority';
          }
        })(),
        ak = Math.log(2);
      class lk {
        constructor(e) {
          (this.count = parseInt(Math.log(e + 1) / ak, 10)), (this.current_ = this.count - 1);
          const o = ((c) => parseInt(Array(this.count + 1).join('1'), 2))();
          this.bits_ = (e + 1) & o;
        }
        nextBitIsOne() {
          const e = !(this.bits_ & (1 << this.current_));
          return this.current_--, e;
        }
      }
      const hE = function (n, e, t, i) {
        n.sort(e);
        const o = function (I, U) {
            const se = U - I;
            let xe, rt;
            if (0 === se) return null;
            if (1 === se) return (xe = n[I]), (rt = t ? t(xe) : xe), new Wu(rt, xe.node, Wu.BLACK, null, null);
            {
              const Ut = parseInt(se / 2, 10) + I,
                qt = o(I, Ut),
                Mn = o(Ut + 1, U);
              return (xe = n[Ut]), (rt = t ? t(xe) : xe), new Wu(rt, xe.node, Wu.BLACK, qt, Mn);
            }
          },
          C = (function (I) {
            let U = null,
              se = null,
              xe = n.length;
            const rt = function (qt, Mn) {
                const Ln = xe - qt,
                  Ki = xe;
                xe -= qt;
                const er = o(Ln + 1, Ki),
                  yr = n[Ln],
                  Ii = t ? t(yr) : yr;
                Ut(new Wu(Ii, yr.node, Mn, null, er));
              },
              Ut = function (qt) {
                U ? ((U.left = qt), (U = qt)) : ((se = qt), (U = qt));
              };
            for (let qt = 0; qt < I.count; ++qt) {
              const Mn = I.nextBitIsOne(),
                Ln = Math.pow(2, I.count - (qt + 1));
              Mn ? rt(Ln, Wu.BLACK) : (rt(Ln, Wu.BLACK), rt(Ln, Wu.RED));
            }
            return se;
          })(new lk(n.length));
        return new Ql(i || e, C);
      };
      let LM;
      const c_ = {};
      class Sh {
        constructor(e, t) {
          (this.indexes_ = e), (this.indexSet_ = t);
        }
        static get Default() {
          return (
            (0, je.hu)(c_ && zs, 'ChildrenNode.ts has not been loaded'),
            (LM = LM || new Sh({ '.priority': c_ }, { '.priority': zs })),
            LM
          );
        }
        get(e) {
          const t = (0, je.DV)(this.indexes_, e);
          if (!t) throw new Error('No index defined for ' + e);
          return t instanceof Ql ? t : null;
        }
        hasIndex(e) {
          return (0, je.r3)(this.indexSet_, e.toString());
        }
        addIndex(e, t) {
          (0, je.hu)(e !== Ld, "KeyIndex always exists and isn't meant to be added to the IndexMap.");
          const i = [];
          let o = !1;
          const c = t.getIterator(fr.Wrap);
          let C,
            p = c.getNext();
          for (; p; ) (o = o || e.isDefinedOn(p.node)), i.push(p), (p = c.getNext());
          C = o ? hE(i, e.getCompare()) : c_;
          const I = e.toString(),
            U = Object.assign({}, this.indexSet_);
          U[I] = e;
          const se = Object.assign({}, this.indexes_);
          return (se[I] = C), new Sh(se, U);
        }
        addToIndexes(e, t) {
          const i = (0, je.UI)(this.indexes_, (o, c) => {
            const p = (0, je.DV)(this.indexSet_, c);
            if (((0, je.hu)(p, 'Missing index implementation for ' + c), o === c_)) {
              if (p.isDefinedOn(e.node)) {
                const C = [],
                  I = t.getIterator(fr.Wrap);
                let U = I.getNext();
                for (; U; ) U.name !== e.name && C.push(U), (U = I.getNext());
                return C.push(e), hE(C, p.getCompare());
              }
              return c_;
            }
            {
              const C = t.get(e.name);
              let I = o;
              return C && (I = I.remove(new fr(e.name, C))), I.insert(e, e.node);
            }
          });
          return new Sh(i, this.indexSet_);
        }
        removeFromIndexes(e, t) {
          const i = (0, je.UI)(this.indexes_, (o) => {
            if (o === c_) return o;
            {
              const c = t.get(e.name);
              return c ? o.remove(new fr(e.name, c)) : o;
            }
          });
          return new Sh(i, this.indexSet_);
        }
      }
      let hb,
        Ui = (() => {
          class n {
            constructor(t, i, o) {
              (this.children_ = t),
                (this.priorityNode_ = i),
                (this.indexMap_ = o),
                (this.lazyHash_ = null),
                this.priorityNode_ && mT(this.priorityNode_),
                this.children_.isEmpty() &&
                  (0, je.hu)(
                    !this.priorityNode_ || this.priorityNode_.isEmpty(),
                    'An empty node cannot have a priority'
                  );
            }
            static get EMPTY_NODE() {
              return hb || (hb = new n(new Ql(PM), null, Sh.Default));
            }
            isLeafNode() {
              return !1;
            }
            getPriority() {
              return this.priorityNode_ || hb;
            }
            updatePriority(t) {
              return this.children_.isEmpty() ? this : new n(this.children_, t, this.indexMap_);
            }
            getImmediateChild(t) {
              if ('.priority' === t) return this.getPriority();
              {
                const i = this.children_.get(t);
                return null === i ? hb : i;
              }
            }
            getChild(t) {
              const i = sr(t);
              return null === i ? this : this.getImmediateChild(i).getChild(Ts(t));
            }
            hasChild(t) {
              return null !== this.children_.get(t);
            }
            updateImmediateChild(t, i) {
              if (((0, je.hu)(i, 'We should always be passing snapshot nodes'), '.priority' === t))
                return this.updatePriority(i);
              {
                const o = new fr(t, i);
                let c, p;
                i.isEmpty()
                  ? ((c = this.children_.remove(t)), (p = this.indexMap_.removeFromIndexes(o, this.children_)))
                  : ((c = this.children_.insert(t, i)), (p = this.indexMap_.addToIndexes(o, this.children_)));
                const C = c.isEmpty() ? hb : this.priorityNode_;
                return new n(c, C, p);
              }
            }
            updateChild(t, i) {
              const o = sr(t);
              if (null === o) return i;
              {
                (0, je.hu)('.priority' !== sr(t) || 1 === Cf(t), '.priority must be the last token in a path');
                const c = this.getImmediateChild(o).updateChild(Ts(t), i);
                return this.updateImmediateChild(o, c);
              }
            }
            isEmpty() {
              return this.children_.isEmpty();
            }
            numChildren() {
              return this.children_.count();
            }
            val(t) {
              if (this.isEmpty()) return null;
              const i = {};
              let o = 0,
                c = 0,
                p = !0;
              if (
                (this.forEachChild(zs, (C, I) => {
                  (i[C] = I.val(t)), o++, p && n.INTEGER_REGEXP_.test(C) ? (c = Math.max(c, Number(C))) : (p = !1);
                }),
                !t && p && c < 2 * o)
              ) {
                const C = [];
                for (const I in i) C[I] = i[I];
                return C;
              }
              return t && !this.getPriority().isEmpty() && (i['.priority'] = this.getPriority().val()), i;
            }
            hash() {
              if (null === this.lazyHash_) {
                let t = '';
                this.getPriority().isEmpty() || (t += 'priority:' + pT(this.getPriority().val()) + ':'),
                  this.forEachChild(zs, (i, o) => {
                    const c = o.hash();
                    '' !== c && (t += ':' + i + ':' + c);
                  }),
                  (this.lazyHash_ = '' === t ? '' : RA(t));
              }
              return this.lazyHash_;
            }
            getPredecessorChildName(t, i, o) {
              const c = this.resolveIndex_(o);
              if (c) {
                const p = c.getPredecessorKey(new fr(t, i));
                return p ? p.name : null;
              }
              return this.children_.getPredecessorKey(t);
            }
            getFirstChildName(t) {
              const i = this.resolveIndex_(t);
              if (i) {
                const o = i.minKey();
                return o && o.name;
              }
              return this.children_.minKey();
            }
            getFirstChild(t) {
              const i = this.getFirstChildName(t);
              return i ? new fr(i, this.children_.get(i)) : null;
            }
            getLastChildName(t) {
              const i = this.resolveIndex_(t);
              if (i) {
                const o = i.maxKey();
                return o && o.name;
              }
              return this.children_.maxKey();
            }
            getLastChild(t) {
              const i = this.getLastChildName(t);
              return i ? new fr(i, this.children_.get(i)) : null;
            }
            forEachChild(t, i) {
              const o = this.resolveIndex_(t);
              return o ? o.inorderTraversal((c) => i(c.name, c.node)) : this.children_.inorderTraversal(i);
            }
            getIterator(t) {
              return this.getIteratorFrom(t.minPost(), t);
            }
            getIteratorFrom(t, i) {
              const o = this.resolveIndex_(i);
              if (o) return o.getIteratorFrom(t, (c) => c);
              {
                const c = this.children_.getIteratorFrom(t.name, fr.Wrap);
                let p = c.peek();
                for (; null != p && i.compare(p, t) < 0; ) c.getNext(), (p = c.peek());
                return c;
              }
            }
            getReverseIterator(t) {
              return this.getReverseIteratorFrom(t.maxPost(), t);
            }
            getReverseIteratorFrom(t, i) {
              const o = this.resolveIndex_(i);
              if (o) return o.getReverseIteratorFrom(t, (c) => c);
              {
                const c = this.children_.getReverseIteratorFrom(t.name, fr.Wrap);
                let p = c.peek();
                for (; null != p && i.compare(p, t) > 0; ) c.getNext(), (p = c.peek());
                return c;
              }
            }
            compareTo(t) {
              return this.isEmpty() ? (t.isEmpty() ? 0 : -1) : t.isLeafNode() || t.isEmpty() ? 1 : t === fb ? -1 : 0;
            }
            withIndex(t) {
              if (t === Ld || this.indexMap_.hasIndex(t)) return this;
              {
                const i = this.indexMap_.addIndex(t, this.children_);
                return new n(this.children_, this.priorityNode_, i);
              }
            }
            isIndexed(t) {
              return t === Ld || this.indexMap_.hasIndex(t);
            }
            equals(t) {
              if (t === this) return !0;
              if (t.isLeafNode()) return !1;
              {
                const i = t;
                if (this.getPriority().equals(i.getPriority())) {
                  if (this.children_.count() === i.children_.count()) {
                    const o = this.getIterator(zs),
                      c = i.getIterator(zs);
                    let p = o.getNext(),
                      C = c.getNext();
                    for (; p && C; ) {
                      if (p.name !== C.name || !p.node.equals(C.node)) return !1;
                      (p = o.getNext()), (C = c.getNext());
                    }
                    return null === p && null === C;
                  }
                  return !1;
                }
                return !1;
              }
            }
            resolveIndex_(t) {
              return t === Ld ? null : this.indexMap_.get(t.toString());
            }
          }
          return (n.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/), n;
        })();
      const fb = new (class ck extends Ui {
        constructor() {
          super(new Ql(PM), Ui.EMPTY_NODE, Sh.Default);
        }
        compareTo(e) {
          return e === this ? 0 : 1;
        }
        equals(e) {
          return e === this;
        }
        getPriority() {
          return this;
        }
        getImmediateChild(e) {
          return Ui.EMPTY_NODE;
        }
        isEmpty() {
          return !1;
        }
      })();
      function bo(n, e = null) {
        if (null === n) return Ui.EMPTY_NODE;
        if (
          ('object' == typeof n && '.priority' in n && (e = n['.priority']),
          (0, je.hu)(
            null === e || 'string' == typeof e || 'number' == typeof e || ('object' == typeof e && '.sv' in e),
            'Invalid priority type found: ' + typeof e
          ),
          'object' == typeof n && '.value' in n && null !== n['.value'] && (n = n['.value']),
          'object' != typeof n || '.sv' in n)
        )
          return new l_(n, bo(e));
        if (n instanceof Array) {
          let t = Ui.EMPTY_NODE;
          return (
            Ra(n, (i, o) => {
              if ((0, je.r3)(n, i) && '.' !== i.substring(0, 1)) {
                const c = bo(o);
                (c.isLeafNode() || !c.isEmpty()) && (t = t.updateImmediateChild(i, c));
              }
            }),
            t.updatePriority(bo(e))
          );
        }
        {
          const t = [];
          let i = !1;
          if (
            (Ra(n, (p, C) => {
              if ('.' !== p.substring(0, 1)) {
                const I = bo(C);
                I.isEmpty() || ((i = i || !I.getPriority().isEmpty()), t.push(new fr(p, I)));
              }
            }),
            0 === t.length)
          )
            return Ui.EMPTY_NODE;
          const c = hE(t, nk, (p) => p.name, PM);
          if (i) {
            const p = hE(t, zs.getCompare());
            return new Ui(c, bo(e), new Sh({ '.priority': p }, { '.priority': zs }));
          }
          return new Ui(c, bo(e), Sh.Default);
        }
      }
      Object.defineProperties(fr, { MIN: { value: new fr(Mh, Ui.EMPTY_NODE) }, MAX: { value: new fr(Fd, fb) } }),
        (fT.__EMPTY_NODE = Ui.EMPTY_NODE),
        (l_.__childrenNodeConstructor = Ui),
        (function ik(n) {
          FM = n;
        })(fb),
        (function sk(n) {
          yT = n;
        })(fb),
        (function rk(n) {
          _T = n;
        })(bo);
      class NM extends cE {
        constructor(e) {
          super(),
            (this.indexPath_ = e),
            (0, je.hu)(!or(e) && '.priority' !== sr(e), "Can't create PathIndex with empty path or .priority key");
        }
        extractChild(e) {
          return e.getChild(this.indexPath_);
        }
        isDefinedOn(e) {
          return !e.getChild(this.indexPath_).isEmpty();
        }
        compare(e, t) {
          const i = this.extractChild(e.node),
            o = this.extractChild(t.node),
            c = i.compareTo(o);
          return 0 === c ? am(e.name, t.name) : c;
        }
        makePost(e, t) {
          const i = bo(e),
            o = Ui.EMPTY_NODE.updateChild(this.indexPath_, i);
          return new fr(t, o);
        }
        maxPost() {
          const e = Ui.EMPTY_NODE.updateChild(this.indexPath_, fb);
          return new fr(Fd, e);
        }
        toString() {
          return ub(this.indexPath_, 0).join('/');
        }
      }
      const BM = new (class dk extends cE {
          compare(e, t) {
            const i = e.node.compareTo(t.node);
            return 0 === i ? am(e.name, t.name) : i;
          }
          isDefinedOn(e) {
            return !0;
          }
          indexedValueChanged(e, t) {
            return !e.equals(t);
          }
          minPost() {
            return fr.MIN;
          }
          maxPost() {
            return fr.MAX;
          }
          makePost(e, t) {
            const i = bo(e);
            return new fr(t, i);
          }
          toString() {
            return '.value';
          }
        })(),
        u_ = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz',
        hk = (function () {
          let n = 0;
          const e = [];
          return function (t) {
            const i = t === n;
            let o;
            n = t;
            const c = new Array(8);
            for (o = 7; o >= 0; o--) (c[o] = u_.charAt(t % 64)), (t = Math.floor(t / 64));
            (0, je.hu)(0 === t, 'Cannot push at time == 0');
            let p = c.join('');
            if (i) {
              for (o = 11; o >= 0 && 63 === e[o]; o--) e[o] = 0;
              e[o]++;
            } else for (o = 0; o < 12; o++) e[o] = Math.floor(64 * Math.random());
            for (o = 0; o < 12; o++) p += u_.charAt(e[o]);
            return (0, je.hu)(20 === p.length, 'nextPushId: Length should be 20.'), p;
          };
        })(),
        CT = function (n) {
          if (n === '' + wM) return '-';
          const e = oE(n);
          if (null != e) return '' + (e + 1);
          const t = new Array(n.length);
          for (let p = 0; p < t.length; p++) t[p] = n.charAt(p);
          if (t.length < 786) return t.push('-'), t.join('');
          let i = t.length - 1;
          for (; i >= 0 && 'z' === t[i]; ) i--;
          if (-1 === i) return Fd;
          const c = u_.charAt(u_.indexOf(t[i]) + 1);
          return (t[i] = c), t.slice(0, i + 1).join('');
        },
        wT = function (n) {
          if (n === '' + LA) return Mh;
          const e = oE(n);
          if (null != e) return '' + (e - 1);
          const t = new Array(n.length);
          for (let i = 0; i < t.length; i++) t[i] = n.charAt(i);
          return '-' === t[t.length - 1]
            ? 1 === t.length
              ? '' + wM
              : (delete t[t.length - 1], t.join(''))
            : ((t[t.length - 1] = u_.charAt(u_.indexOf(t[t.length - 1]) - 1)), t.join('') + 'z'.repeat(786 - t.length));
        };
      function ET(n) {
        return { type: 'value', snapshotNode: n };
      }
      function d_(n, e) {
        return { type: 'child_added', snapshotNode: e, childName: n };
      }
      function pb(n, e) {
        return { type: 'child_removed', snapshotNode: e, childName: n };
      }
      function mb(n, e, t) {
        return { type: 'child_changed', snapshotNode: e, childName: n, oldSnap: t };
      }
      class UM {
        constructor(e) {
          this.index_ = e;
        }
        updateChild(e, t, i, o, c, p) {
          (0, je.hu)(e.isIndexed(this.index_), 'A node must be indexed if only a child is updated');
          const C = e.getImmediateChild(t);
          return (C.getChild(o).equals(i.getChild(o)) && C.isEmpty() === i.isEmpty()) ||
            (null != p &&
              (i.isEmpty()
                ? e.hasChild(t)
                  ? p.trackChildChange(pb(t, C))
                  : (0, je.hu)(e.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node')
                : C.isEmpty()
                ? p.trackChildChange(d_(t, i))
                : p.trackChildChange(mb(t, i, C))),
            e.isLeafNode() && i.isEmpty())
            ? e
            : e.updateImmediateChild(t, i).withIndex(this.index_);
        }
        updateFullNode(e, t, i) {
          return (
            null != i &&
              (e.isLeafNode() ||
                e.forEachChild(zs, (o, c) => {
                  t.hasChild(o) || i.trackChildChange(pb(o, c));
                }),
              t.isLeafNode() ||
                t.forEachChild(zs, (o, c) => {
                  if (e.hasChild(o)) {
                    const p = e.getImmediateChild(o);
                    p.equals(c) || i.trackChildChange(mb(o, c, p));
                  } else i.trackChildChange(d_(o, c));
                })),
            t.withIndex(this.index_)
          );
        }
        updatePriority(e, t) {
          return e.isEmpty() ? Ui.EMPTY_NODE : e.updatePriority(t);
        }
        filtersNodes() {
          return !1;
        }
        getIndexedFilter() {
          return this;
        }
        getIndex() {
          return this.index_;
        }
      }
      class gb {
        constructor(e) {
          (this.indexedFilter_ = new UM(e.getIndex())),
            (this.index_ = e.getIndex()),
            (this.startPost_ = gb.getStartPost_(e)),
            (this.endPost_ = gb.getEndPost_(e));
        }
        getStartPost() {
          return this.startPost_;
        }
        getEndPost() {
          return this.endPost_;
        }
        matches(e) {
          return this.index_.compare(this.getStartPost(), e) <= 0 && this.index_.compare(e, this.getEndPost()) <= 0;
        }
        updateChild(e, t, i, o, c, p) {
          return this.matches(new fr(t, i)) || (i = Ui.EMPTY_NODE), this.indexedFilter_.updateChild(e, t, i, o, c, p);
        }
        updateFullNode(e, t, i) {
          t.isLeafNode() && (t = Ui.EMPTY_NODE);
          let o = t.withIndex(this.index_);
          o = o.updatePriority(Ui.EMPTY_NODE);
          const c = this;
          return (
            t.forEachChild(zs, (p, C) => {
              c.matches(new fr(p, C)) || (o = o.updateImmediateChild(p, Ui.EMPTY_NODE));
            }),
            this.indexedFilter_.updateFullNode(e, o, i)
          );
        }
        updatePriority(e, t) {
          return e;
        }
        filtersNodes() {
          return !0;
        }
        getIndexedFilter() {
          return this.indexedFilter_;
        }
        getIndex() {
          return this.index_;
        }
        static getStartPost_(e) {
          if (e.hasStart()) {
            const t = e.getIndexStartName();
            return e.getIndex().makePost(e.getIndexStartValue(), t);
          }
          return e.getIndex().minPost();
        }
        static getEndPost_(e) {
          if (e.hasEnd()) {
            const t = e.getIndexEndName();
            return e.getIndex().makePost(e.getIndexEndValue(), t);
          }
          return e.getIndex().maxPost();
        }
      }
      class pk {
        constructor(e) {
          (this.rangedFilter_ = new gb(e)),
            (this.index_ = e.getIndex()),
            (this.limit_ = e.getLimit()),
            (this.reverse_ = !e.isViewFromLeft());
        }
        updateChild(e, t, i, o, c, p) {
          return (
            this.rangedFilter_.matches(new fr(t, i)) || (i = Ui.EMPTY_NODE),
            e.getImmediateChild(t).equals(i)
              ? e
              : e.numChildren() < this.limit_
              ? this.rangedFilter_.getIndexedFilter().updateChild(e, t, i, o, c, p)
              : this.fullLimitUpdateChild_(e, t, i, c, p)
          );
        }
        updateFullNode(e, t, i) {
          let o;
          if (t.isLeafNode() || t.isEmpty()) o = Ui.EMPTY_NODE.withIndex(this.index_);
          else if (2 * this.limit_ < t.numChildren() && t.isIndexed(this.index_)) {
            let c;
            (o = Ui.EMPTY_NODE.withIndex(this.index_)),
              (c = this.reverse_
                ? t.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_)
                : t.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_));
            let p = 0;
            for (; c.hasNext() && p < this.limit_; ) {
              const C = c.getNext();
              let I;
              if (
                ((I = this.reverse_
                  ? this.index_.compare(this.rangedFilter_.getStartPost(), C) <= 0
                  : this.index_.compare(C, this.rangedFilter_.getEndPost()) <= 0),
                !I)
              )
                break;
              (o = o.updateImmediateChild(C.name, C.node)), p++;
            }
          } else {
            let c, p, C, I;
            if (((o = t.withIndex(this.index_)), (o = o.updatePriority(Ui.EMPTY_NODE)), this.reverse_)) {
              (I = o.getReverseIterator(this.index_)),
                (c = this.rangedFilter_.getEndPost()),
                (p = this.rangedFilter_.getStartPost());
              const xe = this.index_.getCompare();
              C = (rt, Ut) => xe(Ut, rt);
            } else
              (I = o.getIterator(this.index_)),
                (c = this.rangedFilter_.getStartPost()),
                (p = this.rangedFilter_.getEndPost()),
                (C = this.index_.getCompare());
            let U = 0,
              se = !1;
            for (; I.hasNext(); ) {
              const xe = I.getNext();
              !se && C(c, xe) <= 0 && (se = !0),
                se && U < this.limit_ && C(xe, p) <= 0 ? U++ : (o = o.updateImmediateChild(xe.name, Ui.EMPTY_NODE));
            }
          }
          return this.rangedFilter_.getIndexedFilter().updateFullNode(e, o, i);
        }
        updatePriority(e, t) {
          return e;
        }
        filtersNodes() {
          return !0;
        }
        getIndexedFilter() {
          return this.rangedFilter_.getIndexedFilter();
        }
        getIndex() {
          return this.index_;
        }
        fullLimitUpdateChild_(e, t, i, o, c) {
          let p;
          if (this.reverse_) {
            const xe = this.index_.getCompare();
            p = (rt, Ut) => xe(Ut, rt);
          } else p = this.index_.getCompare();
          const C = e;
          (0, je.hu)(C.numChildren() === this.limit_, '');
          const I = new fr(t, i),
            U = this.reverse_ ? C.getFirstChild(this.index_) : C.getLastChild(this.index_),
            se = this.rangedFilter_.matches(I);
          if (C.hasChild(t)) {
            const xe = C.getImmediateChild(t);
            let rt = o.getChildAfterChild(this.index_, U, this.reverse_);
            for (; null != rt && (rt.name === t || C.hasChild(rt.name)); )
              rt = o.getChildAfterChild(this.index_, rt, this.reverse_);
            const Ut = null == rt ? 1 : p(rt, I);
            if (se && !i.isEmpty() && Ut >= 0)
              return null != c && c.trackChildChange(mb(t, i, xe)), C.updateImmediateChild(t, i);
            {
              null != c && c.trackChildChange(pb(t, xe));
              const Mn = C.updateImmediateChild(t, Ui.EMPTY_NODE);
              return null != rt && this.rangedFilter_.matches(rt)
                ? (null != c && c.trackChildChange(d_(rt.name, rt.node)), Mn.updateImmediateChild(rt.name, rt.node))
                : Mn;
            }
          }
          return i.isEmpty()
            ? e
            : se && p(U, I) >= 0
            ? (null != c && (c.trackChildChange(pb(U.name, U.node)), c.trackChildChange(d_(t, i))),
              C.updateImmediateChild(t, i).updateImmediateChild(U.name, Ui.EMPTY_NODE))
            : e;
        }
      }
      class fE {
        constructor() {
          (this.limitSet_ = !1),
            (this.startSet_ = !1),
            (this.startNameSet_ = !1),
            (this.startAfterSet_ = !1),
            (this.endSet_ = !1),
            (this.endNameSet_ = !1),
            (this.endBeforeSet_ = !1),
            (this.limit_ = 0),
            (this.viewFrom_ = ''),
            (this.indexStartValue_ = null),
            (this.indexStartName_ = ''),
            (this.indexEndValue_ = null),
            (this.indexEndName_ = ''),
            (this.index_ = zs);
        }
        hasStart() {
          return this.startSet_;
        }
        hasStartAfter() {
          return this.startAfterSet_;
        }
        hasEndBefore() {
          return this.endBeforeSet_;
        }
        isViewFromLeft() {
          return '' === this.viewFrom_ ? this.startSet_ : 'l' === this.viewFrom_;
        }
        getIndexStartValue() {
          return (0, je.hu)(this.startSet_, 'Only valid if start has been set'), this.indexStartValue_;
        }
        getIndexStartName() {
          return (
            (0, je.hu)(this.startSet_, 'Only valid if start has been set'),
            this.startNameSet_ ? this.indexStartName_ : Mh
          );
        }
        hasEnd() {
          return this.endSet_;
        }
        getIndexEndValue() {
          return (0, je.hu)(this.endSet_, 'Only valid if end has been set'), this.indexEndValue_;
        }
        getIndexEndName() {
          return (0, je.hu)(this.endSet_, 'Only valid if end has been set'), this.endNameSet_ ? this.indexEndName_ : Fd;
        }
        hasLimit() {
          return this.limitSet_;
        }
        hasAnchoredLimit() {
          return this.limitSet_ && '' !== this.viewFrom_;
        }
        getLimit() {
          return (0, je.hu)(this.limitSet_, 'Only valid if limit has been set'), this.limit_;
        }
        getIndex() {
          return this.index_;
        }
        loadsAllData() {
          return !(this.startSet_ || this.endSet_ || this.limitSet_);
        }
        isDefault() {
          return this.loadsAllData() && this.index_ === zs;
        }
        copy() {
          const e = new fE();
          return (
            (e.limitSet_ = this.limitSet_),
            (e.limit_ = this.limit_),
            (e.startSet_ = this.startSet_),
            (e.indexStartValue_ = this.indexStartValue_),
            (e.startNameSet_ = this.startNameSet_),
            (e.indexStartName_ = this.indexStartName_),
            (e.endSet_ = this.endSet_),
            (e.indexEndValue_ = this.indexEndValue_),
            (e.endNameSet_ = this.endNameSet_),
            (e.indexEndName_ = this.indexEndName_),
            (e.index_ = this.index_),
            (e.viewFrom_ = this.viewFrom_),
            e
          );
        }
      }
      function jM(n, e, t) {
        const i = n.copy();
        return (
          (i.startSet_ = !0),
          void 0 === e && (e = null),
          (i.indexStartValue_ = e),
          null != t
            ? ((i.startNameSet_ = !0), (i.indexStartName_ = t))
            : ((i.startNameSet_ = !1), (i.indexStartName_ = '')),
          i
        );
      }
      function HM(n, e, t) {
        const i = n.copy();
        return (
          (i.endSet_ = !0),
          void 0 === e && (e = null),
          (i.indexEndValue_ = e),
          void 0 !== t ? ((i.endNameSet_ = !0), (i.indexEndName_ = t)) : ((i.endNameSet_ = !1), (i.indexEndName_ = '')),
          i
        );
      }
      function pE(n, e) {
        const t = n.copy();
        return (t.index_ = e), t;
      }
      function xT(n) {
        const e = {};
        if (n.isDefault()) return e;
        let t;
        return (
          n.index_ === zs
            ? (t = '$priority')
            : n.index_ === BM
            ? (t = '$value')
            : n.index_ === Ld
            ? (t = '$key')
            : ((0, je.hu)(n.index_ instanceof NM, 'Unrecognized index type!'), (t = n.index_.toString())),
          (e.orderBy = (0, je.Pz)(t)),
          n.startSet_ &&
            ((e.startAt = (0, je.Pz)(n.indexStartValue_)),
            n.startNameSet_ && (e.startAt += ',' + (0, je.Pz)(n.indexStartName_))),
          n.endSet_ &&
            ((e.endAt = (0, je.Pz)(n.indexEndValue_)), n.endNameSet_ && (e.endAt += ',' + (0, je.Pz)(n.indexEndName_))),
          n.limitSet_ && (n.isViewFromLeft() ? (e.limitToFirst = n.limit_) : (e.limitToLast = n.limit_)),
          e
        );
      }
      function DT(n) {
        const e = {};
        if (
          (n.startSet_ && ((e.sp = n.indexStartValue_), n.startNameSet_ && (e.sn = n.indexStartName_)),
          n.endSet_ && ((e.ep = n.indexEndValue_), n.endNameSet_ && (e.en = n.indexEndName_)),
          n.limitSet_)
        ) {
          e.l = n.limit_;
          let t = n.viewFrom_;
          '' === t && (t = n.isViewFromLeft() ? 'l' : 'r'), (e.vf = t);
        }
        return n.index_ !== zs && (e.i = n.index_.toString()), e;
      }
      class mE extends sT {
        constructor(e, t, i, o) {
          super(),
            (this.repoInfo_ = e),
            (this.onDataUpdate_ = t),
            (this.authTokenProvider_ = i),
            (this.appCheckTokenProvider_ = o),
            (this.log_ = rb('p:rest:')),
            (this.listens_ = {});
        }
        reportStats(e) {
          throw new Error('Method not implemented.');
        }
        static getListenId_(e, t) {
          return void 0 !== t
            ? 'tag$' + t
            : ((0, je.hu)(e._queryParams.isDefault(), "should have a tag if it's not a default query."),
              e._path.toString());
        }
        listen(e, t, i, o) {
          const c = e._path.toString();
          this.log_('Listen called for ' + c + ' ' + e._queryIdentifier);
          const p = mE.getListenId_(e, i),
            C = {};
          this.listens_[p] = C;
          const I = xT(e._queryParams);
          this.restRequest_(c + '.json', I, (U, se) => {
            let xe = se;
            if (
              (404 === U && ((xe = null), (U = null)),
              null === U && this.onDataUpdate_(c, xe, !1, i),
              (0, je.DV)(this.listens_, p) === C)
            ) {
              let rt;
              (rt = U ? (401 === U ? 'permission_denied' : 'rest_error:' + U) : 'ok'), o(rt, null);
            }
          });
        }
        unlisten(e, t) {
          const i = mE.getListenId_(e, t);
          delete this.listens_[i];
        }
        get(e) {
          const t = xT(e._queryParams),
            i = e._path.toString(),
            o = new je.BH();
          return (
            this.restRequest_(i + '.json', t, (c, p) => {
              let C = p;
              404 === c && ((C = null), (c = null)),
                null === c ? (this.onDataUpdate_(i, C, !1, null), o.resolve(C)) : o.reject(new Error(C));
            }),
            o.promise
          );
        }
        refreshAuthToken(e) {}
        restRequest_(e, t = {}, i) {
          return (
            (t.format = 'export'),
            Promise.all([this.authTokenProvider_.getToken(!1), this.appCheckTokenProvider_.getToken(!1)]).then(
              ([o, c]) => {
                o && o.accessToken && (t.auth = o.accessToken), c && c.token && (t.ac = c.token);
                const p =
                  (this.repoInfo_.secure ? 'https://' : 'http://') +
                  this.repoInfo_.host +
                  e +
                  '?ns=' +
                  this.repoInfo_.namespace +
                  (0, je.xO)(t);
                this.log_('Sending REST request for ' + p);
                const C = new XMLHttpRequest();
                (C.onreadystatechange = () => {
                  if (i && 4 === C.readyState) {
                    this.log_('REST Response for ' + p + ' received. status:', C.status, 'response:', C.responseText);
                    let I = null;
                    if (C.status >= 200 && C.status < 300) {
                      try {
                        I = (0, je.cI)(C.responseText);
                      } catch (U) {
                        Rl('Failed to parse JSON response for ' + p + ': ' + C.responseText);
                      }
                      i(null, I);
                    } else
                      401 !== C.status &&
                        404 !== C.status &&
                        Rl('Got unsuccessful REST response for ' + p + ' Status: ' + C.status),
                        i(C.status);
                    i = null;
                  }
                }),
                  C.open('GET', p, !0),
                  C.send();
              }
            )
          );
        }
      }
      class bk {
        constructor() {
          this.rootNode_ = Ui.EMPTY_NODE;
        }
        getNode(e) {
          return this.rootNode_.getChild(e);
        }
        updateSnapshot(e, t) {
          this.rootNode_ = this.rootNode_.updateChild(e, t);
        }
      }
      function gE() {
        return { value: null, children: new Map() };
      }
      function h_(n, e, t) {
        if (or(e)) (n.value = t), n.children.clear();
        else if (null !== n.value) n.value = n.value.updateChild(e, t);
        else {
          const i = sr(e);
          n.children.has(i) || n.children.set(i, gE()), h_(n.children.get(i), (e = Ts(e)), t);
        }
      }
      function GM(n, e) {
        if (or(e)) return (n.value = null), n.children.clear(), !0;
        if (null !== n.value) {
          if (n.value.isLeafNode()) return !1;
          {
            const t = n.value;
            return (
              (n.value = null),
              t.forEachChild(zs, (i, o) => {
                h_(n, new Jr(i), o);
              }),
              GM(n, e)
            );
          }
        }
        if (n.children.size > 0) {
          const t = sr(e);
          return (
            (e = Ts(e)), n.children.has(t) && GM(n.children.get(t), e) && n.children.delete(t), 0 === n.children.size
          );
        }
        return !0;
      }
      function zM(n, e, t) {
        null !== n.value
          ? t(e, n.value)
          : (function Ck(n, e) {
              n.children.forEach((t, i) => {
                e(i, t);
              });
            })(n, (i, o) => {
              zM(o, new Jr(e.toString() + '/' + i), t);
            });
      }
      class wk {
        constructor(e) {
          (this.collection_ = e), (this.last_ = null);
        }
        get() {
          const e = this.collection_.get(),
            t = Object.assign({}, e);
          return (
            this.last_ &&
              Ra(this.last_, (i, o) => {
                t[i] = t[i] - o;
              }),
            (this.last_ = e),
            t
          );
        }
      }
      class Dk {
        constructor(e, t) {
          (this.server_ = t), (this.statsToReport_ = {}), (this.statsListener_ = new wk(e));
          const i = 1e4 + 2e4 * Math.random();
          ob(this.reportStats_.bind(this), Math.floor(i));
        }
        reportStats_() {
          const e = this.statsListener_.get(),
            t = {};
          let i = !1;
          Ra(e, (o, c) => {
            c > 0 && (0, je.r3)(this.statsToReport_, o) && ((t[o] = c), (i = !0));
          }),
            i && this.server_.reportStats(t),
            ob(this.reportStats_.bind(this), Math.floor(2 * Math.random() * 3e5));
        }
      }
      var fu = (() => (
        (function (n) {
          (n[(n.OVERWRITE = 0)] = 'OVERWRITE'),
            (n[(n.MERGE = 1)] = 'MERGE'),
            (n[(n.ACK_USER_WRITE = 2)] = 'ACK_USER_WRITE'),
            (n[(n.LISTEN_COMPLETE = 3)] = 'LISTEN_COMPLETE');
        })(fu || (fu = {})),
        fu
      ))();
      function YM(n) {
        return { fromUser: !1, fromServer: !0, queryId: n, tagged: !0 };
      }
      class _E {
        constructor(e, t, i) {
          (this.path = e),
            (this.affectedTree = t),
            (this.revert = i),
            (this.type = fu.ACK_USER_WRITE),
            (this.source = { fromUser: !0, fromServer: !1, queryId: null, tagged: !1 });
        }
        operationForChild(e) {
          if (or(this.path)) {
            if (null != this.affectedTree.value)
              return (
                (0, je.hu)(
                  this.affectedTree.children.isEmpty(),
                  'affectedTree should not have overlapping affected paths.'
                ),
                this
              );
            {
              const t = this.affectedTree.subtree(new Jr(e));
              return new _E(Lr(), t, this.revert);
            }
          }
          return (
            (0, je.hu)(sr(this.path) === e, 'operationForChild called for unrelated child.'),
            new _E(Ts(this.path), this.affectedTree, this.revert)
          );
        }
      }
      class _b {
        constructor(e, t) {
          (this.source = e), (this.path = t), (this.type = fu.LISTEN_COMPLETE);
        }
        operationForChild(e) {
          return or(this.path) ? new _b(this.source, Lr()) : new _b(this.source, Ts(this.path));
        }
      }
      class um {
        constructor(e, t, i) {
          (this.source = e), (this.path = t), (this.snap = i), (this.type = fu.OVERWRITE);
        }
        operationForChild(e) {
          return or(this.path)
            ? new um(this.source, Lr(), this.snap.getImmediateChild(e))
            : new um(this.source, Ts(this.path), this.snap);
        }
      }
      class f_ {
        constructor(e, t, i) {
          (this.source = e), (this.path = t), (this.children = i), (this.type = fu.MERGE);
        }
        operationForChild(e) {
          if (or(this.path)) {
            const t = this.children.subtree(new Jr(e));
            return t.isEmpty() ? null : t.value ? new um(this.source, Lr(), t.value) : new f_(this.source, Lr(), t);
          }
          return (
            (0, je.hu)(sr(this.path) === e, "Can't get a merge for a child not on the path of the operation"),
            new f_(this.source, Ts(this.path), this.children)
          );
        }
        toString() {
          return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';
        }
      }
      class wf {
        constructor(e, t, i) {
          (this.node_ = e), (this.fullyInitialized_ = t), (this.filtered_ = i);
        }
        isFullyInitialized() {
          return this.fullyInitialized_;
        }
        isFiltered() {
          return this.filtered_;
        }
        isCompleteForPath(e) {
          if (or(e)) return this.isFullyInitialized() && !this.filtered_;
          const t = sr(e);
          return this.isCompleteForChild(t);
        }
        isCompleteForChild(e) {
          return (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(e);
        }
        getNode() {
          return this.node_;
        }
      }
      class Mk {
        constructor(e) {
          (this.query_ = e), (this.index_ = this.query_._queryParams.getIndex());
        }
      }
      function yb(n, e, t, i, o, c) {
        const p = i.filter((C) => C.type === t);
        p.sort((C, I) =>
          (function Tk(n, e, t) {
            if (null == e.childName || null == t.childName) throw (0, je.g5)('Should only compare child_ events.');
            const i = new fr(e.childName, e.snapshotNode),
              o = new fr(t.childName, t.snapshotNode);
            return n.index_.compare(i, o);
          })(n, C, I)
        ),
          p.forEach((C) => {
            const I = (function Ak(n, e, t) {
              return (
                'value' === e.type ||
                  'child_removed' === e.type ||
                  (e.prevName = t.getPredecessorChildName(e.childName, e.snapshotNode, n.index_)),
                e
              );
            })(n, C, c);
            o.forEach((U) => {
              U.respondsTo(C.type) && e.push(U.createEvent(I, n.query_));
            });
          });
      }
      function yE(n, e) {
        return { eventCache: n, serverCache: e };
      }
      function vb(n, e, t, i) {
        return yE(new wf(e, t, i), n.serverCache);
      }
      function ST(n, e, t, i) {
        return yE(n.eventCache, new wf(e, t, i));
      }
      function vE(n) {
        return n.eventCache.isFullyInitialized() ? n.eventCache.getNode() : null;
      }
      function dm(n) {
        return n.serverCache.isFullyInitialized() ? n.serverCache.getNode() : null;
      }
      let KM;
      class $s {
        constructor(e, t = (() => (KM || (KM = new Ql(hR)), KM))()) {
          (this.value = e), (this.children = t);
        }
        static fromObject(e) {
          let t = new $s(null);
          return (
            Ra(e, (i, o) => {
              t = t.set(new Jr(i), o);
            }),
            t
          );
        }
        isEmpty() {
          return null === this.value && this.children.isEmpty();
        }
        findRootMostMatchingPathAndValue(e, t) {
          if (null != this.value && t(this.value)) return { path: Lr(), value: this.value };
          if (or(e)) return null;
          {
            const i = sr(e),
              o = this.children.get(i);
            if (null !== o) {
              const c = o.findRootMostMatchingPathAndValue(Ts(e), t);
              return null != c ? { path: fo(new Jr(i), c.path), value: c.value } : null;
            }
            return null;
          }
        }
        findRootMostValueAndPath(e) {
          return this.findRootMostMatchingPathAndValue(e, () => !0);
        }
        subtree(e) {
          if (or(e)) return this;
          {
            const t = sr(e),
              i = this.children.get(t);
            return null !== i ? i.subtree(Ts(e)) : new $s(null);
          }
        }
        set(e, t) {
          if (or(e)) return new $s(t, this.children);
          {
            const i = sr(e),
              c = (this.children.get(i) || new $s(null)).set(Ts(e), t),
              p = this.children.insert(i, c);
            return new $s(this.value, p);
          }
        }
        remove(e) {
          if (or(e)) return this.children.isEmpty() ? new $s(null) : new $s(null, this.children);
          {
            const t = sr(e),
              i = this.children.get(t);
            if (i) {
              const o = i.remove(Ts(e));
              let c;
              return (
                (c = o.isEmpty() ? this.children.remove(t) : this.children.insert(t, o)),
                null === this.value && c.isEmpty() ? new $s(null) : new $s(this.value, c)
              );
            }
            return this;
          }
        }
        get(e) {
          if (or(e)) return this.value;
          {
            const t = sr(e),
              i = this.children.get(t);
            return i ? i.get(Ts(e)) : null;
          }
        }
        setTree(e, t) {
          if (or(e)) return t;
          {
            const i = sr(e),
              c = (this.children.get(i) || new $s(null)).setTree(Ts(e), t);
            let p;
            return (p = c.isEmpty() ? this.children.remove(i) : this.children.insert(i, c)), new $s(this.value, p);
          }
        }
        fold(e) {
          return this.fold_(Lr(), e);
        }
        fold_(e, t) {
          const i = {};
          return (
            this.children.inorderTraversal((o, c) => {
              i[o] = c.fold_(fo(e, o), t);
            }),
            t(e, this.value, i)
          );
        }
        findOnPath(e, t) {
          return this.findOnPath_(e, Lr(), t);
        }
        findOnPath_(e, t, i) {
          const o = !!this.value && i(t, this.value);
          if (o) return o;
          if (or(e)) return null;
          {
            const c = sr(e),
              p = this.children.get(c);
            return p ? p.findOnPath_(Ts(e), fo(t, c), i) : null;
          }
        }
        foreachOnPath(e, t) {
          return this.foreachOnPath_(e, Lr(), t);
        }
        foreachOnPath_(e, t, i) {
          if (or(e)) return this;
          {
            this.value && i(t, this.value);
            const o = sr(e),
              c = this.children.get(o);
            return c ? c.foreachOnPath_(Ts(e), fo(t, o), i) : new $s(null);
          }
        }
        foreach(e) {
          this.foreach_(Lr(), e);
        }
        foreach_(e, t) {
          this.children.inorderTraversal((i, o) => {
            o.foreach_(fo(e, i), t);
          }),
            this.value && t(e, this.value);
        }
        foreachChild(e) {
          this.children.inorderTraversal((t, i) => {
            i.value && e(t, i.value);
          });
        }
      }
      class Yu {
        constructor(e) {
          this.writeTree_ = e;
        }
        static empty() {
          return new Yu(new $s(null));
        }
      }
      function bb(n, e, t) {
        if (or(e)) return new Yu(new $s(t));
        {
          const i = n.writeTree_.findRootMostValueAndPath(e);
          if (null != i) {
            const o = i.path;
            let c = i.value;
            const p = kl(o, e);
            return (c = c.updateChild(p, t)), new Yu(n.writeTree_.set(o, c));
          }
          {
            const o = new $s(t),
              c = n.writeTree_.setTree(e, o);
            return new Yu(c);
          }
        }
      }
      function qM(n, e, t) {
        let i = n;
        return (
          Ra(t, (o, c) => {
            i = bb(i, fo(e, o), c);
          }),
          i
        );
      }
      function AT(n, e) {
        if (or(e)) return Yu.empty();
        {
          const t = n.writeTree_.setTree(e, new $s(null));
          return new Yu(t);
        }
      }
      function ZM(n, e) {
        return null != hm(n, e);
      }
      function hm(n, e) {
        const t = n.writeTree_.findRootMostValueAndPath(e);
        return null != t ? n.writeTree_.get(t.path).getChild(kl(t.path, e)) : null;
      }
      function TT(n) {
        const e = [],
          t = n.writeTree_.value;
        return (
          null != t
            ? t.isLeafNode() ||
              t.forEachChild(zs, (i, o) => {
                e.push(new fr(i, o));
              })
            : n.writeTree_.children.inorderTraversal((i, o) => {
                null != o.value && e.push(new fr(i, o.value));
              }),
          e
        );
      }
      function Ef(n, e) {
        if (or(e)) return n;
        {
          const t = hm(n, e);
          return new Yu(null != t ? new $s(t) : n.writeTree_.subtree(e));
        }
      }
      function QM(n) {
        return n.writeTree_.isEmpty();
      }
      function p_(n, e) {
        return IT(Lr(), n.writeTree_, e);
      }
      function IT(n, e, t) {
        if (null != e.value) return t.updateChild(n, e.value);
        {
          let i = null;
          return (
            e.children.inorderTraversal((o, c) => {
              '.priority' === o
                ? ((0, je.hu)(null !== c.value, 'Priority writes must always be leaf nodes'), (i = c.value))
                : (t = IT(fo(n, o), c, t));
            }),
            !t.getChild(n).isEmpty() && null !== i && (t = t.updateChild(fo(n, '.priority'), i)),
            t
          );
        }
      }
      function bE(n, e) {
        return FT(e, n);
      }
      function Fk(n, e) {
        if (n.snap) return hu(n.path, e);
        for (const t in n.children) if (n.children.hasOwnProperty(t) && hu(fo(n.path, t), e)) return !0;
        return !1;
      }
      function Nk(n) {
        return n.visible;
      }
      function RT(n, e, t) {
        let i = Yu.empty();
        for (let o = 0; o < n.length; ++o) {
          const c = n[o];
          if (e(c)) {
            const p = c.path;
            let C;
            if (c.snap)
              hu(t, p)
                ? ((C = kl(t, p)), (i = bb(i, C, c.snap)))
                : hu(p, t) && ((C = kl(p, t)), (i = bb(i, Lr(), c.snap.getChild(C))));
            else {
              if (!c.children) throw (0, je.g5)('WriteRecord should have .snap or .children');
              if (hu(t, p)) (C = kl(t, p)), (i = qM(i, C, c.children));
              else if (hu(p, t))
                if (((C = kl(p, t)), or(C))) i = qM(i, Lr(), c.children);
                else {
                  const I = (0, je.DV)(c.children, sr(C));
                  if (I) {
                    const U = I.getChild(Ts(C));
                    i = bb(i, Lr(), U);
                  }
                }
            }
          }
        }
        return i;
      }
      function kT(n, e, t, i, o) {
        if (i || o) {
          const c = Ef(n.visibleWrites, e);
          return !o && QM(c)
            ? t
            : o || null != t || ZM(c, Lr())
            ? p_(
                RT(
                  n.allWrites,
                  function (U) {
                    return (U.visible || o) && (!i || !~i.indexOf(U.writeId)) && (hu(U.path, e) || hu(e, U.path));
                  },
                  e
                ),
                t || Ui.EMPTY_NODE
              )
            : null;
        }
        {
          const c = hm(n.visibleWrites, e);
          if (null != c) return c;
          {
            const p = Ef(n.visibleWrites, e);
            return QM(p) ? t : null != t || ZM(p, Lr()) ? p_(p, t || Ui.EMPTY_NODE) : null;
          }
        }
      }
      function CE(n, e, t, i) {
        return kT(n.writeTree, n.treePath, e, t, i);
      }
      function XM(n, e) {
        return (function Bk(n, e, t) {
          let i = Ui.EMPTY_NODE;
          const o = hm(n.visibleWrites, e);
          if (o)
            return (
              o.isLeafNode() ||
                o.forEachChild(zs, (c, p) => {
                  i = i.updateImmediateChild(c, p);
                }),
              i
            );
          if (t) {
            const c = Ef(n.visibleWrites, e);
            return (
              t.forEachChild(zs, (p, C) => {
                const I = p_(Ef(c, new Jr(p)), C);
                i = i.updateImmediateChild(p, I);
              }),
              TT(c).forEach((p) => {
                i = i.updateImmediateChild(p.name, p.node);
              }),
              i
            );
          }
          return (
            TT(Ef(n.visibleWrites, e)).forEach((p) => {
              i = i.updateImmediateChild(p.name, p.node);
            }),
            i
          );
        })(n.writeTree, n.treePath, e);
      }
      function OT(n, e, t, i) {
        return (function Vk(n, e, t, i, o) {
          (0, je.hu)(i || o, 'Either existingEventSnap or existingServerSnap must exist');
          const c = fo(e, t);
          if (ZM(n.visibleWrites, c)) return null;
          {
            const p = Ef(n.visibleWrites, c);
            return QM(p) ? o.getChild(t) : p_(p, o.getChild(t));
          }
        })(n.writeTree, n.treePath, e, t, i);
      }
      function wE(n, e) {
        return (function jk(n, e) {
          return hm(n.visibleWrites, e);
        })(n.writeTree, fo(n.treePath, e));
      }
      function JM(n, e, t) {
        return (function Uk(n, e, t, i) {
          const o = fo(e, t),
            c = hm(n.visibleWrites, o);
          return null != c
            ? c
            : i.isCompleteForChild(t)
            ? p_(Ef(n.visibleWrites, o), i.getNode().getImmediateChild(t))
            : null;
        })(n.writeTree, n.treePath, e, t);
      }
      function PT(n, e) {
        return FT(fo(n.treePath, e), n.writeTree);
      }
      function FT(n, e) {
        return { treePath: n, writeTree: e };
      }
      class $k {
        constructor() {
          this.changeMap = new Map();
        }
        trackChildChange(e) {
          const t = e.type,
            i = e.childName;
          (0, je.hu)(
            'child_added' === t || 'child_changed' === t || 'child_removed' === t,
            'Only child changes supported for tracking'
          ),
            (0, je.hu)('.priority' !== i, 'Only non-priority child changes can be tracked.');
          const o = this.changeMap.get(i);
          if (o) {
            const c = o.type;
            if ('child_added' === t && 'child_removed' === c)
              this.changeMap.set(i, mb(i, e.snapshotNode, o.snapshotNode));
            else if ('child_removed' === t && 'child_added' === c) this.changeMap.delete(i);
            else if ('child_removed' === t && 'child_changed' === c) this.changeMap.set(i, pb(i, o.oldSnap));
            else if ('child_changed' === t && 'child_added' === c) this.changeMap.set(i, d_(i, e.snapshotNode));
            else {
              if ('child_changed' !== t || 'child_changed' !== c)
                throw (0, je.g5)('Illegal combination of changes: ' + e + ' occurred after ' + o);
              this.changeMap.set(i, mb(i, e.snapshotNode, o.oldSnap));
            }
          } else this.changeMap.set(i, e);
        }
        getChanges() {
          return Array.from(this.changeMap.values());
        }
      }
      const LT = new (class Wk {
        getCompleteChild(e) {
          return null;
        }
        getChildAfterChild(e, t, i) {
          return null;
        }
      })();
      class eS {
        constructor(e, t, i = null) {
          (this.writes_ = e), (this.viewCache_ = t), (this.optCompleteServerCache_ = i);
        }
        getCompleteChild(e) {
          const t = this.viewCache_.eventCache;
          if (t.isCompleteForChild(e)) return t.getNode().getImmediateChild(e);
          {
            const i =
              null != this.optCompleteServerCache_
                ? new wf(this.optCompleteServerCache_, !0, !1)
                : this.viewCache_.serverCache;
            return JM(this.writes_, e, i);
          }
        }
        getChildAfterChild(e, t, i) {
          const o = null != this.optCompleteServerCache_ ? this.optCompleteServerCache_ : dm(this.viewCache_),
            c = (function zk(n, e, t, i, o, c) {
              return (function Hk(n, e, t, i, o, c, p) {
                let C;
                const I = Ef(n.visibleWrites, e),
                  U = hm(I, Lr());
                if (null != U) C = U;
                else {
                  if (null == t) return [];
                  C = p_(I, t);
                }
                if (((C = C.withIndex(p)), C.isEmpty() || C.isLeafNode())) return [];
                {
                  const se = [],
                    xe = p.getCompare(),
                    rt = c ? C.getReverseIteratorFrom(i, p) : C.getIteratorFrom(i, p);
                  let Ut = rt.getNext();
                  for (; Ut && se.length < o; ) 0 !== xe(Ut, i) && se.push(Ut), (Ut = rt.getNext());
                  return se;
                }
              })(n.writeTree, n.treePath, e, t, i, o, c);
            })(this.writes_, o, t, 1, i, e);
          return 0 === c.length ? null : c[0];
        }
      }
      function NT(n, e, t, i, o, c) {
        const p = e.eventCache;
        if (null != wE(i, t)) return e;
        {
          let C, I;
          if (or(t))
            if (
              ((0, je.hu)(
                e.serverCache.isFullyInitialized(),
                'If change path is empty, we must have complete server data'
              ),
              e.serverCache.isFiltered())
            ) {
              const U = dm(e),
                xe = XM(i, U instanceof Ui ? U : Ui.EMPTY_NODE);
              C = n.filter.updateFullNode(e.eventCache.getNode(), xe, c);
            } else {
              const U = CE(i, dm(e));
              C = n.filter.updateFullNode(e.eventCache.getNode(), U, c);
            }
          else {
            const U = sr(t);
            if ('.priority' === U) {
              (0, je.hu)(1 === Cf(t), "Can't have a priority with additional path components");
              const se = p.getNode();
              I = e.serverCache.getNode();
              const xe = OT(i, t, se, I);
              C = null != xe ? n.filter.updatePriority(se, xe) : p.getNode();
            } else {
              const se = Ts(t);
              let xe;
              if (p.isCompleteForChild(U)) {
                I = e.serverCache.getNode();
                const rt = OT(i, t, p.getNode(), I);
                xe =
                  null != rt ? p.getNode().getImmediateChild(U).updateChild(se, rt) : p.getNode().getImmediateChild(U);
              } else xe = JM(i, U, e.serverCache);
              C = null != xe ? n.filter.updateChild(p.getNode(), U, xe, se, o, c) : p.getNode();
            }
          }
          return vb(e, C, p.isFullyInitialized() || or(t), n.filter.filtersNodes());
        }
      }
      function EE(n, e, t, i, o, c, p, C) {
        const I = e.serverCache;
        let U;
        const se = p ? n.filter : n.filter.getIndexedFilter();
        if (or(t)) U = se.updateFullNode(I.getNode(), i, null);
        else if (se.filtersNodes() && !I.isFiltered()) {
          const Ut = I.getNode().updateChild(t, i);
          U = se.updateFullNode(I.getNode(), Ut, null);
        } else {
          const Ut = sr(t);
          if (!I.isCompleteForPath(t) && Cf(t) > 1) return e;
          const qt = Ts(t),
            Ln = I.getNode().getImmediateChild(Ut).updateChild(qt, i);
          U =
            '.priority' === Ut ? se.updatePriority(I.getNode(), Ln) : se.updateChild(I.getNode(), Ut, Ln, qt, LT, null);
        }
        const xe = ST(e, U, I.isFullyInitialized() || or(t), se.filtersNodes());
        return NT(n, xe, t, o, new eS(o, xe, c), C);
      }
      function tS(n, e, t, i, o, c, p) {
        const C = e.eventCache;
        let I, U;
        const se = new eS(o, e, c);
        if (or(t))
          (U = n.filter.updateFullNode(e.eventCache.getNode(), i, p)), (I = vb(e, U, !0, n.filter.filtersNodes()));
        else {
          const xe = sr(t);
          if ('.priority' === xe)
            (U = n.filter.updatePriority(e.eventCache.getNode(), i)),
              (I = vb(e, U, C.isFullyInitialized(), C.isFiltered()));
          else {
            const rt = Ts(t),
              Ut = C.getNode().getImmediateChild(xe);
            let qt;
            if (or(rt)) qt = i;
            else {
              const Mn = se.getCompleteChild(xe);
              qt =
                null != Mn
                  ? '.priority' === RM(rt) && Mn.getChild(cT(rt)).isEmpty()
                    ? Mn
                    : Mn.updateChild(rt, i)
                  : Ui.EMPTY_NODE;
            }
            I = Ut.equals(qt)
              ? e
              : vb(
                  e,
                  n.filter.updateChild(C.getNode(), xe, qt, rt, se, p),
                  C.isFullyInitialized(),
                  n.filter.filtersNodes()
                );
          }
        }
        return I;
      }
      function BT(n, e) {
        return n.eventCache.isCompleteForChild(e);
      }
      function VT(n, e, t) {
        return (
          t.foreach((i, o) => {
            e = e.updateChild(i, o);
          }),
          e
        );
      }
      function nS(n, e, t, i, o, c, p, C) {
        if (e.serverCache.getNode().isEmpty() && !e.serverCache.isFullyInitialized()) return e;
        let U,
          I = e;
        U = or(t) ? i : new $s(null).setTree(t, i);
        const se = e.serverCache.getNode();
        return (
          U.children.inorderTraversal((xe, rt) => {
            if (se.hasChild(xe)) {
              const qt = VT(0, e.serverCache.getNode().getImmediateChild(xe), rt);
              I = EE(n, I, new Jr(xe), qt, o, c, p, C);
            }
          }),
          U.children.inorderTraversal((xe, rt) => {
            const Ut = !e.serverCache.isCompleteForChild(xe) && void 0 === rt.value;
            if (!se.hasChild(xe) && !Ut) {
              const Mn = VT(0, e.serverCache.getNode().getImmediateChild(xe), rt);
              I = EE(n, I, new Jr(xe), Mn, o, c, p, C);
            }
          }),
          I
        );
      }
      class tO {
        constructor(e, t) {
          (this.query_ = e), (this.eventRegistrations_ = []);
          const i = this.query_._queryParams,
            o = new UM(i.getIndex()),
            c = (function mk(n) {
              return n.loadsAllData() ? new UM(n.getIndex()) : n.hasLimit() ? new pk(n) : new gb(n);
            })(i);
          this.processor_ = (function Yk(n) {
            return { filter: n };
          })(c);
          const p = t.serverCache,
            C = t.eventCache,
            I = o.updateFullNode(Ui.EMPTY_NODE, p.getNode(), null),
            U = c.updateFullNode(Ui.EMPTY_NODE, C.getNode(), null),
            se = new wf(I, p.isFullyInitialized(), o.filtersNodes()),
            xe = new wf(U, C.isFullyInitialized(), c.filtersNodes());
          (this.viewCache_ = yE(xe, se)), (this.eventGenerator_ = new Mk(this.query_));
        }
        get query() {
          return this.query_;
        }
      }
      function rO(n, e) {
        const t = dm(n.viewCache_);
        return t && (n.query._queryParams.loadsAllData() || (!or(e) && !t.getImmediateChild(sr(e)).isEmpty()))
          ? t.getChild(e)
          : null;
      }
      function UT(n) {
        return 0 === n.eventRegistrations_.length;
      }
      function jT(n, e, t) {
        const i = [];
        if (t) {
          (0, je.hu)(null == e, 'A cancel should cancel all event registrations.');
          const o = n.query._path;
          n.eventRegistrations_.forEach((c) => {
            const p = c.createCancelEvent(t, o);
            p && i.push(p);
          });
        }
        if (e) {
          let o = [];
          for (let c = 0; c < n.eventRegistrations_.length; ++c) {
            const p = n.eventRegistrations_[c];
            if (p.matches(e)) {
              if (e.hasAnyCallback()) {
                o = o.concat(n.eventRegistrations_.slice(c + 1));
                break;
              }
            } else o.push(p);
          }
          n.eventRegistrations_ = o;
        } else n.eventRegistrations_ = [];
        return i;
      }
      function HT(n, e, t, i) {
        e.type === fu.MERGE &&
          null !== e.source.queryId &&
          ((0, je.hu)(dm(n.viewCache_), 'We should always have a full cache before handling merges'),
          (0, je.hu)(vE(n.viewCache_), 'Missing event cache, even though we have a server cache'));
        const o = n.viewCache_,
          c = (function qk(n, e, t, i, o) {
            const c = new $k();
            let p, C;
            if (t.type === fu.OVERWRITE) {
              const U = t;
              U.source.fromUser
                ? (p = tS(n, e, U.path, U.snap, i, o, c))
                : ((0, je.hu)(U.source.fromServer, 'Unknown source.'),
                  (C = U.source.tagged || (e.serverCache.isFiltered() && !or(U.path))),
                  (p = EE(n, e, U.path, U.snap, i, o, C, c)));
            } else if (t.type === fu.MERGE) {
              const U = t;
              U.source.fromUser
                ? (p = (function Qk(n, e, t, i, o, c, p) {
                    let C = e;
                    return (
                      i.foreach((I, U) => {
                        const se = fo(t, I);
                        BT(e, sr(se)) && (C = tS(n, C, se, U, o, c, p));
                      }),
                      i.foreach((I, U) => {
                        const se = fo(t, I);
                        BT(e, sr(se)) || (C = tS(n, C, se, U, o, c, p));
                      }),
                      C
                    );
                  })(n, e, U.path, U.children, i, o, c))
                : ((0, je.hu)(U.source.fromServer, 'Unknown source.'),
                  (C = U.source.tagged || e.serverCache.isFiltered()),
                  (p = nS(n, e, U.path, U.children, i, o, C, c)));
            } else if (t.type === fu.ACK_USER_WRITE) {
              const U = t;
              p = U.revert
                ? (function eO(n, e, t, i, o, c) {
                    let p;
                    if (null != wE(i, t)) return e;
                    {
                      const C = new eS(i, e, o),
                        I = e.eventCache.getNode();
                      let U;
                      if (or(t) || '.priority' === sr(t)) {
                        let se;
                        if (e.serverCache.isFullyInitialized()) se = CE(i, dm(e));
                        else {
                          const xe = e.serverCache.getNode();
                          (0, je.hu)(xe instanceof Ui, 'serverChildren would be complete if leaf node'),
                            (se = XM(i, xe));
                        }
                        (se = se), (U = n.filter.updateFullNode(I, se, c));
                      } else {
                        const se = sr(t);
                        let xe = JM(i, se, e.serverCache);
                        null == xe && e.serverCache.isCompleteForChild(se) && (xe = I.getImmediateChild(se)),
                          (U =
                            null != xe
                              ? n.filter.updateChild(I, se, xe, Ts(t), C, c)
                              : e.eventCache.getNode().hasChild(se)
                              ? n.filter.updateChild(I, se, Ui.EMPTY_NODE, Ts(t), C, c)
                              : I),
                          U.isEmpty() &&
                            e.serverCache.isFullyInitialized() &&
                            ((p = CE(i, dm(e))), p.isLeafNode() && (U = n.filter.updateFullNode(U, p, c)));
                      }
                      return (
                        (p = e.serverCache.isFullyInitialized() || null != wE(i, Lr())),
                        vb(e, U, p, n.filter.filtersNodes())
                      );
                    }
                  })(n, e, U.path, i, o, c)
                : (function Xk(n, e, t, i, o, c, p) {
                    if (null != wE(o, t)) return e;
                    const C = e.serverCache.isFiltered(),
                      I = e.serverCache;
                    if (null != i.value) {
                      if ((or(t) && I.isFullyInitialized()) || I.isCompleteForPath(t))
                        return EE(n, e, t, I.getNode().getChild(t), o, c, C, p);
                      if (or(t)) {
                        let U = new $s(null);
                        return (
                          I.getNode().forEachChild(Ld, (se, xe) => {
                            U = U.set(new Jr(se), xe);
                          }),
                          nS(n, e, t, U, o, c, C, p)
                        );
                      }
                      return e;
                    }
                    {
                      let U = new $s(null);
                      return (
                        i.foreach((se, xe) => {
                          const rt = fo(t, se);
                          I.isCompleteForPath(rt) && (U = U.set(se, I.getNode().getChild(rt)));
                        }),
                        nS(n, e, t, U, o, c, C, p)
                      );
                    }
                  })(n, e, U.path, U.affectedTree, i, o, c);
            } else {
              if (t.type !== fu.LISTEN_COMPLETE) throw (0, je.g5)('Unknown operation type: ' + t.type);
              p = (function Jk(n, e, t, i, o) {
                const c = e.serverCache;
                return NT(n, ST(e, c.getNode(), c.isFullyInitialized() || or(t), c.isFiltered()), t, i, LT, o);
              })(n, e, t.path, i, c);
            }
            const I = c.getChanges();
            return (
              (function Zk(n, e, t) {
                const i = e.eventCache;
                if (i.isFullyInitialized()) {
                  const o = i.getNode().isLeafNode() || i.getNode().isEmpty(),
                    c = vE(n);
                  (t.length > 0 ||
                    !n.eventCache.isFullyInitialized() ||
                    (o && !i.getNode().equals(c)) ||
                    !i.getNode().getPriority().equals(c.getPriority())) &&
                    t.push(ET(vE(e)));
                }
              })(e, p, I),
              { viewCache: p, changes: I }
            );
          })(n.processor_, o, e, t, i);
        return (
          (function Kk(n, e) {
            (0, je.hu)(e.eventCache.getNode().isIndexed(n.filter.getIndex()), 'Event snap not indexed'),
              (0, je.hu)(e.serverCache.getNode().isIndexed(n.filter.getIndex()), 'Server snap not indexed');
          })(n.processor_, c.viewCache),
          (0, je.hu)(
            c.viewCache.serverCache.isFullyInitialized() || !o.serverCache.isFullyInitialized(),
            'Once a server snap is complete, it should never go back'
          ),
          (n.viewCache_ = c.viewCache),
          GT(n, c.changes, c.viewCache.eventCache.getNode(), null)
        );
      }
      function GT(n, e, t, i) {
        return (function Sk(n, e, t, i) {
          const o = [],
            c = [];
          return (
            e.forEach((p) => {
              'child_changed' === p.type &&
                n.index_.indexedValueChanged(p.oldSnap, p.snapshotNode) &&
                c.push(
                  (function fk(n, e) {
                    return { type: 'child_moved', snapshotNode: e, childName: n };
                  })(p.childName, p.snapshotNode)
                );
            }),
            yb(n, o, 'child_removed', e, i, t),
            yb(n, o, 'child_added', e, i, t),
            yb(n, o, 'child_moved', c, i, t),
            yb(n, o, 'child_changed', e, i, t),
            yb(n, o, 'value', e, i, t),
            o
          );
        })(n.eventGenerator_, e, t, i ? [i] : n.eventRegistrations_);
      }
      let xE, ME;
      class zT {
        constructor() {
          this.views = new Map();
        }
      }
      function iS(n, e, t, i) {
        const o = e.source.queryId;
        if (null !== o) {
          const c = n.views.get(o);
          return (0, je.hu)(null != c, 'SyncTree gave us an op for an invalid query.'), HT(c, e, t, i);
        }
        {
          let c = [];
          for (const p of n.views.values()) c = c.concat(HT(p, e, t, i));
          return c;
        }
      }
      function $T(n, e, t, i, o) {
        const p = n.views.get(e._queryIdentifier);
        if (!p) {
          let C = CE(t, o ? i : null),
            I = !1;
          C ? (I = !0) : i instanceof Ui ? ((C = XM(t, i)), (I = !1)) : ((C = Ui.EMPTY_NODE), (I = !1));
          const U = yE(new wf(C, I, !1), new wf(i, o, !1));
          return new tO(e, U);
        }
        return p;
      }
      function WT(n) {
        const e = [];
        for (const t of n.views.values()) t.query._queryParams.loadsAllData() || e.push(t);
        return e;
      }
      function xf(n, e) {
        let t = null;
        for (const i of n.views.values()) t = t || rO(i, e);
        return t;
      }
      function YT(n, e) {
        return e._queryParams.loadsAllData() ? DE(n) : n.views.get(e._queryIdentifier);
      }
      function KT(n, e) {
        return null != YT(n, e);
      }
      function Df(n) {
        return null != DE(n);
      }
      function DE(n) {
        for (const e of n.views.values()) if (e.query._queryParams.loadsAllData()) return e;
        return null;
      }
      let pO = 1;
      class qT {
        constructor(e) {
          (this.listenProvider_ = e),
            (this.syncPointTree_ = new $s(null)),
            (this.pendingWriteTree_ = (function Gk() {
              return { visibleWrites: Yu.empty(), allWrites: [], lastWriteId: -1 };
            })()),
            (this.tagToQueryMap = new Map()),
            (this.queryToTagMap = new Map());
        }
      }
      function rS(n, e, t, i, o) {
        return (
          (function Rk(n, e, t, i, o) {
            (0, je.hu)(i > n.lastWriteId, 'Stacking an older write on top of newer ones'),
              void 0 === o && (o = !0),
              n.allWrites.push({ path: e, snap: t, writeId: i, visible: o }),
              o && (n.visibleWrites = bb(n.visibleWrites, e, t)),
              (n.lastWriteId = i);
          })(n.pendingWriteTree_, e, t, i, o),
          o ? m_(n, new um({ fromUser: !0, fromServer: !1, queryId: null, tagged: !1 }, e, t)) : []
        );
      }
      function Mf(n, e, t = !1) {
        const i = (function Ok(n, e) {
          for (let t = 0; t < n.allWrites.length; t++) {
            const i = n.allWrites[t];
            if (i.writeId === e) return i;
          }
          return null;
        })(n.pendingWriteTree_, e);
        if (
          (function Pk(n, e) {
            const t = n.allWrites.findIndex((C) => C.writeId === e);
            (0, je.hu)(t >= 0, 'removeWrite called with nonexistent writeId.');
            const i = n.allWrites[t];
            n.allWrites.splice(t, 1);
            let o = i.visible,
              c = !1,
              p = n.allWrites.length - 1;
            for (; o && p >= 0; ) {
              const C = n.allWrites[p];
              C.visible && (p >= t && Fk(C, i.path) ? (o = !1) : hu(i.path, C.path) && (c = !0)), p--;
            }
            return (
              !!o &&
              (c
                ? ((function Lk(n) {
                    (n.visibleWrites = RT(n.allWrites, Nk, Lr())),
                      (n.lastWriteId = n.allWrites.length > 0 ? n.allWrites[n.allWrites.length - 1].writeId : -1);
                  })(n),
                  !0)
                : (i.snap
                    ? (n.visibleWrites = AT(n.visibleWrites, i.path))
                    : Ra(i.children, (I) => {
                        n.visibleWrites = AT(n.visibleWrites, fo(i.path, I));
                      }),
                  !0))
            );
          })(n.pendingWriteTree_, e)
        ) {
          let c = new $s(null);
          return (
            null != i.snap
              ? (c = c.set(Lr(), !0))
              : Ra(i.children, (p) => {
                  c = c.set(new Jr(p), !0);
                }),
            m_(n, new _E(i.path, c, t))
          );
        }
        return [];
      }
      function Cb(n, e, t) {
        return m_(n, new um({ fromUser: !1, fromServer: !0, queryId: null, tagged: !1 }, e, t));
      }
      function sS(n, e, t, i) {
        const o = e._path,
          c = n.syncPointTree_.get(o);
        let p = [];
        if (c && ('default' === e._queryIdentifier || KT(c, e))) {
          const C = (function dO(n, e, t, i) {
            const o = e._queryIdentifier,
              c = [];
            let p = [];
            const C = Df(n);
            if ('default' === o)
              for (const [I, U] of n.views.entries())
                (p = p.concat(jT(U, t, i))),
                  UT(U) && (n.views.delete(I), U.query._queryParams.loadsAllData() || c.push(U.query));
            else {
              const I = n.views.get(o);
              I &&
                ((p = p.concat(jT(I, t, i))),
                UT(I) && (n.views.delete(o), I.query._queryParams.loadsAllData() || c.push(I.query)));
            }
            return (
              C &&
                !Df(n) &&
                c.push(
                  new ((function lO() {
                    return (0, je.hu)(xE, 'Reference.ts has not been loaded'), xE;
                  })())(e._repo, e._path)
                ),
              { removed: c, events: p }
            );
          })(c, e, t, i);
          (function cO(n) {
            return 0 === n.views.size;
          })(c) && (n.syncPointTree_ = n.syncPointTree_.remove(o));
          const I = C.removed;
          p = C.events;
          const U = -1 !== I.findIndex((xe) => xe._queryParams.loadsAllData()),
            se = n.syncPointTree_.findOnPath(o, (xe, rt) => Df(rt));
          if (U && !se) {
            const xe = n.syncPointTree_.subtree(o);
            if (!xe.isEmpty()) {
              const rt = (function wO(n) {
                return n.fold((e, t, i) => {
                  if (t && Df(t)) return [DE(t)];
                  {
                    let o = [];
                    return (
                      t && (o = WT(t)),
                      Ra(i, (c, p) => {
                        o = o.concat(p);
                      }),
                      o
                    );
                  }
                });
              })(xe);
              for (let Ut = 0; Ut < rt.length; ++Ut) {
                const qt = rt[Ut],
                  Mn = qt.query,
                  Ln = JT(n, qt);
                n.listenProvider_.startListening(wb(Mn), AE(n, Mn), Ln.hashFn, Ln.onComplete);
              }
            }
          }
          if (!se && I.length > 0 && !i)
            if (U) {
              const xe = null;
              n.listenProvider_.stopListening(wb(e), xe);
            } else
              I.forEach((xe) => {
                const rt = n.queryToTagMap.get(TE(xe));
                n.listenProvider_.stopListening(wb(xe), rt);
              });
          !(function EO(n, e) {
            for (let t = 0; t < e.length; ++t) {
              const i = e[t];
              if (!i._queryParams.loadsAllData()) {
                const o = TE(i),
                  c = n.queryToTagMap.get(o);
                n.queryToTagMap.delete(o), n.tagToQueryMap.delete(c);
              }
            }
          })(n, I);
        }
        return p;
      }
      function ZT(n, e, t) {
        const i = e._path;
        let o = null,
          c = !1;
        n.syncPointTree_.foreachOnPath(i, (xe, rt) => {
          const Ut = kl(xe, i);
          (o = o || xf(rt, Ut)), (c = c || Df(rt));
        });
        let C,
          p = n.syncPointTree_.get(i);
        p
          ? ((c = c || Df(p)), (o = o || xf(p, Lr())))
          : ((p = new zT()), (n.syncPointTree_ = n.syncPointTree_.set(i, p))),
          null != o
            ? (C = !0)
            : ((C = !1),
              (o = Ui.EMPTY_NODE),
              n.syncPointTree_.subtree(i).foreachChild((rt, Ut) => {
                const qt = xf(Ut, Lr());
                qt && (o = o.updateImmediateChild(rt, qt));
              }));
        const I = KT(p, e);
        if (!I && !e._queryParams.loadsAllData()) {
          const xe = TE(e);
          (0, je.hu)(!n.queryToTagMap.has(xe), 'View does not exist, but we have a tag');
          const rt = (function xO() {
            return pO++;
          })();
          n.queryToTagMap.set(xe, rt), n.tagToQueryMap.set(rt, xe);
        }
        let se = (function uO(n, e, t, i, o, c) {
          const p = $T(n, e, i, o, c);
          return (
            n.views.has(e._queryIdentifier) || n.views.set(e._queryIdentifier, p),
            (function sO(n, e) {
              n.eventRegistrations_.push(e);
            })(p, t),
            (function oO(n, e) {
              const t = n.viewCache_.eventCache,
                i = [];
              return (
                t.getNode().isLeafNode() ||
                  t.getNode().forEachChild(zs, (c, p) => {
                    i.push(d_(c, p));
                  }),
                t.isFullyInitialized() && i.push(ET(t.getNode())),
                GT(n, i, t.getNode(), e)
              );
            })(p, t)
          );
        })(p, e, t, bE(n.pendingWriteTree_, i), o, C);
        if (!I && !c) {
          const xe = YT(p, e);
          se = se.concat(
            (function DO(n, e, t) {
              const i = e._path,
                o = AE(n, e),
                c = JT(n, t),
                p = n.listenProvider_.startListening(wb(e), o, c.hashFn, c.onComplete),
                C = n.syncPointTree_.subtree(i);
              if (o) (0, je.hu)(!Df(C.value), "If we're adding a query, it shouldn't be shadowed");
              else {
                const I = C.fold((U, se, xe) => {
                  if (!or(U) && se && Df(se)) return [DE(se).query];
                  {
                    let rt = [];
                    return (
                      se && (rt = rt.concat(WT(se).map((Ut) => Ut.query))),
                      Ra(xe, (Ut, qt) => {
                        rt = rt.concat(qt);
                      }),
                      rt
                    );
                  }
                });
                for (let U = 0; U < I.length; ++U) {
                  const se = I[U];
                  n.listenProvider_.stopListening(wb(se), AE(n, se));
                }
              }
              return p;
            })(n, e, xe)
          );
        }
        return se;
      }
      function SE(n, e, t) {
        const o = n.pendingWriteTree_,
          c = n.syncPointTree_.findOnPath(e, (p, C) => {
            const U = xf(C, kl(p, e));
            if (U) return U;
          });
        return kT(o, e, c, t, !0);
      }
      function m_(n, e) {
        return QT(e, n.syncPointTree_, null, bE(n.pendingWriteTree_, Lr()));
      }
      function QT(n, e, t, i) {
        if (or(n.path)) return XT(n, e, t, i);
        {
          const o = e.get(Lr());
          null == t && null != o && (t = xf(o, Lr()));
          let c = [];
          const p = sr(n.path),
            C = n.operationForChild(p),
            I = e.children.get(p);
          if (I && C) {
            const U = t ? t.getImmediateChild(p) : null,
              se = PT(i, p);
            c = c.concat(QT(C, I, U, se));
          }
          return o && (c = c.concat(iS(o, n, i, t))), c;
        }
      }
      function XT(n, e, t, i) {
        const o = e.get(Lr());
        null == t && null != o && (t = xf(o, Lr()));
        let c = [];
        return (
          e.children.inorderTraversal((p, C) => {
            const I = t ? t.getImmediateChild(p) : null,
              U = PT(i, p),
              se = n.operationForChild(p);
            se && (c = c.concat(XT(se, C, I, U)));
          }),
          o && (c = c.concat(iS(o, n, i, t))),
          c
        );
      }
      function JT(n, e) {
        const t = e.query,
          i = AE(n, t);
        return {
          hashFn: () =>
            (
              (function nO(n) {
                return n.viewCache_.serverCache.getNode();
              })(e) || Ui.EMPTY_NODE
            ).hash(),
          onComplete: (o) => {
            if ('ok' === o)
              return i
                ? (function yO(n, e, t) {
                    const i = oS(n, t);
                    if (i) {
                      const o = aS(i),
                        c = o.path,
                        p = o.queryId,
                        C = kl(c, e);
                      return lS(n, c, new _b(YM(p), C));
                    }
                    return [];
                  })(n, t._path, i)
                : (function _O(n, e) {
                    return m_(n, new _b({ fromUser: !1, fromServer: !0, queryId: null, tagged: !1 }, e));
                  })(n, t._path);
            {
              const c = (function mR(n, e) {
                let t = 'Unknown Error';
                'too_big' === n
                  ? (t = 'The data requested exceeds the maximum size that can be accessed with a single request.')
                  : 'permission_denied' === n
                  ? (t = "Client doesn't have permission to access the desired data.")
                  : 'unavailable' === n && (t = 'The service is unavailable');
                const i = new Error(n + ' at ' + e._path.toString() + ': ' + t);
                return (i.code = n.toUpperCase()), i;
              })(o, t);
              return sS(n, t, null, c);
            }
          },
        };
      }
      function AE(n, e) {
        const t = TE(e);
        return n.queryToTagMap.get(t);
      }
      function TE(n) {
        return n._path.toString() + '$' + n._queryIdentifier;
      }
      function oS(n, e) {
        return n.tagToQueryMap.get(e);
      }
      function aS(n) {
        const e = n.indexOf('$');
        return (
          (0, je.hu)(-1 !== e && e < n.length - 1, 'Bad queryKey.'),
          { queryId: n.substr(e + 1), path: new Jr(n.substr(0, e)) }
        );
      }
      function lS(n, e, t) {
        const i = n.syncPointTree_.get(e);
        return (
          (0, je.hu)(i, "Missing sync point for query tag that we're tracking"),
          iS(i, t, bE(n.pendingWriteTree_, e), null)
        );
      }
      function wb(n) {
        return n._queryParams.loadsAllData() && !n._queryParams.isDefault()
          ? new ((function fO() {
              return (0, je.hu)(ME, 'Reference.ts has not been loaded'), ME;
            })())(n._repo, n._path)
          : n;
      }
      class cS {
        constructor(e) {
          this.node_ = e;
        }
        getImmediateChild(e) {
          const t = this.node_.getImmediateChild(e);
          return new cS(t);
        }
        node() {
          return this.node_;
        }
      }
      class uS {
        constructor(e, t) {
          (this.syncTree_ = e), (this.path_ = t);
        }
        getImmediateChild(e) {
          const t = fo(this.path_, e);
          return new uS(this.syncTree_, t);
        }
        node() {
          return SE(this.syncTree_, this.path_);
        }
      }
      const eI = function (n, e, t) {
          return n && 'object' == typeof n
            ? ((0, je.hu)('.sv' in n, 'Unexpected leaf node or priority contents'),
              'string' == typeof n['.sv']
                ? SO(n['.sv'], e, t)
                : 'object' == typeof n['.sv']
                ? AO(n['.sv'], e)
                : void (0, je.hu)(!1, 'Unexpected server value: ' + JSON.stringify(n, null, 2)))
            : n;
        },
        SO = function (n, e, t) {
          if ('timestamp' === n) return t.timestamp;
          (0, je.hu)(!1, 'Unexpected server value: ' + n);
        },
        AO = function (n, e, t) {
          n.hasOwnProperty('increment') || (0, je.hu)(!1, 'Unexpected server value: ' + JSON.stringify(n, null, 2));
          const i = n.increment;
          'number' != typeof i && (0, je.hu)(!1, 'Unexpected increment value: ' + i);
          const o = e.node();
          if (((0, je.hu)(null != o, 'Expected ChildrenNode.EMPTY_NODE for nulls'), !o.isLeafNode())) return i;
          const p = o.getValue();
          return 'number' != typeof p ? i : p + i;
        },
        tI = function (n, e, t, i) {
          return hS(e, new uS(t, n), i);
        },
        dS = function (n, e, t) {
          return hS(n, new cS(e), t);
        };
      function hS(n, e, t) {
        const i = n.getPriority().val(),
          o = eI(i, e.getImmediateChild('.priority'), t);
        let c;
        if (n.isLeafNode()) {
          const p = n,
            C = eI(p.getValue(), e, t);
          return C !== p.getValue() || o !== p.getPriority().val() ? new l_(C, bo(o)) : n;
        }
        {
          const p = n;
          return (
            (c = p),
            o !== p.getPriority().val() && (c = c.updatePriority(new l_(o))),
            p.forEachChild(zs, (C, I) => {
              const U = hS(I, e.getImmediateChild(C), t);
              U !== I && (c = c.updateImmediateChild(C, U));
            }),
            c
          );
        }
      }
      class fS {
        constructor(e = '', t = null, i = { children: {}, childCount: 0 }) {
          (this.name = e), (this.parent = t), (this.node = i);
        }
      }
      function IE(n, e) {
        let t = e instanceof Jr ? e : new Jr(e),
          i = n,
          o = sr(t);
        for (; null !== o; ) {
          const c = (0, je.DV)(i.node.children, o) || { children: {}, childCount: 0 };
          (i = new fS(o, i, c)), (t = Ts(t)), (o = sr(t));
        }
        return i;
      }
      function fm(n) {
        return n.node.value;
      }
      function pS(n, e) {
        (n.node.value = e), mS(n);
      }
      function nI(n) {
        return n.node.childCount > 0;
      }
      function RE(n, e) {
        Ra(n.node.children, (t, i) => {
          e(new fS(t, n, i));
        });
      }
      function iI(n, e, t, i) {
        t && !i && e(n),
          RE(n, (o) => {
            iI(o, e, !0, i);
          }),
          t && i && e(n);
      }
      function Eb(n) {
        return new Jr(null === n.parent ? n.name : Eb(n.parent) + '/' + n.name);
      }
      function mS(n) {
        null !== n.parent &&
          (function RO(n, e, t) {
            const i = (function TO(n) {
                return void 0 === fm(n) && !nI(n);
              })(t),
              o = (0, je.r3)(n.node.children, e);
            i && o
              ? (delete n.node.children[e], n.node.childCount--, mS(n))
              : !i && !o && ((n.node.children[e] = t.node), n.node.childCount++, mS(n));
          })(n.parent, n.name, n);
      }
      const kO = /[\[\].#$\/\u0000-\u001F\u007F]/,
        OO = /[\[\].#$\u0000-\u001F\u007F]/,
        gS = 10485760,
        kE = function (n) {
          return 'string' == typeof n && 0 !== n.length && !kO.test(n);
        },
        rI = function (n) {
          return 'string' == typeof n && 0 !== n.length && !OO.test(n);
        },
        xb = function (n) {
          return (
            null === n ||
            'string' == typeof n ||
            ('number' == typeof n && !sE(n)) ||
            (n && 'object' == typeof n && (0, je.r3)(n, '.sv'))
          );
        },
        Nd = function (n, e, t, i) {
          (i && void 0 === e) || Db((0, je.gK)(n, 'value'), e, t);
        },
        Db = function (n, e, t) {
          const i = t instanceof Jr ? new YR(t, n) : t;
          if (void 0 === e) throw new Error(n + 'contains undefined ' + lm(i));
          if ('function' == typeof e)
            throw new Error(n + 'contains a function ' + lm(i) + ' with contents = ' + e.toString());
          if (sE(e)) throw new Error(n + 'contains ' + e.toString() + ' ' + lm(i));
          if ('string' == typeof e && e.length > gS / 3 && (0, je.ug)(e) > gS)
            throw new Error(
              n + 'contains a string greater than ' + gS + ' utf8 bytes ' + lm(i) + " ('" + e.substring(0, 50) + "...')"
            );
          if (e && 'object' == typeof e) {
            let o = !1,
              c = !1;
            if (
              (Ra(e, (p, C) => {
                if ('.value' === p) o = !0;
                else if ('.priority' !== p && '.sv' !== p && ((c = !0), !kE(p)))
                  throw new Error(
                    n +
                      ' contains an invalid key (' +
                      p +
                      ') ' +
                      lm(i) +
                      '.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                  );
                (function KR(n, e) {
                  n.parts_.length > 0 && (n.byteLength_ += 1),
                    n.parts_.push(e),
                    (n.byteLength_ += (0, je.ug)(e)),
                    uT(n);
                })(i, p),
                  Db(n, C, i),
                  (function qR(n) {
                    const e = n.parts_.pop();
                    (n.byteLength_ -= (0, je.ug)(e)), n.parts_.length > 0 && (n.byteLength_ -= 1);
                  })(i);
              }),
              o && c)
            )
              throw new Error(n + ' contains ".value" child ' + lm(i) + ' in addition to actual children.');
          }
        },
        sI = function (n, e, t, i) {
          if (i && void 0 === e) return;
          const o = (0, je.gK)(n, 'values');
          if (!e || 'object' != typeof e || Array.isArray(e))
            throw new Error(o + ' must be an object containing the children to replace.');
          const c = [];
          Ra(e, (p, C) => {
            const I = new Jr(p);
            if ((Db(o, C, fo(t, I)), '.priority' === RM(I) && !xb(C)))
              throw new Error(
                o +
                  "contains an invalid value for '" +
                  I.toString() +
                  "', which must be a valid Firebase priority (a string, finite number, server value, or null)."
              );
            c.push(I);
          }),
            (function (n, e) {
              let t, i;
              for (t = 0; t < e.length; t++) {
                i = e[t];
                const c = ub(i);
                for (let p = 0; p < c.length; p++)
                  if (('.priority' !== c[p] || p !== c.length - 1) && !kE(c[p]))
                    throw new Error(
                      n +
                        'contains an invalid key (' +
                        c[p] +
                        ') in path ' +
                        i.toString() +
                        '. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"'
                    );
              }
              e.sort(WR);
              let o = null;
              for (t = 0; t < e.length; t++) {
                if (((i = e[t]), null !== o && hu(o, i)))
                  throw new Error(
                    n + 'contains a path ' + o.toString() + ' that is ancestor of another path ' + i.toString()
                  );
                o = i;
              }
            })(o, c);
        },
        _S = function (n, e, t) {
          if (!t || void 0 !== e) {
            if (sE(e))
              throw new Error(
                (0, je.gK)(n, 'priority') +
                  'is ' +
                  e.toString() +
                  ', but must be a valid Firebase priority (a string, finite number, server value, or null).'
              );
            if (!xb(e))
              throw new Error(
                (0, je.gK)(n, 'priority') +
                  'must be a valid Firebase priority (a string, finite number, server value, or null).'
              );
          }
        },
        Mb = function (n, e, t, i) {
          if (!((i && void 0 === t) || kE(t)))
            throw new Error(
              (0, je.gK)(n, e) +
                'was an invalid key = "' +
                t +
                '".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").'
            );
        },
        Sb = function (n, e, t, i) {
          if (!((i && void 0 === t) || rI(t)))
            throw new Error(
              (0, je.gK)(n, e) +
                'was an invalid path = "' +
                t +
                '". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"'
            );
        },
        pu = function (n, e) {
          if ('.info' === sr(e)) throw new Error(n + " failed = Can't modify data under /.info/");
        },
        oI = function (n, e) {
          const t = e.path.toString();
          if (
            'string' != typeof e.repoInfo.host ||
            0 === e.repoInfo.host.length ||
            (!kE(e.repoInfo.namespace) && 'localhost' !== e.repoInfo.host.split(':')[0]) ||
            (0 !== t.length &&
              !(function (n) {
                return n && (n = n.replace(/^\/*\.info(\/|$)/, '/')), rI(n);
              })(t))
          )
            throw new Error(
              (0, je.gK)(n, 'url') +
                'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".'
            );
        };
      class NO {
        constructor() {
          (this.eventLists_ = []), (this.recursionDepth_ = 0);
        }
      }
      function OE(n, e) {
        let t = null;
        for (let i = 0; i < e.length; i++) {
          const o = e[i],
            c = o.getPath();
          null !== t && !kM(c, t.path) && (n.eventLists_.push(t), (t = null)),
            null === t && (t = { events: [], path: c }),
            t.events.push(o);
        }
        t && n.eventLists_.push(t);
      }
      function yS(n, e, t) {
        OE(n, t), aI(n, (i) => kM(i, e));
      }
      function mu(n, e, t) {
        OE(n, t), aI(n, (i) => hu(i, e) || hu(e, i));
      }
      function aI(n, e) {
        n.recursionDepth_++;
        let t = !0;
        for (let i = 0; i < n.eventLists_.length; i++) {
          const o = n.eventLists_[i];
          o && (e(o.path) ? (BO(n.eventLists_[i]), (n.eventLists_[i] = null)) : (t = !1));
        }
        t && (n.eventLists_ = []), n.recursionDepth_--;
      }
      function BO(n) {
        for (let e = 0; e < n.events.length; e++) {
          const t = n.events[e];
          if (null !== t) {
            n.events[e] = null;
            const i = t.getEventRunner();
            om && Ia('event: ' + t.toString()), o_(i);
          }
        }
      }
      const lI = 'repo_interrupt';
      class UO {
        constructor(e, t, i, o) {
          (this.repoInfo_ = e),
            (this.forceRestClient_ = t),
            (this.authTokenProvider_ = i),
            (this.appCheckProvider_ = o),
            (this.dataUpdateCount = 0),
            (this.statsListener_ = null),
            (this.eventQueue_ = new NO()),
            (this.nextWriteId_ = 1),
            (this.interceptServerDataCallback_ = null),
            (this.onDisconnect_ = gE()),
            (this.transactionQueueTree_ = new fS()),
            (this.persistentConnection_ = null),
            (this.key = this.repoInfo_.toURLString());
        }
        toString() {
          return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;
        }
      }
      function cI(n) {
        const t = n.infoData_.getNode(new Jr('.info/serverTimeOffset')).val() || 0;
        return new Date().getTime() + t;
      }
      function Ab(n) {
        return (function (n) {
          return ((n = n || {}).timestamp = n.timestamp || new Date().getTime()), n;
        })({ timestamp: cI(n) });
      }
      function uI(n, e, t, i, o) {
        n.dataUpdateCount++;
        const c = new Jr(e);
        t = n.interceptServerDataCallback_ ? n.interceptServerDataCallback_(e, t) : t;
        let p = [];
        if (o)
          if (i) {
            const I = (0, je.UI)(t, (U) => bo(U));
            p = (function bO(n, e, t, i) {
              const o = oS(n, i);
              if (o) {
                const c = aS(o),
                  p = c.path,
                  C = c.queryId,
                  I = kl(p, e),
                  U = $s.fromObject(t);
                return lS(n, p, new f_(YM(C), I, U));
              }
              return [];
            })(n.serverSyncTree_, c, I, o);
          } else {
            const I = bo(t);
            p = (function vO(n, e, t, i) {
              const o = oS(n, i);
              if (null != o) {
                const c = aS(o),
                  p = c.path,
                  C = c.queryId,
                  I = kl(p, e);
                return lS(n, p, new um(YM(C), I, t));
              }
              return [];
            })(n.serverSyncTree_, c, I, o);
          }
        else if (i) {
          const I = (0, je.UI)(t, (U) => bo(U));
          p = (function gO(n, e, t) {
            const i = $s.fromObject(t);
            return m_(n, new f_({ fromUser: !1, fromServer: !0, queryId: null, tagged: !1 }, e, i));
          })(n.serverSyncTree_, c, I);
        } else {
          const I = bo(t);
          p = Cb(n.serverSyncTree_, c, I);
        }
        let C = c;
        p.length > 0 && (C = __(n, c)), mu(n.eventQueue_, C, p);
      }
      function dI(n, e) {
        vS(n, 'connected', e),
          !1 === e &&
            (function $O(n) {
              g_(n, 'onDisconnectEvents');
              const e = Ab(n),
                t = gE();
              zM(n.onDisconnect_, Lr(), (o, c) => {
                const p = tI(o, c, n.serverSyncTree_, e);
                h_(t, o, p);
              });
              let i = [];
              zM(t, Lr(), (o, c) => {
                i = i.concat(Cb(n.serverSyncTree_, o, c));
                const p = ES(n, o);
                __(n, p);
              }),
                (n.onDisconnect_ = gE()),
                mu(n.eventQueue_, Lr(), i);
            })(n);
      }
      function vS(n, e, t) {
        const i = new Jr('/.info/' + e),
          o = bo(t);
        n.infoData_.updateSnapshot(i, o);
        const c = Cb(n.infoSyncTree_, i, o);
        mu(n.eventQueue_, i, c);
      }
      function PE(n) {
        return n.nextWriteId_++;
      }
      function bS(n, e, t, i, o) {
        g_(n, 'set', { path: e.toString(), value: t, priority: i });
        const c = Ab(n),
          p = bo(t, i),
          C = SE(n.serverSyncTree_, e),
          I = dS(p, C, c),
          U = PE(n),
          se = rS(n.serverSyncTree_, e, I, U, !0);
        OE(n.eventQueue_, se),
          n.server_.put(e.toString(), p.val(!0), (rt, Ut) => {
            const qt = 'ok' === rt;
            qt || Rl('set at ' + e + ' failed: ' + rt);
            const Mn = Mf(n.serverSyncTree_, U, !qt);
            mu(n.eventQueue_, e, Mn), Sf(0, o, rt, Ut);
          });
        const xe = ES(n, e);
        __(n, xe), mu(n.eventQueue_, xe, []);
      }
      function WO(n, e, t) {
        n.server_.onDisconnectCancel(e.toString(), (i, o) => {
          'ok' === i && GM(n.onDisconnect_, e), Sf(0, t, i, o);
        });
      }
      function hI(n, e, t, i) {
        const o = bo(t);
        n.server_.onDisconnectPut(e.toString(), o.val(!0), (c, p) => {
          'ok' === c && h_(n.onDisconnect_, e, o), Sf(0, i, c, p);
        });
      }
      function CS(n, e, t) {
        let i;
        (i = '.info' === sr(e._path) ? sS(n.infoSyncTree_, e, t) : sS(n.serverSyncTree_, e, t)),
          yS(n.eventQueue_, e._path, i);
      }
      function fI(n) {
        n.persistentConnection_ && n.persistentConnection_.interrupt(lI);
      }
      function g_(n, ...e) {
        let t = '';
        n.persistentConnection_ && (t = n.persistentConnection_.id + ':'), Ia(t, ...e);
      }
      function Sf(n, e, t, i) {
        e &&
          o_(() => {
            if ('ok' === t) e(null);
            else {
              const o = (t || 'error').toUpperCase();
              let c = o;
              i && (c += ': ' + i);
              const p = new Error(c);
              (p.code = o), e(p);
            }
          });
      }
      function wS(n, e, t) {
        return SE(n.serverSyncTree_, e, t) || Ui.EMPTY_NODE;
      }
      function FE(n, e = n.transactionQueueTree_) {
        if ((e || LE(n, e), fm(e))) {
          const t = mI(n, e);
          (0, je.hu)(t.length > 0, 'Sending zero length transaction queue'),
            t.every((o) => 0 === o.status) &&
              (function XO(n, e, t) {
                const i = t.map((U) => U.currentWriteId),
                  o = wS(n, e, i);
                let c = o;
                const p = o.hash();
                for (let U = 0; U < t.length; U++) {
                  const se = t[U];
                  (0, je.hu)(0 === se.status, 'tryToSendTransactionQueue_: items in queue should all be run.'),
                    (se.status = 1),
                    se.retryCount++;
                  const xe = kl(e, se.path);
                  c = c.updateChild(xe, se.currentOutputSnapshotRaw);
                }
                const C = c.val(!0),
                  I = e;
                n.server_.put(
                  I.toString(),
                  C,
                  (U) => {
                    g_(n, 'transaction put response', { path: I.toString(), status: U });
                    let se = [];
                    if ('ok' === U) {
                      const xe = [];
                      for (let rt = 0; rt < t.length; rt++)
                        (t[rt].status = 2),
                          (se = se.concat(Mf(n.serverSyncTree_, t[rt].currentWriteId))),
                          t[rt].onComplete &&
                            xe.push(() => t[rt].onComplete(null, !0, t[rt].currentOutputSnapshotResolved)),
                          t[rt].unwatcher();
                      LE(n, IE(n.transactionQueueTree_, e)), FE(n, n.transactionQueueTree_), mu(n.eventQueue_, e, se);
                      for (let rt = 0; rt < xe.length; rt++) o_(xe[rt]);
                    } else {
                      if ('datastale' === U)
                        for (let xe = 0; xe < t.length; xe++) t[xe].status = 3 === t[xe].status ? 4 : 0;
                      else {
                        Rl('transaction at ' + I.toString() + ' failed: ' + U);
                        for (let xe = 0; xe < t.length; xe++) (t[xe].status = 4), (t[xe].abortReason = U);
                      }
                      __(n, e);
                    }
                  },
                  p
                );
              })(n, Eb(e), t);
        } else
          nI(e) &&
            RE(e, (t) => {
              FE(n, t);
            });
      }
      function __(n, e) {
        const t = pI(n, e),
          i = Eb(t);
        return (
          (function JO(n, e, t) {
            if (0 === e.length) return;
            const i = [];
            let o = [];
            const p = e.filter((C) => 0 === C.status).map((C) => C.currentWriteId);
            for (let C = 0; C < e.length; C++) {
              const I = e[C],
                U = kl(t, I.path);
              let xe,
                se = !1;
              if (
                ((0, je.hu)(null !== U, 'rerunTransactionsUnderNode_: relativePath should not be null.'),
                4 === I.status)
              )
                (se = !0), (xe = I.abortReason), (o = o.concat(Mf(n.serverSyncTree_, I.currentWriteId, !0)));
              else if (0 === I.status)
                if (I.retryCount >= 25)
                  (se = !0), (xe = 'maxretry'), (o = o.concat(Mf(n.serverSyncTree_, I.currentWriteId, !0)));
                else {
                  const rt = wS(n, I.path, p);
                  I.currentInputSnapshot = rt;
                  const Ut = e[C].update(rt.val());
                  if (void 0 !== Ut) {
                    Db('transaction failed: Data returned ', Ut, I.path);
                    let qt = bo(Ut);
                    ('object' == typeof Ut && null != Ut && (0, je.r3)(Ut, '.priority')) ||
                      (qt = qt.updatePriority(rt.getPriority()));
                    const Ln = I.currentWriteId,
                      Ki = Ab(n),
                      er = dS(qt, rt, Ki);
                    (I.currentOutputSnapshotRaw = qt),
                      (I.currentOutputSnapshotResolved = er),
                      (I.currentWriteId = PE(n)),
                      p.splice(p.indexOf(Ln), 1),
                      (o = o.concat(rS(n.serverSyncTree_, I.path, er, I.currentWriteId, I.applyLocally))),
                      (o = o.concat(Mf(n.serverSyncTree_, Ln, !0)));
                  } else (se = !0), (xe = 'nodata'), (o = o.concat(Mf(n.serverSyncTree_, I.currentWriteId, !0)));
                }
              mu(n.eventQueue_, t, o),
                (o = []),
                se &&
                  ((e[C].status = 2),
                  setTimeout(e[C].unwatcher, Math.floor(0)),
                  e[C].onComplete &&
                    i.push(
                      'nodata' === xe
                        ? () => e[C].onComplete(null, !1, e[C].currentInputSnapshot)
                        : () => e[C].onComplete(new Error(xe), !1, null)
                    ));
            }
            LE(n, n.transactionQueueTree_);
            for (let C = 0; C < i.length; C++) o_(i[C]);
            FE(n, n.transactionQueueTree_);
          })(n, mI(n, t), i),
          i
        );
      }
      function pI(n, e) {
        let t,
          i = n.transactionQueueTree_;
        for (t = sr(e); null !== t && void 0 === fm(i); ) (i = IE(i, t)), (t = sr((e = Ts(e))));
        return i;
      }
      function mI(n, e) {
        const t = [];
        return gI(n, e, t), t.sort((i, o) => i.order - o.order), t;
      }
      function gI(n, e, t) {
        const i = fm(e);
        if (i) for (let o = 0; o < i.length; o++) t.push(i[o]);
        RE(e, (o) => {
          gI(n, o, t);
        });
      }
      function LE(n, e) {
        const t = fm(e);
        if (t) {
          let i = 0;
          for (let o = 0; o < t.length; o++) 2 !== t[o].status && ((t[i] = t[o]), i++);
          (t.length = i), pS(e, t.length > 0 ? t : void 0);
        }
        RE(e, (i) => {
          LE(n, i);
        });
      }
      function ES(n, e) {
        const t = Eb(pI(n, e)),
          i = IE(n.transactionQueueTree_, e);
        return (
          (function IO(n, e, t) {
            let i = t ? n : n.parent;
            for (; null !== i; ) {
              if (e(i)) return !0;
              i = i.parent;
            }
          })(i, (o) => {
            xS(n, o);
          }),
          xS(n, i),
          iI(i, (o) => {
            xS(n, o);
          }),
          t
        );
      }
      function xS(n, e) {
        const t = fm(e);
        if (t) {
          const i = [];
          let o = [],
            c = -1;
          for (let p = 0; p < t.length; p++)
            3 === t[p].status ||
              (1 === t[p].status
                ? ((0, je.hu)(c === p - 1, 'All SENT items should be at beginning of queue.'),
                  (c = p),
                  (t[p].status = 3),
                  (t[p].abortReason = 'set'))
                : ((0, je.hu)(0 === t[p].status, 'Unexpected transaction status in abort'),
                  t[p].unwatcher(),
                  (o = o.concat(Mf(n.serverSyncTree_, t[p].currentWriteId, !0))),
                  t[p].onComplete && i.push(t[p].onComplete.bind(null, new Error('set'), !1, null))));
          -1 === c ? pS(e, void 0) : (t.length = c + 1), mu(n.eventQueue_, Eb(e), o);
          for (let p = 0; p < i.length; p++) o_(i[p]);
        }
      }
      const DS = function (n, e) {
          const t = nP(n),
            i = t.namespace;
          return (
            'firebase.com' === t.domain &&
              Pd(t.host + ' is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead'),
            (!i || 'undefined' === i) &&
              'localhost' !== t.domain &&
              Pd('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'),
            t.secure ||
              ('undefined' != typeof window &&
                window.location &&
                window.location.protocol &&
                -1 !== window.location.protocol.indexOf('https:') &&
                Rl('Insecure Firebase access from a secure page. Please use https in calls to new Firebase().')),
            {
              repoInfo: new xM(t.host, t.secure, i, e, 'ws' === t.scheme || 'wss' === t.scheme, '', i !== t.subdomain),
              path: new Jr(t.pathString),
            }
          );
        },
        nP = function (n) {
          let e = '',
            t = '',
            i = '',
            o = '',
            c = '',
            p = !0,
            C = 'https',
            I = 443;
          if ('string' == typeof n) {
            let U = n.indexOf('//');
            U >= 0 && ((C = n.substring(0, U - 1)), (n = n.substring(U + 2)));
            let se = n.indexOf('/');
            -1 === se && (se = n.length);
            let xe = n.indexOf('?');
            -1 === xe && (xe = n.length),
              (e = n.substring(0, Math.min(se, xe))),
              se < xe &&
                (o = (function eP(n) {
                  let e = '';
                  const t = n.split('/');
                  for (let i = 0; i < t.length; i++)
                    if (t[i].length > 0) {
                      let o = t[i];
                      try {
                        o = decodeURIComponent(o.replace(/\+/g, ' '));
                      } catch (c) {}
                      e += '/' + o;
                    }
                  return e;
                })(n.substring(se, xe)));
            const rt = (function tP(n) {
              const e = {};
              '?' === n.charAt(0) && (n = n.substring(1));
              for (const t of n.split('&')) {
                if (0 === t.length) continue;
                const i = t.split('=');
                2 === i.length
                  ? (e[decodeURIComponent(i[0])] = decodeURIComponent(i[1]))
                  : Rl(`Invalid query segment '${t}' in query '${n}'`);
              }
              return e;
            })(n.substring(Math.min(n.length, xe)));
            (U = e.indexOf(':')),
              U >= 0 ? ((p = 'https' === C || 'wss' === C), (I = parseInt(e.substring(U + 1), 10))) : (U = e.length);
            const Ut = e.slice(0, U);
            if ('localhost' === Ut.toLowerCase()) t = 'localhost';
            else if (Ut.split('.').length <= 2) t = Ut;
            else {
              const qt = e.indexOf('.');
              (i = e.substring(0, qt).toLowerCase()), (t = e.substring(qt + 1)), (c = i);
            }
            'ns' in rt && (c = rt.ns);
          }
          return { host: e, port: I, domain: t, subdomain: i, secure: p, scheme: C, pathString: o, namespace: c };
        };
      class _I {
        constructor(e, t, i, o) {
          (this.eventType = e), (this.eventRegistration = t), (this.snapshot = i), (this.prevName = o);
        }
        getPath() {
          const e = this.snapshot.ref;
          return 'value' === this.eventType ? e._path : e.parent._path;
        }
        getEventType() {
          return this.eventType;
        }
        getEventRunner() {
          return this.eventRegistration.getEventRunner(this);
        }
        toString() {
          return this.getPath().toString() + ':' + this.eventType + ':' + (0, je.Pz)(this.snapshot.exportVal());
        }
      }
      class yI {
        constructor(e, t, i) {
          (this.eventRegistration = e), (this.error = t), (this.path = i);
        }
        getPath() {
          return this.path;
        }
        getEventType() {
          return 'cancel';
        }
        getEventRunner() {
          return this.eventRegistration.getEventRunner(this);
        }
        toString() {
          return this.path.toString() + ':cancel';
        }
      }
      class vI {
        constructor(e, t) {
          (this.snapshotCallback = e), (this.cancelCallback = t);
        }
        onValue(e, t) {
          this.snapshotCallback.call(null, e, t);
        }
        onCancel(e) {
          return (
            (0, je.hu)(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback'),
            this.cancelCallback.call(null, e)
          );
        }
        get hasCancelCallback() {
          return !!this.cancelCallback;
        }
        matches(e) {
          return (
            this.snapshotCallback === e.snapshotCallback ||
            (void 0 !== this.snapshotCallback.userCallback &&
              this.snapshotCallback.userCallback === e.snapshotCallback.userCallback &&
              this.snapshotCallback.context === e.snapshotCallback.context)
          );
        }
      }
      class bI {
        constructor(e, t) {
          (this._repo = e), (this._path = t);
        }
        cancel() {
          const e = new je.BH();
          return (
            WO(
              this._repo,
              this._path,
              e.wrapCallback(() => {})
            ),
            e.promise
          );
        }
        remove() {
          pu('OnDisconnect.remove', this._path);
          const e = new je.BH();
          return (
            hI(
              this._repo,
              this._path,
              null,
              e.wrapCallback(() => {})
            ),
            e.promise
          );
        }
        set(e) {
          pu('OnDisconnect.set', this._path), Nd('OnDisconnect.set', e, this._path, !1);
          const t = new je.BH();
          return (
            hI(
              this._repo,
              this._path,
              e,
              t.wrapCallback(() => {})
            ),
            t.promise
          );
        }
        setWithPriority(e, t) {
          pu('OnDisconnect.setWithPriority', this._path),
            Nd('OnDisconnect.setWithPriority', e, this._path, !1),
            _S('OnDisconnect.setWithPriority', t, !1);
          const i = new je.BH();
          return (
            (function YO(n, e, t, i, o) {
              const c = bo(t, i);
              n.server_.onDisconnectPut(e.toString(), c.val(!0), (p, C) => {
                'ok' === p && h_(n.onDisconnect_, e, c), Sf(0, o, p, C);
              });
            })(
              this._repo,
              this._path,
              e,
              t,
              i.wrapCallback(() => {})
            ),
            i.promise
          );
        }
        update(e) {
          pu('OnDisconnect.update', this._path), sI('OnDisconnect.update', e, this._path, !1);
          const t = new je.BH();
          return (
            (function KO(n, e, t, i) {
              if ((0, je.xb)(t))
                return (
                  Ia("onDisconnect().update() called with empty data.  Don't do anything."), void Sf(0, i, 'ok', void 0)
                );
              n.server_.onDisconnectMerge(e.toString(), t, (o, c) => {
                'ok' === o &&
                  Ra(t, (p, C) => {
                    const I = bo(C);
                    h_(n.onDisconnect_, fo(e, p), I);
                  }),
                  Sf(0, i, o, c);
              });
            })(
              this._repo,
              this._path,
              e,
              t.wrapCallback(() => {})
            ),
            t.promise
          );
        }
      }
      class Xl {
        constructor(e, t, i, o) {
          (this._repo = e), (this._path = t), (this._queryParams = i), (this._orderByCalled = o);
        }
        get key() {
          return or(this._path) ? null : RM(this._path);
        }
        get ref() {
          return new gu(this._repo, this._path);
        }
        get _queryIdentifier() {
          const e = DT(this._queryParams),
            t = CM(e);
          return '{}' === t ? 'default' : t;
        }
        get _queryObject() {
          return DT(this._queryParams);
        }
        isEqual(e) {
          if (!((e = (0, je.m9)(e)) instanceof Xl)) return !1;
          const t = this._repo === e._repo,
            i = kM(this._path, e._path);
          return t && i && this._queryIdentifier === e._queryIdentifier;
        }
        toJSON() {
          return this.toString();
        }
        toString() {
          return (
            this._repo.toString() +
            (function $R(n) {
              let e = '';
              for (let t = n.pieceNum_; t < n.pieces_.length; t++)
                '' !== n.pieces_[t] && (e += '/' + encodeURIComponent(String(n.pieces_[t])));
              return e || '/';
            })(this._path)
          );
        }
      }
      function NE(n, e) {
        if (!0 === n._orderByCalled) throw new Error(e + ": You can't combine multiple orderBy calls.");
      }
      function Af(n) {
        let e = null,
          t = null;
        if (
          (n.hasStart() && (e = n.getIndexStartValue()), n.hasEnd() && (t = n.getIndexEndValue()), n.getIndex() === Ld)
        ) {
          const i = 'Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().',
            o =
              'Query: When ordering by key, the argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() must be a string.';
          if (n.hasStart()) {
            if (n.getIndexStartName() !== Mh) throw new Error(i);
            if ('string' != typeof e) throw new Error(o);
          }
          if (n.hasEnd()) {
            if (n.getIndexEndName() !== Fd) throw new Error(i);
            if ('string' != typeof t) throw new Error(o);
          }
        } else if (n.getIndex() === zs) {
          if ((null != e && !xb(e)) || (null != t && !xb(t)))
            throw new Error(
              'Query: When ordering by priority, the first argument passed to startAt(), startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value (null, a number, or a string).'
            );
        } else if (
          ((0, je.hu)(n.getIndex() instanceof NM || n.getIndex() === BM, 'unknown index type.'),
          (null != e && 'object' == typeof e) || (null != t && 'object' == typeof t))
        )
          throw new Error(
            'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() cannot be an object.'
          );
      }
      function BE(n) {
        if (n.hasStart() && n.hasEnd() && n.hasLimit() && !n.hasAnchoredLimit())
          throw new Error(
            "Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use limitToFirst() or limitToLast() instead."
          );
      }
      class gu extends Xl {
        constructor(e, t) {
          super(e, t, new fE(), !1);
        }
        get parent() {
          const e = cT(this._path);
          return null === e ? null : new gu(this._repo, e);
        }
        get root() {
          let e = this;
          for (; null !== e.parent; ) e = e.parent;
          return e;
        }
      }
      class pm {
        constructor(e, t, i) {
          (this._node = e), (this.ref = t), (this._index = i);
        }
        get priority() {
          return this._node.getPriority().val();
        }
        get key() {
          return this.ref.key;
        }
        get size() {
          return this._node.numChildren();
        }
        child(e) {
          const t = new Jr(e),
            i = mm(this.ref, e);
          return new pm(this._node.getChild(t), i, zs);
        }
        exists() {
          return !this._node.isEmpty();
        }
        exportVal() {
          return this._node.val(!0);
        }
        forEach(e) {
          return (
            !this._node.isLeafNode() &&
            !!this._node.forEachChild(this._index, (i, o) => e(new pm(o, mm(this.ref, i), zs)))
          );
        }
        hasChild(e) {
          const t = new Jr(e);
          return !this._node.getChild(t).isEmpty();
        }
        hasChildren() {
          return !this._node.isLeafNode() && !this._node.isEmpty();
        }
        toJSON() {
          return this.exportVal();
        }
        val() {
          return this._node.val();
        }
      }
      function CI(n, e) {
        return (n = (0, je.m9)(n))._checkNotDeleted('ref'), void 0 !== e ? mm(n._root, e) : n._root;
      }
      function wI(n, e) {
        (n = (0, je.m9)(n))._checkNotDeleted('refFromURL');
        const t = DS(e, n._repo.repoInfo_.nodeAdmin);
        oI('refFromURL', t);
        const i = t.repoInfo;
        return (
          !n._repo.repoInfo_.isCustomHost() &&
            i.host !== n._repo.repoInfo_.host &&
            Pd(
              'refFromURL: Host name does not match the current database: (found ' +
                i.host +
                ' but expected ' +
                n._repo.repoInfo_.host +
                ')'
            ),
          CI(n, t.path.toString())
        );
      }
      function mm(n, e) {
        return (
          null === sr((n = (0, je.m9)(n))._path)
            ? ((t = e), t && (t = t.replace(/^\/*\.info(\/|$)/, '/')), Sb('child', 'path', t, !1))
            : Sb('child', 'path', e, !1),
          new gu(n._repo, fo(n._path, e))
        );
        var t;
      }
      function MS(n, e) {
        (n = (0, je.m9)(n)), pu('set', n._path), Nd('set', e, n._path, !1);
        const t = new je.BH();
        return (
          bS(
            n._repo,
            n._path,
            e,
            null,
            t.wrapCallback(() => {})
          ),
          t.promise
        );
      }
      function aP(n, e) {
        sI('update', e, n._path, !1);
        const t = new je.BH();
        return (
          (function zO(n, e, t, i) {
            g_(n, 'update', { path: e.toString(), value: t });
            let o = !0;
            const c = Ab(n),
              p = {};
            if (
              (Ra(t, (C, I) => {
                (o = !1), (p[C] = tI(fo(e, C), bo(I), n.serverSyncTree_, c));
              }),
              o)
            )
              Ia("update() called with empty data.  Don't do anything."), Sf(0, i, 'ok', void 0);
            else {
              const C = PE(n),
                I = (function mO(n, e, t, i) {
                  !(function kk(n, e, t, i) {
                    (0, je.hu)(i > n.lastWriteId, 'Stacking an older merge on top of newer ones'),
                      n.allWrites.push({ path: e, children: t, writeId: i, visible: !0 }),
                      (n.visibleWrites = qM(n.visibleWrites, e, t)),
                      (n.lastWriteId = i);
                  })(n.pendingWriteTree_, e, t, i);
                  const o = $s.fromObject(t);
                  return m_(n, new f_({ fromUser: !0, fromServer: !1, queryId: null, tagged: !1 }, e, o));
                })(n.serverSyncTree_, e, p, C);
              OE(n.eventQueue_, I),
                n.server_.merge(e.toString(), t, (U, se) => {
                  const xe = 'ok' === U;
                  xe || Rl('update at ' + e + ' failed: ' + U);
                  const rt = Mf(n.serverSyncTree_, C, !xe),
                    Ut = rt.length > 0 ? __(n, e) : e;
                  mu(n.eventQueue_, Ut, rt), Sf(0, i, U, se);
                }),
                Ra(t, (U) => {
                  const se = ES(n, fo(e, U));
                  __(n, se);
                }),
                mu(n.eventQueue_, e, []);
            }
          })(
            n._repo,
            n._path,
            e,
            t.wrapCallback(() => {})
          ),
          t.promise
        );
      }
      function lP(n) {
        return (function GO(n, e) {
          const t = (function CO(n, e) {
            const t = e._path;
            let i = null;
            n.syncPointTree_.foreachOnPath(t, (U, se) => {
              const xe = kl(U, t);
              i = i || xf(se, xe);
            });
            let o = n.syncPointTree_.get(t);
            o ? (i = i || xf(o, Lr())) : ((o = new zT()), (n.syncPointTree_ = n.syncPointTree_.set(t, o)));
            const c = null != i,
              p = c ? new wf(i, !0, !1) : null;
            return (function iO(n) {
              return vE(n.viewCache_);
            })($T(o, e, bE(n.pendingWriteTree_, e._path), c ? p.getNode() : Ui.EMPTY_NODE, c));
          })(n.serverSyncTree_, e);
          return null != t
            ? Promise.resolve(t)
            : n.server_.get(e).then(
                (i) => {
                  const o = bo(i).withIndex(e._queryParams.getIndex()),
                    c = Cb(n.serverSyncTree_, e._path, o);
                  return yS(n.eventQueue_, e._path, c), Promise.resolve(o);
                },
                (i) => (g_(n, 'get for query ' + (0, je.Pz)(e) + ' failed: ' + i), Promise.reject(new Error(i)))
              );
        })((n = (0, je.m9)(n))._repo, n).then((e) => new pm(e, new gu(n._repo, n._path), n._queryParams.getIndex()));
      }
      class VE {
        constructor(e) {
          this.callbackContext = e;
        }
        respondsTo(e) {
          return 'value' === e;
        }
        createEvent(e, t) {
          const i = t._queryParams.getIndex();
          return new _I('value', this, new pm(e.snapshotNode, new gu(t._repo, t._path), i));
        }
        getEventRunner(e) {
          return 'cancel' === e.getEventType()
            ? () => this.callbackContext.onCancel(e.error)
            : () => this.callbackContext.onValue(e.snapshot, null);
        }
        createCancelEvent(e, t) {
          return this.callbackContext.hasCancelCallback ? new yI(this, e, t) : null;
        }
        matches(e) {
          return (
            e instanceof VE &&
            (!e.callbackContext || !this.callbackContext || e.callbackContext.matches(this.callbackContext))
          );
        }
        hasAnyCallback() {
          return null !== this.callbackContext;
        }
      }
      class UE {
        constructor(e, t) {
          (this.eventType = e), (this.callbackContext = t);
        }
        respondsTo(e) {
          let t = 'children_added' === e ? 'child_added' : e;
          return (t = 'children_removed' === t ? 'child_removed' : t), this.eventType === t;
        }
        createCancelEvent(e, t) {
          return this.callbackContext.hasCancelCallback ? new yI(this, e, t) : null;
        }
        createEvent(e, t) {
          (0, je.hu)(null != e.childName, 'Child events should have a childName.');
          const i = mm(new gu(t._repo, t._path), e.childName),
            o = t._queryParams.getIndex();
          return new _I(e.type, this, new pm(e.snapshotNode, i, o), e.prevName);
        }
        getEventRunner(e) {
          return 'cancel' === e.getEventType()
            ? () => this.callbackContext.onCancel(e.error)
            : () => this.callbackContext.onValue(e.snapshot, e.prevName);
        }
        matches(e) {
          return (
            e instanceof UE &&
            this.eventType === e.eventType &&
            (!this.callbackContext || !e.callbackContext || this.callbackContext.matches(e.callbackContext))
          );
        }
        hasAnyCallback() {
          return !!this.callbackContext;
        }
      }
      function Tb(n, e, t, i, o) {
        let c;
        if (('object' == typeof i && ((c = void 0), (o = i)), 'function' == typeof i && (c = i), o && o.onlyOnce)) {
          const I = t,
            U = (se, xe) => {
              CS(n._repo, n, C), I(se, xe);
            };
          (U.userCallback = t.userCallback), (U.context = t.context), (t = U);
        }
        const p = new vI(t, c || void 0),
          C = 'value' === e ? new VE(p) : new UE(e, p);
        return (
          (function qO(n, e, t) {
            let i;
            (i = '.info' === sr(e._path) ? ZT(n.infoSyncTree_, e, t) : ZT(n.serverSyncTree_, e, t)),
              yS(n.eventQueue_, e._path, i);
          })(n._repo, n, C),
          () => CS(n._repo, n, C)
        );
      }
      function SS(n, e, t, i) {
        return Tb(n, 'value', e, t, i);
      }
      function EI(n, e, t, i) {
        return Tb(n, 'child_added', e, t, i);
      }
      function xI(n, e, t, i) {
        return Tb(n, 'child_changed', e, t, i);
      }
      function DI(n, e, t, i) {
        return Tb(n, 'child_moved', e, t, i);
      }
      function MI(n, e, t, i) {
        return Tb(n, 'child_removed', e, t, i);
      }
      function SI(n, e, t) {
        let i = null;
        const o = t ? new vI(t) : null;
        'value' === e ? (i = new VE(o)) : e && (i = new UE(e, o)), CS(n._repo, n, i);
      }
      class Ku {}
      class AI extends Ku {
        constructor(e, t) {
          super(), (this._value = e), (this._key = t);
        }
        _apply(e) {
          Nd('endAt', this._value, e._path, !0);
          const t = HM(e._queryParams, this._value, this._key);
          if ((BE(t), Af(t), e._queryParams.hasEnd()))
            throw new Error('endAt: Starting point was already set (by another call to endAt, endBefore or equalTo).');
          return new Xl(e._repo, e._path, t, e._orderByCalled);
        }
      }
      class uP extends Ku {
        constructor(e, t) {
          super(), (this._value = e), (this._key = t);
        }
        _apply(e) {
          Nd('endBefore', this._value, e._path, !1);
          const t = (function vk(n, e, t) {
            let i, o;
            return (
              n.index_ === Ld
                ? ('string' == typeof e && (e = wT(e)), (o = HM(n, e, t)))
                : ((i = null == t ? Mh : wT(t)), (o = HM(n, e, i))),
              (o.endBeforeSet_ = !0),
              o
            );
          })(e._queryParams, this._value, this._key);
          if ((BE(t), Af(t), e._queryParams.hasEnd()))
            throw new Error(
              'endBefore: Starting point was already set (by another call to endAt, endBefore or equalTo).'
            );
          return new Xl(e._repo, e._path, t, e._orderByCalled);
        }
      }
      class TI extends Ku {
        constructor(e, t) {
          super(), (this._value = e), (this._key = t);
        }
        _apply(e) {
          Nd('startAt', this._value, e._path, !0);
          const t = jM(e._queryParams, this._value, this._key);
          if ((BE(t), Af(t), e._queryParams.hasStart()))
            throw new Error(
              'startAt: Starting point was already set (by another call to startAt, startBefore or equalTo).'
            );
          return new Xl(e._repo, e._path, t, e._orderByCalled);
        }
      }
      class fP extends Ku {
        constructor(e, t) {
          super(), (this._value = e), (this._key = t);
        }
        _apply(e) {
          Nd('startAfter', this._value, e._path, !1);
          const t = (function yk(n, e, t) {
            let i;
            if (n.index_ === Ld) 'string' == typeof e && (e = CT(e)), (i = jM(n, e, t));
            else {
              let o;
              (o = null == t ? Fd : CT(t)), (i = jM(n, e, o));
            }
            return (i.startAfterSet_ = !0), i;
          })(e._queryParams, this._value, this._key);
          if ((BE(t), Af(t), e._queryParams.hasStart()))
            throw new Error(
              'startAfter: Starting point was already set (by another call to startAt, startAfter, or equalTo).'
            );
          return new Xl(e._repo, e._path, t, e._orderByCalled);
        }
      }
      class mP extends Ku {
        constructor(e) {
          super(), (this._limit = e);
        }
        _apply(e) {
          if (e._queryParams.hasLimit())
            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst or limitToLast).');
          return new Xl(
            e._repo,
            e._path,
            (function gk(n, e) {
              const t = n.copy();
              return (t.limitSet_ = !0), (t.limit_ = e), (t.viewFrom_ = 'l'), t;
            })(e._queryParams, this._limit),
            e._orderByCalled
          );
        }
      }
      class _P extends Ku {
        constructor(e) {
          super(), (this._limit = e);
        }
        _apply(e) {
          if (e._queryParams.hasLimit())
            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst or limitToLast).');
          return new Xl(
            e._repo,
            e._path,
            (function _k(n, e) {
              const t = n.copy();
              return (t.limitSet_ = !0), (t.limit_ = e), (t.viewFrom_ = 'r'), t;
            })(e._queryParams, this._limit),
            e._orderByCalled
          );
        }
      }
      class vP extends Ku {
        constructor(e) {
          super(), (this._path = e);
        }
        _apply(e) {
          NE(e, 'orderByChild');
          const t = new Jr(this._path);
          if (or(t)) throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');
          const i = new NM(t),
            o = pE(e._queryParams, i);
          return Af(o), new Xl(e._repo, e._path, o, !0);
        }
      }
      class CP extends Ku {
        _apply(e) {
          NE(e, 'orderByKey');
          const t = pE(e._queryParams, Ld);
          return Af(t), new Xl(e._repo, e._path, t, !0);
        }
      }
      class EP extends Ku {
        _apply(e) {
          NE(e, 'orderByPriority');
          const t = pE(e._queryParams, zs);
          return Af(t), new Xl(e._repo, e._path, t, !0);
        }
      }
      class DP extends Ku {
        _apply(e) {
          NE(e, 'orderByValue');
          const t = pE(e._queryParams, BM);
          return Af(t), new Xl(e._repo, e._path, t, !0);
        }
      }
      class SP extends Ku {
        constructor(e, t) {
          super(), (this._value = e), (this._key = t);
        }
        _apply(e) {
          if ((Nd('equalTo', this._value, e._path, !1), e._queryParams.hasStart()))
            throw new Error(
              'equalTo: Starting point was already set (by another call to startAt/startAfter or equalTo).'
            );
          if (e._queryParams.hasEnd())
            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or equalTo).');
          return new AI(this._value, this._key)._apply(new TI(this._value, this._key)._apply(e));
        }
      }
      function qu(n, ...e) {
        let t = (0, je.m9)(n);
        for (const i of e) t = i._apply(t);
        return t;
      }
      (function aO(n) {
        (0, je.hu)(!xE, '__referenceConstructor has already been defined'), (xE = n);
      })(gu),
        (function hO(n) {
          (0, je.hu)(!ME, '__referenceConstructor has already been defined'), (ME = n);
        })(gu);
      const AS = {};
      function RI(n, e, t, i, o) {
        let c = i || n.options.databaseURL;
        void 0 === c &&
          (n.options.projectId ||
            Pd(
              "Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp()."
            ),
          Ia('Using default host for project ', n.options.projectId),
          (c = `${n.options.projectId}-default-rtdb.firebaseio.com`));
        let I,
          U,
          p = DS(c, o),
          C = p.repoInfo;
        'undefined' != typeof process && (U = process.env.FIREBASE_DATABASE_EMULATOR_HOST),
          U
            ? ((I = !0), (c = `http://${U}?ns=${C.namespace}`), (p = DS(c, o)), (C = p.repoInfo))
            : (I = !p.repoInfo.secure);
        const se = o && I ? new ab(ab.OWNER) : new vR(n.name, n.options, e);
        oI('Invalid Firebase Database URL', p),
          or(p.path) || Pd('Database URL must point to the root of a Firebase Database (not including a child path).');
        const xe = (function kP(n, e, t, i) {
          let o = AS[e.name];
          o || ((o = {}), (AS[e.name] = o));
          let c = o[n.toURLString()];
          return (
            c &&
              Pd(
                'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'
              ),
            (c = new UO(n, false, t, i)),
            (o[n.toURLString()] = c),
            c
          );
        })(C, n, se, new yR(n.name, t));
        return new PP(xe, n);
      }
      class PP {
        constructor(e, t) {
          (this._repoInternal = e), (this.app = t), (this.type = 'database'), (this._instanceStarted = !1);
        }
        get _repo() {
          return (
            this._instanceStarted ||
              ((function jO(n, e, t) {
                if (
                  ((n.stats_ = SM(n.repoInfo_)),
                  n.forceRestClient_ ||
                    (('object' == typeof window && window.navigator && window.navigator.userAgent) || '').search(
                      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i
                    ) >= 0)
                )
                  (n.server_ = new mE(
                    n.repoInfo_,
                    (i, o, c, p) => {
                      uI(n, i, o, c, p);
                    },
                    n.authTokenProvider_,
                    n.appCheckProvider_
                  )),
                    setTimeout(() => dI(n, !0), 0);
                else {
                  if (null != t) {
                    if ('object' != typeof t)
                      throw new Error('Only objects are supported for option databaseAuthVariableOverride');
                    try {
                      (0, je.Pz)(t);
                    } catch (i) {
                      throw new Error('Invalid authOverride provided: ' + i);
                    }
                  }
                  (n.persistentConnection_ = new cm(
                    n.repoInfo_,
                    e,
                    (i, o, c, p) => {
                      uI(n, i, o, c, p);
                    },
                    (i) => {
                      dI(n, i);
                    },
                    (i) => {
                      !(function HO(n, e) {
                        Ra(e, (t, i) => {
                          vS(n, t, i);
                        });
                      })(n, i);
                    },
                    n.authTokenProvider_,
                    n.appCheckProvider_,
                    t
                  )),
                    (n.server_ = n.persistentConnection_);
                }
                n.authTokenProvider_.addTokenChangeListener((i) => {
                  n.server_.refreshAuthToken(i);
                }),
                  n.appCheckProvider_.addTokenChangeListener((i) => {
                    n.server_.refreshAppCheckToken(i.token);
                  }),
                  (n.statsReporter_ = (function ER(n, e) {
                    const t = n.toString();
                    return MM[t] || (MM[t] = e()), MM[t];
                  })(n.repoInfo_, () => new Dk(n.stats_, n.server_))),
                  (n.infoData_ = new bk()),
                  (n.infoSyncTree_ = new qT({
                    startListening: (i, o, c, p) => {
                      let C = [];
                      const I = n.infoData_.getNode(i._path);
                      return (
                        I.isEmpty() ||
                          ((C = Cb(n.infoSyncTree_, i._path, I)),
                          setTimeout(() => {
                            p('ok');
                          }, 0)),
                        C
                      );
                    },
                    stopListening: () => {},
                  })),
                  vS(n, 'connected', !1),
                  (n.serverSyncTree_ = new qT({
                    startListening: (i, o, c, p) => (
                      n.server_.listen(i, c, o, (C, I) => {
                        const U = p(C, I);
                        mu(n.eventQueue_, i._path, U);
                      }),
                      []
                    ),
                    stopListening: (i, o) => {
                      n.server_.unlisten(i, o);
                    },
                  }));
              })(this._repoInternal, this.app.options.appId, this.app.options.databaseAuthVariableOverride),
              (this._instanceStarted = !0)),
            this._repoInternal
          );
        }
        get _root() {
          return this._rootInternal || (this._rootInternal = new gu(this._repo, Lr())), this._rootInternal;
        }
        _delete() {
          return (
            null !== this._rootInternal &&
              ((function RP(n, e) {
                const t = AS[e];
                (!t || t[n.key] !== n) && Pd(`Database ${e}(${n.repoInfo_}) has already been deleted.`),
                  fI(n),
                  delete t[n.key];
              })(this._repo, this.app.name),
              (this._repoInternal = null),
              (this._rootInternal = null)),
            Promise.resolve()
          );
        }
        _checkNotDeleted(e) {
          null === this._rootInternal && Pd('Cannot call ' + e + ' on a deleted database.');
        }
      }
      function BP(n, e) {
        OA(n, e);
      }
      const UP = { '.sv': 'timestamp' };
      class GP {
        constructor(e, t) {
          (this.committed = e), (this.snapshot = t);
        }
        toJSON() {
          return { committed: this.committed, snapshot: this.snapshot.toJSON() };
        }
      }
      (cm.prototype.simpleListen = function (n, e) {
        this.sendRequest('q', { p: n }, e);
      }),
        (cm.prototype.echo = function (n, e) {
          this.sendRequest('echo', { d: n }, e);
        }),
        (function VP(n) {
          AA(ji.SDK_VERSION),
            (0, ji._registerComponent)(
              new tr.wA(
                'database',
                (e, { instanceIdentifier: t }) =>
                  RI(
                    e.getProvider('app').getImmediate(),
                    e.getProvider('auth-internal'),
                    e.getProvider('app-check-internal'),
                    t
                  ),
                'PUBLIC'
              ).setMultipleInstances(!0)
            ),
            (0, ji.registerVersion)(MA, '0.12.5', n),
            (0, ji.registerVersion)(MA, '0.12.5', 'esm2017');
        })();
      const YP = new kr.Yd('@firebase/database-compat'),
        kI = function (n) {
          YP.warn('FIREBASE WARNING: ' + n);
        };
      class ZP {
        constructor(e) {
          this._delegate = e;
        }
        cancel(e) {
          (0, je.Dv)('OnDisconnect.cancel', 0, 1, arguments.length),
            (0, je.Wj)('OnDisconnect.cancel', 'onComplete', e, !0);
          const t = this._delegate.cancel();
          return (
            e &&
              t.then(
                () => e(null),
                (i) => e(i)
              ),
            t
          );
        }
        remove(e) {
          (0, je.Dv)('OnDisconnect.remove', 0, 1, arguments.length),
            (0, je.Wj)('OnDisconnect.remove', 'onComplete', e, !0);
          const t = this._delegate.remove();
          return (
            e &&
              t.then(
                () => e(null),
                (i) => e(i)
              ),
            t
          );
        }
        set(e, t) {
          (0, je.Dv)('OnDisconnect.set', 1, 2, arguments.length), (0, je.Wj)('OnDisconnect.set', 'onComplete', t, !0);
          const i = this._delegate.set(e);
          return (
            t &&
              i.then(
                () => t(null),
                (o) => t(o)
              ),
            i
          );
        }
        setWithPriority(e, t, i) {
          (0, je.Dv)('OnDisconnect.setWithPriority', 2, 3, arguments.length),
            (0, je.Wj)('OnDisconnect.setWithPriority', 'onComplete', i, !0);
          const o = this._delegate.setWithPriority(e, t);
          return (
            i &&
              o.then(
                () => i(null),
                (c) => i(c)
              ),
            o
          );
        }
        update(e, t) {
          if (((0, je.Dv)('OnDisconnect.update', 1, 2, arguments.length), Array.isArray(e))) {
            const o = {};
            for (let c = 0; c < e.length; ++c) o['' + c] = e[c];
            (e = o),
              kI(
                'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.'
              );
          }
          (0, je.Wj)('OnDisconnect.update', 'onComplete', t, !0);
          const i = this._delegate.update(e);
          return (
            t &&
              i.then(
                () => t(null),
                (o) => t(o)
              ),
            i
          );
        }
      }
      class QP {
        constructor(e, t) {
          (this.committed = e), (this.snapshot = t);
        }
        toJSON() {
          return (
            (0, je.Dv)('TransactionResult.toJSON', 0, 1, arguments.length),
            { committed: this.committed, snapshot: this.snapshot.toJSON() }
          );
        }
      }
      class Tf {
        constructor(e, t) {
          (this._database = e), (this._delegate = t);
        }
        val() {
          return (0, je.Dv)('DataSnapshot.val', 0, 0, arguments.length), this._delegate.val();
        }
        exportVal() {
          return (0, je.Dv)('DataSnapshot.exportVal', 0, 0, arguments.length), this._delegate.exportVal();
        }
        toJSON() {
          return (0, je.Dv)('DataSnapshot.toJSON', 0, 1, arguments.length), this._delegate.toJSON();
        }
        exists() {
          return (0, je.Dv)('DataSnapshot.exists', 0, 0, arguments.length), this._delegate.exists();
        }
        child(e) {
          return (
            (0, je.Dv)('DataSnapshot.child', 0, 1, arguments.length),
            (e = String(e)),
            Sb('DataSnapshot.child', 'path', e, !1),
            new Tf(this._database, this._delegate.child(e))
          );
        }
        hasChild(e) {
          return (
            (0, je.Dv)('DataSnapshot.hasChild', 1, 1, arguments.length),
            Sb('DataSnapshot.hasChild', 'path', e, !1),
            this._delegate.hasChild(e)
          );
        }
        getPriority() {
          return (0, je.Dv)('DataSnapshot.getPriority', 0, 0, arguments.length), this._delegate.priority;
        }
        forEach(e) {
          return (
            (0, je.Dv)('DataSnapshot.forEach', 1, 1, arguments.length),
            (0, je.Wj)('DataSnapshot.forEach', 'action', e, !1),
            this._delegate.forEach((t) => e(new Tf(this._database, t)))
          );
        }
        hasChildren() {
          return (0, je.Dv)('DataSnapshot.hasChildren', 0, 0, arguments.length), this._delegate.hasChildren();
        }
        get key() {
          return this._delegate.key;
        }
        numChildren() {
          return (0, je.Dv)('DataSnapshot.numChildren', 0, 0, arguments.length), this._delegate.size;
        }
        getRef() {
          return (0, je.Dv)('DataSnapshot.ref', 0, 0, arguments.length), new kc(this._database, this._delegate.ref);
        }
        get ref() {
          return this.getRef();
        }
      }
      class Ka {
        constructor(e, t) {
          (this.database = e), (this._delegate = t);
        }
        on(e, t, i, o) {
          var c;
          (0, je.Dv)('Query.on', 2, 4, arguments.length), (0, je.Wj)('Query.on', 'callback', t, !1);
          const p = Ka.getCancelAndContextArgs_('Query.on', i, o),
            C = (U, se) => {
              t.call(p.context, new Tf(this.database, U), se);
            };
          (C.userCallback = t), (C.context = p.context);
          const I = null === (c = p.cancel) || void 0 === c ? void 0 : c.bind(p.context);
          switch (e) {
            case 'value':
              return SS(this._delegate, C, I), t;
            case 'child_added':
              return EI(this._delegate, C, I), t;
            case 'child_removed':
              return MI(this._delegate, C, I), t;
            case 'child_changed':
              return xI(this._delegate, C, I), t;
            case 'child_moved':
              return DI(this._delegate, C, I), t;
            default:
              throw new Error(
                (0, je.gK)('Query.on', 'eventType') +
                  'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
              );
          }
        }
        off(e, t, i) {
          if (
            ((0, je.Dv)('Query.off', 0, 3, arguments.length),
            (function (n, e, t) {
              if (void 0 !== e)
                switch (e) {
                  case 'value':
                  case 'child_added':
                  case 'child_removed':
                  case 'child_changed':
                  case 'child_moved':
                    break;
                  default:
                    throw new Error(
                      (0, je.gK)('Query.off', 'eventType') +
                        'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
                    );
                }
            })(0, e),
            (0, je.Wj)('Query.off', 'callback', t, !0),
            (0, je.lb)('Query.off', 'context', i, !0),
            t)
          ) {
            const o = () => {};
            (o.userCallback = t), (o.context = i), SI(this._delegate, e, o);
          } else SI(this._delegate, e);
        }
        get() {
          return lP(this._delegate).then((e) => new Tf(this.database, e));
        }
        once(e, t, i, o) {
          (0, je.Dv)('Query.once', 1, 4, arguments.length), (0, je.Wj)('Query.once', 'callback', t, !0);
          const c = Ka.getCancelAndContextArgs_('Query.once', i, o),
            p = new je.BH(),
            C = (U, se) => {
              const xe = new Tf(this.database, U);
              t && t.call(c.context, xe, se), p.resolve(xe);
            };
          (C.userCallback = t), (C.context = c.context);
          const I = (U) => {
            c.cancel && c.cancel.call(c.context, U), p.reject(U);
          };
          switch (e) {
            case 'value':
              SS(this._delegate, C, I, { onlyOnce: !0 });
              break;
            case 'child_added':
              EI(this._delegate, C, I, { onlyOnce: !0 });
              break;
            case 'child_removed':
              MI(this._delegate, C, I, { onlyOnce: !0 });
              break;
            case 'child_changed':
              xI(this._delegate, C, I, { onlyOnce: !0 });
              break;
            case 'child_moved':
              DI(this._delegate, C, I, { onlyOnce: !0 });
              break;
            default:
              throw new Error(
                (0, je.gK)('Query.once', 'eventType') +
                  'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".'
              );
          }
          return p.promise;
        }
        limitToFirst(e) {
          return (
            (0, je.Dv)('Query.limitToFirst', 1, 1, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function gP(n) {
                  if ('number' != typeof n || Math.floor(n) !== n || n <= 0)
                    throw new Error('limitToFirst: First argument must be a positive integer.');
                  return new mP(n);
                })(e)
              )
            )
          );
        }
        limitToLast(e) {
          return (
            (0, je.Dv)('Query.limitToLast', 1, 1, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function yP(n) {
                  if ('number' != typeof n || Math.floor(n) !== n || n <= 0)
                    throw new Error('limitToLast: First argument must be a positive integer.');
                  return new _P(n);
                })(e)
              )
            )
          );
        }
        orderByChild(e) {
          return (
            (0, je.Dv)('Query.orderByChild', 1, 1, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function bP(n) {
                  if ('$key' === n) throw new Error('orderByChild: "$key" is invalid.  Use orderByKey() instead.');
                  if ('$priority' === n)
                    throw new Error('orderByChild: "$priority" is invalid.  Use orderByPriority() instead.');
                  if ('$value' === n)
                    throw new Error('orderByChild: "$value" is invalid.  Use orderByValue() instead.');
                  return Sb('orderByChild', 'path', n, !1), new vP(n);
                })(e)
              )
            )
          );
        }
        orderByKey() {
          return (
            (0, je.Dv)('Query.orderByKey', 0, 0, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function wP() {
                  return new CP();
                })()
              )
            )
          );
        }
        orderByPriority() {
          return (
            (0, je.Dv)('Query.orderByPriority', 0, 0, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function xP() {
                  return new EP();
                })()
              )
            )
          );
        }
        orderByValue() {
          return (
            (0, je.Dv)('Query.orderByValue', 0, 0, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function MP() {
                  return new DP();
                })()
              )
            )
          );
        }
        startAt(e = null, t) {
          return (
            (0, je.Dv)('Query.startAt', 0, 2, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function hP(n = null, e) {
                  return Mb('startAt', 'key', e, !0), new TI(n, e);
                })(e, t)
              )
            )
          );
        }
        startAfter(e = null, t) {
          return (
            (0, je.Dv)('Query.startAfter', 0, 2, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function pP(n, e) {
                  return Mb('startAfter', 'key', e, !0), new fP(n, e);
                })(e, t)
              )
            )
          );
        }
        endAt(e = null, t) {
          return (
            (0, je.Dv)('Query.endAt', 0, 2, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function cP(n, e) {
                  return Mb('endAt', 'key', e, !0), new AI(n, e);
                })(e, t)
              )
            )
          );
        }
        endBefore(e = null, t) {
          return (
            (0, je.Dv)('Query.endBefore', 0, 2, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function dP(n, e) {
                  return Mb('endBefore', 'key', e, !0), new uP(n, e);
                })(e, t)
              )
            )
          );
        }
        equalTo(e, t) {
          return (
            (0, je.Dv)('Query.equalTo', 1, 2, arguments.length),
            new Ka(
              this.database,
              qu(
                this._delegate,
                (function AP(n, e) {
                  return Mb('equalTo', 'key', e, !0), new SP(n, e);
                })(e, t)
              )
            )
          );
        }
        toString() {
          return (0, je.Dv)('Query.toString', 0, 0, arguments.length), this._delegate.toString();
        }
        toJSON() {
          return (0, je.Dv)('Query.toJSON', 0, 1, arguments.length), this._delegate.toJSON();
        }
        isEqual(e) {
          if (((0, je.Dv)('Query.isEqual', 1, 1, arguments.length), !(e instanceof Ka)))
            throw new Error('Query.isEqual failed: First argument must be an instance of firebase.database.Query.');
          return this._delegate.isEqual(e._delegate);
        }
        static getCancelAndContextArgs_(e, t, i) {
          const o = { cancel: void 0, context: void 0 };
          if (t && i)
            (o.cancel = t),
              (0, je.Wj)(e, 'cancel', o.cancel, !0),
              (o.context = i),
              (0, je.lb)(e, 'context', o.context, !0);
          else if (t)
            if ('object' == typeof t && null !== t) o.context = t;
            else {
              if ('function' != typeof t)
                throw new Error(
                  (0, je.gK)(e, 'cancelOrContext') + ' must either be a cancel callback or a context object.'
                );
              o.cancel = t;
            }
          return o;
        }
        get ref() {
          return new kc(this.database, new gu(this._delegate._repo, this._delegate._path));
        }
      }
      class kc extends Ka {
        constructor(e, t) {
          super(e, new Xl(t._repo, t._path, new fE(), !1)), (this.database = e), (this._delegate = t);
        }
        getKey() {
          return (0, je.Dv)('Reference.key', 0, 0, arguments.length), this._delegate.key;
        }
        child(e) {
          return (
            (0, je.Dv)('Reference.child', 1, 1, arguments.length),
            'number' == typeof e && (e = String(e)),
            new kc(this.database, mm(this._delegate, e))
          );
        }
        getParent() {
          (0, je.Dv)('Reference.parent', 0, 0, arguments.length);
          const e = this._delegate.parent;
          return e ? new kc(this.database, e) : null;
        }
        getRoot() {
          return (0, je.Dv)('Reference.root', 0, 0, arguments.length), new kc(this.database, this._delegate.root);
        }
        set(e, t) {
          (0, je.Dv)('Reference.set', 1, 2, arguments.length), (0, je.Wj)('Reference.set', 'onComplete', t, !0);
          const i = MS(this._delegate, e);
          return (
            t &&
              i.then(
                () => t(null),
                (o) => t(o)
              ),
            i
          );
        }
        update(e, t) {
          if (((0, je.Dv)('Reference.update', 1, 2, arguments.length), Array.isArray(e))) {
            const o = {};
            for (let c = 0; c < e.length; ++c) o['' + c] = e[c];
            (e = o),
              kI(
                'Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.'
              );
          }
          pu('Reference.update', this._delegate._path), (0, je.Wj)('Reference.update', 'onComplete', t, !0);
          const i = aP(this._delegate, e);
          return (
            t &&
              i.then(
                () => t(null),
                (o) => t(o)
              ),
            i
          );
        }
        setWithPriority(e, t, i) {
          (0, je.Dv)('Reference.setWithPriority', 2, 3, arguments.length),
            (0, je.Wj)('Reference.setWithPriority', 'onComplete', i, !0);
          const o = (function oP(n, e, t) {
            if (
              (pu('setWithPriority', n._path),
              Nd('setWithPriority', e, n._path, !1),
              _S('setWithPriority', t, !1),
              '.length' === n.key || '.keys' === n.key)
            )
              throw 'setWithPriority failed: ' + n.key + ' is a read-only object.';
            const i = new je.BH();
            return (
              bS(
                n._repo,
                n._path,
                e,
                t,
                i.wrapCallback(() => {})
              ),
              i.promise
            );
          })(this._delegate, e, t);
          return (
            i &&
              o.then(
                () => i(null),
                (c) => i(c)
              ),
            o
          );
        }
        remove(e) {
          (0, je.Dv)('Reference.remove', 0, 1, arguments.length), (0, je.Wj)('Reference.remove', 'onComplete', e, !0);
          const t = (function rP(n) {
            return pu('remove', n._path), MS(n, null);
          })(this._delegate);
          return (
            e &&
              t.then(
                () => e(null),
                (i) => e(i)
              ),
            t
          );
        }
        transaction(e, t, i) {
          (0, je.Dv)('Reference.transaction', 1, 3, arguments.length),
            (0, je.Wj)('Reference.transaction', 'transactionUpdate', e, !1),
            (0, je.Wj)('Reference.transaction', 'onComplete', t, !0),
            (function (n, e, t, i) {
              if (void 0 !== t && 'boolean' != typeof t)
                throw new Error((0, je.gK)('Reference.transaction', 'applyLocally') + 'must be a boolean.');
            })(0, 0, i);
          const o = (function zP(n, e, t) {
            var i;
            if (((n = (0, je.m9)(n)), pu('Reference.transaction', n._path), '.length' === n.key || '.keys' === n.key))
              throw 'Reference.transaction failed: ' + n.key + ' is a read-only object.';
            const o = null === (i = null == t ? void 0 : t.applyLocally) || void 0 === i || i,
              c = new je.BH(),
              C = SS(n, () => {});
            return (
              (function QO(n, e, t, i, o, c) {
                g_(n, 'transaction on ' + e);
                const p = {
                    path: e,
                    update: t,
                    onComplete: i,
                    status: null,
                    order: IA(),
                    applyLocally: c,
                    retryCount: 0,
                    unwatcher: o,
                    abortReason: null,
                    currentWriteId: null,
                    currentInputSnapshot: null,
                    currentOutputSnapshotRaw: null,
                    currentOutputSnapshotResolved: null,
                  },
                  C = wS(n, e, void 0);
                p.currentInputSnapshot = C;
                const I = p.update(C.val());
                if (void 0 === I)
                  p.unwatcher(),
                    (p.currentOutputSnapshotRaw = null),
                    (p.currentOutputSnapshotResolved = null),
                    p.onComplete && p.onComplete(null, !1, p.currentInputSnapshot);
                else {
                  Db('transaction failed: Data returned ', I, p.path), (p.status = 0);
                  const U = IE(n.transactionQueueTree_, e),
                    se = fm(U) || [];
                  let xe;
                  se.push(p),
                    pS(U, se),
                    'object' == typeof I && null !== I && (0, je.r3)(I, '.priority')
                      ? ((xe = (0, je.DV)(I, '.priority')),
                        (0, je.hu)(
                          xb(xe),
                          'Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.'
                        ))
                      : (xe = (SE(n.serverSyncTree_, e) || Ui.EMPTY_NODE).getPriority().val());
                  const rt = Ab(n),
                    Ut = bo(I, xe),
                    qt = dS(Ut, C, rt);
                  (p.currentOutputSnapshotRaw = Ut), (p.currentOutputSnapshotResolved = qt), (p.currentWriteId = PE(n));
                  const Mn = rS(n.serverSyncTree_, e, qt, p.currentWriteId, p.applyLocally);
                  mu(n.eventQueue_, e, Mn), FE(n, n.transactionQueueTree_);
                }
              })(
                n._repo,
                n._path,
                e,
                (I, U, se) => {
                  let xe = null;
                  I ? c.reject(I) : ((xe = new pm(se, new gu(n._repo, n._path), zs)), c.resolve(new GP(U, xe)));
                },
                C,
                o
              ),
              c.promise
            );
          })(this._delegate, e, { applyLocally: i }).then(
            (c) => new QP(c.committed, new Tf(this.database, c.snapshot))
          );
          return (
            t &&
              o.then(
                (c) => t(null, c.committed, c.snapshot),
                (c) => t(c, !1, null)
              ),
            o
          );
        }
        setPriority(e, t) {
          (0, je.Dv)('Reference.setPriority', 1, 2, arguments.length),
            (0, je.Wj)('Reference.setPriority', 'onComplete', t, !0);
          const i = (function sP(n, e) {
            (n = (0, je.m9)(n)), pu('setPriority', n._path), _S('setPriority', e, !1);
            const t = new je.BH();
            return (
              bS(
                n._repo,
                fo(n._path, '.priority'),
                e,
                null,
                t.wrapCallback(() => {})
              ),
              t.promise
            );
          })(this._delegate, e);
          return (
            t &&
              i.then(
                () => t(null),
                (o) => t(o)
              ),
            i
          );
        }
        push(e, t) {
          (0, je.Dv)('Reference.push', 0, 2, arguments.length), (0, je.Wj)('Reference.push', 'onComplete', t, !0);
          const i = (function iP(n, e) {
              (n = (0, je.m9)(n)), pu('push', n._path), Nd('push', e, n._path, !0);
              const t = cI(n._repo),
                i = hk(t),
                o = mm(n, i),
                c = mm(n, i);
              let p;
              return (
                (p = null != e ? MS(c, e).then(() => c) : Promise.resolve(c)),
                (o.then = p.then.bind(p)),
                (o.catch = p.then.bind(p, void 0)),
                o
              );
            })(this._delegate, e),
            o = i.then((p) => new kc(this.database, p));
          t &&
            o.then(
              () => t(null),
              (p) => t(p)
            );
          const c = new kc(this.database, i);
          return (c.then = o.then.bind(o)), (c.catch = o.catch.bind(o, void 0)), c;
        }
        onDisconnect() {
          return (
            pu('Reference.onDisconnect', this._delegate._path),
            new ZP(new bI(this._delegate._repo, this._delegate._path))
          );
        }
        get key() {
          return this.getKey();
        }
        get parent() {
          return this.getParent();
        }
        get root() {
          return this.getRoot();
        }
      }
      class Ib {
        constructor(e, t) {
          (this._delegate = e), (this.app = t), (this.INTERNAL = { delete: () => this._delegate._delete() });
        }
        useEmulator(e, t, i = {}) {
          !(function FP(n, e, t, i = {}) {
            (n = (0, je.m9)(n))._checkNotDeleted('useEmulator'),
              n._instanceStarted && Pd('Cannot call useEmulator() after instance has already been initialized.');
            const o = n._repoInternal;
            let c;
            if (o.repoInfo_.nodeAdmin)
              i.mockUserToken &&
                Pd(
                  'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the "firebase" package instead of "firebase-admin".'
                ),
                (c = new ab(ab.OWNER));
            else if (i.mockUserToken) {
              const p =
                'string' == typeof i.mockUserToken
                  ? i.mockUserToken
                  : (0, je.Sg)(i.mockUserToken, n.app.options.projectId);
              c = new ab(p);
            }
            !(function IP(n, e, t, i) {
              (n.repoInfo_ = new xM(
                `${e}:${t}`,
                !1,
                n.repoInfo_.namespace,
                n.repoInfo_.webSocketOnly,
                n.repoInfo_.nodeAdmin,
                n.repoInfo_.persistenceKey,
                n.repoInfo_.includeNamespaceInQueryParams
              )),
                i && (n.authTokenProvider_ = i);
            })(o, e, t, c);
          })(this._delegate, e, t, i);
        }
        ref(e) {
          if (((0, je.Dv)('database.ref', 0, 1, arguments.length), e instanceof kc)) {
            const t = wI(this._delegate, e.toString());
            return new kc(this, t);
          }
          {
            const t = CI(this._delegate, e);
            return new kc(this, t);
          }
        }
        refFromURL(e) {
          (0, je.Dv)('database.refFromURL', 1, 1, arguments.length);
          const i = wI(this._delegate, e);
          return new kc(this, i);
        }
        goOffline() {
          return (
            (0, je.Dv)('database.goOffline', 0, 0, arguments.length),
            (function LP(n) {
              (n = (0, je.m9)(n))._checkNotDeleted('goOffline'), fI(n._repo);
            })(this._delegate)
          );
        }
        goOnline() {
          return (
            (0, je.Dv)('database.goOnline', 0, 0, arguments.length),
            (function NP(n) {
              (n = (0, je.m9)(n))._checkNotDeleted('goOnline'),
                (function ZO(n) {
                  n.persistentConnection_ && n.persistentConnection_.resume(lI);
                })(n._repo);
            })(this._delegate)
          );
        }
      }
      Ib.ServerValue = {
        TIMESTAMP: (function jP() {
          return UP;
        })(),
        increment: (n) =>
          (function HP(n) {
            return { '.sv': { increment: n } };
          })(n),
      };
      var JP = Object.freeze({
        __proto__: null,
        initStandalone: function XP({
          app: n,
          url: e,
          version: t,
          customAuthImpl: i,
          namespace: o,
          nodeAdmin: c = !1,
        }) {
          AA(t);
          const p = new tr.zt('auth-internal', new tr.H0('database-standalone'));
          return (
            p.setComponent(new tr.wA('auth-internal', () => i, 'PRIVATE')),
            { instance: new Ib(RI(n, p, void 0, e, c), n), namespace: o }
          );
        },
      });
      const e1 = Ib.ServerValue;
      function OI(n) {
        return null == n;
      }
      function PI(n) {
        return 'function' == typeof n.set;
      }
      function FI(n, e) {
        return PI(e) ? e : n.ref(e);
      }
      function LI(n, e) {
        if (
          (function n1(n) {
            return 'string' == typeof n;
          })(n)
        )
          return e.stringCase();
        if (PI(n)) return e.firebaseCase();
        if (
          (function r1(n) {
            return 'function' == typeof n.exportVal;
          })(n)
        )
          return e.snapshotCase();
        throw new Error('Expects a string, snapshot, or reference. Got: ' + typeof n);
      }
      function Rb(n, e, t = 'on', i = ks.z) {
        return new Qe.y((o) => {
          let c = null;
          return (
            (c = n[t](
              e,
              (p, C) => {
                i.schedule(() => {
                  o.next({ snapshot: p, prevKey: C });
                }),
                  'once' === t && i.schedule(() => o.complete());
              },
              (p) => {
                i.schedule(() => o.error(p));
              }
            )),
            'on' === t
              ? {
                  unsubscribe() {
                    null != c && n.off(e, c);
                  },
                }
              : { unsubscribe() {} }
          );
        }).pipe(
          (0, Ze.U)((o) => {
            const { snapshot: c, prevKey: p } = o;
            let C = null;
            return c.exists() && (C = c.key), { type: e, payload: c, prevKey: p, key: C };
          }),
          (0, nR.B)()
        );
      }
      function NI(n, e) {
        const t = n.length;
        for (let i = 0; i < t; i++) if (n[i].payload.key === e) return i;
        return -1;
      }
      function a1(n, e) {
        const { payload: t, prevKey: i, key: o } = e,
          c = NI(n, o),
          p = (function o1(n, e) {
            if (OI(e)) return 0;
            {
              const t = NI(n, e);
              return -1 === t ? n.length : t + 1;
            }
          })(n, i);
        switch (e.type) {
          case 'value':
            if (e.payload && e.payload.exists()) {
              let C = null;
              e.payload.forEach((I) => {
                const U = { payload: I, type: 'value', prevKey: C, key: I.key };
                return (C = I.key), (n = [...n, U]), !1;
              });
            }
            return n;
          case 'child_added':
            if (c > -1) {
              const C = n[c - 1];
              ((C && C.key) || null) !== i && (n = n.filter((I) => I.payload.key !== t.key)).splice(p, 0, e);
            } else {
              if (null == i) return [e, ...n];
              (n = n.slice()).splice(p, 0, e);
            }
            return n;
          case 'child_removed':
            return n.filter((C) => C.payload.key !== t.key);
          case 'child_changed':
            return n.map((C) => (C.payload.key === o ? e : C));
          case 'child_moved':
            if (c > -1) {
              const C = n.splice(c, 1)[0];
              return (n = n.slice()).splice(p, 0, C), n;
            }
            return n;
          default:
            return n;
        }
      }
      function BI(n) {
        return (OI(n) || 0 === n.length) && (n = ['child_added', 'child_removed', 'child_changed', 'child_moved']), n;
      }
      function VI(n, e, t) {
        return (function s1(n, e, t) {
          return Rb(n, 'value', 'once', t).pipe(
            (0, vt.w)((i) => {
              const o = [(0, ee.of)(i)];
              return e.forEach((c) => o.push(Rb(n, c, 'on', t))), (0, me.T)(...o).pipe((0, ts.R)(a1, []));
            }),
            (0, Os.x)()
          );
        })(n, (e = BI(e)), t);
      }
      function UI(n, e, t) {
        const i = (e = BI(e)).map((o) => Rb(n, o, 'on', t));
        return (0, me.T)(...i);
      }
      function jI(n, e) {
        return function (i, o) {
          return LI(i, {
            stringCase: () => n.child(i)[e](o),
            firebaseCase: () => i[e](o),
            snapshotCase: () => i.ref[e](o),
          });
        };
      }
      function d1(n) {
        return function (t) {
          return t
            ? LI(t, {
                stringCase: () => n.child(t).remove(),
                firebaseCase: () => t.remove(),
                snapshotCase: () => t.ref.remove(),
              })
            : n.remove();
        };
      }
      function HI(n, e) {
        return function () {
          return Rb(n, 'value', 'on', e);
        };
      }
      !(function t1(n) {
        n.INTERNAL.registerComponent(
          new tr.wA(
            'database-compat',
            (e, { instanceIdentifier: t }) => {
              const i = e.getProvider('app-compat').getImmediate(),
                o = e.getProvider('database').getImmediate({ identifier: t });
              return new Ib(o, i);
            },
            'PUBLIC'
          )
            .setServiceProps({
              Reference: kc,
              Query: Ka,
              Database: Ib,
              DataSnapshot: Tf,
              enableLogging: BP,
              INTERNAL: JP,
              ServerValue: e1,
            })
            .setMultipleInstances(!0)
        ),
          n.registerVersion('@firebase/database-compat', '0.1.5');
      })(Vr.Z);
      const p1 = new m.OlP('angularfire2.realtimeDatabaseURL'),
        m1 = new m.OlP('angularfire2.database.use-emulator');
      let g1 = (() => {
          class n {
            constructor(t, i, o, c, p, C, I, U, se, xe, rt, Ut, qt, Mn, Ln) {
              this.schedulers = C;
              const Ki = I,
                er = (0, fi.on)(t, p, i);
              U && Iv(er, p, se, rt, Ut, qt, xe, Mn),
                (this.database = (0, fi.cc)(
                  `${er.name}.database.${o}`,
                  'AngularFireDatabase',
                  er.name,
                  () => {
                    const yr = p.runOutsideAngular(() => er.database(o || void 0));
                    return Ki && yr.useEmulator(...Ki), yr;
                  },
                  [Ki]
                ));
            }
            list(t, i) {
              const o = this.schedulers.ngZone.runOutsideAngular(() => FI(this.database, t));
              let c = o;
              return (
                i && (c = i(o)),
                (function h1(n, e) {
                  const t = e.schedulers.outsideAngular,
                    i = e.schedulers.ngZone.run(() => n.ref);
                  return {
                    query: n,
                    update: jI(i, 'update'),
                    set: jI(i, 'set'),
                    push: (o) => i.push(o),
                    remove: d1(i),
                    snapshotChanges: (o) => VI(n, o, t).pipe(_i.iC),
                    stateChanges: (o) => UI(n, o, t).pipe(_i.iC),
                    auditTrail: (o) =>
                      (function l1(n, e, t) {
                        return (function u1(n, e, t) {
                          return (function c1(n, e) {
                            return Rb(n, 'value', 'on', e).pipe(
                              (0, Ze.U)((t) => {
                                let i;
                                return t.payload.forEach((o) => ((i = o.key), !1)), { data: t, lastKeyToLoad: i };
                              })
                            );
                          })(n, t).pipe(
                            (function oR(...n) {
                              const e = (0, sR.jO)(n);
                              return (0, Ke.e)((t, i) => {
                                const o = n.length,
                                  c = new Array(o);
                                let p = n.map(() => !1),
                                  C = !1;
                                for (let I = 0; I < o; I++)
                                  (0, iR.Xf)(n[I]).subscribe(
                                    new ps.Q(
                                      i,
                                      (U) => {
                                        (c[I] = U), !C && !p[I] && ((p[I] = !0), (C = p.every(rR.y)) && (p = null));
                                      },
                                      Oe.Z
                                    )
                                  );
                                t.subscribe(
                                  new ps.Q(i, (I) => {
                                    if (C) {
                                      const U = [I, ...c];
                                      i.next(e ? e(...U) : U);
                                    }
                                  })
                                );
                              });
                            })(e),
                            (0, Ze.U)(([o, c]) => {
                              const p = o.lastKeyToLoad,
                                C = c.map((I) => I.key);
                              return { actions: c, lastKeyToLoad: p, loadedKeys: C };
                            }),
                            (function aR(n) {
                              return (0, Ke.e)((e, t) => {
                                let i = !1,
                                  o = 0;
                                e.subscribe(new ps.Q(t, (c) => (i || (i = !n(c, o++))) && t.next(c)));
                              });
                            })((o) => -1 === o.loadedKeys.indexOf(o.lastKeyToLoad)),
                            (0, Ze.U)((o) => o.actions)
                          );
                        })(n, UI(n, e).pipe((0, ts.R)((o, c) => [...o, c], [])), t);
                      })(n, o, t).pipe(_i.iC),
                    valueChanges: (o, c) =>
                      VI(n, o, t).pipe(
                        (0, Ze.U)((C) =>
                          C.map((I) =>
                            c && c.idField
                              ? Object.assign(Object.assign({}, I.payload.val()), { [c.idField]: I.key })
                              : I.payload.val()
                          )
                        ),
                        _i.iC
                      ),
                  };
                })(c, this)
              );
            }
            object(t) {
              return (function f1(n, e) {
                return {
                  query: n,
                  snapshotChanges: () => HI(n, e.schedulers.outsideAngular)().pipe(_i.iC),
                  update: (t) => n.ref.update(t),
                  set: (t) => n.ref.set(t),
                  remove: () => n.ref.remove(),
                  valueChanges: () =>
                    HI(n, e.schedulers.outsideAngular)().pipe(
                      _i.iC,
                      (0, Ze.U)((i) => (i.payload.exists() ? i.payload.val() : null))
                    ),
                };
              })(
                this.schedulers.ngZone.runOutsideAngular(() => FI(this.database, t)),
                this
              );
            }
            createPushId() {
              return this.schedulers.ngZone.runOutsideAngular(() => this.database.ref()).push().key;
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                m.LFG(fi.Dh),
                m.LFG(fi.xv, 8),
                m.LFG(p1, 8),
                m.LFG(m.Lbi),
                m.LFG(m.R0b),
                m.LFG(_i.HU),
                m.LFG(m1, 8),
                m.LFG(Rv, 8),
                m.LFG(Av, 8),
                m.LFG(Ng, 8),
                m.LFG(Bg, 8),
                m.LFG(pa, 8),
                m.LFG(Id, 8),
                m.LFG(Tv, 8),
                m.LFG(vh, 8)
              );
            }),
            (n.ɵprov = m.Yz7({ token: n, factory: n.ɵfac, providedIn: 'any' })),
            n
          );
        })(),
        _1 = (() => {
          class n {
            constructor() {
              Xp.Z.registerVersion('angularfire', _i.q4.full, 'rtdb-compat');
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n })),
            (n.ɵinj = m.cJS({ providers: [g1] })),
            n
          );
        })(),
        y1 = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = m.oAB({ type: n, bootstrap: [Rd] })),
            (n.ɵinj = m.cJS({
              providers: [
                { provide: Ce.TP, useClass: hn, multi: !0 },
                { provide: Ce.TP, useClass: Se, multi: !0 },
                { provide: N.wN, useClass: Be },
              ],
              imports: [
                [
                  h.b2,
                  Nt.register('./ngsw-worker.js', { enabled: re.N.production }),
                  fi.hO.initializeApp(re.N.firebase),
                  tR,
                  _1,
                  Jp,
                  Pv,
                  d.u5,
                  Ce.JF,
                  N.Bz,
                  en.aw.forRoot(),
                  xt.PW,
                  Gt.q,
                  Zt,
                  Nv,
                  oA,
                  Wn,
                  d.UX,
                  VD,
                ],
              ],
            })),
            n
          );
        })();
      re.N.production && (0, m.G48)(),
        h
          .q6()
          .bootstrapModule(y1)
          .catch((n) => console.error(n));
    },
    2011: (un, ft, x) => {
      'use strict';
      x.d(ft, { hO: () => Qe, xv: () => Ne, Dh: () => Fe, GT: () => Re, cc: () => Oe, on: () => ee, pX: () => Ce });
      var h = x(5e3),
        m = x(127),
        d = x(5813);
      un = x.hmd(un);
      const N = ['ngOnDestroy'],
        Ce = (Ze, dt, vt, We = {}) =>
          new Proxy(Ze, {
            get: ($e, ge) =>
              vt.runOutsideAngular(() => {
                var Ke;
                if (Ze[ge])
                  return (
                    (null === (Ke = null == We ? void 0 : We.spy) || void 0 === Ke ? void 0 : Ke.get) &&
                      We.spy.get(ge, Ze[ge]),
                    Ze[ge]
                  );
                if (N.indexOf(ge) > -1) return () => {};
                const Ie = dt.toPromise().then((De) => {
                  const Ye = De && De[ge];
                  return 'function' == typeof Ye
                    ? Ye.bind(De)
                    : Ye && Ye.then
                    ? Ye.then((it) => vt.run(() => it))
                    : vt.run(() => Ye);
                });
                return new Proxy(() => {}, {
                  get: (De, Ye) => Ie[Ye],
                  apply: (De, Ye, it) =>
                    Ie.then((qe) => {
                      var Ve;
                      const Ft = qe && qe(...it);
                      return (
                        (null === (Ve = null == We ? void 0 : We.spy) || void 0 === Ve ? void 0 : Ve.apply) &&
                          We.spy.apply(ge, it, Ft),
                        Ft
                      );
                    }),
                });
              }),
          }),
        Re = (Ze, dt) => {
          dt.forEach((vt) => {
            Object.getOwnPropertyNames(vt.prototype || vt).forEach((We) => {
              Object.defineProperty(Ze.prototype, We, Object.getOwnPropertyDescriptor(vt.prototype || vt, We));
            });
          });
        };
      class He {
        constructor(dt) {
          return dt;
        }
      }
      const Fe = new h.OlP('angularfire2.app.options'),
        Ne = new h.OlP('angularfire2.app.name');
      function ee(Ze, dt, vt) {
        const $e = ('object' == typeof vt && vt) || {};
        $e.name = $e.name || ('string' == typeof vt && vt) || '[DEFAULT]';
        const Ke =
          m.Z.apps.filter((Ie) => Ie && Ie.name === $e.name)[0] ||
          dt.runOutsideAngular(() => m.Z.initializeApp(Ze, $e));
        try {
          JSON.stringify(Ze) !== JSON.stringify(Ke.options) &&
            fe(
              'error',
              `${Ke.name} Firebase App already initialized with different options${
                un.hot ? ', you may need to reload as Firebase is not HMR aware.' : '.'
              }`
            );
        } catch (Ie) {}
        return new He(Ke);
      }
      const fe = (Ze, ...dt) => {
          (0, h.X6Q)() && 'undefined' != typeof console && console[Ze](...dt);
        },
        ue = { provide: He, useFactory: ee, deps: [Fe, h.R0b, [new h.FiY(), Ne]] };
      let Qe = (() => {
        class Ze {
          constructor(vt) {
            m.Z.registerVersion('angularfire', d.q4.full, 'core'),
              m.Z.registerVersion('angularfire', d.q4.full, 'app-compat'),
              m.Z.registerVersion('angular', h.q4F.full, vt.toString());
          }
          static initializeApp(vt, We) {
            return {
              ngModule: Ze,
              providers: [
                { provide: Fe, useValue: vt },
                { provide: Ne, useValue: We },
              ],
            };
          }
        }
        return (
          (Ze.ɵfac = function (vt) {
            return new (vt || Ze)(h.LFG(h.Lbi));
          }),
          (Ze.ɵmod = h.oAB({ type: Ze })),
          (Ze.ɵinj = h.cJS({ providers: [ue] })),
          Ze
        );
      })();
      function Oe(Ze, dt, vt, We, $e) {
        const [, ge, Ke] = globalThis.ɵAngularfireInstanceCache.find((Ie) => Ie[0] === Ze) || [];
        if (ge)
          return (
            (function et(Ze, dt) {
              try {
                return Ze.toString() === dt.toString();
              } catch (vt) {
                return Ze === dt;
              }
            })($e, Ke) ||
              (me(
                'error',
                `${dt} was already initialized on the ${vt} Firebase App with different settings.${
                  lt ? ' You may need to reload as Firebase is not HMR aware.' : ''
                }`
              ),
              me('warn', { is: $e, was: Ke })),
            ge
          );
        {
          const Ie = We();
          return globalThis.ɵAngularfireInstanceCache.push([Ze, Ie, $e]), Ie;
        }
      }
      const lt = !!un.hot,
        me = (Ze, ...dt) => {
          (0, h.X6Q)() && 'undefined' != typeof console && console[Ze](...dt);
        };
      globalThis.ɵAngularfireInstanceCache || (globalThis.ɵAngularfireInstanceCache = []);
    },
    5813: (un, ft, x) => {
      'use strict';
      x.d(ft, { q4: () => sc, iC: () => lc, fc: () => Ll, HU: () => dl, vb: () => jd, JM: () => Uc });
      var h = x(5e3),
        m = x(5867),
        d = x(5861),
        N = x(9681),
        Ce = x(2090),
        Re = x(4859),
        He = x(1877),
        Fe = x(2940);
      const Ne = '@firebase/installations',
        ue = 'w:0.5.5',
        Qe = 'FIS_v2',
        dt = new Ce.LL('installations', 'Installations', {
          'missing-app-config-values': 'Missing App configuration value: "{$valueName}"',
          'not-registered': 'Firebase Installation is not registered.',
          'installation-not-found': 'Firebase Installation not found.',
          'request-failed':
            '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
          'app-offline': 'Could not process request. Application offline.',
          'delete-pending-registration': "Can't delete installation while there is a pending registration request.",
        });
      function vt(j) {
        return j instanceof Ce.ZR && j.code.includes('request-failed');
      }
      function We({ projectId: j }) {
        return `https://firebaseinstallations.googleapis.com/v1/projects/${j}/installations`;
      }
      function $e(j) {
        return { token: j.token, requestStatus: 2, expiresIn: qe(j.expiresIn), creationTime: Date.now() };
      }
      function ge(j, K) {
        return Ke.apply(this, arguments);
      }
      function Ke() {
        return (Ke = (0, d.Z)(function* (j, K) {
          const ct = (yield K.json()).error;
          return dt.create('request-failed', {
            requestName: j,
            serverCode: ct.code,
            serverMessage: ct.message,
            serverStatus: ct.status,
          });
        })).apply(this, arguments);
      }
      function Ie({ apiKey: j }) {
        return new Headers({ 'Content-Type': 'application/json', Accept: 'application/json', 'x-goog-api-key': j });
      }
      function De(j, { refreshToken: K }) {
        const Ee = Ie(j);
        return (
          Ee.append(
            'Authorization',
            (function Ve(j) {
              return `${Qe} ${j}`;
            })(K)
          ),
          Ee
        );
      }
      function Ye(j) {
        return it.apply(this, arguments);
      }
      function it() {
        return (it = (0, d.Z)(function* (j) {
          const K = yield j();
          return K.status >= 500 && K.status < 600 ? j() : K;
        })).apply(this, arguments);
      }
      function qe(j) {
        return Number(j.replace('s', '000'));
      }
      function Ft(j, K) {
        return kt.apply(this, arguments);
      }
      function kt() {
        return (kt = (0, d.Z)(function* (j, { fid: K }) {
          const Ee = We(j),
            sn = {
              method: 'POST',
              headers: Ie(j),
              body: JSON.stringify({ fid: K, authVersion: Qe, appId: j.appId, sdkVersion: ue }),
            },
            Cn = yield Ye(() => fetch(Ee, sn));
          if (Cn.ok) {
            const qn = yield Cn.json();
            return {
              fid: qn.fid || K,
              registrationStatus: 2,
              refreshToken: qn.refreshToken,
              authToken: $e(qn.authToken),
            };
          }
          throw yield ge('Create Installation', Cn);
        })).apply(this, arguments);
      }
      function St(j) {
        return new Promise((K) => {
          setTimeout(K, j);
        });
      }
      const Je = /^[cdef][\w-]{21}$/;
      function st() {
        try {
          const j = new Uint8Array(17);
          (self.crypto || self.msCrypto).getRandomValues(j), (j[0] = 112 + (j[0] % 16));
          const Ee = (function Et(j) {
            return (function on(j) {
              return btoa(String.fromCharCode(...j))
                .replace(/\+/g, '-')
                .replace(/\//g, '_');
            })(j).substr(0, 22);
          })(j);
          return Je.test(Ee) ? Ee : '';
        } catch (j) {
          return '';
        }
      }
      function yt(j) {
        return `${j.appName}!${j.appId}`;
      }
      const Ue = new Map();
      function bt(j, K) {
        const Ee = yt(j);
        Nt(Ee, K),
          (function en(j, K) {
            const Ee = (function Gt() {
              return (
                !xt &&
                  'BroadcastChannel' in self &&
                  ((xt = new BroadcastChannel('[Firebase] FID Change')),
                  (xt.onmessage = (j) => {
                    Nt(j.data.key, j.data.fid);
                  })),
                xt
              );
            })();
            Ee && Ee.postMessage({ key: j, fid: K }),
              (function re() {
                0 === Ue.size && xt && (xt.close(), (xt = null));
              })();
          })(Ee, K);
      }
      function Nt(j, K) {
        const Ee = Ue.get(j);
        if (Ee) for (const ct of Ee) ct(K);
      }
      let xt = null;
      const hn = 'firebase-installations-store';
      let At = null;
      function ae() {
        return (
          At ||
            (At = (0, Fe.openDb)('firebase-installations-database', 1, (j) => {
              0 === j.oldVersion && j.createObjectStore(hn);
            })),
          At
        );
      }
      function Le(j, K) {
        return ht.apply(this, arguments);
      }
      function ht() {
        return (ht = (0, d.Z)(function* (j, K) {
          const Ee = yt(j),
            Bt = (yield ae()).transaction(hn, 'readwrite'),
            sn = Bt.objectStore(hn),
            Cn = yield sn.get(Ee);
          return yield sn.put(K, Ee), yield Bt.complete, (!Cn || Cn.fid !== K.fid) && bt(j, K.fid), K;
        })).apply(this, arguments);
      }
      function Se(j) {
        return Be.apply(this, arguments);
      }
      function Be() {
        return (Be = (0, d.Z)(function* (j) {
          const K = yt(j),
            ct = (yield ae()).transaction(hn, 'readwrite');
          yield ct.objectStore(hn).delete(K), yield ct.complete;
        })).apply(this, arguments);
      }
      function Pe(j, K) {
        return X.apply(this, arguments);
      }
      function X() {
        return (X = (0, d.Z)(function* (j, K) {
          const Ee = yt(j),
            Bt = (yield ae()).transaction(hn, 'readwrite'),
            sn = Bt.objectStore(hn),
            Cn = yield sn.get(Ee),
            qn = K(Cn);
          return (
            void 0 === qn ? yield sn.delete(Ee) : yield sn.put(qn, Ee),
            yield Bt.complete,
            qn && (!Cn || Cn.fid !== qn.fid) && bt(j, qn.fid),
            qn
          );
        })).apply(this, arguments);
      }
      function we(j) {
        return Rt.apply(this, arguments);
      }
      function Rt() {
        return (Rt = (0, d.Z)(function* (j) {
          let K;
          const Ee = yield Pe(j, (ct) => {
            const Bt = It(ct),
              sn = an(j, Bt);
            return (K = sn.registrationPromise), sn.installationEntry;
          });
          return '' === Ee.fid ? { installationEntry: yield K } : { installationEntry: Ee, registrationPromise: K };
        })).apply(this, arguments);
      }
      function It(j) {
        return zt(j || { fid: st(), registrationStatus: 0 });
      }
      function an(j, K) {
        if (0 === K.registrationStatus) {
          if (!navigator.onLine)
            return { installationEntry: K, registrationPromise: Promise.reject(dt.create('app-offline')) };
          const Ee = { fid: K.fid, registrationStatus: 1, registrationTime: Date.now() },
            ct = (function mn(j, K) {
              return ln.apply(this, arguments);
            })(j, Ee);
          return { installationEntry: Ee, registrationPromise: ct };
        }
        return 1 === K.registrationStatus
          ? { installationEntry: K, registrationPromise: An(j) }
          : { installationEntry: K };
      }
      function ln() {
        return (ln = (0, d.Z)(function* (j, K) {
          try {
            return Le(j, yield Ft(j, K));
          } catch (Ee) {
            throw (
              (vt(Ee) && 409 === Ee.customData.serverCode
                ? yield Se(j)
                : yield Le(j, { fid: K.fid, registrationStatus: 0 }),
              Ee)
            );
          }
        })).apply(this, arguments);
      }
      function An(j) {
        return Yn.apply(this, arguments);
      }
      function Yn() {
        return (Yn = (0, d.Z)(function* (j) {
          let K = yield Hn(j);
          for (; 1 === K.registrationStatus; ) yield St(100), (K = yield Hn(j));
          if (0 === K.registrationStatus) {
            const { installationEntry: Ee, registrationPromise: ct } = yield we(j);
            return ct || Ee;
          }
          return K;
        })).apply(this, arguments);
      }
      function Hn(j) {
        return Pe(j, (K) => {
          if (!K) throw dt.create('installation-not-found');
          return zt(K);
        });
      }
      function zt(j) {
        return (function Wt(j) {
          return 1 === j.registrationStatus && j.registrationTime + 1e4 < Date.now();
        })(j)
          ? { fid: j.fid, registrationStatus: 0 }
          : j;
      }
      function de(j, K) {
        return q.apply(this, arguments);
      }
      function q() {
        return (q = (0, d.Z)(function* ({ appConfig: j, platformLoggerProvider: K }, Ee) {
          const ct = le(j, Ee),
            Bt = De(j, Ee),
            sn = K.getImmediate({ optional: !0 });
          sn && Bt.append('x-firebase-client', sn.getPlatformInfoString());
          const qn = { method: 'POST', headers: Bt, body: JSON.stringify({ installation: { sdkVersion: ue } }) },
            $n = yield Ye(() => fetch(ct, qn));
          if ($n.ok) return $e(yield $n.json());
          throw yield ge('Generate Auth Token', $n);
        })).apply(this, arguments);
      }
      function le(j, { fid: K }) {
        return `${We(j)}/${K}/authTokens:generate`;
      }
      function Z(j) {
        return ye.apply(this, arguments);
      }
      function ye() {
        return (ye = (0, d.Z)(function* (j, K = !1) {
          let Ee;
          const ct = yield Pe(j.appConfig, (sn) => {
            if (!Xe(sn)) throw dt.create('not-registered');
            const Cn = sn.authToken;
            if (!K && Ot(Cn)) return sn;
            if (1 === Cn.requestStatus) return (Ee = ie(j, K)), sn;
            {
              if (!navigator.onLine) throw dt.create('app-offline');
              const qn = _n(sn);
              return (Ee = pe(j, qn)), qn;
            }
          });
          return Ee ? yield Ee : ct.authToken;
        })).apply(this, arguments);
      }
      function ie(j, K) {
        return he.apply(this, arguments);
      }
      function he() {
        return (he = (0, d.Z)(function* (j, K) {
          let Ee = yield Te(j.appConfig);
          for (; 1 === Ee.authToken.requestStatus; ) yield St(100), (Ee = yield Te(j.appConfig));
          const ct = Ee.authToken;
          return 0 === ct.requestStatus ? Z(j, K) : ct;
        })).apply(this, arguments);
      }
      function Te(j) {
        return Pe(j, (K) => {
          if (!Xe(K)) throw dt.create('not-registered');
          return (function Qn(j) {
            return 1 === j.requestStatus && j.requestTime + 1e4 < Date.now();
          })(K.authToken)
            ? Object.assign(Object.assign({}, K), { authToken: { requestStatus: 0 } })
            : K;
        });
      }
      function pe(j, K) {
        return _e.apply(this, arguments);
      }
      function _e() {
        return (_e = (0, d.Z)(function* (j, K) {
          try {
            const Ee = yield de(j, K),
              ct = Object.assign(Object.assign({}, K), { authToken: Ee });
            return yield Le(j.appConfig, ct), Ee;
          } catch (Ee) {
            if (!vt(Ee) || (401 !== Ee.customData.serverCode && 404 !== Ee.customData.serverCode)) {
              const ct = Object.assign(Object.assign({}, K), { authToken: { requestStatus: 0 } });
              yield Le(j.appConfig, ct);
            } else yield Se(j.appConfig);
            throw Ee;
          }
        })).apply(this, arguments);
      }
      function Xe(j) {
        return void 0 !== j && 2 === j.registrationStatus;
      }
      function Ot(j) {
        return (
          2 === j.requestStatus &&
          !(function Yt(j) {
            const K = Date.now();
            return K < j.creationTime || j.creationTime + j.expiresIn < K + 36e5;
          })(j)
        );
      }
      function _n(j) {
        const K = { requestStatus: 1, requestTime: Date.now() };
        return Object.assign(Object.assign({}, j), { authToken: K });
      }
      function jt() {
        return (jt = (0, d.Z)(function* (j) {
          const K = j,
            { installationEntry: Ee, registrationPromise: ct } = yield we(K.appConfig);
          return ct ? ct.catch(console.error) : Z(K).catch(console.error), Ee.fid;
        })).apply(this, arguments);
      }
      function nt() {
        return (nt = (0, d.Z)(function* (j, K = !1) {
          const Ee = j;
          return yield Pt(Ee.appConfig), (yield Z(Ee, K)).token;
        })).apply(this, arguments);
      }
      function Pt(j) {
        return dn.apply(this, arguments);
      }
      function dn() {
        return (dn = (0, d.Z)(function* (j) {
          const { registrationPromise: K } = yield we(j);
          K && (yield K);
        })).apply(this, arguments);
      }
      function es(j) {
        return dt.create('missing-app-config-values', { valueName: j });
      }
      const Cr = 'installations',
        pi = (j) => {
          const K = j.getProvider('app').getImmediate(),
            Ee = (function br(j) {
              if (!j || !j.options) throw es('App Configuration');
              if (!j.name) throw es('App Name');
              const K = ['projectId', 'apiKey', 'appId'];
              for (const Ee of K) if (!j.options[Ee]) throw es(Ee);
              return {
                appName: j.name,
                projectId: j.options.projectId,
                apiKey: j.options.apiKey,
                appId: j.options.appId,
              };
            })(K);
          return {
            app: K,
            appConfig: Ee,
            platformLoggerProvider: (0, N._getProvider)(K, 'platform-logger'),
            _delete: () => Promise.resolve(),
          };
        },
        J = (j) => {
          const K = j.getProvider('app').getImmediate(),
            Ee = (0, N._getProvider)(K, Cr).getImmediate();
          return {
            getId: () =>
              (function Ai(j) {
                return jt.apply(this, arguments);
              })(Ee),
            getToken: (Bt) =>
              (function wt(j) {
                return nt.apply(this, arguments);
              })(Ee, Bt),
          };
        };
      (function Kt() {
        (0, N._registerComponent)(new Re.wA(Cr, pi, 'PUBLIC')),
          (0, N._registerComponent)(new Re.wA('installations-internal', J, 'PRIVATE'));
      })(),
        (0, N.registerVersion)(Ne, '0.5.5'),
        (0, N.registerVersion)(Ne, '0.5.5', 'esm2017');
      const Ht = '@firebase/remote-config',
        qi = new Ce.LL('remoteconfig', 'Remote Config', {
          'registration-window': 'Undefined window object. This SDK only supports usage in a browser environment.',
          'registration-project-id': 'Undefined project identifier. Check Firebase app initialization.',
          'registration-api-key': 'Undefined API key. Check Firebase app initialization.',
          'registration-app-id': 'Undefined app identifier. Check Firebase app initialization.',
          'storage-open': 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
          'storage-get': 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
          'storage-set': 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
          'storage-delete': 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',
          'fetch-client-network':
            'Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
          'fetch-timeout':
            'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
          'fetch-throttle':
            'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
          'fetch-client-parse': 'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
          'fetch-status': 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
          'indexed-db-unavailable': 'Indexed DB is not supported by current browser',
        });
      class ko {
        constructor(K, Ee, ct, Bt) {
          (this.client = K), (this.storage = Ee), (this.storageCache = ct), (this.logger = Bt);
        }
        isCachedDataFresh(K, Ee) {
          if (!Ee) return this.logger.debug('Config fetch cache check. Cache unpopulated.'), !1;
          const ct = Date.now() - Ee,
            Bt = ct <= K;
          return (
            this.logger.debug(
              `Config fetch cache check. Cache age millis: ${ct}. Cache max age millis (minimumFetchIntervalMillis setting): ${K}. Is cache hit: ${Bt}.`
            ),
            Bt
          );
        }
        fetch(K) {
          var Ee = this;
          return (0, d.Z)(function* () {
            const [ct, Bt] = yield Promise.all([
              Ee.storage.getLastSuccessfulFetchTimestampMillis(),
              Ee.storage.getLastSuccessfulFetchResponse(),
            ]);
            if (Bt && Ee.isCachedDataFresh(K.cacheMaxAgeMillis, ct)) return Bt;
            K.eTag = Bt && Bt.eTag;
            const sn = yield Ee.client.fetch(K),
              Cn = [Ee.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];
            return (
              200 === sn.status && Cn.push(Ee.storage.setLastSuccessfulFetchResponse(sn)), yield Promise.all(Cn), sn
            );
          })();
        }
      }
      function ei(j = navigator) {
        return (j.languages && j.languages[0]) || j.language;
      }
      class Li {
        constructor(K, Ee, ct, Bt, sn, Cn) {
          (this.firebaseInstallations = K),
            (this.sdkVersion = Ee),
            (this.namespace = ct),
            (this.projectId = Bt),
            (this.apiKey = sn),
            (this.appId = Cn);
        }
        fetch(K) {
          var Ee = this;
          return (0, d.Z)(function* () {
            const [ct, Bt] = yield Promise.all([Ee.firebaseInstallations.getId(), Ee.firebaseInstallations.getToken()]),
              Cn = `${
                window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com'
              }/v1/projects/${Ee.projectId}/namespaces/${Ee.namespace}:fetch?key=${Ee.apiKey}`,
              qn = { 'Content-Type': 'application/json', 'Content-Encoding': 'gzip', 'If-None-Match': K.eTag || '*' },
              $n = {
                sdk_version: Ee.sdkVersion,
                app_instance_id: ct,
                app_instance_id_token: Bt,
                app_id: Ee.appId,
                language_code: ei(),
              },
              $i = { method: 'POST', headers: qn, body: JSON.stringify($n) },
              Tr = fetch(Cn, $i),
              Us = new Promise((tl, Da) => {
                K.signal.addEventListener(() => {
                  const Ho = new Error('The operation was aborted.');
                  (Ho.name = 'AbortError'), Da(Ho);
                });
              });
            let ur;
            try {
              yield Promise.race([Tr, Us]), (ur = yield Tr);
            } catch (tl) {
              let Da = 'fetch-client-network';
              throw (
                ('AbortError' === tl.name && (Da = 'fetch-timeout'),
                qi.create(Da, { originalErrorMessage: tl.message }))
              );
            }
            let Ir = ur.status;
            const Nl = ur.headers.get('ETag') || void 0;
            let Do, Hc;
            if (200 === ur.status) {
              let tl;
              try {
                tl = yield ur.json();
              } catch (Da) {
                throw qi.create('fetch-client-parse', { originalErrorMessage: Da.message });
              }
              (Do = tl.entries), (Hc = tl.state);
            }
            if (
              ('INSTANCE_STATE_UNSPECIFIED' === Hc
                ? (Ir = 500)
                : 'NO_CHANGE' === Hc
                ? (Ir = 304)
                : ('NO_TEMPLATE' === Hc || 'EMPTY_CONFIG' === Hc) && (Do = {}),
              304 !== Ir && 200 !== Ir)
            )
              throw qi.create('fetch-status', { httpStatus: Ir });
            return { status: Ir, eTag: Nl, config: Do };
          })();
        }
      }
      class ls {
        constructor(K, Ee) {
          (this.client = K), (this.storage = Ee);
        }
        fetch(K) {
          var Ee = this;
          return (0, d.Z)(function* () {
            const ct = (yield Ee.storage.getThrottleMetadata()) || {
              backoffCount: 0,
              throttleEndTimeMillis: Date.now(),
            };
            return Ee.attemptFetch(K, ct);
          })();
        }
        attemptFetch(K, { throttleEndTimeMillis: Ee, backoffCount: ct }) {
          var Bt = this;
          return (0, d.Z)(function* () {
            yield (function Ur(j, K) {
              return new Promise((Ee, ct) => {
                const Bt = Math.max(K - Date.now(), 0),
                  sn = setTimeout(Ee, Bt);
                j.addEventListener(() => {
                  clearTimeout(sn), ct(qi.create('fetch-throttle', { throttleEndTimeMillis: K }));
                });
              });
            })(K.signal, Ee);
            try {
              const sn = yield Bt.client.fetch(K);
              return yield Bt.storage.deleteThrottleMetadata(), sn;
            } catch (sn) {
              if (
                !(function Ps(j) {
                  if (!(j instanceof Ce.ZR && j.customData)) return !1;
                  const K = Number(j.customData.httpStatus);
                  return 429 === K || 500 === K || 503 === K || 504 === K;
                })(sn)
              )
                throw sn;
              const Cn = { throttleEndTimeMillis: Date.now() + (0, Ce.$s)(ct), backoffCount: ct + 1 };
              return yield Bt.storage.setThrottleMetadata(Cn), Bt.attemptFetch(K, Cn);
            }
          })();
        }
      }
      class Oa {
        constructor(K, Ee, ct, Bt, sn) {
          (this.app = K),
            (this._client = Ee),
            (this._storageCache = ct),
            (this._storage = Bt),
            (this._logger = sn),
            (this._isInitializationComplete = !1),
            (this.settings = { fetchTimeoutMillis: 6e4, minimumFetchIntervalMillis: 432e5 }),
            (this.defaultConfig = {});
        }
        get fetchTimeMillis() {
          return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;
        }
        get lastFetchStatus() {
          return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';
        }
      }
      function Fs(j, K) {
        const Ee = j.target.error || void 0;
        return qi.create(K, { originalErrorMessage: Ee && Ee.message });
      }
      const Hi = 'app_namespace_store';
      class ga {
        constructor(
          K,
          Ee,
          ct,
          Bt = (function Ls() {
            return new Promise((j, K) => {
              try {
                const Ee = indexedDB.open('firebase_remote_config', 1);
                (Ee.onerror = (ct) => {
                  K(Fs(ct, 'storage-open'));
                }),
                  (Ee.onsuccess = (ct) => {
                    j(ct.target.result);
                  }),
                  (Ee.onupgradeneeded = (ct) => {
                    0 === ct.oldVersion && ct.target.result.createObjectStore(Hi, { keyPath: 'compositeKey' });
                  });
              } catch (Ee) {
                K(qi.create('storage-open', { originalErrorMessage: Ee }));
              }
            });
          })()
        ) {
          (this.appId = K), (this.appName = Ee), (this.namespace = ct), (this.openDbPromise = Bt);
        }
        getLastFetchStatus() {
          return this.get('last_fetch_status');
        }
        setLastFetchStatus(K) {
          return this.set('last_fetch_status', K);
        }
        getLastSuccessfulFetchTimestampMillis() {
          return this.get('last_successful_fetch_timestamp_millis');
        }
        setLastSuccessfulFetchTimestampMillis(K) {
          return this.set('last_successful_fetch_timestamp_millis', K);
        }
        getLastSuccessfulFetchResponse() {
          return this.get('last_successful_fetch_response');
        }
        setLastSuccessfulFetchResponse(K) {
          return this.set('last_successful_fetch_response', K);
        }
        getActiveConfig() {
          return this.get('active_config');
        }
        setActiveConfig(K) {
          return this.set('active_config', K);
        }
        getActiveConfigEtag() {
          return this.get('active_config_etag');
        }
        setActiveConfigEtag(K) {
          return this.set('active_config_etag', K);
        }
        getThrottleMetadata() {
          return this.get('throttle_metadata');
        }
        setThrottleMetadata(K) {
          return this.set('throttle_metadata', K);
        }
        deleteThrottleMetadata() {
          return this.delete('throttle_metadata');
        }
        get(K) {
          var Ee = this;
          return (0, d.Z)(function* () {
            const ct = yield Ee.openDbPromise;
            return new Promise((Bt, sn) => {
              const qn = ct.transaction([Hi], 'readonly').objectStore(Hi),
                $n = Ee.createCompositeKey(K);
              try {
                const $i = qn.get($n);
                ($i.onerror = (Tr) => {
                  sn(Fs(Tr, 'storage-get'));
                }),
                  ($i.onsuccess = (Tr) => {
                    const Us = Tr.target.result;
                    Bt(Us ? Us.value : void 0);
                  });
              } catch ($i) {
                sn(qi.create('storage-get', { originalErrorMessage: $i && $i.message }));
              }
            });
          })();
        }
        set(K, Ee) {
          var ct = this;
          return (0, d.Z)(function* () {
            const Bt = yield ct.openDbPromise;
            return new Promise((sn, Cn) => {
              const $n = Bt.transaction([Hi], 'readwrite').objectStore(Hi),
                $i = ct.createCompositeKey(K);
              try {
                const Tr = $n.put({ compositeKey: $i, value: Ee });
                (Tr.onerror = (Us) => {
                  Cn(Fs(Us, 'storage-set'));
                }),
                  (Tr.onsuccess = () => {
                    sn();
                  });
              } catch (Tr) {
                Cn(qi.create('storage-set', { originalErrorMessage: Tr && Tr.message }));
              }
            });
          })();
        }
        delete(K) {
          var Ee = this;
          return (0, d.Z)(function* () {
            const ct = yield Ee.openDbPromise;
            return new Promise((Bt, sn) => {
              const qn = ct.transaction([Hi], 'readwrite').objectStore(Hi),
                $n = Ee.createCompositeKey(K);
              try {
                const $i = qn.delete($n);
                ($i.onerror = (Tr) => {
                  sn(Fs(Tr, 'storage-delete'));
                }),
                  ($i.onsuccess = () => {
                    Bt();
                  });
              } catch ($i) {
                sn(qi.create('storage-delete', { originalErrorMessage: $i && $i.message }));
              }
            });
          })();
        }
        createCompositeKey(K) {
          return [this.appId, this.appName, this.namespace, K].join();
        }
      }
      class gs {
        constructor(K) {
          this.storage = K;
        }
        getLastFetchStatus() {
          return this.lastFetchStatus;
        }
        getLastSuccessfulFetchTimestampMillis() {
          return this.lastSuccessfulFetchTimestampMillis;
        }
        getActiveConfig() {
          return this.activeConfig;
        }
        loadFromStorage() {
          var K = this;
          return (0, d.Z)(function* () {
            const Ee = K.storage.getLastFetchStatus(),
              ct = K.storage.getLastSuccessfulFetchTimestampMillis(),
              Bt = K.storage.getActiveConfig(),
              sn = yield Ee;
            sn && (K.lastFetchStatus = sn);
            const Cn = yield ct;
            Cn && (K.lastSuccessfulFetchTimestampMillis = Cn);
            const qn = yield Bt;
            qn && (K.activeConfig = qn);
          })();
        }
        setLastFetchStatus(K) {
          return (this.lastFetchStatus = K), this.storage.setLastFetchStatus(K);
        }
        setLastSuccessfulFetchTimestampMillis(K) {
          return (this.lastSuccessfulFetchTimestampMillis = K), this.storage.setLastSuccessfulFetchTimestampMillis(K);
        }
        setActiveConfig(K) {
          return (this.activeConfig = K), this.storage.setActiveConfig(K);
        }
      }
      function al() {
        return _s.apply(this, arguments);
      }
      function _s() {
        return (_s = (0, d.Z)(function* () {
          if (!(0, Ce.hl)()) return !1;
          try {
            return yield (0, Ce.eu)();
          } catch (j) {
            return !1;
          }
        })).apply(this, arguments);
      }
      !(function Ns() {
        (0, N._registerComponent)(
          new Re.wA(
            'remote-config',
            function j(K, { instanceIdentifier: Ee }) {
              const ct = K.getProvider('app').getImmediate(),
                Bt = K.getProvider('installations-internal').getImmediate();
              if ('undefined' == typeof window) throw qi.create('registration-window');
              if (!(0, Ce.hl)()) throw qi.create('indexed-db-unavailable');
              const { projectId: sn, apiKey: Cn, appId: qn } = ct.options;
              if (!sn) throw qi.create('registration-project-id');
              if (!Cn) throw qi.create('registration-api-key');
              if (!qn) throw qi.create('registration-app-id');
              const $n = new ga(qn, ct.name, (Ee = Ee || 'firebase')),
                $i = new gs($n),
                Tr = new He.Yd(Ht);
              Tr.logLevel = He.in.ERROR;
              const Us = new Li(Bt, N.SDK_VERSION, Ee, sn, Cn, qn),
                ur = new ls(Us, $n),
                Ir = new ko(ur, $n, $i, Tr),
                Nl = new Oa(ct, Ir, $i, $n, Tr);
              return (
                (function Ti(j) {
                  const K = (0, Ce.m9)(j);
                  K._initializePromise ||
                    (K._initializePromise = K._storageCache.loadFromStorage().then(() => {
                      K._isInitializationComplete = !0;
                    }));
                })(Nl),
                Nl
              );
            },
            'PUBLIC'
          ).setMultipleInstances(!0)
        ),
          (0, N.registerVersion)(Ht, '0.3.4'),
          (0, N.registerVersion)(Ht, '0.3.4', 'esm2017');
      })();
      const ys = '/firebase-messaging-sw.js',
        cs = '/firebase-cloud-messaging-push-scope',
        Bi = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4',
        wr = 'google.c.a.c_id',
        vs = 'google.c.a.c_l',
        Yo = 'google.c.a.ts',
        Ys = 'google.c.a.e';
      var Gr = (() => {
        return (
          ((j = Gr || (Gr = {})).PUSH_RECEIVED = 'push-received'), (j.NOTIFICATION_CLICKED = 'notification-clicked'), Gr
        );
        var j;
      })();
      function Wr(j) {
        const K = new Uint8Array(j);
        return btoa(String.fromCharCode(...K))
          .replace(/=/g, '')
          .replace(/\+/g, '-')
          .replace(/\//g, '_');
      }
      function Ko(j) {
        const Ee = (j + '='.repeat((4 - (j.length % 4)) % 4)).replace(/\-/g, '+').replace(/_/g, '/'),
          ct = atob(Ee),
          Bt = new Uint8Array(ct.length);
        for (let sn = 0; sn < ct.length; ++sn) Bt[sn] = ct.charCodeAt(sn);
        return Bt;
      }
      const Or = 'fcm_token_details_db',
        Ks = 'fcm_token_object_Store';
      function po(j) {
        return us.apply(this, arguments);
      }
      function us() {
        return (
          (us = (0, d.Z)(function* (j) {
            if ('databases' in indexedDB && !(yield indexedDB.databases()).map((sn) => sn.name).includes(Or))
              return null;
            let K = null;
            return (
              (yield (0, Fe.openDb)(
                Or,
                5,
                (function () {
                  var ct = (0, d.Z)(function* (Bt) {
                    var sn;
                    if (Bt.oldVersion < 2 || !Bt.objectStoreNames.contains(Ks)) return;
                    const Cn = Bt.transaction.objectStore(Ks),
                      qn = yield Cn.index('fcmSenderId').get(j);
                    if ((yield Cn.clear(), qn))
                      if (2 === Bt.oldVersion) {
                        const $n = qn;
                        if (!$n.auth || !$n.p256dh || !$n.endpoint) return;
                        K = {
                          token: $n.fcmToken,
                          createTime: null !== (sn = $n.createTime) && void 0 !== sn ? sn : Date.now(),
                          subscriptionOptions: {
                            auth: $n.auth,
                            p256dh: $n.p256dh,
                            endpoint: $n.endpoint,
                            swScope: $n.swScope,
                            vapidKey: 'string' == typeof $n.vapidKey ? $n.vapidKey : Wr($n.vapidKey),
                          },
                        };
                      } else if (3 === Bt.oldVersion) {
                        const $n = qn;
                        K = {
                          token: $n.fcmToken,
                          createTime: $n.createTime,
                          subscriptionOptions: {
                            auth: Wr($n.auth),
                            p256dh: Wr($n.p256dh),
                            endpoint: $n.endpoint,
                            swScope: $n.swScope,
                            vapidKey: Wr($n.vapidKey),
                          },
                        };
                      } else if (4 === Bt.oldVersion) {
                        const $n = qn;
                        K = {
                          token: $n.fcmToken,
                          createTime: $n.createTime,
                          subscriptionOptions: {
                            auth: Wr($n.auth),
                            p256dh: Wr($n.p256dh),
                            endpoint: $n.endpoint,
                            swScope: $n.swScope,
                            vapidKey: Wr($n.vapidKey),
                          },
                        };
                      }
                  });
                  return function (Bt) {
                    return ct.apply(this, arguments);
                  };
                })()
              )).close(),
              yield (0, Fe.deleteDb)(Or),
              yield (0, Fe.deleteDb)('fcm_vapid_details_db'),
              yield (0, Fe.deleteDb)('undefined'),
              ds(K) ? K : null
            );
          })),
          us.apply(this, arguments)
        );
      }
      function ds(j) {
        if (!j || !j.subscriptionOptions) return !1;
        const { subscriptionOptions: K } = j;
        return (
          'number' == typeof j.createTime &&
          j.createTime > 0 &&
          'string' == typeof j.token &&
          j.token.length > 0 &&
          'string' == typeof K.auth &&
          K.auth.length > 0 &&
          'string' == typeof K.p256dh &&
          K.p256dh.length > 0 &&
          'string' == typeof K.endpoint &&
          K.endpoint.length > 0 &&
          'string' == typeof K.swScope &&
          K.swScope.length > 0 &&
          'string' == typeof K.vapidKey &&
          K.vapidKey.length > 0
        );
      }
      const is = 'firebase-messaging-store';
      let Co = null;
      function Ni() {
        return (
          Co ||
            (Co = (0, Fe.openDb)('firebase-messaging-database', 1, (j) => {
              0 === j.oldVersion && j.createObjectStore(is);
            })),
          Co
        );
      }
      function z(j) {
        return be.apply(this, arguments);
      }
      function be() {
        return (be = (0, d.Z)(function* (j) {
          const K = yn(j),
            ct = yield (yield Ni()).transaction(is).objectStore(is).get(K);
          if (ct) return ct;
          {
            const Bt = yield po(j.appConfig.senderId);
            if (Bt) return yield $(j, Bt), Bt;
          }
        })).apply(this, arguments);
      }
      function $(j, K) {
        return ke.apply(this, arguments);
      }
      function ke() {
        return (ke = (0, d.Z)(function* (j, K) {
          const Ee = yn(j),
            Bt = (yield Ni()).transaction(is, 'readwrite');
          return yield Bt.objectStore(is).put(K, Ee), yield Bt.complete, K;
        })).apply(this, arguments);
      }
      function Dt(j) {
        return tn.apply(this, arguments);
      }
      function tn() {
        return (tn = (0, d.Z)(function* (j) {
          const K = yn(j),
            ct = (yield Ni()).transaction(is, 'readwrite');
          yield ct.objectStore(is).delete(K), yield ct.complete;
        })).apply(this, arguments);
      }
      function yn({ appConfig: j }) {
        return j.appId;
      }
      const di = new Ce.LL('messaging', 'Messaging', {
        'missing-app-config-values': 'Missing App configuration value: "{$valueName}"',
        'only-available-in-window': 'This method is available in a Window context.',
        'only-available-in-sw': 'This method is available in a service worker context.',
        'permission-default': 'The notification permission was not granted and dismissed instead.',
        'permission-blocked': 'The notification permission was not granted and blocked instead.',
        'unsupported-browser': "This browser doesn't support the API's required to use the Firebase SDK.",
        'indexed-db-unsupported':
          "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
        'failed-service-worker-registration':
          'We are unable to register the default service worker. {$browserErrorMessage}',
        'token-subscribe-failed': 'A problem occurred while subscribing the user to FCM: {$errorInfo}',
        'token-subscribe-no-token': 'FCM returned no token when subscribing the user to push.',
        'token-unsubscribe-failed': 'A problem occurred while unsubscribing the user from FCM: {$errorInfo}',
        'token-update-failed': 'A problem occurred while updating the user from FCM: {$errorInfo}',
        'token-update-no-token': 'FCM returned no token when updating the user to push.',
        'use-sw-after-get-token':
          'The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.',
        'invalid-sw-registration': 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',
        'invalid-bg-handler': 'The input to setBackgroundMessageHandler() must be a function.',
        'invalid-vapid-key': 'The public VAPID key must be a string.',
        'use-vapid-key-after-get-token':
          'The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.',
      });
      function Vi(j, K) {
        return ki.apply(this, arguments);
      }
      function ki() {
        return (ki = (0, d.Z)(function* (j, K) {
          const Ee = yield Xt(j),
            ct = Pi(K),
            Bt = { method: 'POST', headers: Ee, body: JSON.stringify(ct) };
          let sn;
          try {
            sn = yield (yield fetch(Me(j.appConfig), Bt)).json();
          } catch (Cn) {
            throw di.create('token-subscribe-failed', { errorInfo: Cn });
          }
          if (sn.error) throw di.create('token-subscribe-failed', { errorInfo: sn.error.message });
          if (!sn.token) throw di.create('token-subscribe-no-token');
          return sn.token;
        })).apply(this, arguments);
      }
      function yi(j, K) {
        return W.apply(this, arguments);
      }
      function W() {
        return (W = (0, d.Z)(function* (j, K) {
          const Ee = yield Xt(j),
            ct = Pi(K.subscriptionOptions),
            Bt = { method: 'PATCH', headers: Ee, body: JSON.stringify(ct) };
          let sn;
          try {
            sn = yield (yield fetch(`${Me(j.appConfig)}/${K.token}`, Bt)).json();
          } catch (Cn) {
            throw di.create('token-update-failed', { errorInfo: Cn });
          }
          if (sn.error) throw di.create('token-update-failed', { errorInfo: sn.error.message });
          if (!sn.token) throw di.create('token-update-no-token');
          return sn.token;
        })).apply(this, arguments);
      }
      function H(j, K) {
        return F.apply(this, arguments);
      }
      function F() {
        return (F = (0, d.Z)(function* (j, K) {
          const ct = { method: 'DELETE', headers: yield Xt(j) };
          try {
            const sn = yield (yield fetch(`${Me(j.appConfig)}/${K}`, ct)).json();
            if (sn.error) throw di.create('token-unsubscribe-failed', { errorInfo: sn.error.message });
          } catch (Bt) {
            throw di.create('token-unsubscribe-failed', { errorInfo: Bt });
          }
        })).apply(this, arguments);
      }
      function Me({ projectId: j }) {
        return `https://fcmregistrations.googleapis.com/v1/projects/${j}/registrations`;
      }
      function Xt(j) {
        return Pn.apply(this, arguments);
      }
      function Pn() {
        return (Pn = (0, d.Z)(function* ({ appConfig: j, installations: K }) {
          const Ee = yield K.getToken();
          return new Headers({
            'Content-Type': 'application/json',
            Accept: 'application/json',
            'x-goog-api-key': j.apiKey,
            'x-goog-firebase-installations-auth': `FIS ${Ee}`,
          });
        })).apply(this, arguments);
      }
      function Pi({ p256dh: j, auth: K, endpoint: Ee, vapidKey: ct }) {
        const Bt = { web: { endpoint: Ee, auth: K, p256dh: j } };
        return ct !== Bi && (Bt.web.applicationPubKey = ct), Bt;
      }
      const pr = 6048e5;
      function so(j) {
        return oo.apply(this, arguments);
      }
      function oo() {
        return (oo = (0, d.Z)(function* (j) {
          const K = yield Ge(j.swRegistration, j.vapidKey),
            Ee = {
              vapidKey: j.vapidKey,
              swScope: j.swRegistration.scope,
              endpoint: K.endpoint,
              auth: Wr(K.getKey('auth')),
              p256dh: Wr(K.getKey('p256dh')),
            },
            ct = yield z(j.firebaseDependencies);
          if (ct) {
            if (gt(ct.subscriptionOptions, Ee))
              return Date.now() >= ct.createTime + pr
                ? E(j, { token: ct.token, createTime: Date.now(), subscriptionOptions: Ee })
                : ct.token;
            try {
              yield H(j.firebaseDependencies, ct.token);
            } catch (Bt) {
              console.warn(Bt);
            }
            return B(j.firebaseDependencies, Ee);
          }
          return B(j.firebaseDependencies, Ee);
        })).apply(this, arguments);
      }
      function bn(j) {
        return oe.apply(this, arguments);
      }
      function oe() {
        return (oe = (0, d.Z)(function* (j) {
          const K = yield z(j.firebaseDependencies);
          K && (yield H(j.firebaseDependencies, K.token), yield Dt(j.firebaseDependencies));
          const Ee = yield j.swRegistration.pushManager.getSubscription();
          return !Ee || Ee.unsubscribe();
        })).apply(this, arguments);
      }
      function E(j, K) {
        return M.apply(this, arguments);
      }
      function M() {
        return (M = (0, d.Z)(function* (j, K) {
          try {
            const Ee = yield yi(j.firebaseDependencies, K),
              ct = Object.assign(Object.assign({}, K), { token: Ee, createTime: Date.now() });
            return yield $(j.firebaseDependencies, ct), Ee;
          } catch (Ee) {
            throw (yield bn(j), Ee);
          }
        })).apply(this, arguments);
      }
      function B(j, K) {
        return ce.apply(this, arguments);
      }
      function ce() {
        return (ce = (0, d.Z)(function* (j, K) {
          const ct = { token: yield Vi(j, K), createTime: Date.now(), subscriptionOptions: K };
          return yield $(j, ct), ct.token;
        })).apply(this, arguments);
      }
      function Ge(j, K) {
        return pt.apply(this, arguments);
      }
      function pt() {
        return (pt = (0, d.Z)(function* (j, K) {
          return (
            (yield j.pushManager.getSubscription()) ||
            j.pushManager.subscribe({ userVisibleOnly: !0, applicationServerKey: Ko(K) })
          );
        })).apply(this, arguments);
      }
      function gt(j, K) {
        return K.vapidKey === j.vapidKey && K.endpoint === j.endpoint && K.auth === j.auth && K.p256dh === j.p256dh;
      }
      function Vt(j) {
        const K = { from: j.from, collapseKey: j.collapse_key, messageId: j.fcmMessageId };
        return (
          (function cn(j, K) {
            if (!K.notification) return;
            j.notification = {};
            const Ee = K.notification.title;
            Ee && (j.notification.title = Ee);
            const ct = K.notification.body;
            ct && (j.notification.body = ct);
            const Bt = K.notification.image;
            Bt && (j.notification.image = Bt);
          })(K, j),
          (function Tn(j, K) {
            !K.data || (j.data = K.data);
          })(K, j),
          (function zn(j, K) {
            if (!K.fcmOptions) return;
            j.fcmOptions = {};
            const Ee = K.fcmOptions.link;
            Ee && (j.fcmOptions.link = Ee);
            const ct = K.fcmOptions.analytics_label;
            ct && (j.fcmOptions.analyticsLabel = ct);
          })(K, j),
          K
        );
      }
      function ni(j) {
        return 'object' == typeof j && !!j && wr in j;
      }
      function mi(j, K) {
        const Ee = [];
        for (let ct = 0; ct < j.length; ct++) Ee.push(j.charAt(ct)), ct < K.length && Ee.push(K.charAt(ct));
        return Ee.join('');
      }
      function si(j) {
        return di.create('missing-app-config-values', { valueName: j });
      }
      mi('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o'),
        mi('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');
      class vi {
        constructor(K, Ee, ct) {
          (this.deliveryMetricsExportedToBigQueryEnabled = !1),
            (this.onBackgroundMessageHandler = null),
            (this.onMessageHandler = null),
            (this.logEvents = []),
            (this.isLogServiceStarted = !1);
          const Bt = (function Xn(j) {
            if (!j || !j.options) throw si('App Configuration Object');
            if (!j.name) throw si('App Name');
            const K = ['projectId', 'apiKey', 'appId', 'messagingSenderId'],
              { options: Ee } = j;
            for (const ct of K) if (!Ee[ct]) throw si(ct);
            return {
              appName: j.name,
              projectId: Ee.projectId,
              apiKey: Ee.apiKey,
              appId: Ee.appId,
              senderId: Ee.messagingSenderId,
            };
          })(K);
          this.firebaseDependencies = { app: K, appConfig: Bt, installations: Ee, analyticsProvider: ct };
        }
        _delete() {
          return Promise.resolve();
        }
      }
      function mr(j) {
        return cr.apply(this, arguments);
      }
      function cr() {
        return (cr = (0, d.Z)(function* (j) {
          try {
            (j.swRegistration = yield navigator.serviceWorker.register(ys, { scope: cs })),
              j.swRegistration.update().catch(() => {});
          } catch (K) {
            throw di.create('failed-service-worker-registration', { browserErrorMessage: K.message });
          }
        })).apply(this, arguments);
      }
      function rs(j, K) {
        return Er.apply(this, arguments);
      }
      function Er() {
        return (Er = (0, d.Z)(function* (j, K) {
          if ((!K && !j.swRegistration && (yield mr(j)), K || !j.swRegistration)) {
            if (!(K instanceof ServiceWorkerRegistration)) throw di.create('invalid-sw-registration');
            j.swRegistration = K;
          }
        })).apply(this, arguments);
      }
      function Jo(j, K) {
        return Yr.apply(this, arguments);
      }
      function Yr() {
        return (Yr = (0, d.Z)(function* (j, K) {
          K ? (j.vapidKey = K) : j.vapidKey || (j.vapidKey = Bi);
        })).apply(this, arguments);
      }
      function hs() {
        return (hs = (0, d.Z)(function* (j, K) {
          if (!navigator) throw di.create('only-available-in-window');
          if (
            ('default' === Notification.permission && (yield Notification.requestPermission()),
            'granted' !== Notification.permission)
          )
            throw di.create('permission-blocked');
          return (
            yield Jo(j, null == K ? void 0 : K.vapidKey),
            yield rs(j, null == K ? void 0 : K.serviceWorkerRegistration),
            so(j)
          );
        })).apply(this, arguments);
      }
      function Fo(j, K, Ee) {
        return bs.apply(this, arguments);
      }
      function bs() {
        return (bs = (0, d.Z)(function* (j, K, Ee) {
          const ct = Lo(K);
          (yield j.firebaseDependencies.analyticsProvider.get()).logEvent(ct, {
            message_id: Ee[wr],
            message_name: Ee[vs],
            message_time: Ee[Yo],
            message_device_time: Math.floor(Date.now() / 1e3),
          });
        })).apply(this, arguments);
      }
      function Lo(j) {
        switch (j) {
          case Gr.NOTIFICATION_CLICKED:
            return 'notification_open';
          case Gr.PUSH_RECEIVED:
            return 'notification_foreground';
          default:
            throw new Error();
        }
      }
      function qs() {
        return (qs = (0, d.Z)(function* (j, K) {
          const Ee = K.data;
          if (!Ee.isFirebaseMessaging) return;
          j.onMessageHandler &&
            Ee.messageType === Gr.PUSH_RECEIVED &&
            ('function' == typeof j.onMessageHandler ? j.onMessageHandler(Vt(Ee)) : j.onMessageHandler.next(Vt(Ee)));
          const ct = Ee.data;
          ni(ct) && '1' === ct[Ys] && (yield Fo(j, Ee.messageType, ct));
        })).apply(this, arguments);
      }
      const qo = '@firebase/messaging',
        Vn = (j) => {
          const K = new vi(
            j.getProvider('app').getImmediate(),
            j.getProvider('installations-internal').getImmediate(),
            j.getProvider('analytics-internal')
          );
          return (
            navigator.serviceWorker.addEventListener('message', (Ee) =>
              (function va(j, K) {
                return qs.apply(this, arguments);
              })(K, Ee)
            ),
            K
          );
        },
        li = (j) => {
          const K = j.getProvider('messaging').getImmediate();
          return {
            getToken: (ct) =>
              (function Kr(j, K) {
                return hs.apply(this, arguments);
              })(K, ct),
          };
        };
      function gi() {
        return ir.apply(this, arguments);
      }
      function ir() {
        return (ir = (0, d.Z)(function* () {
          return (
            'undefined' != typeof window &&
            (0, Ce.hl)() &&
            (yield (0, Ce.eu)()) &&
            (0, Ce.zI)() &&
            'serviceWorker' in navigator &&
            'PushManager' in window &&
            'Notification' in window &&
            'fetch' in window &&
            ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&
            PushSubscription.prototype.hasOwnProperty('getKey')
          );
        })).apply(this, arguments);
      }
      !(function oi() {
        (0, N._registerComponent)(new Re.wA('messaging', Vn, 'PUBLIC')),
          (0, N._registerComponent)(new Re.wA('messaging-internal', li, 'PRIVATE')),
          (0, N.registerVersion)(qo, '0.9.7'),
          (0, N.registerVersion)(qo, '0.9.7', 'esm2017');
      })();
      const qr = 'analytics',
        ws = 'firebase_id',
        Oc = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig',
        No = 'https://www.googletagmanager.com/gtag/js',
        gr = new He.Yd('@firebase/analytics');
      function Pc(j) {
        return Promise.all(j.map((K) => K.catch((Ee) => Ee)));
      }
      function Zo(j, K) {
        const Ee = document.createElement('script');
        (Ee.src = `${No}?l=${j}&id=${K}`), (Ee.async = !0), document.head.appendChild(Ee);
      }
      function ll(j, K, Ee, ct, Bt, sn) {
        return na.apply(this, arguments);
      }
      function na() {
        return (na = (0, d.Z)(function* (j, K, Ee, ct, Bt, sn) {
          const Cn = ct[Bt];
          try {
            if (Cn) yield K[Cn];
            else {
              const $n = (yield Pc(Ee)).find(($i) => $i.measurementId === Bt);
              $n && (yield K[$n.appId]);
            }
          } catch (qn) {
            gr.error(qn);
          }
          j('config', Bt, sn);
        })).apply(this, arguments);
      }
      function Fc(j, K, Ee, ct, Bt) {
        return _u.apply(this, arguments);
      }
      function _u() {
        return (_u = (0, d.Z)(function* (j, K, Ee, ct, Bt) {
          try {
            let sn = [];
            if (Bt && Bt.send_to) {
              let Cn = Bt.send_to;
              Array.isArray(Cn) || (Cn = [Cn]);
              const qn = yield Pc(Ee);
              for (const $n of Cn) {
                const $i = qn.find((Us) => Us.measurementId === $n),
                  Tr = $i && K[$i.appId];
                if (!Tr) {
                  sn = [];
                  break;
                }
                sn.push(Tr);
              }
            }
            0 === sn.length && (sn = Object.values(K)), yield Promise.all(sn), j('event', ct, Bt || {});
          } catch (sn) {
            gr.error(sn);
          }
        })).apply(this, arguments);
      }
      function Jl() {
        const j = window.document.getElementsByTagName('script');
        for (const K of Object.values(j)) if (K.src && K.src.includes(No)) return K;
        return null;
      }
      const Zs = new Ce.LL('analytics', 'Analytics', {
          'already-exists':
            'A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.',
          'already-initialized':
            'initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.',
          'already-initialized-settings':
            'Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.',
          'interop-component-reg-failed': 'Firebase Analytics Interop Component failed to instantiate: {$reason}',
          'invalid-analytics-context':
            'Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
          'indexeddb-unavailable':
            'IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
          'fetch-throttle':
            'The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
          'config-fetch-failed': 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',
          'no-api-key':
            'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
          'no-app-id':
            'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
        }),
        Pa = new (class ra {
          constructor(K = {}, Ee = 1e3) {
            (this.throttleMetadata = K), (this.intervalMillis = Ee);
          }
          getThrottleMetadata(K) {
            return this.throttleMetadata[K];
          }
          setThrottleMetadata(K, Ee) {
            this.throttleMetadata[K] = Ee;
          }
          deleteThrottleMetadata(K) {
            delete this.throttleMetadata[K];
          }
        })();
      function Qo(j) {
        return new Headers({ Accept: 'application/json', 'x-goog-api-key': j });
      }
      function Ar(j) {
        return Bo.apply(this, arguments);
      }
      function Bo() {
        return (Bo = (0, d.Z)(function* (j) {
          var K;
          const { appId: Ee, apiKey: ct } = j,
            Bt = { method: 'GET', headers: Qo(ct) },
            sn = Oc.replace('{app-id}', Ee),
            Cn = yield fetch(sn, Bt);
          if (200 !== Cn.status && 304 !== Cn.status) {
            let qn = '';
            try {
              const $n = yield Cn.json();
              (null === (K = $n.error) || void 0 === K ? void 0 : K.message) && (qn = $n.error.message);
            } catch ($n) {}
            throw Zs.create('config-fetch-failed', { httpStatus: Cn.status, responseMessage: qn });
          }
          return Cn.json();
        })).apply(this, arguments);
      }
      function L(j) {
        return P.apply(this, arguments);
      }
      function P() {
        return (P = (0, d.Z)(function* (j, K = Pa, Ee) {
          const { appId: ct, apiKey: Bt, measurementId: sn } = j.options;
          if (!ct) throw Zs.create('no-app-id');
          if (!Bt) {
            if (sn) return { measurementId: sn, appId: ct };
            throw Zs.create('no-api-key');
          }
          const Cn = K.getThrottleMetadata(ct) || { backoffCount: 0, throttleEndTimeMillis: Date.now() },
            qn = new ut();
          return (
            setTimeout(
              (0, d.Z)(function* () {
                qn.abort();
              }),
              void 0 !== Ee ? Ee : 6e4
            ),
            R({ appId: ct, apiKey: Bt, measurementId: sn }, Cn, qn, K)
          );
        })).apply(this, arguments);
      }
      function R(j, K, Ee) {
        return G.apply(this, arguments);
      }
      function G() {
        return (G = (0, d.Z)(function* (j, { throttleEndTimeMillis: K, backoffCount: Ee }, ct, Bt = Pa) {
          const { appId: sn, measurementId: Cn } = j;
          try {
            yield te(ct, K);
          } catch (qn) {
            if (Cn)
              return (
                gr.warn(
                  `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Cn} provided in the "measurementId" field in the local Firebase config. [${qn.message}]`
                ),
                { appId: sn, measurementId: Cn }
              );
            throw qn;
          }
          try {
            const qn = yield Ar(j);
            return Bt.deleteThrottleMetadata(sn), qn;
          } catch (qn) {
            if (!Ae(qn)) {
              if ((Bt.deleteThrottleMetadata(sn), Cn))
                return (
                  gr.warn(
                    `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Cn} provided in the "measurementId" field in the local Firebase config. [${qn.message}]`
                  ),
                  { appId: sn, measurementId: Cn }
                );
              throw qn;
            }
            const $n =
                503 === Number(qn.customData.httpStatus)
                  ? (0, Ce.$s)(Ee, Bt.intervalMillis, 30)
                  : (0, Ce.$s)(Ee, Bt.intervalMillis),
              $i = { throttleEndTimeMillis: Date.now() + $n, backoffCount: Ee + 1 };
            return (
              Bt.setThrottleMetadata(sn, $i), gr.debug(`Calling attemptFetch again in ${$n} millis`), R(j, $i, ct, Bt)
            );
          }
        })).apply(this, arguments);
      }
      function te(j, K) {
        return new Promise((Ee, ct) => {
          const Bt = Math.max(K - Date.now(), 0),
            sn = setTimeout(Ee, Bt);
          j.addEventListener(() => {
            clearTimeout(sn), ct(Zs.create('fetch-throttle', { throttleEndTimeMillis: K }));
          });
        });
      }
      function Ae(j) {
        if (!(j instanceof Ce.ZR && j.customData)) return !1;
        const K = Number(j.customData.httpStatus);
        return 429 === K || 500 === K || 503 === K || 504 === K;
      }
      class ut {
        constructor() {
          this.listeners = [];
        }
        addEventListener(K) {
          this.listeners.push(K);
        }
        abort() {
          this.listeners.forEach((K) => K());
        }
      }
      function Mt() {
        return nn.apply(this, arguments);
      }
      function nn() {
        return (nn = (0, d.Z)(function* () {
          if (!(0, Ce.hl)())
            return (
              gr.warn(
                Zs.create('indexeddb-unavailable', { errorInfo: 'IndexedDB is not available in this environment.' })
                  .message
              ),
              !1
            );
          try {
            yield (0, Ce.eu)();
          } catch (j) {
            return gr.warn(Zs.create('indexeddb-unavailable', { errorInfo: j }).message), !1;
          }
          return !0;
        })).apply(this, arguments);
      }
      function Mi() {
        return (Mi = (0, d.Z)(function* (j, K, Ee, ct, Bt, sn, Cn) {
          var qn;
          const $n = L(j);
          $n
            .then((Ir) => {
              (Ee[Ir.measurementId] = Ir.appId),
                j.options.measurementId &&
                  Ir.measurementId !== j.options.measurementId &&
                  gr.warn(
                    `The measurement ID in the local Firebase config (${j.options.measurementId}) does not match the measurement ID fetched from the server (${Ir.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                  );
            })
            .catch((Ir) => gr.error(Ir)),
            K.push($n);
          const $i = Mt().then((Ir) => {
              if (Ir) return ct.getId();
            }),
            [Tr, Us] = yield Promise.all([$n, $i]);
          Jl() || Zo(sn, Tr.measurementId), Bt('js', new Date());
          const ur = null !== (qn = null == Cn ? void 0 : Cn.config) && void 0 !== qn ? qn : {};
          return (
            (ur.origin = 'firebase'),
            (ur.update = !0),
            null != Us && (ur[ws] = Us),
            Bt('config', Tr.measurementId, ur),
            Tr.measurementId
          );
        })).apply(this, arguments);
      }
      class ai {
        constructor(K) {
          this.app = K;
        }
        _delete() {
          return delete Di[this.app.options.appId], Promise.resolve();
        }
      }
      let Di = {},
        Xi = [];
      const zi = {};
      let Eo,
        Bs,
        Qs = 'dataLayer',
        lo = !1;
      function tc(j, K, Ee) {
        !(function Fa() {
          const j = [];
          if (
            ((0, Ce.ru)() && j.push('This is a browser extension environment.'),
            (0, Ce.zI)() || j.push('Cookies are not available.'),
            j.length > 0)
          ) {
            const K = j.map((ct, Bt) => `(${Bt + 1}) ${ct}`).join(' '),
              Ee = Zs.create('invalid-analytics-context', { errorInfo: K });
            gr.warn(Ee.message);
          }
        })();
        const ct = j.options.appId;
        if (!ct) throw Zs.create('no-app-id');
        if (!j.options.apiKey) {
          if (!j.options.measurementId) throw Zs.create('no-api-key');
          gr.warn(
            `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${j.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
          );
        }
        if (null != Di[ct]) throw Zs.create('already-exists', { id: ct });
        if (!lo) {
          !(function ta(j) {
            let K = [];
            Array.isArray(window[j]) ? (K = window[j]) : (window[j] = K);
          })(Qs);
          const { wrappedGtag: sn, gtagCore: Cn } = (function Za(j, K, Ee, ct, Bt) {
            let sn = function (...Cn) {
              window[ct].push(arguments);
            };
            return (
              window[Bt] && 'function' == typeof window[Bt] && (sn = window[Bt]),
              (window[Bt] = (function yu(j, K, Ee, ct) {
                function sn() {
                  return (sn = (0, d.Z)(function* (Cn, qn, $n) {
                    try {
                      'event' === Cn
                        ? yield Fc(j, K, Ee, qn, $n)
                        : 'config' === Cn
                        ? yield ll(j, K, Ee, ct, qn, $n)
                        : j('set', qn);
                    } catch ($i) {
                      gr.error($i);
                    }
                  })).apply(this, arguments);
                }
                return function Bt(Cn, qn, $n) {
                  return sn.apply(this, arguments);
                };
              })(sn, j, K, Ee)),
              { gtagCore: sn, wrappedGtag: window[Bt] }
            );
          })(Di, Xi, zi, Qs, 'gtag');
          (Bs = sn), (Eo = Cn), (lo = !0);
        }
        return (
          (Di[ct] = (function On(j, K, Ee, ct, Bt, sn, Cn) {
            return Mi.apply(this, arguments);
          })(j, Xi, zi, K, Eo, Qs, Ee)),
          new ai(j)
        );
      }
      function nc() {
        return (nc = (0, d.Z)(function* (j, K, Ee, ct, Bt) {
          if (Bt && Bt.global) j('event', Ee, ct);
          else {
            const sn = yield K;
            j('event', Ee, Object.assign(Object.assign({}, ct), { send_to: sn }));
          }
        })).apply(this, arguments);
      }
      function Xu() {
        return Ju.apply(this, arguments);
      }
      function Ju() {
        return (Ju = (0, d.Z)(function* () {
          if ((0, Ce.ru)() || !(0, Ce.zI)() || !(0, Ce.hl)()) return !1;
          try {
            return yield (0, Ce.eu)();
          } catch (j) {
            return !1;
          }
        })).apply(this, arguments);
      }
      const cl = '@firebase/analytics';
      !(function Vs() {
        (0, N._registerComponent)(
          new Re.wA(
            qr,
            (K, { options: Ee }) =>
              tc(K.getProvider('app').getImmediate(), K.getProvider('installations-internal').getImmediate(), Ee),
            'PUBLIC'
          )
        ),
          (0, N._registerComponent)(
            new Re.wA(
              'analytics-internal',
              function j(K) {
                try {
                  const Ee = K.getProvider(qr).getImmediate();
                  return {
                    logEvent: (ct, Bt, sn) =>
                      (function Vd(j, K, Ee, ct) {
                        (j = (0, Ce.m9)(j)),
                          (function vu(j, K, Ee, ct, Bt) {
                            return nc.apply(this, arguments);
                          })(Bs, Di[j.app.options.appId], K, Ee, ct).catch((Bt) => gr.error(Bt));
                      })(Ee, ct, Bt, sn),
                  };
                } catch (Ee) {
                  throw Zs.create('interop-component-reg-failed', { reason: Ee });
                }
              },
              'PRIVATE'
            )
          ),
          (0, N.registerVersion)(cl, '0.7.5'),
          (0, N.registerVersion)(cl, '0.7.5', 'esm2017');
      })();
      var Lc = x(4408),
        rc = x(7565);
      const co = new (class Nc extends rc.v {})(
        class ul extends Lc.o {
          constructor(K, Ee) {
            super(K, Ee), (this.scheduler = K), (this.work = Ee);
          }
          schedule(K, Ee = 0) {
            return Ee > 0
              ? super.schedule(K, Ee)
              : ((this.delay = Ee), (this.state = K), this.scheduler.flush(this), this);
          }
          execute(K, Ee) {
            return Ee > 0 || this.closed ? super.execute(K, Ee) : this._execute(K, Ee);
          }
          requestAsyncId(K, Ee, ct = 0) {
            return (null != ct && ct > 0) || (null == ct && this.delay > 0)
              ? super.requestAsyncId(K, Ee, ct)
              : K.flush(this);
          }
        }
      );
      var Xa = x(4986),
        sa = x(8505),
        Ja = x(5363),
        ss = x(9468);
      const sc = new h.GfV('7.2.0'),
        Na = '__angularfire_symbol__analyticsIsSupported',
        Vc = '__angularfire_symbol__remoteConfigIsSupported',
        Fl = '__angularfire_symbol__messagingIsSupported';
      function Uc(j, K, Ee) {
        if (K) {
          if (1 === K.length) return K[0];
          const sn = K.filter((Cn) => Cn.app === Ee);
          if (1 === sn.length) return sn[0];
        }
        return Ee.container.getProvider(j).getImmediate({ optional: !0 });
      }
      globalThis[Na] ||
        (globalThis[Na] = Xu().then((j) => (globalThis.__angularfire_symbol__analyticsIsSupportedValue = j))),
        globalThis[Fl] ||
          (globalThis[Fl] = gi().then((j) => (globalThis.__angularfire_symbol__messagingIsSupportedValue = j))),
        globalThis[Vc] ||
          (globalThis[Vc] = al().then((j) => (globalThis.__angularfire_symbol__remoteConfigIsSupportedValue = j)));
      const jd = (j, K) => {
        const Ee = K ? [K] : (0, m.C6)(),
          ct = [];
        return (
          Ee.forEach((Bt) => {
            Bt.container.getProvider(j).instances.forEach((Cn) => {
              ct.includes(Cn) || ct.push(Cn);
            });
          }),
          ct
        );
      };
      function xa() {}
      class Xs {
        constructor(K, Ee = co) {
          (this.zone = K), (this.delegate = Ee);
        }
        now() {
          return this.delegate.now();
        }
        schedule(K, Ee, ct) {
          const Bt = this.zone;
          return this.delegate.schedule(
            function (Cn) {
              Bt.runGuarded(() => {
                K.apply(this, [Cn]);
              });
            },
            Ee,
            ct
          );
        }
      }
      class oc {
        constructor(K) {
          (this.zone = K), (this.task = null);
        }
        call(K, Ee) {
          const ct = this.unscheduleTask.bind(this);
          return (
            (this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', xa, {}, xa, xa))),
            Ee.pipe((0, sa.b)({ next: ct, complete: ct, error: ct }))
              .subscribe(K)
              .add(ct)
          );
        }
        unscheduleTask() {
          setTimeout(() => {
            null != this.task && 'scheduled' === this.task.state && (this.task.invoke(), (this.task = null));
          }, 10);
        }
      }
      let dl = (() => {
        class j {
          constructor(Ee) {
            (this.ngZone = Ee),
              (this.outsideAngular = Ee.runOutsideAngular(() => new Xs(Zone.current))),
              (this.insideAngular = Ee.run(() => new Xs(Zone.current, Xa.z))),
              globalThis.ɵAngularFireScheduler || (globalThis.ɵAngularFireScheduler = this);
          }
        }
        return (
          (j.ɵfac = function (Ee) {
            return new (Ee || j)(h.LFG(h.R0b));
          }),
          (j.ɵprov = h.Yz7({ token: j, factory: j.ɵfac, providedIn: 'root' })),
          j
        );
      })();
      function Uo() {
        const j = globalThis.ɵAngularFireScheduler;
        if (!j)
          throw new Error(
            "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
          );
        return j;
      }
      function Ll(j) {
        return j.pipe((0, Ja.Q)(Uo().outsideAngular));
      }
      function lc(j) {
        return (
          Uo(),
          (function aa(j) {
            return function (Ee) {
              return (Ee = Ee.lift(new oc(j.ngZone))).pipe((0, ss.R)(j.outsideAngular), (0, Ja.Q)(j.insideAngular));
            };
          })(Uo())(j)
        );
      }
    },
    7520: (un, ft, x) => {
      'use strict';
      function h(m) {
        return m;
      }
      x.d(ft, { J: () => h });
    },
    2090: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        BH: () => Qe,
        LL: () => kt,
        ZR: () => Ft,
        gQ: () => hn,
        zI: () => it,
        hu: () => m,
        g5: () => d,
        US: () => Re,
        tV: () => Ne,
        h$: () => He,
        $s: () => Hn,
        r3: () => at,
        Sg: () => Oe,
        ne: () => At,
        p$: () => ee,
        vZ: () => xt,
        ZB: () => fe,
        gK: () => Pe,
        pd: () => Zt,
        m9: () => de,
        z$: () => et,
        GJ: () => bt,
        jU: () => Ze,
        ru: () => dt,
        d: () => We,
        xb: () => Nt,
        w1: () => $e,
        hl: () => De,
        uI: () => lt,
        UG: () => me,
        Yr: () => Ke,
        b$: () => vt,
        G6: () => Ie,
        Mn: () => ge,
        w9: () => Ue,
        cI: () => Je,
        UI: () => en,
        xO: () => re,
        zd: () => ot,
        DV: () => mt,
        ug: () => an,
        dS: () => It,
        Pz: () => Ct,
        Dv: () => Be,
        Wj: () => we,
        lb: () => Rt,
        eu: () => Ye,
      });
      const m = function (q, le) {
          if (!q) throw d(le);
        },
        d = function (q) {
          return new Error('Firebase Database (${JSCORE_VERSION}) INTERNAL ASSERT FAILED: ' + q);
        },
        N = function (q) {
          const le = [];
          let Z = 0;
          for (let ye = 0; ye < q.length; ye++) {
            let ie = q.charCodeAt(ye);
            ie < 128
              ? (le[Z++] = ie)
              : ie < 2048
              ? ((le[Z++] = (ie >> 6) | 192), (le[Z++] = (63 & ie) | 128))
              : 55296 == (64512 & ie) && ye + 1 < q.length && 56320 == (64512 & q.charCodeAt(ye + 1))
              ? ((ie = 65536 + ((1023 & ie) << 10) + (1023 & q.charCodeAt(++ye))),
                (le[Z++] = (ie >> 18) | 240),
                (le[Z++] = ((ie >> 12) & 63) | 128),
                (le[Z++] = ((ie >> 6) & 63) | 128),
                (le[Z++] = (63 & ie) | 128))
              : ((le[Z++] = (ie >> 12) | 224), (le[Z++] = ((ie >> 6) & 63) | 128), (le[Z++] = (63 & ie) | 128));
          }
          return le;
        },
        Re = {
          byteToCharMap_: null,
          charToByteMap_: null,
          byteToCharMapWebSafe_: null,
          charToByteMapWebSafe_: null,
          ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
          get ENCODED_VALS() {
            return this.ENCODED_VALS_BASE + '+/=';
          },
          get ENCODED_VALS_WEBSAFE() {
            return this.ENCODED_VALS_BASE + '-_.';
          },
          HAS_NATIVE_SUPPORT: 'function' == typeof atob,
          encodeByteArray(q, le) {
            if (!Array.isArray(q)) throw Error('encodeByteArray takes an array as a parameter');
            this.init_();
            const Z = le ? this.byteToCharMapWebSafe_ : this.byteToCharMap_,
              ye = [];
            for (let ie = 0; ie < q.length; ie += 3) {
              const he = q[ie],
                Te = ie + 1 < q.length,
                pe = Te ? q[ie + 1] : 0,
                _e = ie + 2 < q.length,
                Xe = _e ? q[ie + 2] : 0;
              let _n = ((15 & pe) << 2) | (Xe >> 6),
                Qn = 63 & Xe;
              _e || ((Qn = 64), Te || (_n = 64)), ye.push(Z[he >> 2], Z[((3 & he) << 4) | (pe >> 4)], Z[_n], Z[Qn]);
            }
            return ye.join('');
          },
          encodeString(q, le) {
            return this.HAS_NATIVE_SUPPORT && !le ? btoa(q) : this.encodeByteArray(N(q), le);
          },
          decodeString(q, le) {
            return this.HAS_NATIVE_SUPPORT && !le
              ? atob(q)
              : (function (q) {
                  const le = [];
                  let Z = 0,
                    ye = 0;
                  for (; Z < q.length; ) {
                    const ie = q[Z++];
                    if (ie < 128) le[ye++] = String.fromCharCode(ie);
                    else if (ie > 191 && ie < 224) {
                      const he = q[Z++];
                      le[ye++] = String.fromCharCode(((31 & ie) << 6) | (63 & he));
                    } else if (ie > 239 && ie < 365) {
                      const _e =
                        (((7 & ie) << 18) | ((63 & q[Z++]) << 12) | ((63 & q[Z++]) << 6) | (63 & q[Z++])) - 65536;
                      (le[ye++] = String.fromCharCode(55296 + (_e >> 10))),
                        (le[ye++] = String.fromCharCode(56320 + (1023 & _e)));
                    } else {
                      const he = q[Z++],
                        Te = q[Z++];
                      le[ye++] = String.fromCharCode(((15 & ie) << 12) | ((63 & he) << 6) | (63 & Te));
                    }
                  }
                  return le.join('');
                })(this.decodeStringToByteArray(q, le));
          },
          decodeStringToByteArray(q, le) {
            this.init_();
            const Z = le ? this.charToByteMapWebSafe_ : this.charToByteMap_,
              ye = [];
            for (let ie = 0; ie < q.length; ) {
              const he = Z[q.charAt(ie++)],
                pe = ie < q.length ? Z[q.charAt(ie)] : 0;
              ++ie;
              const Xe = ie < q.length ? Z[q.charAt(ie)] : 64;
              ++ie;
              const Yt = ie < q.length ? Z[q.charAt(ie)] : 64;
              if ((++ie, null == he || null == pe || null == Xe || null == Yt)) throw Error();
              ye.push((he << 2) | (pe >> 4)),
                64 !== Xe && (ye.push(((pe << 4) & 240) | (Xe >> 2)), 64 !== Yt && ye.push(((Xe << 6) & 192) | Yt));
            }
            return ye;
          },
          init_() {
            if (!this.byteToCharMap_) {
              (this.byteToCharMap_ = {}),
                (this.charToByteMap_ = {}),
                (this.byteToCharMapWebSafe_ = {}),
                (this.charToByteMapWebSafe_ = {});
              for (let q = 0; q < this.ENCODED_VALS.length; q++)
                (this.byteToCharMap_[q] = this.ENCODED_VALS.charAt(q)),
                  (this.charToByteMap_[this.byteToCharMap_[q]] = q),
                  (this.byteToCharMapWebSafe_[q] = this.ENCODED_VALS_WEBSAFE.charAt(q)),
                  (this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[q]] = q),
                  q >= this.ENCODED_VALS_BASE.length &&
                    ((this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(q)] = q),
                    (this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(q)] = q));
            }
          },
        },
        He = function (q) {
          const le = N(q);
          return Re.encodeByteArray(le, !0);
        },
        Fe = function (q) {
          return He(q).replace(/\./g, '');
        },
        Ne = function (q) {
          try {
            return Re.decodeString(q, !0);
          } catch (le) {
            console.error('base64Decode failed: ', le);
          }
          return null;
        };
      function ee(q) {
        return fe(void 0, q);
      }
      function fe(q, le) {
        if (!(le instanceof Object)) return le;
        switch (le.constructor) {
          case Date:
            return new Date(le.getTime());
          case Object:
            void 0 === q && (q = {});
            break;
          case Array:
            q = [];
            break;
          default:
            return le;
        }
        for (const Z in le) !le.hasOwnProperty(Z) || !ue(Z) || (q[Z] = fe(q[Z], le[Z]));
        return q;
      }
      function ue(q) {
        return '__proto__' !== q;
      }
      class Qe {
        constructor() {
          (this.reject = () => {}),
            (this.resolve = () => {}),
            (this.promise = new Promise((le, Z) => {
              (this.resolve = le), (this.reject = Z);
            }));
        }
        wrapCallback(le) {
          return (Z, ye) => {
            Z ? this.reject(Z) : this.resolve(ye),
              'function' == typeof le && (this.promise.catch(() => {}), 1 === le.length ? le(Z) : le(Z, ye));
          };
        }
      }
      function Oe(q, le) {
        if (q.uid)
          throw new Error(
            'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.'
          );
        const ye = le || 'demo-project',
          ie = q.iat || 0,
          he = q.sub || q.user_id;
        if (!he) throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
        const Te = Object.assign(
          {
            iss: `https://securetoken.google.com/${ye}`,
            aud: ye,
            iat: ie,
            exp: ie + 3600,
            auth_time: ie,
            sub: he,
            user_id: he,
            firebase: { sign_in_provider: 'custom', identities: {} },
          },
          q
        );
        return [Fe(JSON.stringify({ alg: 'none', type: 'JWT' })), Fe(JSON.stringify(Te)), ''].join('.');
      }
      function et() {
        return 'undefined' != typeof navigator && 'string' == typeof navigator.userAgent ? navigator.userAgent : '';
      }
      function lt() {
        return (
          'undefined' != typeof window &&
          !!(window.cordova || window.phonegap || window.PhoneGap) &&
          /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(et())
        );
      }
      function me() {
        try {
          return '[object process]' === Object.prototype.toString.call(global.process);
        } catch (q) {
          return !1;
        }
      }
      function Ze() {
        return 'object' == typeof self && self.self === self;
      }
      function dt() {
        const q = 'object' == typeof chrome ? chrome.runtime : 'object' == typeof browser ? browser.runtime : void 0;
        return 'object' == typeof q && void 0 !== q.id;
      }
      function vt() {
        return 'object' == typeof navigator && 'ReactNative' === navigator.product;
      }
      function We() {
        return et().indexOf('Electron/') >= 0;
      }
      function $e() {
        const q = et();
        return q.indexOf('MSIE ') >= 0 || q.indexOf('Trident/') >= 0;
      }
      function ge() {
        return et().indexOf('MSAppHost/') >= 0;
      }
      function Ke() {
        return !1;
      }
      function Ie() {
        return !me() && navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');
      }
      function De() {
        return 'object' == typeof indexedDB;
      }
      function Ye() {
        return new Promise((q, le) => {
          try {
            let Z = !0;
            const ye = 'validate-browser-context-for-indexeddb-analytics-module',
              ie = self.indexedDB.open(ye);
            (ie.onsuccess = () => {
              ie.result.close(), Z || self.indexedDB.deleteDatabase(ye), q(!0);
            }),
              (ie.onupgradeneeded = () => {
                Z = !1;
              }),
              (ie.onerror = () => {
                var he;
                le((null === (he = ie.error) || void 0 === he ? void 0 : he.message) || '');
              });
          } catch (Z) {
            le(Z);
          }
        });
      }
      function it() {
        return !('undefined' == typeof navigator || !navigator.cookieEnabled);
      }
      class Ft extends Error {
        constructor(le, Z, ye) {
          super(Z),
            (this.code = le),
            (this.customData = ye),
            (this.name = 'FirebaseError'),
            Object.setPrototypeOf(this, Ft.prototype),
            Error.captureStackTrace && Error.captureStackTrace(this, kt.prototype.create);
        }
      }
      class kt {
        constructor(le, Z, ye) {
          (this.service = le), (this.serviceName = Z), (this.errors = ye);
        }
        create(le, ...Z) {
          const ye = Z[0] || {},
            ie = `${this.service}/${le}`,
            he = this.errors[le],
            Te = he
              ? (function St(q, le) {
                  return q.replace(on, (Z, ye) => {
                    const ie = le[ye];
                    return null != ie ? String(ie) : `<${ye}?>`;
                  });
                })(he, ye)
              : 'Error';
          return new Ft(ie, `${this.serviceName}: ${Te} (${ie}).`, ye);
        }
      }
      const on = /\{\$([^}]+)}/g;
      function Je(q) {
        return JSON.parse(q);
      }
      function Ct(q) {
        return JSON.stringify(q);
      }
      const st = function (q) {
          let le = {},
            Z = {},
            ye = {},
            ie = '';
          try {
            const he = q.split('.');
            (le = Je(Ne(he[0]) || '')), (Z = Je(Ne(he[1]) || '')), (ie = he[2]), (ye = Z.d || {}), delete Z.d;
          } catch (he) {}
          return { header: le, claims: Z, data: ye, signature: ie };
        },
        Ue = function (q) {
          const Z = st(q).claims;
          return !!Z && 'object' == typeof Z && Z.hasOwnProperty('iat');
        },
        bt = function (q) {
          const le = st(q).claims;
          return 'object' == typeof le && !0 === le.admin;
        };
      function at(q, le) {
        return Object.prototype.hasOwnProperty.call(q, le);
      }
      function mt(q, le) {
        if (Object.prototype.hasOwnProperty.call(q, le)) return q[le];
      }
      function Nt(q) {
        for (const le in q) if (Object.prototype.hasOwnProperty.call(q, le)) return !1;
        return !0;
      }
      function en(q, le, Z) {
        const ye = {};
        for (const ie in q) Object.prototype.hasOwnProperty.call(q, ie) && (ye[ie] = le.call(Z, q[ie], ie, q));
        return ye;
      }
      function xt(q, le) {
        if (q === le) return !0;
        const Z = Object.keys(q),
          ye = Object.keys(le);
        for (const ie of Z) {
          if (!ye.includes(ie)) return !1;
          const he = q[ie],
            Te = le[ie];
          if (Gt(he) && Gt(Te)) {
            if (!xt(he, Te)) return !1;
          } else if (he !== Te) return !1;
        }
        for (const ie of ye) if (!Z.includes(ie)) return !1;
        return !0;
      }
      function Gt(q) {
        return null !== q && 'object' == typeof q;
      }
      function re(q) {
        const le = [];
        for (const [Z, ye] of Object.entries(q))
          Array.isArray(ye)
            ? ye.forEach((ie) => {
                le.push(encodeURIComponent(Z) + '=' + encodeURIComponent(ie));
              })
            : le.push(encodeURIComponent(Z) + '=' + encodeURIComponent(ye));
        return le.length ? '&' + le.join('&') : '';
      }
      function ot(q) {
        const le = {};
        return (
          q
            .replace(/^\?/, '')
            .split('&')
            .forEach((ye) => {
              if (ye) {
                const [ie, he] = ye.split('=');
                le[decodeURIComponent(ie)] = decodeURIComponent(he);
              }
            }),
          le
        );
      }
      function Zt(q) {
        const le = q.indexOf('?');
        if (!le) return '';
        const Z = q.indexOf('#', le);
        return q.substring(le, Z > 0 ? Z : void 0);
      }
      class hn {
        constructor() {
          (this.chain_ = []),
            (this.buf_ = []),
            (this.W_ = []),
            (this.pad_ = []),
            (this.inbuf_ = 0),
            (this.total_ = 0),
            (this.blockSize = 64),
            (this.pad_[0] = 128);
          for (let le = 1; le < this.blockSize; ++le) this.pad_[le] = 0;
          this.reset();
        }
        reset() {
          (this.chain_[0] = 1732584193),
            (this.chain_[1] = 4023233417),
            (this.chain_[2] = 2562383102),
            (this.chain_[3] = 271733878),
            (this.chain_[4] = 3285377520),
            (this.inbuf_ = 0),
            (this.total_ = 0);
        }
        compress_(le, Z) {
          Z || (Z = 0);
          const ye = this.W_;
          if ('string' == typeof le)
            for (let Yt = 0; Yt < 16; Yt++)
              (ye[Yt] =
                (le.charCodeAt(Z) << 24) |
                (le.charCodeAt(Z + 1) << 16) |
                (le.charCodeAt(Z + 2) << 8) |
                le.charCodeAt(Z + 3)),
                (Z += 4);
          else
            for (let Yt = 0; Yt < 16; Yt++)
              (ye[Yt] = (le[Z] << 24) | (le[Z + 1] << 16) | (le[Z + 2] << 8) | le[Z + 3]), (Z += 4);
          for (let Yt = 16; Yt < 80; Yt++) {
            const _n = ye[Yt - 3] ^ ye[Yt - 8] ^ ye[Yt - 14] ^ ye[Yt - 16];
            ye[Yt] = 4294967295 & ((_n << 1) | (_n >>> 31));
          }
          let Xe,
            Ot,
            ie = this.chain_[0],
            he = this.chain_[1],
            Te = this.chain_[2],
            pe = this.chain_[3],
            _e = this.chain_[4];
          for (let Yt = 0; Yt < 80; Yt++) {
            Yt < 40
              ? Yt < 20
                ? ((Xe = pe ^ (he & (Te ^ pe))), (Ot = 1518500249))
                : ((Xe = he ^ Te ^ pe), (Ot = 1859775393))
              : Yt < 60
              ? ((Xe = (he & Te) | (pe & (he | Te))), (Ot = 2400959708))
              : ((Xe = he ^ Te ^ pe), (Ot = 3395469782));
            const _n = (((ie << 5) | (ie >>> 27)) + Xe + _e + Ot + ye[Yt]) & 4294967295;
            (_e = pe), (pe = Te), (Te = 4294967295 & ((he << 30) | (he >>> 2))), (he = ie), (ie = _n);
          }
          (this.chain_[0] = (this.chain_[0] + ie) & 4294967295),
            (this.chain_[1] = (this.chain_[1] + he) & 4294967295),
            (this.chain_[2] = (this.chain_[2] + Te) & 4294967295),
            (this.chain_[3] = (this.chain_[3] + pe) & 4294967295),
            (this.chain_[4] = (this.chain_[4] + _e) & 4294967295);
        }
        update(le, Z) {
          if (null == le) return;
          void 0 === Z && (Z = le.length);
          const ye = Z - this.blockSize;
          let ie = 0;
          const he = this.buf_;
          let Te = this.inbuf_;
          for (; ie < Z; ) {
            if (0 === Te) for (; ie <= ye; ) this.compress_(le, ie), (ie += this.blockSize);
            if ('string' == typeof le) {
              for (; ie < Z; )
                if (((he[Te] = le.charCodeAt(ie)), ++Te, ++ie, Te === this.blockSize)) {
                  this.compress_(he), (Te = 0);
                  break;
                }
            } else
              for (; ie < Z; )
                if (((he[Te] = le[ie]), ++Te, ++ie, Te === this.blockSize)) {
                  this.compress_(he), (Te = 0);
                  break;
                }
          }
          (this.inbuf_ = Te), (this.total_ += Z);
        }
        digest() {
          const le = [];
          let Z = 8 * this.total_;
          this.update(this.pad_, this.inbuf_ < 56 ? 56 - this.inbuf_ : this.blockSize - (this.inbuf_ - 56));
          for (let ie = this.blockSize - 1; ie >= 56; ie--) (this.buf_[ie] = 255 & Z), (Z /= 256);
          this.compress_(this.buf_);
          let ye = 0;
          for (let ie = 0; ie < 5; ie++)
            for (let he = 24; he >= 0; he -= 8) (le[ye] = (this.chain_[ie] >> he) & 255), ++ye;
          return le;
        }
      }
      function At(q, le) {
        const Z = new ae(q, le);
        return Z.subscribe.bind(Z);
      }
      class ae {
        constructor(le, Z) {
          (this.observers = []),
            (this.unsubscribes = []),
            (this.observerCount = 0),
            (this.task = Promise.resolve()),
            (this.finalized = !1),
            (this.onNoObservers = Z),
            this.task
              .then(() => {
                le(this);
              })
              .catch((ye) => {
                this.error(ye);
              });
        }
        next(le) {
          this.forEachObserver((Z) => {
            Z.next(le);
          });
        }
        error(le) {
          this.forEachObserver((Z) => {
            Z.error(le);
          }),
            this.close(le);
        }
        complete() {
          this.forEachObserver((le) => {
            le.complete();
          }),
            this.close();
        }
        subscribe(le, Z, ye) {
          let ie;
          if (void 0 === le && void 0 === Z && void 0 === ye) throw new Error('Missing Observer.');
          (ie = (function ht(q, le) {
            if ('object' != typeof q || null === q) return !1;
            for (const Z of le) if (Z in q && 'function' == typeof q[Z]) return !0;
            return !1;
          })(le, ['next', 'error', 'complete'])
            ? le
            : { next: le, error: Z, complete: ye }),
            void 0 === ie.next && (ie.next = Se),
            void 0 === ie.error && (ie.error = Se),
            void 0 === ie.complete && (ie.complete = Se);
          const he = this.unsubscribeOne.bind(this, this.observers.length);
          return (
            this.finalized &&
              this.task.then(() => {
                try {
                  this.finalError ? ie.error(this.finalError) : ie.complete();
                } catch (Te) {}
              }),
            this.observers.push(ie),
            he
          );
        }
        unsubscribeOne(le) {
          void 0 === this.observers ||
            void 0 === this.observers[le] ||
            (delete this.observers[le],
            (this.observerCount -= 1),
            0 === this.observerCount && void 0 !== this.onNoObservers && this.onNoObservers(this));
        }
        forEachObserver(le) {
          if (!this.finalized) for (let Z = 0; Z < this.observers.length; Z++) this.sendOne(Z, le);
        }
        sendOne(le, Z) {
          this.task.then(() => {
            if (void 0 !== this.observers && void 0 !== this.observers[le])
              try {
                Z(this.observers[le]);
              } catch (ye) {
                'undefined' != typeof console && console.error && console.error(ye);
              }
          });
        }
        close(le) {
          this.finalized ||
            ((this.finalized = !0),
            void 0 !== le && (this.finalError = le),
            this.task.then(() => {
              (this.observers = void 0), (this.onNoObservers = void 0);
            }));
        }
      }
      function Se() {}
      const Be = function (q, le, Z, ye) {
        let ie;
        if ((ye < le ? (ie = 'at least ' + le) : ye > Z && (ie = 0 === Z ? 'none' : 'no more than ' + Z), ie))
          throw new Error(
            q + ' failed: Was called with ' + ye + (1 === ye ? ' argument.' : ' arguments.') + ' Expects ' + ie + '.'
          );
      };
      function Pe(q, le) {
        return `${q} failed: ${le} argument `;
      }
      function we(q, le, Z, ye) {
        if ((!ye || Z) && 'function' != typeof Z) throw new Error(Pe(q, le) + 'must be a valid function.');
      }
      function Rt(q, le, Z, ye) {
        if ((!ye || Z) && ('object' != typeof Z || null === Z))
          throw new Error(Pe(q, le) + 'must be a valid context object.');
      }
      const It = function (q) {
          const le = [];
          let Z = 0;
          for (let ye = 0; ye < q.length; ye++) {
            let ie = q.charCodeAt(ye);
            if (ie >= 55296 && ie <= 56319) {
              const he = ie - 55296;
              ye++,
                m(ye < q.length, 'Surrogate pair missing trail surrogate.'),
                (ie = 65536 + (he << 10) + (q.charCodeAt(ye) - 56320));
            }
            ie < 128
              ? (le[Z++] = ie)
              : ie < 2048
              ? ((le[Z++] = (ie >> 6) | 192), (le[Z++] = (63 & ie) | 128))
              : ie < 65536
              ? ((le[Z++] = (ie >> 12) | 224), (le[Z++] = ((ie >> 6) & 63) | 128), (le[Z++] = (63 & ie) | 128))
              : ((le[Z++] = (ie >> 18) | 240),
                (le[Z++] = ((ie >> 12) & 63) | 128),
                (le[Z++] = ((ie >> 6) & 63) | 128),
                (le[Z++] = (63 & ie) | 128));
          }
          return le;
        },
        an = function (q) {
          let le = 0;
          for (let Z = 0; Z < q.length; Z++) {
            const ye = q.charCodeAt(Z);
            ye < 128 ? le++ : ye < 2048 ? (le += 2) : ye >= 55296 && ye <= 56319 ? ((le += 4), Z++) : (le += 3);
          }
          return le;
        };
      function Hn(q, le = 1e3, Z = 2) {
        const ye = le * Math.pow(Z, q),
          ie = Math.round(0.5 * ye * (Math.random() - 0.5) * 2);
        return Math.min(144e5, ye + ie);
      }
      function de(q) {
        return q && q._delegate ? q._delegate : q;
      }
    },
    5867: (un, ft, x) => {
      'use strict';
      x.d(ft, { Mq: () => h.getApp, C6: () => h.getApps });
      var h = x(9681);
      (0, h.registerVersion)('firebase', '9.6.5', 'app');
    },
    127: (un, ft, x) => {
      'use strict';
      x.d(ft, { Z: () => h.Z });
      var h = x(3942);
      h.Z.registerVersion('firebase', '9.6.5', 'app-compat');
    },
    8999: (un, ft, x) => {
      'use strict';
      x.r(ft);
      var h = x(5861),
        m = x(3942),
        d = x(2090),
        N = x(9681),
        Ce = x(655),
        Re = x(1877),
        He = x(4859);
      const et = function Qe() {
          return {
            'admin-restricted-operation': 'This operation is restricted to administrators only.',
            'argument-error': '',
            'app-not-authorized':
              "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
            'app-not-installed':
              'The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.',
            'captcha-check-failed':
              'The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.',
            'code-expired': 'The SMS code has expired. Please re-send the verification code to try again.',
            'cordova-not-ready': 'Cordova framework is not ready.',
            'cors-unsupported': 'This browser is not supported.',
            'credential-already-in-use': 'This credential is already associated with a different user account.',
            'custom-token-mismatch': 'The custom token corresponds to a different audience.',
            'requires-recent-login':
              'This operation is sensitive and requires recent authentication. Log in again before retrying this request.',
            'dependent-sdk-initialized-before-auth':
              'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.',
            'dynamic-link-not-activated':
              'Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.',
            'email-change-needs-verification': 'Multi-factor users must always have a verified email.',
            'email-already-in-use': 'The email address is already in use by another account.',
            'emulator-config-failed':
              'Auth instance has already been used to make a network call. Auth can no longer be configured to use the emulator. Try calling "connectAuthEmulator()" sooner.',
            'expired-action-code': 'The action code has expired.',
            'cancelled-popup-request':
              'This operation has been cancelled due to another conflicting popup being opened.',
            'internal-error': 'An internal AuthError has occurred.',
            'invalid-app-credential':
              'The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.',
            'invalid-app-id': 'The mobile app identifier is not registed for the current project.',
            'invalid-user-token':
              "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
            'invalid-auth-event': 'An internal AuthError has occurred.',
            'invalid-verification-code':
              'The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.',
            'invalid-continue-uri': 'The continue URL provided in the request is invalid.',
            'invalid-cordova-configuration':
              'The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.',
            'invalid-custom-token': 'The custom token format is incorrect. Please check the documentation.',
            'invalid-dynamic-link-domain':
              'The provided dynamic link domain is not configured or authorized for the current project.',
            'invalid-email': 'The email address is badly formatted.',
            'invalid-emulator-scheme': 'Emulator URL must start with a valid scheme (http:// or https://).',
            'invalid-api-key': 'Your API key is invalid, please check you have copied it correctly.',
            'invalid-cert-hash': 'The SHA-1 certificate hash provided is invalid.',
            'invalid-credential': 'The supplied auth credential is malformed or has expired.',
            'invalid-message-payload':
              'The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.',
            'invalid-multi-factor-session':
              'The request does not contain a valid proof of first factor successful sign-in.',
            'invalid-oauth-provider':
              'EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.',
            'invalid-oauth-client-id':
              'The OAuth client ID provided is either invalid or does not match the specified API key.',
            'unauthorized-domain':
              'This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.',
            'invalid-action-code':
              'The action code is invalid. This can happen if the code is malformed, expired, or has already been used.',
            'wrong-password': 'The password is invalid or the user does not have a password.',
            'invalid-persistence-type':
              'The specified persistence type is invalid. It can only be local, session or none.',
            'invalid-phone-number':
              'The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].',
            'invalid-provider-id': 'The specified provider ID is invalid.',
            'invalid-recipient-email':
              'The email corresponding to this action failed to send as the provided recipient email address is invalid.',
            'invalid-sender':
              'The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.',
            'invalid-verification-id': 'The verification ID used to create the phone auth credential is invalid.',
            'invalid-tenant-id': "The Auth instance's tenant ID is invalid.",
            'missing-android-pkg-name':
              'An Android Package Name must be provided if the Android App is required to be installed.',
            'auth-domain-config-required':
              'Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.',
            'missing-app-credential':
              'The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.',
            'missing-verification-code': 'The phone auth credential was created with an empty SMS verification code.',
            'missing-continue-uri': 'A continue URL must be provided in the request.',
            'missing-iframe-start': 'An internal AuthError has occurred.',
            'missing-ios-bundle-id': 'An iOS Bundle ID must be provided if an App Store ID is provided.',
            'missing-or-invalid-nonce':
              'The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.',
            'missing-multi-factor-info': 'No second factor identifier is provided.',
            'missing-multi-factor-session': 'The request is missing proof of first factor successful sign-in.',
            'missing-phone-number': 'To send verification codes, provide a phone number for the recipient.',
            'missing-verification-id': 'The phone auth credential was created with an empty verification ID.',
            'app-deleted': 'This instance of FirebaseApp has been deleted.',
            'multi-factor-info-not-found': 'The user does not have a second factor matching the identifier provided.',
            'multi-factor-auth-required': 'Proof of ownership of a second factor is required to complete sign-in.',
            'account-exists-with-different-credential':
              'An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.',
            'network-request-failed':
              'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',
            'no-auth-event': 'An internal AuthError has occurred.',
            'no-such-provider': 'User was not linked to an account with the given provider.',
            'null-user':
              'A null user object was provided as the argument for an operation which requires a non-null user object.',
            'operation-not-allowed':
              'The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.',
            'operation-not-supported-in-this-environment':
              'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
            'popup-blocked':
              'Unable to establish a connection with the popup. It may have been blocked by the browser.',
            'popup-closed-by-user': 'The popup has been closed by the user before finalizing the operation.',
            'provider-already-linked': 'User can only be linked to one identity for the given provider.',
            'quota-exceeded': "The project's quota for this operation has been exceeded.",
            'redirect-cancelled-by-user': 'The redirect operation has been cancelled by the user before finalizing.',
            'redirect-operation-pending': 'A redirect sign-in operation is already pending.',
            'rejected-credential': 'The request contains malformed or mismatching credentials.',
            'second-factor-already-in-use': 'The second factor is already enrolled on this account.',
            'maximum-second-factor-count-exceeded':
              'The maximum allowed number of second factors on a user has been exceeded.',
            'tenant-id-mismatch': "The provided tenant ID does not match the Auth instance's tenant ID",
            timeout: 'The operation has timed out.',
            'user-token-expired': "The user's credential is no longer valid. The user must sign in again.",
            'too-many-requests':
              'We have blocked all requests from this device due to unusual activity. Try again later.',
            'unauthorized-continue-uri':
              'The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.',
            'unsupported-first-factor':
              'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',
            'unsupported-persistence-type': 'The current environment does not support the specified persistence type.',
            'unsupported-tenant-operation': 'This operation is not supported in a multi-tenant context.',
            'unverified-email': 'The operation requires a verified email.',
            'user-cancelled': 'The user did not grant your application the permissions it requested.',
            'user-not-found':
              'There is no user record corresponding to this identifier. The user may have been deleted.',
            'user-disabled': 'The user account has been disabled by an administrator.',
            'user-mismatch': 'The supplied credentials do not correspond to the previously signed in user.',
            'user-signed-out': '',
            'weak-password': 'The password must be 6 characters long or more.',
            'web-storage-unsupported': 'This browser is not supported or 3rd party cookies and data may be disabled.',
            'already-initialized':
              'initializeAuth() has already been called with different options. To avoid this error, call initializeAuth() with the same options as when it was originally called, or call getAuth() to return the already initialized instance.',
          };
        },
        lt = function Oe() {
          return {
            'dependent-sdk-initialized-before-auth':
              'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.',
          };
        },
        me = new d.LL('auth', 'Firebase', {
          'dependent-sdk-initialized-before-auth':
            'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.',
        }),
        dt = new Re.Yd('@firebase/auth');
      function vt(D, ..._) {
        dt.logLevel <= Re.in.ERROR && dt.error(`Auth (${N.SDK_VERSION}): ${D}`, ..._);
      }
      function We(D, ..._) {
        throw Ie(D, ..._);
      }
      function $e(D, ..._) {
        return Ie(D, ..._);
      }
      function ge(D, _, v) {
        const k = Object.assign(Object.assign({}, lt()), { [_]: v });
        return new d.LL('auth', 'Firebase', k).create(_, { appName: D.name });
      }
      function Ke(D, _, v) {
        if (!(_ instanceof v))
          throw (
            (v.name !== _.constructor.name && We(D, 'argument-error'),
            ge(
              D,
              'argument-error',
              `Type of ${_.constructor.name} does not match expected instance.Did you pass a reference from a different Auth SDK?`
            ))
          );
      }
      function Ie(D, ..._) {
        if ('string' != typeof D) {
          const v = _[0],
            k = [..._.slice(1)];
          return k[0] && (k[0].appName = D.name), D._errorFactory.create(v, ...k);
        }
        return me.create(D, ..._);
      }
      function De(D, _, ...v) {
        if (!D) throw Ie(_, ...v);
      }
      function Ye(D) {
        const _ = 'INTERNAL ASSERTION FAILED: ' + D;
        throw (vt(_), new Error(_));
      }
      function it(D, _) {
        D || Ye(_);
      }
      const qe = new Map();
      function Ve(D) {
        it(D instanceof Function, 'Expected a class definition');
        let _ = qe.get(D);
        return _
          ? (it(_ instanceof D, 'Instance stored in cache mismatched with class'), _)
          : ((_ = new D()), qe.set(D, _), _);
      }
      function St() {
        var D;
        return ('undefined' != typeof self && (null === (D = self.location) || void 0 === D ? void 0 : D.href)) || '';
      }
      function on() {
        return 'http:' === Je() || 'https:' === Je();
      }
      function Je() {
        var D;
        return (
          ('undefined' != typeof self && (null === (D = self.location) || void 0 === D ? void 0 : D.protocol)) || null
        );
      }
      class Et {
        constructor(_, v) {
          (this.shortDelay = _),
            (this.longDelay = v),
            it(v > _, 'Short delay should be less than long delay!'),
            (this.isMobile = (0, d.uI)() || (0, d.b$)());
        }
        get() {
          return (function Ct() {
            return (
              !(
                'undefined' != typeof navigator &&
                navigator &&
                'onLine' in navigator &&
                'boolean' == typeof navigator.onLine &&
                (on() || (0, d.ru)() || 'connection' in navigator)
              ) || navigator.onLine
            );
          })()
            ? this.isMobile
              ? this.longDelay
              : this.shortDelay
            : Math.min(5e3, this.shortDelay);
        }
      }
      function yt(D, _) {
        it(D.emulator, 'Emulator should always be set here');
        const { url: v } = D.emulator;
        return _ ? `${v}${_.startsWith('/') ? _.slice(1) : _}` : v;
      }
      class Ue {
        static initialize(_, v, k) {
          (this.fetchImpl = _), v && (this.headersImpl = v), k && (this.responseImpl = k);
        }
        static fetch() {
          return this.fetchImpl
            ? this.fetchImpl
            : 'undefined' != typeof self && 'fetch' in self
            ? self.fetch
            : void Ye(
                'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'
              );
        }
        static headers() {
          return this.headersImpl
            ? this.headersImpl
            : 'undefined' != typeof self && 'Headers' in self
            ? self.Headers
            : void Ye(
                'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'
              );
        }
        static response() {
          return this.responseImpl
            ? this.responseImpl
            : 'undefined' != typeof self && 'Response' in self
            ? self.Response
            : void Ye(
                'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'
              );
        }
      }
      const bt = {
          CREDENTIAL_MISMATCH: 'custom-token-mismatch',
          MISSING_CUSTOM_TOKEN: 'internal-error',
          INVALID_IDENTIFIER: 'invalid-email',
          MISSING_CONTINUE_URI: 'internal-error',
          INVALID_PASSWORD: 'wrong-password',
          MISSING_PASSWORD: 'internal-error',
          EMAIL_EXISTS: 'email-already-in-use',
          PASSWORD_LOGIN_DISABLED: 'operation-not-allowed',
          INVALID_IDP_RESPONSE: 'invalid-credential',
          INVALID_PENDING_TOKEN: 'invalid-credential',
          FEDERATED_USER_ID_ALREADY_LINKED: 'credential-already-in-use',
          MISSING_REQ_TYPE: 'internal-error',
          EMAIL_NOT_FOUND: 'user-not-found',
          RESET_PASSWORD_EXCEED_LIMIT: 'too-many-requests',
          EXPIRED_OOB_CODE: 'expired-action-code',
          INVALID_OOB_CODE: 'invalid-action-code',
          MISSING_OOB_CODE: 'internal-error',
          CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'requires-recent-login',
          INVALID_ID_TOKEN: 'invalid-user-token',
          TOKEN_EXPIRED: 'user-token-expired',
          USER_NOT_FOUND: 'user-token-expired',
          TOO_MANY_ATTEMPTS_TRY_LATER: 'too-many-requests',
          INVALID_CODE: 'invalid-verification-code',
          INVALID_SESSION_INFO: 'invalid-verification-id',
          INVALID_TEMPORARY_PROOF: 'invalid-credential',
          MISSING_SESSION_INFO: 'missing-verification-id',
          SESSION_EXPIRED: 'code-expired',
          MISSING_ANDROID_PACKAGE_NAME: 'missing-android-pkg-name',
          UNAUTHORIZED_DOMAIN: 'unauthorized-continue-uri',
          INVALID_OAUTH_CLIENT_ID: 'invalid-oauth-client-id',
          ADMIN_ONLY_OPERATION: 'admin-restricted-operation',
          INVALID_MFA_PENDING_CREDENTIAL: 'invalid-multi-factor-session',
          MFA_ENROLLMENT_NOT_FOUND: 'multi-factor-info-not-found',
          MISSING_MFA_ENROLLMENT_ID: 'missing-multi-factor-info',
          MISSING_MFA_PENDING_CREDENTIAL: 'missing-multi-factor-session',
          SECOND_FACTOR_EXISTS: 'second-factor-already-in-use',
          SECOND_FACTOR_LIMIT_EXCEEDED: 'maximum-second-factor-count-exceeded',
          BLOCKING_FUNCTION_ERROR_RESPONSE: 'internal-error',
        },
        at = new Et(3e4, 6e4);
      function mt(D, _) {
        return D.tenantId && !_.tenantId ? Object.assign(Object.assign({}, _), { tenantId: D.tenantId }) : _;
      }
      function Nt(D, _, v, k) {
        return en.apply(this, arguments);
      }
      function en() {
        return (en = (0, h.Z)(function* (D, _, v, k, Q = {}) {
          return xt(
            D,
            Q,
            (0, h.Z)(function* () {
              let ze = {},
                Lt = {};
              k && ('GET' === _ ? (Lt = k) : (ze = { body: JSON.stringify(k) }));
              const pn = (0, d.xO)(Object.assign({ key: D.config.apiKey }, Lt)).slice(1),
                Fn = yield D._getAdditionalHeaders();
              return (
                (Fn['Content-Type'] = 'application/json'),
                D.languageCode && (Fn['X-Firebase-Locale'] = D.languageCode),
                Ue.fetch()(
                  Zt(D, D.config.apiHost, v, pn),
                  Object.assign({ method: _, headers: Fn, referrerPolicy: 'no-referrer' }, ze)
                )
              );
            })
          );
        })).apply(this, arguments);
      }
      function xt(D, _, v) {
        return Gt.apply(this, arguments);
      }
      function Gt() {
        return (Gt = (0, h.Z)(function* (D, _, v) {
          D._canInitEmulator = !1;
          const k = Object.assign(Object.assign({}, bt), _);
          try {
            const Q = new hn(D),
              ze = yield Promise.race([v(), Q.promise]);
            Q.clearNetworkTimeout();
            const Lt = yield ze.json();
            if ('needConfirmation' in Lt) throw At(D, 'account-exists-with-different-credential', Lt);
            if (ze.ok && !('errorMessage' in Lt)) return Lt;
            {
              const pn = ze.ok ? Lt.errorMessage : Lt.error.message,
                [Fn, Kn] = pn.split(' : ');
              if ('FEDERATED_USER_ID_ALREADY_LINKED' === Fn) throw At(D, 'credential-already-in-use', Lt);
              if ('EMAIL_EXISTS' === Fn) throw At(D, 'email-already-in-use', Lt);
              const wi = k[Fn] || Fn.toLowerCase().replace(/[_\s]+/g, '-');
              if (Kn) throw ge(D, wi, Kn);
              We(D, wi);
            }
          } catch (Q) {
            if (Q instanceof d.ZR) throw Q;
            We(D, 'network-request-failed');
          }
        })).apply(this, arguments);
      }
      function re(D, _, v, k) {
        return ot.apply(this, arguments);
      }
      function ot() {
        return (ot = (0, h.Z)(function* (D, _, v, k, Q = {}) {
          const ze = yield Nt(D, _, v, k, Q);
          return 'mfaPendingCredential' in ze && We(D, 'multi-factor-auth-required', { _serverResponse: ze }), ze;
        })).apply(this, arguments);
      }
      function Zt(D, _, v, k) {
        const Q = `${_}${v}?${k}`;
        return D.config.emulator ? yt(D.config, Q) : `${D.config.apiScheme}://${Q}`;
      }
      class hn {
        constructor(_) {
          (this.auth = _),
            (this.timer = null),
            (this.promise = new Promise((v, k) => {
              this.timer = setTimeout(() => k($e(this.auth, 'network-request-failed')), at.get());
            }));
        }
        clearNetworkTimeout() {
          clearTimeout(this.timer);
        }
      }
      function At(D, _, v) {
        const k = { appName: D.name };
        v.email && (k.email = v.email), v.phoneNumber && (k.phoneNumber = v.phoneNumber);
        const Q = $e(D, _, k);
        return (Q.customData._tokenResponse = v), Q;
      }
      function Le() {
        return (Le = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:delete', _);
        })).apply(this, arguments);
      }
      function ht(D, _) {
        return Se.apply(this, arguments);
      }
      function Se() {
        return (Se = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:update', _);
        })).apply(this, arguments);
      }
      function Be(D, _) {
        return Pe.apply(this, arguments);
      }
      function Pe() {
        return (Pe = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:lookup', _);
        })).apply(this, arguments);
      }
      function X(D) {
        if (D)
          try {
            const _ = new Date(Number(D));
            if (!isNaN(_.getTime())) return _.toUTCString();
          } catch (_) {}
      }
      function It() {
        return (It = (0, h.Z)(function* (D, _ = !1) {
          const v = (0, d.m9)(D),
            k = yield v.getIdToken(_),
            Q = mn(k);
          De(Q && Q.exp && Q.auth_time && Q.iat, v.auth, 'internal-error');
          const ze = 'object' == typeof Q.firebase ? Q.firebase : void 0,
            Lt = null == ze ? void 0 : ze.sign_in_provider;
          return {
            claims: Q,
            token: k,
            authTime: X(an(Q.auth_time)),
            issuedAtTime: X(an(Q.iat)),
            expirationTime: X(an(Q.exp)),
            signInProvider: Lt || null,
            signInSecondFactor: (null == ze ? void 0 : ze.sign_in_second_factor) || null,
          };
        })).apply(this, arguments);
      }
      function an(D) {
        return 1e3 * Number(D);
      }
      function mn(D) {
        const [_, v, k] = D.split('.');
        if (void 0 === _ || void 0 === v || void 0 === k)
          return vt('JWT malformed, contained fewer than 3 sections'), null;
        try {
          const Q = (0, d.tV)(v);
          return Q ? JSON.parse(Q) : (vt('Failed to decode base64 JWT payload'), null);
        } catch (Q) {
          return vt('Caught error parsing JWT payload as JSON', Q), null;
        }
      }
      function An(D, _) {
        return Yn.apply(this, arguments);
      }
      function Yn() {
        return (Yn = (0, h.Z)(function* (D, _, v = !1) {
          if (v) return _;
          try {
            return yield _;
          } catch (k) {
            throw (k instanceof d.ZR && Hn(k) && D.auth.currentUser === D && (yield D.auth.signOut()), k);
          }
        })).apply(this, arguments);
      }
      function Hn({ code: D }) {
        return 'auth/user-disabled' === D || 'auth/user-token-expired' === D;
      }
      class zt {
        constructor(_) {
          (this.user = _), (this.isRunning = !1), (this.timerId = null), (this.errorBackoff = 3e4);
        }
        _start() {
          this.isRunning || ((this.isRunning = !0), this.schedule());
        }
        _stop() {
          !this.isRunning || ((this.isRunning = !1), null !== this.timerId && clearTimeout(this.timerId));
        }
        getInterval(_) {
          var v;
          if (_) {
            const k = this.errorBackoff;
            return (this.errorBackoff = Math.min(2 * this.errorBackoff, 96e4)), k;
          }
          {
            this.errorBackoff = 3e4;
            const Q =
              (null !== (v = this.user.stsTokenManager.expirationTime) && void 0 !== v ? v : 0) - Date.now() - 3e5;
            return Math.max(0, Q);
          }
        }
        schedule(_ = !1) {
          var v = this;
          if (!this.isRunning) return;
          const k = this.getInterval(_);
          this.timerId = setTimeout(
            (0, h.Z)(function* () {
              yield v.iteration();
            }),
            k
          );
        }
        iteration() {
          var _ = this;
          return (0, h.Z)(function* () {
            try {
              yield _.user.getIdToken(!0);
            } catch (v) {
              return void ('auth/network-request-failed' === v.code && _.schedule(!0));
            }
            _.schedule();
          })();
        }
      }
      class Wt {
        constructor(_, v) {
          (this.createdAt = _), (this.lastLoginAt = v), this._initializeTime();
        }
        _initializeTime() {
          (this.lastSignInTime = X(this.lastLoginAt)), (this.creationTime = X(this.createdAt));
        }
        _copy(_) {
          (this.createdAt = _.createdAt), (this.lastLoginAt = _.lastLoginAt), this._initializeTime();
        }
        toJSON() {
          return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
        }
      }
      function de(D) {
        return q.apply(this, arguments);
      }
      function q() {
        return (q = (0, h.Z)(function* (D) {
          var _;
          const v = D.auth,
            k = yield D.getIdToken(),
            Q = yield An(D, Be(v, { idToken: k }));
          De(null == Q ? void 0 : Q.users.length, v, 'internal-error');
          const ze = Q.users[0];
          D._notifyReloadListener(ze);
          const Lt = (null === (_ = ze.providerUserInfo) || void 0 === _ ? void 0 : _.length)
              ? ie(ze.providerUserInfo)
              : [],
            pn = ye(D.providerData, Lt),
            wi = !!D.isAnonymous && !((D.email && ze.passwordHash) || (null == pn ? void 0 : pn.length)),
            hi = {
              uid: ze.localId,
              displayName: ze.displayName || null,
              photoURL: ze.photoUrl || null,
              email: ze.email || null,
              emailVerified: ze.emailVerified || !1,
              phoneNumber: ze.phoneNumber || null,
              tenantId: ze.tenantId || null,
              providerData: pn,
              metadata: new Wt(ze.createdAt, ze.lastLoginAt),
              isAnonymous: wi,
            };
          Object.assign(D, hi);
        })).apply(this, arguments);
      }
      function Z() {
        return (Z = (0, h.Z)(function* (D) {
          const _ = (0, d.m9)(D);
          yield de(_), yield _.auth._persistUserIfCurrent(_), _.auth._notifyListenersIfCurrent(_);
        })).apply(this, arguments);
      }
      function ye(D, _) {
        return [...D.filter((k) => !_.some((Q) => Q.providerId === k.providerId)), ..._];
      }
      function ie(D) {
        return D.map((_) => {
          var { providerId: v } = _,
            k = (0, Ce._T)(_, ['providerId']);
          return {
            providerId: v,
            uid: k.rawId || '',
            displayName: k.displayName || null,
            email: k.email || null,
            phoneNumber: k.phoneNumber || null,
            photoURL: k.photoUrl || null,
          };
        });
      }
      function Te() {
        return (Te = (0, h.Z)(function* (D, _) {
          const v = yield xt(
            D,
            {},
            (0, h.Z)(function* () {
              const k = (0, d.xO)({ grant_type: 'refresh_token', refresh_token: _ }).slice(1),
                { tokenApiHost: Q, apiKey: ze } = D.config,
                Lt = Zt(D, Q, '/v1/token', `key=${ze}`),
                pn = yield D._getAdditionalHeaders();
              return (
                (pn['Content-Type'] = 'application/x-www-form-urlencoded'),
                Ue.fetch()(Lt, { method: 'POST', headers: pn, body: k })
              );
            })
          );
          return { accessToken: v.access_token, expiresIn: v.expires_in, refreshToken: v.refresh_token };
        })).apply(this, arguments);
      }
      class pe {
        constructor() {
          (this.refreshToken = null), (this.accessToken = null), (this.expirationTime = null);
        }
        get isExpired() {
          return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
        }
        updateFromServerResponse(_) {
          De(_.idToken, 'internal-error'),
            De(void 0 !== _.idToken, 'internal-error'),
            De(void 0 !== _.refreshToken, 'internal-error');
          const v =
            'expiresIn' in _ && void 0 !== _.expiresIn
              ? Number(_.expiresIn)
              : (function ln(D) {
                  const _ = mn(D);
                  return (
                    De(_, 'internal-error'),
                    De(void 0 !== _.exp, 'internal-error'),
                    De(void 0 !== _.iat, 'internal-error'),
                    Number(_.exp) - Number(_.iat)
                  );
                })(_.idToken);
          this.updateTokensAndExpiration(_.idToken, _.refreshToken, v);
        }
        getToken(_, v = !1) {
          var k = this;
          return (0, h.Z)(function* () {
            return (
              De(!k.accessToken || k.refreshToken, _, 'user-token-expired'),
              v || !k.accessToken || k.isExpired
                ? k.refreshToken
                  ? (yield k.refresh(_, k.refreshToken), k.accessToken)
                  : null
                : k.accessToken
            );
          })();
        }
        clearRefreshToken() {
          this.refreshToken = null;
        }
        refresh(_, v) {
          var k = this;
          return (0, h.Z)(function* () {
            const {
              accessToken: Q,
              refreshToken: ze,
              expiresIn: Lt,
            } = yield (function he(D, _) {
              return Te.apply(this, arguments);
            })(_, v);
            k.updateTokensAndExpiration(Q, ze, Number(Lt));
          })();
        }
        updateTokensAndExpiration(_, v, k) {
          (this.refreshToken = v || null), (this.accessToken = _ || null), (this.expirationTime = Date.now() + 1e3 * k);
        }
        static fromJSON(_, v) {
          const { refreshToken: k, accessToken: Q, expirationTime: ze } = v,
            Lt = new pe();
          return (
            k && (De('string' == typeof k, 'internal-error', { appName: _ }), (Lt.refreshToken = k)),
            Q && (De('string' == typeof Q, 'internal-error', { appName: _ }), (Lt.accessToken = Q)),
            ze && (De('number' == typeof ze, 'internal-error', { appName: _ }), (Lt.expirationTime = ze)),
            Lt
          );
        }
        toJSON() {
          return {
            refreshToken: this.refreshToken,
            accessToken: this.accessToken,
            expirationTime: this.expirationTime,
          };
        }
        _assign(_) {
          (this.accessToken = _.accessToken),
            (this.refreshToken = _.refreshToken),
            (this.expirationTime = _.expirationTime);
        }
        _clone() {
          return Object.assign(new pe(), this.toJSON());
        }
        _performRefresh() {
          return Ye('not implemented');
        }
      }
      function _e(D, _) {
        De('string' == typeof D || void 0 === D, 'internal-error', { appName: _ });
      }
      class Xe {
        constructor(_) {
          var { uid: v, auth: k, stsTokenManager: Q } = _,
            ze = (0, Ce._T)(_, ['uid', 'auth', 'stsTokenManager']);
          (this.providerId = 'firebase'),
            (this.emailVerified = !1),
            (this.isAnonymous = !1),
            (this.tenantId = null),
            (this.providerData = []),
            (this.proactiveRefresh = new zt(this)),
            (this.reloadUserInfo = null),
            (this.reloadListener = null),
            (this.uid = v),
            (this.auth = k),
            (this.stsTokenManager = Q),
            (this.accessToken = Q.accessToken),
            (this.displayName = ze.displayName || null),
            (this.email = ze.email || null),
            (this.emailVerified = ze.emailVerified || !1),
            (this.phoneNumber = ze.phoneNumber || null),
            (this.photoURL = ze.photoURL || null),
            (this.isAnonymous = ze.isAnonymous || !1),
            (this.tenantId = ze.tenantId || null),
            (this.metadata = new Wt(ze.createdAt || void 0, ze.lastLoginAt || void 0));
        }
        getIdToken(_) {
          var v = this;
          return (0, h.Z)(function* () {
            const k = yield An(v, v.stsTokenManager.getToken(v.auth, _));
            return (
              De(k, v.auth, 'internal-error'),
              v.accessToken !== k &&
                ((v.accessToken = k), yield v.auth._persistUserIfCurrent(v), v.auth._notifyListenersIfCurrent(v)),
              k
            );
          })();
        }
        getIdTokenResult(_) {
          return (function Rt(D) {
            return It.apply(this, arguments);
          })(this, _);
        }
        reload() {
          return (function le(D) {
            return Z.apply(this, arguments);
          })(this);
        }
        _assign(_) {
          this !== _ &&
            (De(this.uid === _.uid, this.auth, 'internal-error'),
            (this.displayName = _.displayName),
            (this.photoURL = _.photoURL),
            (this.email = _.email),
            (this.emailVerified = _.emailVerified),
            (this.phoneNumber = _.phoneNumber),
            (this.isAnonymous = _.isAnonymous),
            (this.tenantId = _.tenantId),
            (this.providerData = _.providerData.map((v) => Object.assign({}, v))),
            this.metadata._copy(_.metadata),
            this.stsTokenManager._assign(_.stsTokenManager));
        }
        _clone(_) {
          return new Xe(
            Object.assign(Object.assign({}, this), { auth: _, stsTokenManager: this.stsTokenManager._clone() })
          );
        }
        _onReload(_) {
          De(!this.reloadListener, this.auth, 'internal-error'),
            (this.reloadListener = _),
            this.reloadUserInfo && (this._notifyReloadListener(this.reloadUserInfo), (this.reloadUserInfo = null));
        }
        _notifyReloadListener(_) {
          this.reloadListener ? this.reloadListener(_) : (this.reloadUserInfo = _);
        }
        _startProactiveRefresh() {
          this.proactiveRefresh._start();
        }
        _stopProactiveRefresh() {
          this.proactiveRefresh._stop();
        }
        _updateTokensIfNecessary(_, v = !1) {
          var k = this;
          return (0, h.Z)(function* () {
            let Q = !1;
            _.idToken &&
              _.idToken !== k.stsTokenManager.accessToken &&
              (k.stsTokenManager.updateFromServerResponse(_), (Q = !0)),
              v && (yield de(k)),
              yield k.auth._persistUserIfCurrent(k),
              Q && k.auth._notifyListenersIfCurrent(k);
          })();
        }
        delete() {
          var _ = this;
          return (0, h.Z)(function* () {
            const v = yield _.getIdToken();
            return (
              yield An(
                _,
                (function ae(D, _) {
                  return Le.apply(this, arguments);
                })(_.auth, { idToken: v })
              ),
              _.stsTokenManager.clearRefreshToken(),
              _.auth.signOut()
            );
          })();
        }
        toJSON() {
          return Object.assign(
            Object.assign(
              {
                uid: this.uid,
                email: this.email || void 0,
                emailVerified: this.emailVerified,
                displayName: this.displayName || void 0,
                isAnonymous: this.isAnonymous,
                photoURL: this.photoURL || void 0,
                phoneNumber: this.phoneNumber || void 0,
                tenantId: this.tenantId || void 0,
                providerData: this.providerData.map((_) => Object.assign({}, _)),
                stsTokenManager: this.stsTokenManager.toJSON(),
                _redirectEventId: this._redirectEventId,
              },
              this.metadata.toJSON()
            ),
            { apiKey: this.auth.config.apiKey, appName: this.auth.name }
          );
        }
        get refreshToken() {
          return this.stsTokenManager.refreshToken || '';
        }
        static _fromJSON(_, v) {
          var k, Q, ze, Lt, pn, Fn, Kn, wi;
          const hi = null !== (k = v.displayName) && void 0 !== k ? k : void 0,
            Fi = null !== (Q = v.email) && void 0 !== Q ? Q : void 0,
            go = null !== (ze = v.phoneNumber) && void 0 !== ze ? ze : void 0,
            _l = null !== (Lt = v.photoURL) && void 0 !== Lt ? Lt : void 0,
            Gf = null !== (pn = v.tenantId) && void 0 !== pn ? pn : void 0,
            Va = null !== (Fn = v._redirectEventId) && void 0 !== Fn ? Fn : void 0,
            ld = null !== (Kn = v.createdAt) && void 0 !== Kn ? Kn : void 0,
            cd = null !== (wi = v.lastLoginAt) && void 0 !== wi ? wi : void 0,
            { uid: ud, emailVerified: zl, isAnonymous: yl, providerData: dd, stsTokenManager: Xd } = v;
          De(ud && Xd, _, 'internal-error');
          const jh = pe.fromJSON(this.name, Xd);
          De('string' == typeof ud, _, 'internal-error'),
            _e(hi, _.name),
            _e(Fi, _.name),
            De('boolean' == typeof zl, _, 'internal-error'),
            De('boolean' == typeof yl, _, 'internal-error'),
            _e(go, _.name),
            _e(_l, _.name),
            _e(Gf, _.name),
            _e(Va, _.name),
            _e(ld, _.name),
            _e(cd, _.name);
          const eu = new Xe({
            uid: ud,
            auth: _,
            email: Fi,
            emailVerified: zl,
            displayName: hi,
            isAnonymous: yl,
            photoURL: _l,
            phoneNumber: go,
            tenantId: Gf,
            stsTokenManager: jh,
            createdAt: ld,
            lastLoginAt: cd,
          });
          return (
            dd && Array.isArray(dd) && (eu.providerData = dd.map((Jd) => Object.assign({}, Jd))),
            Va && (eu._redirectEventId = Va),
            eu
          );
        }
        static _fromIdTokenResponse(_, v, k = !1) {
          return (0, h.Z)(function* () {
            const Q = new pe();
            Q.updateFromServerResponse(v);
            const ze = new Xe({ uid: v.localId, auth: _, stsTokenManager: Q, isAnonymous: k });
            return yield de(ze), ze;
          })();
        }
      }
      const Yt = (() => {
        class D {
          constructor() {
            (this.type = 'NONE'), (this.storage = {});
          }
          _isAvailable() {
            return (0, h.Z)(function* () {
              return !0;
            })();
          }
          _set(v, k) {
            var Q = this;
            return (0, h.Z)(function* () {
              Q.storage[v] = k;
            })();
          }
          _get(v) {
            var k = this;
            return (0, h.Z)(function* () {
              const Q = k.storage[v];
              return void 0 === Q ? null : Q;
            })();
          }
          _remove(v) {
            var k = this;
            return (0, h.Z)(function* () {
              delete k.storage[v];
            })();
          }
          _addListener(v, k) {}
          _removeListener(v, k) {}
        }
        return (D.type = 'NONE'), D;
      })();
      function _n(D, _, v) {
        return `firebase:${D}:${_}:${v}`;
      }
      class Qn {
        constructor(_, v, k) {
          (this.persistence = _), (this.auth = v), (this.userKey = k);
          const { config: Q, name: ze } = this.auth;
          (this.fullUserKey = _n(this.userKey, Q.apiKey, ze)),
            (this.fullPersistenceKey = _n('persistence', Q.apiKey, ze)),
            (this.boundEventHandler = v._onStorageEvent.bind(v)),
            this.persistence._addListener(this.fullUserKey, this.boundEventHandler);
        }
        setCurrentUser(_) {
          return this.persistence._set(this.fullUserKey, _.toJSON());
        }
        getCurrentUser() {
          var _ = this;
          return (0, h.Z)(function* () {
            const v = yield _.persistence._get(_.fullUserKey);
            return v ? Xe._fromJSON(_.auth, v) : null;
          })();
        }
        removeCurrentUser() {
          return this.persistence._remove(this.fullUserKey);
        }
        savePersistenceForRedirect() {
          return this.persistence._set(this.fullPersistenceKey, this.persistence.type);
        }
        setPersistence(_) {
          var v = this;
          return (0, h.Z)(function* () {
            if (v.persistence === _) return;
            const k = yield v.getCurrentUser();
            return yield v.removeCurrentUser(), (v.persistence = _), k ? v.setCurrentUser(k) : void 0;
          })();
        }
        delete() {
          this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);
        }
        static create(_, v, k = 'authUser') {
          return (0, h.Z)(function* () {
            if (!v.length) return new Qn(Ve(Yt), _, k);
            const Q = (yield Promise.all(
              v.map(
                (function () {
                  var Kn = (0, h.Z)(function* (wi) {
                    if (yield wi._isAvailable()) return wi;
                  });
                  return function (wi) {
                    return Kn.apply(this, arguments);
                  };
                })()
              )
            )).filter((Kn) => Kn);
            let ze = Q[0] || Ve(Yt);
            const Lt = _n(k, _.config.apiKey, _.name);
            let pn = null;
            for (const Kn of v)
              try {
                const wi = yield Kn._get(Lt);
                if (wi) {
                  const hi = Xe._fromJSON(_, wi);
                  Kn !== ze && (pn = hi), (ze = Kn);
                  break;
                }
              } catch (wi) {}
            const Fn = Q.filter((Kn) => Kn._shouldAllowMigration);
            return ze._shouldAllowMigration && Fn.length
              ? ((ze = Fn[0]),
                pn && (yield ze._set(Lt, pn.toJSON())),
                yield Promise.all(
                  v.map(
                    (function () {
                      var Kn = (0, h.Z)(function* (wi) {
                        if (wi !== ze)
                          try {
                            yield wi._remove(Lt);
                          } catch (hi) {}
                      });
                      return function (wi) {
                        return Kn.apply(this, arguments);
                      };
                    })()
                  )
                ),
                new Qn(ze, _, k))
              : new Qn(ze, _, k);
          })();
        }
      }
      function Ai(D) {
        const _ = D.toLowerCase();
        if (_.includes('opera/') || _.includes('opr/') || _.includes('opios/')) return 'Opera';
        if (Pt(_)) return 'IEMobile';
        if (_.includes('msie') || _.includes('trident/')) return 'IE';
        if (_.includes('edge/')) return 'Edge';
        if (jt(_)) return 'Firefox';
        if (_.includes('silk/')) return 'Silk';
        if (kn(_)) return 'Blackberry';
        if (Gn(_)) return 'Webos';
        if (wt(_)) return 'Safari';
        if ((_.includes('chrome/') || nt(_)) && !_.includes('edge/')) return 'Chrome';
        if (dn(_)) return 'Android';
        {
          const k = D.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/);
          if (2 === (null == k ? void 0 : k.length)) return k[1];
        }
        return 'Other';
      }
      function jt(D = (0, d.z$)()) {
        return /firefox\//i.test(D);
      }
      function wt(D = (0, d.z$)()) {
        const _ = D.toLowerCase();
        return _.includes('safari/') && !_.includes('chrome/') && !_.includes('crios/') && !_.includes('android');
      }
      function nt(D = (0, d.z$)()) {
        return /crios\//i.test(D);
      }
      function Pt(D = (0, d.z$)()) {
        return /iemobile/i.test(D);
      }
      function dn(D = (0, d.z$)()) {
        return /android/i.test(D);
      }
      function kn(D = (0, d.z$)()) {
        return /blackberry/i.test(D);
      }
      function Gn(D = (0, d.z$)()) {
        return /webos/i.test(D);
      }
      function Jn(D = (0, d.z$)()) {
        return /iphone|ipad|ipod/i.test(D);
      }
      function Rr(D = (0, d.z$)()) {
        return Jn(D) || dn(D) || Gn(D) || kn(D) || /windows phone/i.test(D) || Pt(D);
      }
      function es(D, _ = []) {
        let v;
        switch (D) {
          case 'Browser':
            v = Ai((0, d.z$)());
            break;
          case 'Worker':
            v = `${Ai((0, d.z$)())}-${D}`;
            break;
          default:
            v = D;
        }
        const k = _.length ? _.join(',') : 'FirebaseCore-web';
        return `${v}/JsCore/${N.SDK_VERSION}/${k}`;
      }
      class Cr {
        constructor(_, v) {
          (this.app = _),
            (this.config = v),
            (this.currentUser = null),
            (this.emulatorConfig = null),
            (this.operations = Promise.resolve()),
            (this.authStateSubscription = new pi(this)),
            (this.idTokenSubscription = new pi(this)),
            (this.redirectUser = null),
            (this.isProactiveRefreshEnabled = !1),
            (this._canInitEmulator = !0),
            (this._isInitialized = !1),
            (this._deleted = !1),
            (this._initializationPromise = null),
            (this._popupRedirectResolver = null),
            (this._errorFactory = me),
            (this.lastNotifiedUid = void 0),
            (this.languageCode = null),
            (this.tenantId = null),
            (this.settings = { appVerificationDisabledForTesting: !1 }),
            (this.frameworks = []),
            (this.name = _.name),
            (this.clientVersion = v.sdkClientVersion);
        }
        _initializeWithPersistence(_, v) {
          var k = this;
          return (
            v && (this._popupRedirectResolver = Ve(v)),
            (this._initializationPromise = this.queue(
              (0, h.Z)(function* () {
                var Q, ze;
                if (!k._deleted && ((k.persistenceManager = yield Qn.create(k, _)), !k._deleted)) {
                  if (null === (Q = k._popupRedirectResolver) || void 0 === Q ? void 0 : Q._shouldInitProactively)
                    try {
                      yield k._popupRedirectResolver._initialize(k);
                    } catch (Lt) {}
                  yield k.initializeCurrentUser(v),
                    (k.lastNotifiedUid = (null === (ze = k.currentUser) || void 0 === ze ? void 0 : ze.uid) || null),
                    !k._deleted && (k._isInitialized = !0);
                }
              })
            )),
            this._initializationPromise
          );
        }
        _onStorageEvent() {
          var _ = this;
          return (0, h.Z)(function* () {
            if (_._deleted) return;
            const v = yield _.assertedPersistence.getCurrentUser();
            if (_.currentUser || v) {
              if (_.currentUser && v && _.currentUser.uid === v.uid)
                return _._currentUser._assign(v), void (yield _.currentUser.getIdToken());
              yield _._updateCurrentUser(v);
            }
          })();
        }
        initializeCurrentUser(_) {
          var v = this;
          return (0, h.Z)(function* () {
            var k;
            let Q = yield v.assertedPersistence.getCurrentUser();
            if (_ && v.config.authDomain) {
              yield v.getOrInitRedirectPersistenceManager();
              const ze = null === (k = v.redirectUser) || void 0 === k ? void 0 : k._redirectEventId,
                Lt = null == Q ? void 0 : Q._redirectEventId,
                pn = yield v.tryRedirectSignIn(_);
              (!ze || ze === Lt) && (null == pn ? void 0 : pn.user) && (Q = pn.user);
            }
            return Q
              ? Q._redirectEventId
                ? (De(v._popupRedirectResolver, v, 'argument-error'),
                  yield v.getOrInitRedirectPersistenceManager(),
                  v.redirectUser && v.redirectUser._redirectEventId === Q._redirectEventId
                    ? v.directlySetCurrentUser(Q)
                    : v.reloadAndSetCurrentUserOrClear(Q))
                : v.reloadAndSetCurrentUserOrClear(Q)
              : v.directlySetCurrentUser(null);
          })();
        }
        tryRedirectSignIn(_) {
          var v = this;
          return (0, h.Z)(function* () {
            let k = null;
            try {
              k = yield v._popupRedirectResolver._completeRedirectFn(v, _, !0);
            } catch (Q) {
              yield v._setRedirectUser(null);
            }
            return k;
          })();
        }
        reloadAndSetCurrentUserOrClear(_) {
          var v = this;
          return (0, h.Z)(function* () {
            try {
              yield de(_);
            } catch (k) {
              if ('auth/network-request-failed' !== k.code) return v.directlySetCurrentUser(null);
            }
            return v.directlySetCurrentUser(_);
          })();
        }
        useDeviceLanguage() {
          this.languageCode = (function st() {
            if ('undefined' == typeof navigator) return null;
            const D = navigator;
            return (D.languages && D.languages[0]) || D.language || null;
          })();
        }
        _delete() {
          var _ = this;
          return (0, h.Z)(function* () {
            _._deleted = !0;
          })();
        }
        updateCurrentUser(_) {
          var v = this;
          return (0, h.Z)(function* () {
            const k = _ ? (0, d.m9)(_) : null;
            return (
              k && De(k.auth.config.apiKey === v.config.apiKey, v, 'invalid-user-token'),
              v._updateCurrentUser(k && k._clone(v))
            );
          })();
        }
        _updateCurrentUser(_) {
          var v = this;
          return (0, h.Z)(function* () {
            if (!v._deleted)
              return (
                _ && De(v.tenantId === _.tenantId, v, 'tenant-id-mismatch'),
                v.queue(
                  (0, h.Z)(function* () {
                    yield v.directlySetCurrentUser(_), v.notifyAuthListeners();
                  })
                )
              );
          })();
        }
        signOut() {
          var _ = this;
          return (0, h.Z)(function* () {
            return (
              (_.redirectPersistenceManager || _._popupRedirectResolver) && (yield _._setRedirectUser(null)),
              _._updateCurrentUser(null)
            );
          })();
        }
        setPersistence(_) {
          var v = this;
          return this.queue(
            (0, h.Z)(function* () {
              yield v.assertedPersistence.setPersistence(Ve(_));
            })
          );
        }
        _getPersistence() {
          return this.assertedPersistence.persistence.type;
        }
        _updateErrorMap(_) {
          this._errorFactory = new d.LL('auth', 'Firebase', _());
        }
        onAuthStateChanged(_, v, k) {
          return this.registerStateListener(this.authStateSubscription, _, v, k);
        }
        onIdTokenChanged(_, v, k) {
          return this.registerStateListener(this.idTokenSubscription, _, v, k);
        }
        toJSON() {
          var _;
          return {
            apiKey: this.config.apiKey,
            authDomain: this.config.authDomain,
            appName: this.name,
            currentUser: null === (_ = this._currentUser) || void 0 === _ ? void 0 : _.toJSON(),
          };
        }
        _setRedirectUser(_, v) {
          var k = this;
          return (0, h.Z)(function* () {
            const Q = yield k.getOrInitRedirectPersistenceManager(v);
            return null === _ ? Q.removeCurrentUser() : Q.setCurrentUser(_);
          })();
        }
        getOrInitRedirectPersistenceManager(_) {
          var v = this;
          return (0, h.Z)(function* () {
            if (!v.redirectPersistenceManager) {
              const k = (_ && Ve(_)) || v._popupRedirectResolver;
              De(k, v, 'argument-error'),
                (v.redirectPersistenceManager = yield Qn.create(v, [Ve(k._redirectPersistence)], 'redirectUser')),
                (v.redirectUser = yield v.redirectPersistenceManager.getCurrentUser());
            }
            return v.redirectPersistenceManager;
          })();
        }
        _redirectUserForId(_) {
          var v = this;
          return (0, h.Z)(function* () {
            var k, Q;
            return (
              v._isInitialized && (yield v.queue((0, h.Z)(function* () {}))),
              (null === (k = v._currentUser) || void 0 === k ? void 0 : k._redirectEventId) === _
                ? v._currentUser
                : (null === (Q = v.redirectUser) || void 0 === Q ? void 0 : Q._redirectEventId) === _
                ? v.redirectUser
                : null
            );
          })();
        }
        _persistUserIfCurrent(_) {
          var v = this;
          return (0, h.Z)(function* () {
            if (_ === v.currentUser)
              return v.queue(
                (0, h.Z)(function* () {
                  return v.directlySetCurrentUser(_);
                })
              );
          })();
        }
        _notifyListenersIfCurrent(_) {
          _ === this.currentUser && this.notifyAuthListeners();
        }
        _key() {
          return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
        }
        _startProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !0), this.currentUser && this._currentUser._startProactiveRefresh();
        }
        _stopProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !1), this.currentUser && this._currentUser._stopProactiveRefresh();
        }
        get _currentUser() {
          return this.currentUser;
        }
        notifyAuthListeners() {
          var _, v;
          if (!this._isInitialized) return;
          this.idTokenSubscription.next(this.currentUser);
          const k =
            null !== (v = null === (_ = this.currentUser) || void 0 === _ ? void 0 : _.uid) && void 0 !== v ? v : null;
          this.lastNotifiedUid !== k && ((this.lastNotifiedUid = k), this.authStateSubscription.next(this.currentUser));
        }
        registerStateListener(_, v, k, Q) {
          if (this._deleted) return () => {};
          const ze = 'function' == typeof v ? v : v.next.bind(v),
            Lt = this._isInitialized ? Promise.resolve() : this._initializationPromise;
          return (
            De(Lt, this, 'internal-error'),
            Lt.then(() => ze(this.currentUser)),
            'function' == typeof v ? _.addObserver(v, k, Q) : _.addObserver(v)
          );
        }
        directlySetCurrentUser(_) {
          var v = this;
          return (0, h.Z)(function* () {
            v.currentUser &&
              v.currentUser !== _ &&
              (v._currentUser._stopProactiveRefresh(), _ && v.isProactiveRefreshEnabled && _._startProactiveRefresh()),
              (v.currentUser = _),
              _ ? yield v.assertedPersistence.setCurrentUser(_) : yield v.assertedPersistence.removeCurrentUser();
          })();
        }
        queue(_) {
          return (this.operations = this.operations.then(_, _)), this.operations;
        }
        get assertedPersistence() {
          return De(this.persistenceManager, this, 'internal-error'), this.persistenceManager;
        }
        _logFramework(_) {
          !_ ||
            this.frameworks.includes(_) ||
            (this.frameworks.push(_),
            this.frameworks.sort(),
            (this.clientVersion = es(this.config.clientPlatform, this._getFrameworks())));
        }
        _getFrameworks() {
          return this.frameworks;
        }
        _getAdditionalHeaders() {
          var _ = this;
          return (0, h.Z)(function* () {
            const v = { 'X-Client-Version': _.clientVersion };
            return _.app.options.appId && (v['X-Firebase-gmpid'] = _.app.options.appId), v;
          })();
        }
      }
      function xn(D) {
        return (0, d.m9)(D);
      }
      class pi {
        constructor(_) {
          (this.auth = _), (this.observer = null), (this.addObserver = (0, d.ne)((v) => (this.observer = v)));
        }
        get next() {
          return De(this.observer, this.auth, 'internal-error'), this.observer.next.bind(this.observer);
        }
      }
      function Kt(D) {
        const _ = D.indexOf(':');
        return _ < 0 ? '' : D.substr(0, _ + 1);
      }
      function fn(D) {
        if (!D) return null;
        const _ = Number(D);
        return isNaN(_) ? null : _;
      }
      class Nn {
        constructor(_, v) {
          (this.providerId = _), (this.signInMethod = v);
        }
        toJSON() {
          return Ye('not implemented');
        }
        _getIdTokenResponse(_) {
          return Ye('not implemented');
        }
        _linkToIdToken(_, v) {
          return Ye('not implemented');
        }
        _getReauthenticationResolver(_) {
          return Ye('not implemented');
        }
      }
      function Nr(D, _) {
        return qi.apply(this, arguments);
      }
      function qi() {
        return (qi = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:resetPassword', mt(D, _));
        })).apply(this, arguments);
      }
      function ci(D, _) {
        return ks.apply(this, arguments);
      }
      function ks() {
        return (ks = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:update', _);
        })).apply(this, arguments);
      }
      function _i(D, _) {
        return Br.apply(this, arguments);
      }
      function Br() {
        return (Br = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:update', mt(D, _));
        })).apply(this, arguments);
      }
      function lr() {
        return (lr = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signInWithPassword', mt(D, _));
        })).apply(this, arguments);
      }
      function ts(D, _) {
        return Os.apply(this, arguments);
      }
      function Os() {
        return (Os = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:sendOobCode', mt(D, _));
        })).apply(this, arguments);
      }
      function fi(D, _) {
        return Ti.apply(this, arguments);
      }
      function Ti() {
        return (Ti = (0, h.Z)(function* (D, _) {
          return ts(D, _);
        })).apply(this, arguments);
      }
      function Vr(D, _) {
        return Jt.apply(this, arguments);
      }
      function Jt() {
        return (Jt = (0, h.Z)(function* (D, _) {
          return ts(D, _);
        })).apply(this, arguments);
      }
      function ji(D, _) {
        return tr.apply(this, arguments);
      }
      function tr() {
        return (tr = (0, h.Z)(function* (D, _) {
          return ts(D, _);
        })).apply(this, arguments);
      }
      function kr(D, _) {
        return je.apply(this, arguments);
      }
      function je() {
        return (je = (0, h.Z)(function* (D, _) {
          return ts(D, _);
        })).apply(this, arguments);
      }
      function nr() {
        return (nr = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signInWithEmailLink', mt(D, _));
        })).apply(this, arguments);
      }
      function ko() {
        return (ko = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signInWithEmailLink', mt(D, _));
        })).apply(this, arguments);
      }
      class ei extends Nn {
        constructor(_, v, k, Q = null) {
          super('password', k), (this._email = _), (this._password = v), (this._tenantId = Q);
        }
        static _fromEmailAndPassword(_, v) {
          return new ei(_, v, 'password');
        }
        static _fromEmailAndCode(_, v, k = null) {
          return new ei(_, v, 'emailLink', k);
        }
        toJSON() {
          return {
            email: this._email,
            password: this._password,
            signInMethod: this.signInMethod,
            tenantId: this._tenantId,
          };
        }
        static fromJSON(_) {
          const v = 'string' == typeof _ ? JSON.parse(_) : _;
          if ((null == v ? void 0 : v.email) && (null == v ? void 0 : v.password)) {
            if ('password' === v.signInMethod) return this._fromEmailAndPassword(v.email, v.password);
            if ('emailLink' === v.signInMethod) return this._fromEmailAndCode(v.email, v.password, v.tenantId);
          }
          return null;
        }
        _getIdTokenResponse(_) {
          var v = this;
          return (0, h.Z)(function* () {
            switch (v.signInMethod) {
              case 'password':
                return (function ps(D, _) {
                  return lr.apply(this, arguments);
                })(_, { returnSecureToken: !0, email: v._email, password: v._password });
              case 'emailLink':
                return (function ms(D, _) {
                  return nr.apply(this, arguments);
                })(_, { email: v._email, oobCode: v._password });
              default:
                We(_, 'internal-error');
            }
          })();
        }
        _linkToIdToken(_, v) {
          var k = this;
          return (0, h.Z)(function* () {
            switch (k.signInMethod) {
              case 'password':
                return ci(_, { idToken: v, returnSecureToken: !0, email: k._email, password: k._password });
              case 'emailLink':
                return (function Bn(D, _) {
                  return ko.apply(this, arguments);
                })(_, { idToken: v, email: k._email, oobCode: k._password });
              default:
                We(_, 'internal-error');
            }
          })();
        }
        _getReauthenticationResolver(_) {
          return this._getIdTokenResponse(_);
        }
      }
      function Li(D, _) {
        return Ur.apply(this, arguments);
      }
      function Ur() {
        return (Ur = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signInWithIdp', mt(D, _));
        })).apply(this, arguments);
      }
      class ls extends Nn {
        constructor() {
          super(...arguments), (this.pendingToken = null);
        }
        static _fromParams(_) {
          const v = new ls(_.providerId, _.signInMethod);
          return (
            _.idToken || _.accessToken
              ? (_.idToken && (v.idToken = _.idToken),
                _.accessToken && (v.accessToken = _.accessToken),
                _.nonce && !_.pendingToken && (v.nonce = _.nonce),
                _.pendingToken && (v.pendingToken = _.pendingToken))
              : _.oauthToken && _.oauthTokenSecret
              ? ((v.accessToken = _.oauthToken), (v.secret = _.oauthTokenSecret))
              : We('argument-error'),
            v
          );
        }
        toJSON() {
          return {
            idToken: this.idToken,
            accessToken: this.accessToken,
            secret: this.secret,
            nonce: this.nonce,
            pendingToken: this.pendingToken,
            providerId: this.providerId,
            signInMethod: this.signInMethod,
          };
        }
        static fromJSON(_) {
          const v = 'string' == typeof _ ? JSON.parse(_) : _,
            { providerId: k, signInMethod: Q } = v,
            ze = (0, Ce._T)(v, ['providerId', 'signInMethod']);
          if (!k || !Q) return null;
          const Lt = new ls(k, Q);
          return (
            (Lt.idToken = ze.idToken || void 0),
            (Lt.accessToken = ze.accessToken || void 0),
            (Lt.secret = ze.secret),
            (Lt.nonce = ze.nonce),
            (Lt.pendingToken = ze.pendingToken || null),
            Lt
          );
        }
        _getIdTokenResponse(_) {
          return Li(_, this.buildRequest());
        }
        _linkToIdToken(_, v) {
          const k = this.buildRequest();
          return (k.idToken = v), Li(_, k);
        }
        _getReauthenticationResolver(_) {
          const v = this.buildRequest();
          return (v.autoCreate = !1), Li(_, v);
        }
        buildRequest() {
          const _ = { requestUri: 'http://localhost', returnSecureToken: !0 };
          if (this.pendingToken) _.pendingToken = this.pendingToken;
          else {
            const v = {};
            this.idToken && (v.id_token = this.idToken),
              this.accessToken && (v.access_token = this.accessToken),
              this.secret && (v.oauth_token_secret = this.secret),
              (v.providerId = this.providerId),
              this.nonce && !this.pendingToken && (v.nonce = this.nonce),
              (_.postBody = (0, d.xO)(v));
          }
          return _;
        }
      }
      function Wo(D, _) {
        return Oo.apply(this, arguments);
      }
      function Oo() {
        return (Oo = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:sendVerificationCode', mt(D, _));
        })).apply(this, arguments);
      }
      function Fs() {
        return (Fs = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signInWithPhoneNumber', mt(D, _));
        })).apply(this, arguments);
      }
      function Ws() {
        return (Ws = (0, h.Z)(function* (D, _) {
          const v = yield re(D, 'POST', '/v1/accounts:signInWithPhoneNumber', mt(D, _));
          if (v.temporaryProof) throw At(D, 'account-exists-with-different-credential', v);
          return v;
        })).apply(this, arguments);
      }
      const jr = { USER_NOT_FOUND: 'user-not-found' };
      function ga() {
        return (ga = (0, h.Z)(function* (D, _) {
          return re(
            D,
            'POST',
            '/v1/accounts:signInWithPhoneNumber',
            mt(D, Object.assign(Object.assign({}, _), { operation: 'REAUTH' })),
            jr
          );
        })).apply(this, arguments);
      }
      class gs extends Nn {
        constructor(_) {
          super('phone', 'phone'), (this.params = _);
        }
        static _fromVerification(_, v) {
          return new gs({ verificationId: _, verificationCode: v });
        }
        static _fromTokenResponse(_, v) {
          return new gs({ phoneNumber: _, temporaryProof: v });
        }
        _getIdTokenResponse(_) {
          return (function Oa(D, _) {
            return Fs.apply(this, arguments);
          })(_, this._makeVerificationRequest());
        }
        _linkToIdToken(_, v) {
          return (function Hi(D, _) {
            return Ws.apply(this, arguments);
          })(_, Object.assign({ idToken: v }, this._makeVerificationRequest()));
        }
        _getReauthenticationResolver(_) {
          return (function Ls(D, _) {
            return ga.apply(this, arguments);
          })(_, this._makeVerificationRequest());
        }
        _makeVerificationRequest() {
          const { temporaryProof: _, phoneNumber: v, verificationId: k, verificationCode: Q } = this.params;
          return _ && v ? { temporaryProof: _, phoneNumber: v } : { sessionInfo: k, code: Q };
        }
        toJSON() {
          const _ = { providerId: this.providerId };
          return (
            this.params.phoneNumber && (_.phoneNumber = this.params.phoneNumber),
            this.params.temporaryProof && (_.temporaryProof = this.params.temporaryProof),
            this.params.verificationCode && (_.verificationCode = this.params.verificationCode),
            this.params.verificationId && (_.verificationId = this.params.verificationId),
            _
          );
        }
        static fromJSON(_) {
          'string' == typeof _ && (_ = JSON.parse(_));
          const { verificationId: v, verificationCode: k, phoneNumber: Q, temporaryProof: ze } = _;
          return k || v || Q || ze
            ? new gs({ verificationId: v, verificationCode: k, phoneNumber: Q, temporaryProof: ze })
            : null;
        }
      }
      class Hr {
        constructor(_) {
          var v, k, Q, ze, Lt, pn;
          const Fn = (0, d.zd)((0, d.pd)(_)),
            Kn = null !== (v = Fn.apiKey) && void 0 !== v ? v : null,
            wi = null !== (k = Fn.oobCode) && void 0 !== k ? k : null,
            hi = (function Ns(D) {
              switch (D) {
                case 'recoverEmail':
                  return 'RECOVER_EMAIL';
                case 'resetPassword':
                  return 'PASSWORD_RESET';
                case 'signIn':
                  return 'EMAIL_SIGNIN';
                case 'verifyEmail':
                  return 'VERIFY_EMAIL';
                case 'verifyAndChangeEmail':
                  return 'VERIFY_AND_CHANGE_EMAIL';
                case 'revertSecondFactorAddition':
                  return 'REVERT_SECOND_FACTOR_ADDITION';
                default:
                  return null;
              }
            })(null !== (Q = Fn.mode) && void 0 !== Q ? Q : null);
          De(Kn && wi && hi, 'argument-error'),
            (this.apiKey = Kn),
            (this.operation = hi),
            (this.code = wi),
            (this.continueUrl = null !== (ze = Fn.continueUrl) && void 0 !== ze ? ze : null),
            (this.languageCode = null !== (Lt = Fn.languageCode) && void 0 !== Lt ? Lt : null),
            (this.tenantId = null !== (pn = Fn.tenantId) && void 0 !== pn ? pn : null);
        }
        static parseLink(_) {
          const v = (function _a(D) {
            const _ = (0, d.zd)((0, d.pd)(D)).link,
              v = _ ? (0, d.zd)((0, d.pd)(_)).deep_link_id : null,
              k = (0, d.zd)((0, d.pd)(D)).deep_link_id;
            return (k ? (0, d.zd)((0, d.pd)(k)).link : null) || k || v || _ || D;
          })(_);
          try {
            return new Hr(v);
          } catch (k) {
            return null;
          }
        }
      }
      let _s = (() => {
        class D {
          constructor() {
            this.providerId = D.PROVIDER_ID;
          }
          static credential(v, k) {
            return ei._fromEmailAndPassword(v, k);
          }
          static credentialWithLink(v, k) {
            const Q = Hr.parseLink(k);
            return De(Q, 'argument-error'), ei._fromEmailAndCode(v, Q.code, Q.tenantId);
          }
        }
        return (
          (D.PROVIDER_ID = 'password'),
          (D.EMAIL_PASSWORD_SIGN_IN_METHOD = 'password'),
          (D.EMAIL_LINK_SIGN_IN_METHOD = 'emailLink'),
          D
        );
      })();
      class ys {
        constructor(_) {
          (this.providerId = _), (this.defaultLanguageCode = null), (this.customParameters = {});
        }
        setDefaultLanguage(_) {
          this.defaultLanguageCode = _;
        }
        setCustomParameters(_) {
          return (this.customParameters = _), this;
        }
        getCustomParameters() {
          return this.customParameters;
        }
      }
      class cs extends ys {
        constructor() {
          super(...arguments), (this.scopes = []);
        }
        addScope(_) {
          return this.scopes.includes(_) || this.scopes.push(_), this;
        }
        getScopes() {
          return [...this.scopes];
        }
      }
      class Bi extends cs {
        static credentialFromJSON(_) {
          const v = 'string' == typeof _ ? JSON.parse(_) : _;
          return De('providerId' in v && 'signInMethod' in v, 'argument-error'), ls._fromParams(v);
        }
        credential(_) {
          return this._credential(Object.assign(Object.assign({}, _), { nonce: _.rawNonce }));
        }
        _credential(_) {
          return (
            De(_.idToken || _.accessToken, 'argument-error'),
            ls._fromParams(
              Object.assign(Object.assign({}, _), { providerId: this.providerId, signInMethod: this.providerId })
            )
          );
        }
        static credentialFromResult(_) {
          return Bi.oauthCredentialFromTaggedObject(_);
        }
        static credentialFromError(_) {
          return Bi.oauthCredentialFromTaggedObject(_.customData || {});
        }
        static oauthCredentialFromTaggedObject({ _tokenResponse: _ }) {
          if (!_) return null;
          const {
            oauthIdToken: v,
            oauthAccessToken: k,
            oauthTokenSecret: Q,
            pendingToken: ze,
            nonce: Lt,
            providerId: pn,
          } = _;
          if ((!k && !Q && !v && !ze) || !pn) return null;
          try {
            return new Bi(pn)._credential({ idToken: v, accessToken: k, nonce: Lt, pendingToken: ze });
          } catch (Fn) {
            return null;
          }
        }
      }
      let ns = (() => {
          class D extends cs {
            constructor() {
              super('facebook.com');
            }
            static credential(v) {
              return ls._fromParams({
                providerId: D.PROVIDER_ID,
                signInMethod: D.FACEBOOK_SIGN_IN_METHOD,
                accessToken: v,
              });
            }
            static credentialFromResult(v) {
              return D.credentialFromTaggedObject(v);
            }
            static credentialFromError(v) {
              return D.credentialFromTaggedObject(v.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: v }) {
              if (!v || !('oauthAccessToken' in v) || !v.oauthAccessToken) return null;
              try {
                return D.credential(v.oauthAccessToken);
              } catch (k) {
                return null;
              }
            }
          }
          return (D.FACEBOOK_SIGN_IN_METHOD = 'facebook.com'), (D.PROVIDER_ID = 'facebook.com'), D;
        })(),
        wr = (() => {
          class D extends cs {
            constructor() {
              super('google.com'), this.addScope('profile');
            }
            static credential(v, k) {
              return ls._fromParams({
                providerId: D.PROVIDER_ID,
                signInMethod: D.GOOGLE_SIGN_IN_METHOD,
                idToken: v,
                accessToken: k,
              });
            }
            static credentialFromResult(v) {
              return D.credentialFromTaggedObject(v);
            }
            static credentialFromError(v) {
              return D.credentialFromTaggedObject(v.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: v }) {
              if (!v) return null;
              const { oauthIdToken: k, oauthAccessToken: Q } = v;
              if (!k && !Q) return null;
              try {
                return D.credential(k, Q);
              } catch (ze) {
                return null;
              }
            }
          }
          return (D.GOOGLE_SIGN_IN_METHOD = 'google.com'), (D.PROVIDER_ID = 'google.com'), D;
        })(),
        vs = (() => {
          class D extends cs {
            constructor() {
              super('github.com');
            }
            static credential(v) {
              return ls._fromParams({
                providerId: D.PROVIDER_ID,
                signInMethod: D.GITHUB_SIGN_IN_METHOD,
                accessToken: v,
              });
            }
            static credentialFromResult(v) {
              return D.credentialFromTaggedObject(v);
            }
            static credentialFromError(v) {
              return D.credentialFromTaggedObject(v.customData || {});
            }
            static credentialFromTaggedObject({ _tokenResponse: v }) {
              if (!v || !('oauthAccessToken' in v) || !v.oauthAccessToken) return null;
              try {
                return D.credential(v.oauthAccessToken);
              } catch (k) {
                return null;
              }
            }
          }
          return (D.GITHUB_SIGN_IN_METHOD = 'github.com'), (D.PROVIDER_ID = 'github.com'), D;
        })();
      class Ys extends Nn {
        constructor(_, v) {
          super(_, _), (this.pendingToken = v);
        }
        _getIdTokenResponse(_) {
          return Li(_, this.buildRequest());
        }
        _linkToIdToken(_, v) {
          const k = this.buildRequest();
          return (k.idToken = v), Li(_, k);
        }
        _getReauthenticationResolver(_) {
          const v = this.buildRequest();
          return (v.autoCreate = !1), Li(_, v);
        }
        toJSON() {
          return { signInMethod: this.signInMethod, providerId: this.providerId, pendingToken: this.pendingToken };
        }
        static fromJSON(_) {
          const v = 'string' == typeof _ ? JSON.parse(_) : _,
            { providerId: k, signInMethod: Q, pendingToken: ze } = v;
          return k && Q && ze && k === Q ? new Ys(k, ze) : null;
        }
        static _create(_, v) {
          return new Ys(_, v);
        }
        buildRequest() {
          return { requestUri: 'http://localhost', returnSecureToken: !0, pendingToken: this.pendingToken };
        }
      }
      class Gr extends ys {
        constructor(_) {
          De(_.startsWith('saml.'), 'argument-error'), super(_);
        }
        static credentialFromResult(_) {
          return Gr.samlCredentialFromTaggedObject(_);
        }
        static credentialFromError(_) {
          return Gr.samlCredentialFromTaggedObject(_.customData || {});
        }
        static credentialFromJSON(_) {
          const v = Ys.fromJSON(_);
          return De(v, 'argument-error'), v;
        }
        static samlCredentialFromTaggedObject({ _tokenResponse: _ }) {
          if (!_) return null;
          const { pendingToken: v, providerId: k } = _;
          if (!v || !k) return null;
          try {
            return Ys._create(k, v);
          } catch (Q) {
            return null;
          }
        }
      }
      let Wr = (() => {
        class D extends cs {
          constructor() {
            super('twitter.com');
          }
          static credential(v, k) {
            return ls._fromParams({
              providerId: D.PROVIDER_ID,
              signInMethod: D.TWITTER_SIGN_IN_METHOD,
              oauthToken: v,
              oauthTokenSecret: k,
            });
          }
          static credentialFromResult(v) {
            return D.credentialFromTaggedObject(v);
          }
          static credentialFromError(v) {
            return D.credentialFromTaggedObject(v.customData || {});
          }
          static credentialFromTaggedObject({ _tokenResponse: v }) {
            if (!v) return null;
            const { oauthAccessToken: k, oauthTokenSecret: Q } = v;
            if (!k || !Q) return null;
            try {
              return D.credential(k, Q);
            } catch (ze) {
              return null;
            }
          }
        }
        return (D.TWITTER_SIGN_IN_METHOD = 'twitter.com'), (D.PROVIDER_ID = 'twitter.com'), D;
      })();
      function Ko(D, _) {
        return Or.apply(this, arguments);
      }
      function Or() {
        return (Or = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signUp', mt(D, _));
        })).apply(this, arguments);
      }
      class Zi {
        constructor(_) {
          (this.user = _.user),
            (this.providerId = _.providerId),
            (this._tokenResponse = _._tokenResponse),
            (this.operationType = _.operationType);
        }
        static _fromIdTokenResponse(_, v, k, Q = !1) {
          return (0, h.Z)(function* () {
            const ze = yield Xe._fromIdTokenResponse(_, k, Q),
              Lt = Ks(k);
            return new Zi({ user: ze, providerId: Lt, _tokenResponse: k, operationType: v });
          })();
        }
        static _forOperation(_, v, k) {
          return (0, h.Z)(function* () {
            yield _._updateTokensIfNecessary(k, !0);
            const Q = Ks(k);
            return new Zi({ user: _, providerId: Q, _tokenResponse: k, operationType: v });
          })();
        }
      }
      function Ks(D) {
        return D.providerId ? D.providerId : 'phoneNumber' in D ? 'phone' : null;
      }
      function us() {
        return (us = (0, h.Z)(function* (D) {
          var _;
          const v = xn(D);
          if ((yield v._initializationPromise, null === (_ = v.currentUser) || void 0 === _ ? void 0 : _.isAnonymous))
            return new Zi({ user: v.currentUser, providerId: null, operationType: 'signIn' });
          const k = yield Ko(v, { returnSecureToken: !0 }),
            Q = yield Zi._fromIdTokenResponse(v, 'signIn', k, !0);
          return yield v._updateCurrentUser(Q.user), Q;
        })).apply(this, arguments);
      }
      class ds extends d.ZR {
        constructor(_, v, k, Q) {
          var ze;
          super(v.code, v.message),
            (this.operationType = k),
            (this.user = Q),
            Object.setPrototypeOf(this, ds.prototype),
            (this.customData = {
              appName: _.name,
              tenantId: null !== (ze = _.tenantId) && void 0 !== ze ? ze : void 0,
              _serverResponse: v.customData._serverResponse,
              operationType: k,
            });
        }
        static _fromErrorAndOperation(_, v, k, Q) {
          return new ds(_, v, k, Q);
        }
      }
      function ya(D, _, v, k) {
        return ('reauthenticate' === _ ? v._getReauthenticationResolver(D) : v._getIdTokenResponse(D)).catch((ze) => {
          throw 'auth/multi-factor-auth-required' === ze.code ? ds._fromErrorAndOperation(D, ze, _, k) : ze;
        });
      }
      function Qi(D) {
        return new Set(D.map(({ providerId: _ }) => _).filter((_) => !!_));
      }
      function Co() {
        return (Co = (0, h.Z)(function* (D, _) {
          const v = (0, d.m9)(D);
          yield be(!0, v, _);
          const { providerUserInfo: k } = yield ht(v.auth, { idToken: yield v.getIdToken(), deleteProvider: [_] }),
            Q = Qi(k || []);
          return (
            (v.providerData = v.providerData.filter((ze) => Q.has(ze.providerId))),
            Q.has('phone') || (v.phoneNumber = null),
            yield v.auth._persistUserIfCurrent(v),
            v
          );
        })).apply(this, arguments);
      }
      function Ni(D, _) {
        return z.apply(this, arguments);
      }
      function z() {
        return (z = (0, h.Z)(function* (D, _, v = !1) {
          const k = yield An(D, _._linkToIdToken(D.auth, yield D.getIdToken()), v);
          return Zi._forOperation(D, 'link', k);
        })).apply(this, arguments);
      }
      function be(D, _, v) {
        return $.apply(this, arguments);
      }
      function $() {
        return ($ = (0, h.Z)(function* (D, _, v) {
          yield de(_);
          const Q = !1 === D ? 'provider-already-linked' : 'no-such-provider';
          De(Qi(_.providerData).has(v) === D, _.auth, Q);
        })).apply(this, arguments);
      }
      function ke(D, _) {
        return Dt.apply(this, arguments);
      }
      function Dt() {
        return (Dt = (0, h.Z)(function* (D, _, v = !1) {
          const { auth: k } = D,
            Q = 'reauthenticate';
          try {
            const ze = yield An(D, ya(k, Q, _, D), v);
            De(ze.idToken, k, 'internal-error');
            const Lt = mn(ze.idToken);
            De(Lt, k, 'internal-error');
            const { sub: pn } = Lt;
            return De(D.uid === pn, k, 'user-mismatch'), Zi._forOperation(D, Q, ze);
          } catch (ze) {
            throw ('auth/user-not-found' === (null == ze ? void 0 : ze.code) && We(k, 'user-mismatch'), ze);
          }
        })).apply(this, arguments);
      }
      function tn(D, _) {
        return yn.apply(this, arguments);
      }
      function yn() {
        return (yn = (0, h.Z)(function* (D, _, v = !1) {
          const k = 'signIn',
            Q = yield ya(D, k, _),
            ze = yield Zi._fromIdTokenResponse(D, k, Q);
          return v || (yield D._updateCurrentUser(ze.user)), ze;
        })).apply(this, arguments);
      }
      function Sn(D, _) {
        return di.apply(this, arguments);
      }
      function di() {
        return (di = (0, h.Z)(function* (D, _) {
          return tn(xn(D), _);
        })).apply(this, arguments);
      }
      function Vi(D, _) {
        return ki.apply(this, arguments);
      }
      function ki() {
        return (ki = (0, h.Z)(function* (D, _) {
          const v = (0, d.m9)(D);
          return yield be(!1, v, _.providerId), Ni(v, _);
        })).apply(this, arguments);
      }
      function yi(D, _) {
        return W.apply(this, arguments);
      }
      function W() {
        return (W = (0, h.Z)(function* (D, _) {
          return ke((0, d.m9)(D), _);
        })).apply(this, arguments);
      }
      function H(D, _) {
        return F.apply(this, arguments);
      }
      function F() {
        return (F = (0, h.Z)(function* (D, _) {
          return re(D, 'POST', '/v1/accounts:signInWithCustomToken', mt(D, _));
        })).apply(this, arguments);
      }
      function Xt() {
        return (Xt = (0, h.Z)(function* (D, _) {
          const v = xn(D),
            k = yield H(v, { token: _, returnSecureToken: !0 }),
            Q = yield Zi._fromIdTokenResponse(v, 'signIn', k);
          return yield v._updateCurrentUser(Q.user), Q;
        })).apply(this, arguments);
      }
      class Pn {
        constructor(_, v) {
          (this.factorId = _),
            (this.uid = v.mfaEnrollmentId),
            (this.enrollmentTime = new Date(v.enrolledAt).toUTCString()),
            (this.displayName = v.displayName);
        }
        static _fromServerResponse(_, v) {
          return 'phoneInfo' in v ? Pi._fromServerResponse(_, v) : We(_, 'internal-error');
        }
      }
      class Pi extends Pn {
        constructor(_) {
          super('phone', _), (this.phoneNumber = _.phoneInfo);
        }
        static _fromServerResponse(_, v) {
          return new Pi(v);
        }
      }
      function pr(D, _, v) {
        var k;
        De((null === (k = v.url) || void 0 === k ? void 0 : k.length) > 0, D, 'invalid-continue-uri'),
          De(void 0 === v.dynamicLinkDomain || v.dynamicLinkDomain.length > 0, D, 'invalid-dynamic-link-domain'),
          (_.continueUrl = v.url),
          (_.dynamicLinkDomain = v.dynamicLinkDomain),
          (_.canHandleCodeInApp = v.handleCodeInApp),
          v.iOS && (De(v.iOS.bundleId.length > 0, D, 'missing-ios-bundle-id'), (_.iOSBundleId = v.iOS.bundleId)),
          v.android &&
            (De(v.android.packageName.length > 0, D, 'missing-android-pkg-name'),
            (_.androidInstallApp = v.android.installApp),
            (_.androidMinimumVersionCode = v.android.minimumVersion),
            (_.androidPackageName = v.android.packageName));
      }
      function oo() {
        return (oo = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D),
            Q = { requestType: 'PASSWORD_RESET', email: _ };
          v && pr(k, Q, v), yield Vr(k, Q);
        })).apply(this, arguments);
      }
      function oe() {
        return (oe = (0, h.Z)(function* (D, _, v) {
          yield Nr((0, d.m9)(D), { oobCode: _, newPassword: v });
        })).apply(this, arguments);
      }
      function M() {
        return (M = (0, h.Z)(function* (D, _) {
          yield _i((0, d.m9)(D), { oobCode: _ });
        })).apply(this, arguments);
      }
      function B(D, _) {
        return ce.apply(this, arguments);
      }
      function ce() {
        return (ce = (0, h.Z)(function* (D, _) {
          const v = (0, d.m9)(D),
            k = yield Nr(v, { oobCode: _ }),
            Q = k.requestType;
          switch ((De(Q, v, 'internal-error'), Q)) {
            case 'EMAIL_SIGNIN':
              break;
            case 'VERIFY_AND_CHANGE_EMAIL':
              De(k.newEmail, v, 'internal-error');
              break;
            case 'REVERT_SECOND_FACTOR_ADDITION':
              De(k.mfaInfo, v, 'internal-error');
            default:
              De(k.email, v, 'internal-error');
          }
          let ze = null;
          return (
            k.mfaInfo && (ze = Pn._fromServerResponse(xn(v), k.mfaInfo)),
            {
              data: {
                email: ('VERIFY_AND_CHANGE_EMAIL' === k.requestType ? k.newEmail : k.email) || null,
                previousEmail: ('VERIFY_AND_CHANGE_EMAIL' === k.requestType ? k.email : k.newEmail) || null,
                multiFactorInfo: ze,
              },
              operation: Q,
            }
          );
        })).apply(this, arguments);
      }
      function pt() {
        return (pt = (0, h.Z)(function* (D, _) {
          const { data: v } = yield B((0, d.m9)(D), _);
          return v.email;
        })).apply(this, arguments);
      }
      function Vt() {
        return (Vt = (0, h.Z)(function* (D, _, v) {
          const k = xn(D),
            Q = yield Ko(k, { returnSecureToken: !0, email: _, password: v }),
            ze = yield Zi._fromIdTokenResponse(k, 'signIn', Q);
          return yield k._updateCurrentUser(ze.user), ze;
        })).apply(this, arguments);
      }
      function zn() {
        return (zn = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D),
            Q = { requestType: 'EMAIL_SIGNIN', email: _ };
          De(v.handleCodeInApp, k, 'argument-error'), v && pr(k, Q, v), yield ji(k, Q);
        })).apply(this, arguments);
      }
      function Xn() {
        return (Xn = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D),
            Q = _s.credentialWithLink(_, v || St());
          return De(Q._tenantId === (k.tenantId || null), k, 'tenant-id-mismatch'), Sn(k, Q);
        })).apply(this, arguments);
      }
      function si(D, _) {
        return vi.apply(this, arguments);
      }
      function vi() {
        return (vi = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:createAuthUri', mt(D, _));
        })).apply(this, arguments);
      }
      function cr() {
        return (cr = (0, h.Z)(function* (D, _) {
          const k = { identifier: _, continueUri: on() ? St() : 'http://localhost' },
            { signinMethods: Q } = yield si((0, d.m9)(D), k);
          return Q || [];
        })).apply(this, arguments);
      }
      function Er() {
        return (Er = (0, h.Z)(function* (D, _) {
          const v = (0, d.m9)(D),
            Q = { requestType: 'VERIFY_EMAIL', idToken: yield D.getIdToken() };
          _ && pr(v.auth, Q, _);
          const { email: ze } = yield fi(v.auth, Q);
          ze !== D.email && (yield D.reload());
        })).apply(this, arguments);
      }
      function Yr() {
        return (Yr = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D),
            ze = { requestType: 'VERIFY_AND_CHANGE_EMAIL', idToken: yield D.getIdToken(), newEmail: _ };
          v && pr(k.auth, ze, v);
          const { email: Lt } = yield kr(k.auth, ze);
          Lt !== D.email && (yield D.reload());
        })).apply(this, arguments);
      }
      function Kr(D, _) {
        return hs.apply(this, arguments);
      }
      function hs() {
        return (hs = (0, h.Z)(function* (D, _) {
          return Nt(D, 'POST', '/v1/accounts:update', _);
        })).apply(this, arguments);
      }
      function bs() {
        return (bs = (0, h.Z)(function* (D, { displayName: _, photoURL: v }) {
          if (void 0 === _ && void 0 === v) return;
          const k = (0, d.m9)(D),
            ze = { idToken: yield k.getIdToken(), displayName: _, photoUrl: v, returnSecureToken: !0 },
            Lt = yield An(k, Kr(k.auth, ze));
          (k.displayName = Lt.displayName || null), (k.photoURL = Lt.photoUrl || null);
          const pn = k.providerData.find(({ providerId: Fn }) => 'password' === Fn);
          pn && ((pn.displayName = k.displayName), (pn.photoURL = k.photoURL)), yield k._updateTokensIfNecessary(Lt);
        })).apply(this, arguments);
      }
      function qs(D, _, v) {
        return qo.apply(this, arguments);
      }
      function qo() {
        return (qo = (0, h.Z)(function* (D, _, v) {
          const { auth: k } = D,
            ze = { idToken: yield D.getIdToken(), returnSecureToken: !0 };
          _ && (ze.email = _), v && (ze.password = v);
          const Lt = yield An(D, ci(k, ze));
          yield D._updateTokensIfNecessary(Lt, !0);
        })).apply(this, arguments);
      }
      class Vn {
        constructor(_, v, k = {}) {
          (this.isNewUser = _), (this.providerId = v), (this.profile = k);
        }
      }
      class li extends Vn {
        constructor(_, v, k, Q) {
          super(_, v, k), (this.username = Q);
        }
      }
      class oi extends Vn {
        constructor(_, v) {
          super(_, 'facebook.com', v);
        }
      }
      class gi extends li {
        constructor(_, v) {
          super(
            _,
            'github.com',
            v,
            'string' == typeof (null == v ? void 0 : v.login) ? (null == v ? void 0 : v.login) : null
          );
        }
      }
      class ir extends Vn {
        constructor(_, v) {
          super(_, 'google.com', v);
        }
      }
      class Ri extends li {
        constructor(_, v, k) {
          super(_, 'twitter.com', v, k);
        }
      }
      function fs(D) {
        const { user: _, _tokenResponse: v } = D;
        return _.isAnonymous && !v
          ? { providerId: null, isNewUser: !1, profile: null }
          : (function ea(D) {
              var _, v;
              if (!D) return null;
              const { providerId: k } = D,
                Q = D.rawUserInfo ? JSON.parse(D.rawUserInfo) : {},
                ze = D.isNewUser || 'identitytoolkit#SignupNewUserResponse' === D.kind;
              if (!k && (null == D ? void 0 : D.idToken)) {
                const Lt =
                  null === (v = null === (_ = mn(D.idToken)) || void 0 === _ ? void 0 : _.firebase) || void 0 === v
                    ? void 0
                    : v.sign_in_provider;
                if (Lt) return new Vn(ze, 'anonymous' !== Lt && 'custom' !== Lt ? Lt : null);
              }
              if (!k) return null;
              switch (k) {
                case 'facebook.com':
                  return new oi(ze, Q);
                case 'github.com':
                  return new gi(ze, Q);
                case 'google.com':
                  return new ir(ze, Q);
                case 'twitter.com':
                  return new Ri(ze, Q, D.screenName || null);
                case 'custom':
                case 'anonymous':
                  return new Vn(ze, null);
                default:
                  return new Vn(ze, k, Q);
              }
            })(v);
      }
      class ao {
        constructor(_, v) {
          (this.type = _), (this.credential = v);
        }
        static _fromIdtoken(_) {
          return new ao('enroll', _);
        }
        static _fromMfaPendingCredential(_) {
          return new ao('signin', _);
        }
        toJSON() {
          return {
            multiFactorSession: { ['enroll' === this.type ? 'idToken' : 'pendingCredential']: this.credential },
          };
        }
        static fromJSON(_) {
          var v, k;
          if (null == _ ? void 0 : _.multiFactorSession) {
            if (null === (v = _.multiFactorSession) || void 0 === v ? void 0 : v.pendingCredential)
              return ao._fromMfaPendingCredential(_.multiFactorSession.pendingCredential);
            if (null === (k = _.multiFactorSession) || void 0 === k ? void 0 : k.idToken)
              return ao._fromIdtoken(_.multiFactorSession.idToken);
          }
          return null;
        }
      }
      class qa {
        constructor(_, v, k) {
          (this.session = _), (this.hints = v), (this.signInResolver = k);
        }
        static _fromError(_, v) {
          const k = xn(_),
            Q = v.customData._serverResponse,
            ze = (Q.mfaInfo || []).map((pn) => Pn._fromServerResponse(k, pn));
          De(Q.mfaPendingCredential, k, 'internal-error');
          const Lt = ao._fromMfaPendingCredential(Q.mfaPendingCredential);
          return new qa(
            Lt,
            ze,
            (function () {
              var pn = (0, h.Z)(function* (Fn) {
                const Kn = yield Fn._process(k, Lt);
                delete Q.mfaInfo, delete Q.mfaPendingCredential;
                const wi = Object.assign(Object.assign({}, Q), { idToken: Kn.idToken, refreshToken: Kn.refreshToken });
                switch (v.operationType) {
                  case 'signIn':
                    const hi = yield Zi._fromIdTokenResponse(k, v.operationType, wi);
                    return yield k._updateCurrentUser(hi.user), hi;
                  case 'reauthenticate':
                    return De(v.user, k, 'internal-error'), Zi._forOperation(v.user, v.operationType, wi);
                  default:
                    We(k, 'internal-error');
                }
              });
              return function (Fn) {
                return pn.apply(this, arguments);
              };
            })()
          );
        }
        resolveSignIn(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return v.signInResolver(_);
          })();
        }
      }
      function No(D, _) {
        return Nt(D, 'POST', '/v2/accounts/mfaEnrollment:start', mt(D, _));
      }
      class Zo {
        constructor(_) {
          (this.user = _),
            (this.enrolledFactors = []),
            _._onReload((v) => {
              v.mfaInfo && (this.enrolledFactors = v.mfaInfo.map((k) => Pn._fromServerResponse(_.auth, k)));
            });
        }
        static _fromUser(_) {
          return new Zo(_);
        }
        getSession() {
          var _ = this;
          return (0, h.Z)(function* () {
            return ao._fromIdtoken(yield _.user.getIdToken());
          })();
        }
        enroll(_, v) {
          var k = this;
          return (0, h.Z)(function* () {
            const Q = _,
              ze = yield k.getSession(),
              Lt = yield An(k.user, Q._process(k.user.auth, ze, v));
            return yield k.user._updateTokensIfNecessary(Lt), k.user.reload();
          })();
        }
        unenroll(_) {
          var v = this;
          return (0, h.Z)(function* () {
            const k = 'string' == typeof _ ? _ : _.uid,
              Q = yield v.user.getIdToken(),
              ze = yield An(
                v.user,
                (function Pc(D, _) {
                  return Nt(D, 'POST', '/v2/accounts/mfaEnrollment:withdraw', mt(D, _));
                })(v.user.auth, { idToken: Q, mfaEnrollmentId: k })
              );
            (v.enrolledFactors = v.enrolledFactors.filter(({ uid: Lt }) => Lt !== k)),
              yield v.user._updateTokensIfNecessary(ze);
            try {
              yield v.user.reload();
            } catch (Lt) {
              if ('auth/user-token-expired' !== Lt.code) throw Lt;
            }
          })();
        }
      }
      const ta = new WeakMap(),
        na = '__sak';
      class Fc {
        constructor(_, v) {
          (this.storageRetriever = _), (this.type = v);
        }
        _isAvailable() {
          try {
            return this.storage
              ? (this.storage.setItem(na, '1'), this.storage.removeItem(na), Promise.resolve(!0))
              : Promise.resolve(!1);
          } catch (_) {
            return Promise.resolve(!1);
          }
        }
        _set(_, v) {
          return this.storage.setItem(_, JSON.stringify(v)), Promise.resolve();
        }
        _get(_) {
          const v = this.storage.getItem(_);
          return Promise.resolve(v ? JSON.parse(v) : null);
        }
        _remove(_) {
          return this.storage.removeItem(_), Promise.resolve();
        }
        get storage() {
          return this.storageRetriever();
        }
      }
      const wa = (() => {
          class D extends Fc {
            constructor() {
              super(() => window.localStorage, 'LOCAL'),
                (this.boundEventHandler = (v, k) => this.onStorageEvent(v, k)),
                (this.listeners = {}),
                (this.localCache = {}),
                (this.pollTimer = null),
                (this.safariLocalStorageNotSynced =
                  (function _u() {
                    const D = (0, d.z$)();
                    return wt(D) || Jn(D);
                  })() &&
                  (function br() {
                    try {
                      return !(!window || window === window.top);
                    } catch (D) {
                      return !1;
                    }
                  })()),
                (this.fallbackToPolling = Rr()),
                (this._shouldAllowMigration = !0);
            }
            forAllChangedKeys(v) {
              for (const k of Object.keys(this.listeners)) {
                const Q = this.storage.getItem(k),
                  ze = this.localCache[k];
                Q !== ze && v(k, ze, Q);
              }
            }
            onStorageEvent(v, k = !1) {
              if (!v.key)
                return void this.forAllChangedKeys((pn, Fn, Kn) => {
                  this.notifyListeners(pn, Kn);
                });
              const Q = v.key;
              if ((k ? this.detachListener() : this.stopPolling(), this.safariLocalStorageNotSynced)) {
                const pn = this.storage.getItem(Q);
                if (v.newValue !== pn)
                  null !== v.newValue ? this.storage.setItem(Q, v.newValue) : this.storage.removeItem(Q);
                else if (this.localCache[Q] === v.newValue && !k) return;
              }
              const ze = () => {
                  const pn = this.storage.getItem(Q);
                  (!k && this.localCache[Q] === pn) || this.notifyListeners(Q, pn);
                },
                Lt = this.storage.getItem(Q);
              !(function Rs() {
                return (0, d.w1)() && 10 === document.documentMode;
              })() ||
              Lt === v.newValue ||
              v.newValue === v.oldValue
                ? ze()
                : setTimeout(ze, 10);
            }
            notifyListeners(v, k) {
              this.localCache[v] = k;
              const Q = this.listeners[v];
              if (Q) for (const ze of Array.from(Q)) ze(k && JSON.parse(k));
            }
            startPolling() {
              this.stopPolling(),
                (this.pollTimer = setInterval(() => {
                  this.forAllChangedKeys((v, k, Q) => {
                    this.onStorageEvent(new StorageEvent('storage', { key: v, oldValue: k, newValue: Q }), !0);
                  });
                }, 1e3));
            }
            stopPolling() {
              this.pollTimer && (clearInterval(this.pollTimer), (this.pollTimer = null));
            }
            attachListener() {
              window.addEventListener('storage', this.boundEventHandler);
            }
            detachListener() {
              window.removeEventListener('storage', this.boundEventHandler);
            }
            _addListener(v, k) {
              0 === Object.keys(this.listeners).length &&
                (this.fallbackToPolling ? this.startPolling() : this.attachListener()),
                this.listeners[v] || ((this.listeners[v] = new Set()), (this.localCache[v] = this.storage.getItem(v))),
                this.listeners[v].add(k);
            }
            _removeListener(v, k) {
              this.listeners[v] &&
                (this.listeners[v].delete(k), 0 === this.listeners[v].size && delete this.listeners[v]),
                0 === Object.keys(this.listeners).length && (this.detachListener(), this.stopPolling());
            }
            _set(v, k) {
              var Q = () => super._set,
                ze = this;
              return (0, h.Z)(function* () {
                yield Q().call(ze, v, k), (ze.localCache[v] = JSON.stringify(k));
              })();
            }
            _get(v) {
              var k = () => super._get,
                Q = this;
              return (0, h.Z)(function* () {
                const ze = yield k().call(Q, v);
                return (Q.localCache[v] = JSON.stringify(ze)), ze;
              })();
            }
            _remove(v) {
              var k = () => super._remove,
                Q = this;
              return (0, h.Z)(function* () {
                yield k().call(Q, v), delete Q.localCache[v];
              })();
            }
          }
          return (D.type = 'LOCAL'), D;
        })(),
        ia = (() => {
          class D extends Fc {
            constructor() {
              super(() => window.sessionStorage, 'SESSION');
            }
            _addListener(v, k) {}
            _removeListener(v, k) {}
          }
          return (D.type = 'SESSION'), D;
        })();
      let ra = (() => {
        class D {
          constructor(v) {
            (this.eventTarget = v), (this.handlersMap = {}), (this.boundEventHandler = this.handleEvent.bind(this));
          }
          static _getInstance(v) {
            const k = this.receivers.find((ze) => ze.isListeningto(v));
            if (k) return k;
            const Q = new D(v);
            return this.receivers.push(Q), Q;
          }
          isListeningto(v) {
            return this.eventTarget === v;
          }
          handleEvent(v) {
            var k = this;
            return (0, h.Z)(function* () {
              const Q = v,
                { eventId: ze, eventType: Lt, data: pn } = Q.data,
                Fn = k.handlersMap[Lt];
              if (!(null == Fn ? void 0 : Fn.size)) return;
              Q.ports[0].postMessage({ status: 'ack', eventId: ze, eventType: Lt });
              const Kn = Array.from(Fn).map(
                  (function () {
                    var hi = (0, h.Z)(function* (Fi) {
                      return Fi(Q.origin, pn);
                    });
                    return function (Fi) {
                      return hi.apply(this, arguments);
                    };
                  })()
                ),
                wi = yield (function ec(D) {
                  return Promise.all(
                    D.map(
                      (function () {
                        var _ = (0, h.Z)(function* (v) {
                          try {
                            return { fulfilled: !0, value: yield v };
                          } catch (k) {
                            return { fulfilled: !1, reason: k };
                          }
                        });
                        return function (v) {
                          return _.apply(this, arguments);
                        };
                      })()
                    )
                  );
                })(Kn);
              Q.ports[0].postMessage({ status: 'done', eventId: ze, eventType: Lt, response: wi });
            })();
          }
          _subscribe(v, k) {
            0 === Object.keys(this.handlersMap).length &&
              this.eventTarget.addEventListener('message', this.boundEventHandler),
              this.handlersMap[v] || (this.handlersMap[v] = new Set()),
              this.handlersMap[v].add(k);
          }
          _unsubscribe(v, k) {
            this.handlersMap[v] && k && this.handlersMap[v].delete(k),
              (!k || 0 === this.handlersMap[v].size) && delete this.handlersMap[v],
              0 === Object.keys(this.handlersMap).length &&
                this.eventTarget.removeEventListener('message', this.boundEventHandler);
          }
        }
        return (D.receivers = []), D;
      })();
      function Pa(D = '', _ = 10) {
        let v = '';
        for (let k = 0; k < _; k++) v += Math.floor(10 * Math.random());
        return D + v;
      }
      class Qo {
        constructor(_) {
          (this.target = _), (this.handlers = new Set());
        }
        removeMessageHandler(_) {
          _.messageChannel &&
            (_.messageChannel.port1.removeEventListener('message', _.onMessage), _.messageChannel.port1.close()),
            this.handlers.delete(_);
        }
        _send(_, v, k = 50) {
          var Q = this;
          return (0, h.Z)(function* () {
            const ze = 'undefined' != typeof MessageChannel ? new MessageChannel() : null;
            if (!ze) throw new Error('connection_unavailable');
            let Lt, pn;
            return new Promise((Fn, Kn) => {
              const wi = Pa('', 20);
              ze.port1.start();
              const hi = setTimeout(() => {
                Kn(new Error('unsupported_event'));
              }, k);
              (pn = {
                messageChannel: ze,
                onMessage(Fi) {
                  const go = Fi;
                  if (go.data.eventId === wi)
                    switch (go.data.status) {
                      case 'ack':
                        clearTimeout(hi),
                          (Lt = setTimeout(() => {
                            Kn(new Error('timeout'));
                          }, 3e3));
                        break;
                      case 'done':
                        clearTimeout(Lt), Fn(go.data.response);
                        break;
                      default:
                        clearTimeout(hi), clearTimeout(Lt), Kn(new Error('invalid_response'));
                    }
                },
              }),
                Q.handlers.add(pn),
                ze.port1.addEventListener('message', pn.onMessage),
                Q.target.postMessage({ eventType: _, eventId: wi, data: v }, [ze.port2]);
            }).finally(() => {
              pn && Q.removeMessageHandler(pn);
            });
          })();
        }
      }
      function Ar() {
        return window;
      }
      function L() {
        return void 0 !== Ar().WorkerGlobalScope && 'function' == typeof Ar().importScripts;
      }
      function R() {
        return (R = (0, h.Z)(function* () {
          if (!(null == navigator ? void 0 : navigator.serviceWorker)) return null;
          try {
            return (yield navigator.serviceWorker.ready).active;
          } catch (D) {
            return null;
          }
        })).apply(this, arguments);
      }
      const Ae = 'firebaseLocalStorageDb',
        Mt = 'firebaseLocalStorage',
        nn = 'fbase_key';
      class On {
        constructor(_) {
          this.request = _;
        }
        toPromise() {
          return new Promise((_, v) => {
            this.request.addEventListener('success', () => {
              _(this.request.result);
            }),
              this.request.addEventListener('error', () => {
                v(this.request.error);
              });
          });
        }
      }
      function Mi(D, _) {
        return D.transaction([Mt], _ ? 'readwrite' : 'readonly').objectStore(Mt);
      }
      function Di() {
        const D = indexedDB.open(Ae, 1);
        return new Promise((_, v) => {
          D.addEventListener('error', () => {
            v(D.error);
          }),
            D.addEventListener('upgradeneeded', () => {
              const k = D.result;
              try {
                k.createObjectStore(Mt, { keyPath: nn });
              } catch (Q) {
                v(Q);
              }
            }),
            D.addEventListener(
              'success',
              (0, h.Z)(function* () {
                const k = D.result;
                k.objectStoreNames.contains(Mt)
                  ? _(k)
                  : (k.close(),
                    yield (function ai() {
                      const D = indexedDB.deleteDatabase(Ae);
                      return new On(D).toPromise();
                    })(),
                    _(yield Di()));
              })
            );
        });
      }
      function Xi(D, _, v) {
        return zi.apply(this, arguments);
      }
      function zi() {
        return (zi = (0, h.Z)(function* (D, _, v) {
          const k = Mi(D, !0).put({ [nn]: _, value: v });
          return new On(k).toPromise();
        })).apply(this, arguments);
      }
      function wo() {
        return (wo = (0, h.Z)(function* (D, _) {
          const v = Mi(D, !1).get(_),
            k = yield new On(v).toPromise();
          return void 0 === k ? null : k.value;
        })).apply(this, arguments);
      }
      function Eo(D, _) {
        const v = Mi(D, !0).delete(_);
        return new On(v).toPromise();
      }
      const Fa = (() => {
        class D {
          constructor() {
            (this.type = 'LOCAL'),
              (this._shouldAllowMigration = !0),
              (this.listeners = {}),
              (this.localCache = {}),
              (this.pollTimer = null),
              (this.pendingWrites = 0),
              (this.receiver = null),
              (this.sender = null),
              (this.serviceWorkerReceiverAvailable = !1),
              (this.activeServiceWorker = null),
              (this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(
                () => {},
                () => {}
              ));
          }
          _openDb() {
            var v = this;
            return (0, h.Z)(function* () {
              return v.db || (v.db = yield Di()), v.db;
            })();
          }
          _withRetries(v) {
            var k = this;
            return (0, h.Z)(function* () {
              let Q = 0;
              for (;;)
                try {
                  const ze = yield k._openDb();
                  return yield v(ze);
                } catch (ze) {
                  if (Q++ > 3) throw ze;
                  k.db && (k.db.close(), (k.db = void 0));
                }
            })();
          }
          initializeServiceWorkerMessaging() {
            var v = this;
            return (0, h.Z)(function* () {
              return L() ? v.initializeReceiver() : v.initializeSender();
            })();
          }
          initializeReceiver() {
            var v = this;
            return (0, h.Z)(function* () {
              (v.receiver = ra._getInstance(
                (function te() {
                  return L() ? self : null;
                })()
              )),
                v.receiver._subscribe(
                  'keyChanged',
                  (function () {
                    var k = (0, h.Z)(function* (Q, ze) {
                      return { keyProcessed: (yield v._poll()).includes(ze.key) };
                    });
                    return function (Q, ze) {
                      return k.apply(this, arguments);
                    };
                  })()
                ),
                v.receiver._subscribe(
                  'ping',
                  (function () {
                    var k = (0, h.Z)(function* (Q, ze) {
                      return ['keyChanged'];
                    });
                    return function (Q, ze) {
                      return k.apply(this, arguments);
                    };
                  })()
                );
            })();
          }
          initializeSender() {
            var v = this;
            return (0, h.Z)(function* () {
              var k, Q;
              if (
                ((v.activeServiceWorker = yield (function P() {
                  return R.apply(this, arguments);
                })()),
                !v.activeServiceWorker)
              )
                return;
              v.sender = new Qo(v.activeServiceWorker);
              const ze = yield v.sender._send('ping', {}, 800);
              !ze ||
                ((null === (k = ze[0]) || void 0 === k ? void 0 : k.fulfilled) &&
                  (null === (Q = ze[0]) || void 0 === Q ? void 0 : Q.value.includes('keyChanged')) &&
                  (v.serviceWorkerReceiverAvailable = !0));
            })();
          }
          notifyServiceWorker(v) {
            var k = this;
            return (0, h.Z)(function* () {
              if (
                k.sender &&
                k.activeServiceWorker &&
                (function G() {
                  var D;
                  return (
                    (null === (D = null == navigator ? void 0 : navigator.serviceWorker) || void 0 === D
                      ? void 0
                      : D.controller) || null
                  );
                })() === k.activeServiceWorker
              )
                try {
                  yield k.sender._send('keyChanged', { key: v }, k.serviceWorkerReceiverAvailable ? 800 : 50);
                } catch (Q) {}
            })();
          }
          _isAvailable() {
            return (0, h.Z)(function* () {
              try {
                if (!indexedDB) return !1;
                const v = yield Di();
                return yield Xi(v, na, '1'), yield Eo(v, na), !0;
              } catch (v) {}
              return !1;
            })();
          }
          _withPendingWrite(v) {
            var k = this;
            return (0, h.Z)(function* () {
              k.pendingWrites++;
              try {
                yield v();
              } finally {
                k.pendingWrites--;
              }
            })();
          }
          _set(v, k) {
            var Q = this;
            return (0, h.Z)(function* () {
              return Q._withPendingWrite(
                (0, h.Z)(function* () {
                  return yield Q._withRetries((ze) => Xi(ze, v, k)), (Q.localCache[v] = k), Q.notifyServiceWorker(v);
                })
              );
            })();
          }
          _get(v) {
            var k = this;
            return (0, h.Z)(function* () {
              const Q = yield k._withRetries((ze) =>
                (function Qs(D, _) {
                  return wo.apply(this, arguments);
                })(ze, v)
              );
              return (k.localCache[v] = Q), Q;
            })();
          }
          _remove(v) {
            var k = this;
            return (0, h.Z)(function* () {
              return k._withPendingWrite(
                (0, h.Z)(function* () {
                  return yield k._withRetries((Q) => Eo(Q, v)), delete k.localCache[v], k.notifyServiceWorker(v);
                })
              );
            })();
          }
          _poll() {
            var v = this;
            return (0, h.Z)(function* () {
              const k = yield v._withRetries((Lt) => {
                const pn = Mi(Lt, !1).getAll();
                return new On(pn).toPromise();
              });
              if (!k) return [];
              if (0 !== v.pendingWrites) return [];
              const Q = [],
                ze = new Set();
              for (const { fbase_key: Lt, value: pn } of k)
                ze.add(Lt),
                  JSON.stringify(v.localCache[Lt]) !== JSON.stringify(pn) && (v.notifyListeners(Lt, pn), Q.push(Lt));
              for (const Lt of Object.keys(v.localCache))
                v.localCache[Lt] && !ze.has(Lt) && (v.notifyListeners(Lt, null), Q.push(Lt));
              return Q;
            })();
          }
          notifyListeners(v, k) {
            this.localCache[v] = k;
            const Q = this.listeners[v];
            if (Q) for (const ze of Array.from(Q)) ze(k);
          }
          startPolling() {
            var v = this;
            this.stopPolling(),
              (this.pollTimer = setInterval(
                (0, h.Z)(function* () {
                  return v._poll();
                }),
                800
              ));
          }
          stopPolling() {
            this.pollTimer && (clearInterval(this.pollTimer), (this.pollTimer = null));
          }
          _addListener(v, k) {
            0 === Object.keys(this.listeners).length && this.startPolling(),
              this.listeners[v] || ((this.listeners[v] = new Set()), this._get(v)),
              this.listeners[v].add(k);
          }
          _removeListener(v, k) {
            this.listeners[v] &&
              (this.listeners[v].delete(k), 0 === this.listeners[v].size && delete this.listeners[v]),
              0 === Object.keys(this.listeners).length && this.stopPolling();
          }
        }
        return (D.type = 'LOCAL'), D;
      })();
      function tc(D, _) {
        return Nt(D, 'POST', '/v2/accounts/mfaSignIn:start', mt(D, _));
      }
      function ic() {
        return (ic = (0, h.Z)(function* (D) {
          return (yield Nt(D, 'GET', '/v1/recaptchaParams')).recaptchaSiteKey || '';
        })).apply(this, arguments);
      }
      function Vo(D) {
        return new Promise((_, v) => {
          const k = document.createElement('script');
          k.setAttribute('src', D),
            (k.onload = _),
            (k.onerror = (Q) => {
              const ze = $e('internal-error');
              (ze.customData = Q), v(ze);
            }),
            (k.type = 'text/javascript'),
            (k.charset = 'UTF-8'),
            (function Xo() {
              var D, _;
              return null !==
                (_ = null === (D = document.getElementsByTagName('head')) || void 0 === D ? void 0 : D[0]) &&
                void 0 !== _
                ? _
                : document;
            })().appendChild(k);
        });
      }
      function La(D) {
        return `__${D}${Math.floor(1e6 * Math.random())}`;
      }
      const xo = 1e12;
      class Qu {
        constructor(_) {
          (this.auth = _), (this.counter = xo), (this._widgets = new Map());
        }
        render(_, v) {
          const k = this.counter;
          return this._widgets.set(k, new Rf(_, this.auth.name, v || {})), this.counter++, k;
        }
        reset(_) {
          var v;
          const k = _ || xo;
          null === (v = this._widgets.get(k)) || void 0 === v || v.delete(), this._widgets.delete(k);
        }
        getResponse(_) {
          var v;
          return (null === (v = this._widgets.get(_ || xo)) || void 0 === v ? void 0 : v.getResponse()) || '';
        }
        execute(_) {
          var v = this;
          return (0, h.Z)(function* () {
            var k;
            return null === (k = v._widgets.get(_ || xo)) || void 0 === k || k.execute(), '';
          })();
        }
      }
      class Rf {
        constructor(_, v, k) {
          (this.params = k),
            (this.timerId = null),
            (this.deleted = !1),
            (this.responseToken = null),
            (this.clickHandler = () => {
              this.execute();
            });
          const Q = 'string' == typeof _ ? document.getElementById(_) : _;
          De(Q, 'argument-error', { appName: v }),
            (this.container = Q),
            (this.isVisible = 'invisible' !== this.params.size),
            this.isVisible ? this.execute() : this.container.addEventListener('click', this.clickHandler);
        }
        getResponse() {
          return this.checkIfDeleted(), this.responseToken;
        }
        delete() {
          this.checkIfDeleted(),
            (this.deleted = !0),
            this.timerId && (clearTimeout(this.timerId), (this.timerId = null)),
            this.container.removeEventListener('click', this.clickHandler);
        }
        execute() {
          this.checkIfDeleted(),
            !this.timerId &&
              (this.timerId = window.setTimeout(() => {
                this.responseToken = (function Zr(D) {
                  const _ = [],
                    v = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
                  for (let k = 0; k < D; k++) _.push(v.charAt(Math.floor(Math.random() * v.length)));
                  return _.join('');
                })(50);
                const { callback: _, 'expired-callback': v } = this.params;
                if (_)
                  try {
                    _(this.responseToken);
                  } catch (k) {}
                this.timerId = window.setTimeout(() => {
                  if (((this.timerId = null), (this.responseToken = null), v))
                    try {
                      v();
                    } catch (k) {}
                  this.isVisible && this.execute();
                }, 6e4);
              }, 500));
        }
        checkIfDeleted() {
          if (this.deleted) throw new Error('reCAPTCHA mock was already deleted!');
        }
      }
      const Xu = La('rcb'),
        Ju = new Et(3e4, 6e4);
      class Ah {
        constructor() {
          (this.hostLanguage = ''), (this.counter = 0), (this.librarySeparatelyLoaded = !!Ar().grecaptcha);
        }
        load(_, v = '') {
          return (
            De(
              (function Bd(D) {
                return D.length <= 6 && /^\s*[a-zA-Z0-9\-]*\s*$/.test(D);
              })(v),
              _,
              'argument-error'
            ),
            this.shouldResolveImmediately(v)
              ? Promise.resolve(Ar().grecaptcha)
              : new Promise((k, Q) => {
                  const ze = Ar().setTimeout(() => {
                    Q($e(_, 'network-request-failed'));
                  }, Ju.get());
                  (Ar()[Xu] = () => {
                    Ar().clearTimeout(ze), delete Ar()[Xu];
                    const pn = Ar().grecaptcha;
                    if (!pn) return void Q($e(_, 'internal-error'));
                    const Fn = pn.render;
                    (pn.render = (Kn, wi) => {
                      const hi = Fn(Kn, wi);
                      return this.counter++, hi;
                    }),
                      (this.hostLanguage = v),
                      k(pn);
                  }),
                    Vo(
                      `https://www.google.com/recaptcha/api.js??${(0, d.xO)({ onload: Xu, render: 'explicit', hl: v })}`
                    ).catch(() => {
                      clearTimeout(ze), Q($e(_, 'internal-error'));
                    });
                })
          );
        }
        clearedOneInstance() {
          this.counter--;
        }
        shouldResolveImmediately(_) {
          return !!Ar().grecaptcha && (_ === this.hostLanguage || this.counter > 0 || this.librarySeparatelyLoaded);
        }
      }
      class Of {
        load(_) {
          return (0, h.Z)(function* () {
            return new Qu(_);
          })();
        }
        clearedOneInstance() {}
      }
      const Vd = 'recaptcha',
        cl = { theme: 'light', type: 'image' };
      class Ud {
        constructor(_, v = Object.assign({}, cl), k) {
          (this.parameters = v),
            (this.type = Vd),
            (this.destroyed = !1),
            (this.widgetId = null),
            (this.tokenChangeListeners = new Set()),
            (this.renderPromise = null),
            (this.recaptcha = null),
            (this.auth = xn(k)),
            (this.isInvisible = 'invisible' === this.parameters.size),
            De('undefined' != typeof document, this.auth, 'operation-not-supported-in-this-environment');
          const Q = 'string' == typeof _ ? document.getElementById(_) : _;
          De(Q, this.auth, 'argument-error'),
            (this.container = Q),
            (this.parameters.callback = this.makeTokenCallback(this.parameters.callback)),
            (this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting ? new Of() : new Ah()),
            this.validateStartingState();
        }
        verify() {
          var _ = this;
          return (0, h.Z)(function* () {
            _.assertNotDestroyed();
            const v = yield _.render(),
              k = _.getAssertedRecaptcha();
            return (
              k.getResponse(v) ||
              new Promise((ze) => {
                const Lt = (pn) => {
                  !pn || (_.tokenChangeListeners.delete(Lt), ze(pn));
                };
                _.tokenChangeListeners.add(Lt), _.isInvisible && k.execute(v);
              })
            );
          })();
        }
        render() {
          try {
            this.assertNotDestroyed();
          } catch (_) {
            return Promise.reject(_);
          }
          return (
            this.renderPromise ||
              (this.renderPromise = this.makeRenderPromise().catch((_) => {
                throw ((this.renderPromise = null), _);
              })),
            this.renderPromise
          );
        }
        _reset() {
          this.assertNotDestroyed(), null !== this.widgetId && this.getAssertedRecaptcha().reset(this.widgetId);
        }
        clear() {
          this.assertNotDestroyed(),
            (this.destroyed = !0),
            this._recaptchaLoader.clearedOneInstance(),
            this.isInvisible ||
              this.container.childNodes.forEach((_) => {
                this.container.removeChild(_);
              });
        }
        validateStartingState() {
          De(!this.parameters.sitekey, this.auth, 'argument-error'),
            De(this.isInvisible || !this.container.hasChildNodes(), this.auth, 'argument-error'),
            De('undefined' != typeof document, this.auth, 'operation-not-supported-in-this-environment');
        }
        makeTokenCallback(_) {
          return (v) => {
            if ((this.tokenChangeListeners.forEach((k) => k(v)), 'function' == typeof _)) _(v);
            else if ('string' == typeof _) {
              const k = Ar()[_];
              'function' == typeof k && k(v);
            }
          };
        }
        assertNotDestroyed() {
          De(!this.destroyed, this.auth, 'internal-error');
        }
        makeRenderPromise() {
          var _ = this;
          return (0, h.Z)(function* () {
            if ((yield _.init(), !_.widgetId)) {
              let v = _.container;
              if (!_.isInvisible) {
                const k = document.createElement('div');
                v.appendChild(k), (v = k);
              }
              _.widgetId = _.getAssertedRecaptcha().render(v, _.parameters);
            }
            return _.widgetId;
          })();
        }
        init() {
          var _ = this;
          return (0, h.Z)(function* () {
            De(on() && !L(), _.auth, 'internal-error'),
              yield (function Vs() {
                let D = null;
                return new Promise((_) => {
                  'complete' !== document.readyState ? ((D = () => _()), window.addEventListener('load', D)) : _();
                }).catch((_) => {
                  throw (D && window.removeEventListener('load', D), _);
                });
              })(),
              (_.recaptcha = yield _._recaptchaLoader.load(_.auth, _.auth.languageCode || void 0));
            const v = yield (function nc(D) {
              return ic.apply(this, arguments);
            })(_.auth);
            De(v, _.auth, 'internal-error'), (_.parameters.sitekey = v);
          })();
        }
        getAssertedRecaptcha() {
          return De(this.recaptcha, this.auth, 'internal-error'), this.recaptcha;
        }
      }
      class Lc {
        constructor(_, v) {
          (this.verificationId = _), (this.onConfirmation = v);
        }
        confirm(_) {
          const v = gs._fromVerification(this.verificationId, _);
          return this.onConfirmation(v);
        }
      }
      function rc() {
        return (rc = (0, h.Z)(function* (D, _, v) {
          const k = xn(D),
            Q = yield sa(k, _, (0, d.m9)(v));
          return new Lc(Q, (ze) => Sn(k, ze));
        })).apply(this, arguments);
      }
      function co() {
        return (co = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D);
          yield be(!1, k, 'phone');
          const Q = yield sa(k.auth, _, (0, d.m9)(v));
          return new Lc(Q, (ze) => Vi(k, ze));
        })).apply(this, arguments);
      }
      function Xa() {
        return (Xa = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D),
            Q = yield sa(k.auth, _, (0, d.m9)(v));
          return new Lc(Q, (ze) => yi(k, ze));
        })).apply(this, arguments);
      }
      function sa(D, _, v) {
        return Ja.apply(this, arguments);
      }
      function Ja() {
        return (Ja = (0, h.Z)(function* (D, _, v) {
          var k;
          const Q = yield v.verify();
          try {
            let ze;
            if (
              (De('string' == typeof Q, D, 'argument-error'),
              De(v.type === Vd, D, 'argument-error'),
              (ze = 'string' == typeof _ ? { phoneNumber: _ } : _),
              'session' in ze)
            ) {
              const Lt = ze.session;
              if ('phoneNumber' in ze)
                return (
                  De('enroll' === Lt.type, D, 'internal-error'),
                  (yield No(D, {
                    idToken: Lt.credential,
                    phoneEnrollmentInfo: { phoneNumber: ze.phoneNumber, recaptchaToken: Q },
                  })).phoneSessionInfo.sessionInfo
                );
              {
                De('signin' === Lt.type, D, 'internal-error');
                const pn = (null === (k = ze.multiFactorHint) || void 0 === k ? void 0 : k.uid) || ze.multiFactorUid;
                return (
                  De(pn, D, 'missing-multi-factor-info'),
                  (yield tc(D, {
                    mfaPendingCredential: Lt.credential,
                    mfaEnrollmentId: pn,
                    phoneSignInInfo: { recaptchaToken: Q },
                  })).phoneResponseInfo.sessionInfo
                );
              }
            }
            {
              const { sessionInfo: Lt } = yield Wo(D, { phoneNumber: ze.phoneNumber, recaptchaToken: Q });
              return Lt;
            }
          } finally {
            v._reset();
          }
        })).apply(this, arguments);
      }
      function sc() {
        return (sc = (0, h.Z)(function* (D, _) {
          yield Ni((0, d.m9)(D), _);
        })).apply(this, arguments);
      }
      let Pl = (() => {
        class D {
          constructor(v) {
            (this.providerId = D.PROVIDER_ID), (this.auth = xn(v));
          }
          verifyPhoneNumber(v, k) {
            return sa(this.auth, v, (0, d.m9)(k));
          }
          static credential(v, k) {
            return gs._fromVerification(v, k);
          }
          static credentialFromResult(v) {
            return D.credentialFromTaggedObject(v);
          }
          static credentialFromError(v) {
            return D.credentialFromTaggedObject(v.customData || {});
          }
          static credentialFromTaggedObject({ _tokenResponse: v }) {
            if (!v) return null;
            const { phoneNumber: k, temporaryProof: Q } = v;
            return k && Q ? gs._fromTokenResponse(k, Q) : null;
          }
        }
        return (D.PROVIDER_ID = 'phone'), (D.PHONE_SIGN_IN_METHOD = 'phone'), D;
      })();
      function Na(D, _) {
        return _ ? Ve(_) : (De(D._popupRedirectResolver, D, 'argument-error'), D._popupRedirectResolver);
      }
      class Bc extends Nn {
        constructor(_) {
          super('custom', 'custom'), (this.params = _);
        }
        _getIdTokenResponse(_) {
          return Li(_, this._buildIdpRequest());
        }
        _linkToIdToken(_, v) {
          return Li(_, this._buildIdpRequest(v));
        }
        _getReauthenticationResolver(_) {
          return Li(_, this._buildIdpRequest());
        }
        _buildIdpRequest(_) {
          const v = {
            requestUri: this.params.requestUri,
            sessionId: this.params.sessionId,
            postBody: this.params.postBody,
            tenantId: this.params.tenantId,
            pendingToken: this.params.pendingToken,
            returnSecureToken: !0,
            returnIdpCredential: !0,
          };
          return _ && (v.idToken = _), v;
        }
      }
      function Vc(D) {
        return tn(D.auth, new Bc(D), D.bypassAuthState);
      }
      function mo(D) {
        const { auth: _, user: v } = D;
        return De(v, _, 'internal-error'), ke(v, new Bc(D), D.bypassAuthState);
      }
      function Fl(D) {
        return oa.apply(this, arguments);
      }
      function oa() {
        return (oa = (0, h.Z)(function* (D) {
          const { auth: _, user: v } = D;
          return De(v, _, 'internal-error'), Ni(v, new Bc(D), D.bypassAuthState);
        })).apply(this, arguments);
      }
      class bu {
        constructor(_, v, k, Q, ze = !1) {
          (this.auth = _),
            (this.resolver = k),
            (this.user = Q),
            (this.bypassAuthState = ze),
            (this.pendingPromise = null),
            (this.eventManager = null),
            (this.filter = Array.isArray(v) ? v : [v]);
        }
        execute() {
          var _ = this;
          return new Promise(
            (function () {
              var v = (0, h.Z)(function* (k, Q) {
                _.pendingPromise = { resolve: k, reject: Q };
                try {
                  (_.eventManager = yield _.resolver._initialize(_.auth)),
                    yield _.onExecution(),
                    _.eventManager.registerConsumer(_);
                } catch (ze) {
                  _.reject(ze);
                }
              });
              return function (k, Q) {
                return v.apply(this, arguments);
              };
            })()
          );
        }
        onAuthEvent(_) {
          var v = this;
          return (0, h.Z)(function* () {
            const { urlResponse: k, sessionId: Q, postBody: ze, tenantId: Lt, error: pn, type: Fn } = _;
            if (pn) return void v.reject(pn);
            const Kn = {
              auth: v.auth,
              requestUri: k,
              sessionId: Q,
              tenantId: Lt || void 0,
              postBody: ze || void 0,
              user: v.user,
              bypassAuthState: v.bypassAuthState,
            };
            try {
              v.resolve(yield v.getIdpTask(Fn)(Kn));
            } catch (wi) {
              v.reject(wi);
            }
          })();
        }
        onError(_) {
          this.reject(_);
        }
        getIdpTask(_) {
          switch (_) {
            case 'signInViaPopup':
            case 'signInViaRedirect':
              return Vc;
            case 'linkViaPopup':
            case 'linkViaRedirect':
              return Fl;
            case 'reauthViaPopup':
            case 'reauthViaRedirect':
              return mo;
            default:
              We(this.auth, 'internal-error');
          }
        }
        resolve(_) {
          it(this.pendingPromise, 'Pending promise was never set'),
            this.pendingPromise.resolve(_),
            this.unregisterAndCleanUp();
        }
        reject(_) {
          it(this.pendingPromise, 'Pending promise was never set'),
            this.pendingPromise.reject(_),
            this.unregisterAndCleanUp();
        }
        unregisterAndCleanUp() {
          this.eventManager && this.eventManager.unregisterConsumer(this), (this.pendingPromise = null), this.cleanUp();
        }
      }
      const ed = new Et(2e3, 1e4);
      function Uc() {
        return (Uc = (0, h.Z)(function* (D, _, v) {
          const k = xn(D);
          Ke(D, _, ys);
          const Q = Na(k, v);
          return new dl(k, 'signInViaPopup', _, Q).executeNotNull();
        })).apply(this, arguments);
      }
      function xa() {
        return (xa = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D);
          Ke(k.auth, _, ys);
          const Q = Na(k.auth, v);
          return new dl(k.auth, 'reauthViaPopup', _, Q, k).executeNotNull();
        })).apply(this, arguments);
      }
      function oc() {
        return (oc = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D);
          Ke(k.auth, _, ys);
          const Q = Na(k.auth, v);
          return new dl(k.auth, 'linkViaPopup', _, Q, k).executeNotNull();
        })).apply(this, arguments);
      }
      let dl = (() => {
        class D extends bu {
          constructor(v, k, Q, ze, Lt) {
            super(v, k, ze, Lt),
              (this.provider = Q),
              (this.authWindow = null),
              (this.pollId = null),
              D.currentPopupAction && D.currentPopupAction.cancel(),
              (D.currentPopupAction = this);
          }
          executeNotNull() {
            var v = this;
            return (0, h.Z)(function* () {
              const k = yield v.execute();
              return De(k, v.auth, 'internal-error'), k;
            })();
          }
          onExecution() {
            var v = this;
            return (0, h.Z)(function* () {
              it(1 === v.filter.length, 'Popup operations only handle one event');
              const k = Pa();
              (v.authWindow = yield v.resolver._openPopup(v.auth, v.provider, v.filter[0], k)),
                (v.authWindow.associatedEvent = k),
                v.resolver._originValidation(v.auth).catch((Q) => {
                  v.reject(Q);
                }),
                v.resolver._isIframeWebStorageSupported(v.auth, (Q) => {
                  Q || v.reject($e(v.auth, 'web-storage-unsupported'));
                }),
                v.pollUserCancellation();
            })();
          }
          get eventId() {
            var v;
            return (null === (v = this.authWindow) || void 0 === v ? void 0 : v.associatedEvent) || null;
          }
          cancel() {
            this.reject($e(this.auth, 'cancelled-popup-request'));
          }
          cleanUp() {
            this.authWindow && this.authWindow.close(),
              this.pollId && window.clearTimeout(this.pollId),
              (this.authWindow = null),
              (this.pollId = null),
              (D.currentPopupAction = null);
          }
          pollUserCancellation() {
            const v = () => {
              var k, Q;
              this.pollId = (
                null === (Q = null === (k = this.authWindow) || void 0 === k ? void 0 : k.window) || void 0 === Q
                  ? void 0
                  : Q.closed
              )
                ? window.setTimeout(() => {
                    (this.pollId = null), this.reject($e(this.auth, 'popup-closed-by-user'));
                  }, 2e3)
                : window.setTimeout(v, ed.get());
            };
            v();
          }
        }
        return (D.currentPopupAction = null), D;
      })();
      const jc = new Map();
      class jo extends bu {
        constructor(_, v, k = !1) {
          super(_, ['signInViaRedirect', 'linkViaRedirect', 'reauthViaRedirect', 'unknown'], v, void 0, k),
            (this.eventId = null);
        }
        execute() {
          var _ = () => super.execute,
            v = this;
          return (0, h.Z)(function* () {
            let k = jc.get(v.auth._key());
            if (!k) {
              try {
                const ze = (yield (function Ll(D, _) {
                  return ac.apply(this, arguments);
                })(v.resolver, v.auth))
                  ? yield _().call(v)
                  : null;
                k = () => Promise.resolve(ze);
              } catch (Q) {
                k = () => Promise.reject(Q);
              }
              jc.set(v.auth._key(), k);
            }
            return v.bypassAuthState || jc.set(v.auth._key(), () => Promise.resolve(null)), k();
          })();
        }
        onAuthEvent(_) {
          var v = () => super.onAuthEvent,
            k = this;
          return (0, h.Z)(function* () {
            if ('signInViaRedirect' === _.type) return v().call(k, _);
            if ('unknown' !== _.type) {
              if (_.eventId) {
                const Q = yield k.auth._redirectUserForId(_.eventId);
                if (Q) return (k.user = Q), v().call(k, _);
                k.resolve(null);
              }
            } else k.resolve(null);
          })();
        }
        onExecution() {
          return (0, h.Z)(function* () {})();
        }
        cleanUp() {}
      }
      function ac() {
        return (ac = (0, h.Z)(function* (D, _) {
          const v = j(_),
            k = cc(D);
          if (!(yield k._isAvailable())) return !1;
          const Q = 'true' === (yield k._get(v));
          return yield k._remove(v), Q;
        })).apply(this, arguments);
      }
      function lc(D, _) {
        return aa.apply(this, arguments);
      }
      function aa() {
        return (aa = (0, h.Z)(function* (D, _) {
          return cc(D)._set(j(_), 'true');
        })).apply(this, arguments);
      }
      function cc(D) {
        return Ve(D._redirectPersistence);
      }
      function j(D) {
        return _n('pendingRedirect', D.config.apiKey, D.name);
      }
      function ct() {
        return (ct = (0, h.Z)(function* (D, _, v) {
          const k = xn(D);
          Ke(D, _, ys);
          const Q = Na(k, v);
          return yield lc(Q, k), Q._openRedirect(k, _, 'signInViaRedirect');
        })).apply(this, arguments);
      }
      function Cn() {
        return (Cn = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D);
          Ke(k.auth, _, ys);
          const Q = Na(k.auth, v);
          yield lc(Q, k.auth);
          const ze = yield Nl(k);
          return Q._openRedirect(k.auth, _, 'reauthViaRedirect', ze);
        })).apply(this, arguments);
      }
      function $i() {
        return ($i = (0, h.Z)(function* (D, _, v) {
          const k = (0, d.m9)(D);
          Ke(k.auth, _, ys);
          const Q = Na(k.auth, v);
          yield be(!1, k, _.providerId), yield lc(Q, k.auth);
          const ze = yield Nl(k);
          return Q._openRedirect(k.auth, _, 'linkViaRedirect', ze);
        })).apply(this, arguments);
      }
      function Us() {
        return (Us = (0, h.Z)(function* (D, _) {
          return yield xn(D)._initializationPromise, ur(D, _, !1);
        })).apply(this, arguments);
      }
      function ur(D, _) {
        return Ir.apply(this, arguments);
      }
      function Ir() {
        return (Ir = (0, h.Z)(function* (D, _, v = !1) {
          const k = xn(D),
            Q = Na(k, _),
            Lt = yield new jo(k, Q, v).execute();
          return (
            Lt &&
              !v &&
              (delete Lt.user._redirectEventId,
              yield k._persistUserIfCurrent(Lt.user),
              yield k._setRedirectUser(null, _)),
            Lt
          );
        })).apply(this, arguments);
      }
      function Nl(D) {
        return Do.apply(this, arguments);
      }
      function Do() {
        return (Do = (0, h.Z)(function* (D) {
          const _ = Pa(`${D.uid}:::`);
          return (D._redirectEventId = _), yield D.auth._setRedirectUser(D), yield D.auth._persistUserIfCurrent(D), _;
        })).apply(this, arguments);
      }
      class tl {
        constructor(_) {
          (this.auth = _),
            (this.cachedEventUids = new Set()),
            (this.consumers = new Set()),
            (this.queuedRedirectEvent = null),
            (this.hasHandledPotentialRedirect = !1),
            (this.lastProcessedEventTime = Date.now());
        }
        registerConsumer(_) {
          this.consumers.add(_),
            this.queuedRedirectEvent &&
              this.isEventForConsumer(this.queuedRedirectEvent, _) &&
              (this.sendToConsumer(this.queuedRedirectEvent, _),
              this.saveEventToCache(this.queuedRedirectEvent),
              (this.queuedRedirectEvent = null));
        }
        unregisterConsumer(_) {
          this.consumers.delete(_);
        }
        onEvent(_) {
          if (this.hasEventBeenHandled(_)) return !1;
          let v = !1;
          return (
            this.consumers.forEach((k) => {
              this.isEventForConsumer(_, k) && ((v = !0), this.sendToConsumer(_, k), this.saveEventToCache(_));
            }),
            this.hasHandledPotentialRedirect ||
              !(function Pf(D) {
                switch (D.type) {
                  case 'signInViaRedirect':
                  case 'linkViaRedirect':
                  case 'reauthViaRedirect':
                    return !0;
                  case 'unknown':
                    return Ho(D);
                  default:
                    return !1;
                }
              })(_) ||
              ((this.hasHandledPotentialRedirect = !0), v || ((this.queuedRedirectEvent = _), (v = !0))),
            v
          );
        }
        sendToConsumer(_, v) {
          var k;
          if (_.error && !Ho(_)) {
            const Q = (null === (k = _.error.code) || void 0 === k ? void 0 : k.split('auth/')[1]) || 'internal-error';
            v.onError($e(this.auth, Q));
          } else v.onAuthEvent(_);
        }
        isEventForConsumer(_, v) {
          const k = null === v.eventId || (!!_.eventId && _.eventId === v.eventId);
          return v.filter.includes(_.type) && k;
        }
        hasEventBeenHandled(_) {
          return (
            Date.now() - this.lastProcessedEventTime >= 6e5 && this.cachedEventUids.clear(),
            this.cachedEventUids.has(Da(_))
          );
        }
        saveEventToCache(_) {
          this.cachedEventUids.add(Da(_)), (this.lastProcessedEventTime = Date.now());
        }
      }
      function Da(D) {
        return [D.type, D.eventId, D.sessionId, D.tenantId].filter((_) => _).join('-');
      }
      function Ho({ type: D, error: _ }) {
        return 'unknown' === D && 'auth/no-auth-event' === (null == _ ? void 0 : _.code);
      }
      function Th(D) {
        return Ih.apply(this, arguments);
      }
      function Ih() {
        return (Ih = (0, h.Z)(function* (D, _ = {}) {
          return Nt(D, 'GET', '/v1/projects', _);
        })).apply(this, arguments);
      }
      const Bl = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
        td = /^https?/;
      function uo() {
        return (uo = (0, h.Z)(function* (D) {
          if (D.config.emulator) return;
          const { authorizedDomains: _ } = yield Th(D);
          for (const v of _)
            try {
              if (uc(v)) return;
            } catch (k) {}
          We(D, 'unauthorized-domain');
        })).apply(this, arguments);
      }
      function uc(D) {
        const _ = St(),
          { protocol: v, hostname: k } = new URL(_);
        if (D.startsWith('chrome-extension://')) {
          const Lt = new URL(D);
          return '' === Lt.hostname && '' === k
            ? 'chrome-extension:' === v && D.replace('chrome-extension://', '') === _.replace('chrome-extension://', '')
            : 'chrome-extension:' === v && Lt.hostname === k;
        }
        if (!td.test(v)) return !1;
        if (Bl.test(D)) return k === D;
        const Q = D.replace(/\./g, '\\.');
        return new RegExp('^(.+\\.' + Q + '|' + Q + ')$', 'i').test(k);
      }
      const dc = new Et(3e4, 6e4);
      function Rh() {
        const D = Ar().___jsl;
        if (null == D ? void 0 : D.H)
          for (const _ of Object.keys(D.H))
            if (((D.H[_].r = D.H[_].r || []), (D.H[_].L = D.H[_].L || []), (D.H[_].r = [...D.H[_].L]), D.CP))
              for (let v = 0; v < D.CP.length; v++) D.CP[v] = null;
      }
      let In = null;
      function Js(D) {
        return (
          (In =
            In ||
            (function gm(D) {
              return new Promise((_, v) => {
                var k, Q, ze;
                function Lt() {
                  Rh(),
                    gapi.load('gapi.iframes', {
                      callback: () => {
                        _(gapi.iframes.getContext());
                      },
                      ontimeout: () => {
                        Rh(), v($e(D, 'network-request-failed'));
                      },
                      timeout: dc.get(),
                    });
                }
                if (
                  null === (Q = null === (k = Ar().gapi) || void 0 === k ? void 0 : k.iframes) || void 0 === Q
                    ? void 0
                    : Q.Iframe
                )
                  _(gapi.iframes.getContext());
                else {
                  if (!(null === (ze = Ar().gapi) || void 0 === ze ? void 0 : ze.load)) {
                    const pn = La('iframefcb');
                    return (
                      (Ar()[pn] = () => {
                        gapi.load ? Lt() : v($e(D, 'network-request-failed'));
                      }),
                      Vo(`https://apis.google.com/js/api.js?onload=${pn}`).catch((Fn) => v(Fn))
                    );
                  }
                  Lt();
                }
              }).catch((_) => {
                throw ((In = null), _);
              });
            })(D)),
          In
        );
      }
      const hc = new Et(5e3, 15e3),
        xi = {
          style: { position: 'absolute', top: '-100px', width: '1px', height: '1px' },
          'aria-hidden': 'true',
          tabindex: '-1',
        },
        _m = new Map([
          ['identitytoolkit.googleapis.com', 'p'],
          ['staging-identitytoolkit.sandbox.googleapis.com', 's'],
          ['test-identitytoolkit.sandbox.googleapis.com', 't'],
        ]);
      function Un(D) {
        const _ = D.config;
        De(_.authDomain, D, 'auth-domain-config-required');
        const v = _.emulator ? yt(_, 'emulator/auth/iframe') : `https://${D.config.authDomain}/__/auth/iframe`,
          k = { apiKey: _.apiKey, appName: D.name, v: N.SDK_VERSION },
          Q = _m.get(D.config.apiHost);
        Q && (k.eid = Q);
        const ze = D._getFrameworks();
        return ze.length && (k.fw = ze.join(',')), `${v}?${(0, d.xO)(k).slice(1)}`;
      }
      function En() {
        return (
          (En = (0, h.Z)(function* (D) {
            const _ = yield Js(D),
              v = Ar().gapi;
            return (
              De(v, D, 'internal-error'),
              _.open(
                {
                  where: document.body,
                  url: Un(D),
                  messageHandlersFilter: v.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
                  attributes: xi,
                  dontclear: !0,
                },
                (k) =>
                  new Promise(
                    (function () {
                      var Q = (0, h.Z)(function* (ze, Lt) {
                        yield k.restyle({ setHideOnLeave: !1 });
                        const pn = $e(D, 'network-request-failed'),
                          Fn = Ar().setTimeout(() => {
                            Lt(pn);
                          }, hc.get());
                        function Kn() {
                          Ar().clearTimeout(Fn), ze(k);
                        }
                        k.ping(Kn).then(Kn, () => {
                          Lt(pn);
                        });
                      });
                      return function (ze, Lt) {
                        return Q.apply(this, arguments);
                      };
                    })()
                  )
              )
            );
          })),
          En.apply(this, arguments)
        );
      }
      const ho = { location: 'yes', resizable: 'yes', statusbar: 'yes', toolbar: 'no' };
      class Lf {
        constructor(_) {
          (this.window = _), (this.associatedEvent = null);
        }
        close() {
          if (this.window)
            try {
              this.window.close();
            } catch (_) {}
        }
      }
      function js(D, _, v, k, Q, ze) {
        De(D.config.authDomain, D, 'auth-domain-config-required'), De(D.config.apiKey, D, 'invalid-api-key');
        const Lt = {
          apiKey: D.config.apiKey,
          appName: D.name,
          authType: v,
          redirectUrl: k,
          v: N.SDK_VERSION,
          eventId: Q,
        };
        if (_ instanceof ys) {
          _.setDefaultLanguage(D.languageCode),
            (Lt.providerId = _.providerId || ''),
            (0, d.xb)(_.getCustomParameters()) || (Lt.customParameters = JSON.stringify(_.getCustomParameters()));
          for (const [Fn, Kn] of Object.entries(ze || {})) Lt[Fn] = Kn;
        }
        if (_ instanceof cs) {
          const Fn = _.getScopes().filter((Kn) => '' !== Kn);
          Fn.length > 0 && (Lt.scopes = Fn.join(','));
        }
        D.tenantId && (Lt.tid = D.tenantId);
        const pn = Lt;
        for (const Fn of Object.keys(pn)) void 0 === pn[Fn] && delete pn[Fn];
        return `${(function Oh({ config: D }) {
          return D.emulator ? yt(D, 'emulator/auth/handler') : `https://${D.authDomain}/__/auth/handler`;
        })(D)}?${(0, d.xO)(pn).slice(1)}`;
      }
      const Hd = 'webStorageSupport';
      class eo extends class Uf {
        constructor(_) {
          this.factorId = _;
        }
        _process(_, v, k) {
          switch (v.type) {
            case 'enroll':
              return this._finalizeEnroll(_, v.credential, k);
            case 'signin':
              return this._finalizeSignIn(_, v.credential);
            default:
              return Ye('unexpected MultiFactorSessionType');
          }
        }
      } {
        constructor(_) {
          super('phone'), (this.credential = _);
        }
        static _fromCredential(_) {
          return new eo(_);
        }
        _finalizeEnroll(_, v, k) {
          return (function gr(D, _) {
            return Nt(D, 'POST', '/v2/accounts/mfaEnrollment:finalize', mt(D, _));
          })(_, { idToken: v, displayName: k, phoneVerificationInfo: this.credential._makeVerificationRequest() });
        }
        _finalizeSignIn(_, v) {
          return (function vu(D, _) {
            return Nt(D, 'POST', '/v2/accounts/mfaSignIn:finalize', mt(D, _));
          })(_, { mfaPendingCredential: v, phoneVerificationInfo: this.credential._makeVerificationRequest() });
        }
      }
      let Si = (() => {
        class D {
          constructor() {}
          static assertion(v) {
            return eo._fromCredential(v);
          }
        }
        return (D.FACTOR_ID = 'phone'), D;
      })();
      var Ph = '@firebase/auth';
      class Fh {
        constructor(_) {
          (this.auth = _), (this.internalListeners = new Map());
        }
        getUid() {
          var _;
          return (
            this.assertAuthConfigured(), (null === (_ = this.auth.currentUser) || void 0 === _ ? void 0 : _.uid) || null
          );
        }
        getToken(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return (
              v.assertAuthConfigured(),
              yield v.auth._initializationPromise,
              v.auth.currentUser ? { accessToken: yield v.auth.currentUser.getIdToken(_) } : null
            );
          })();
        }
        addAuthTokenListener(_) {
          if ((this.assertAuthConfigured(), this.internalListeners.has(_))) return;
          const v = this.auth.onIdTokenChanged((k) => {
            var Q;
            _((null === (Q = k) || void 0 === Q ? void 0 : Q.stsTokenManager.accessToken) || null);
          });
          this.internalListeners.set(_, v), this.updateProactiveRefresh();
        }
        removeAuthTokenListener(_) {
          this.assertAuthConfigured();
          const v = this.internalListeners.get(_);
          !v || (this.internalListeners.delete(_), v(), this.updateProactiveRefresh());
        }
        assertAuthConfigured() {
          De(this.auth._initializationPromise, 'dependent-sdk-initialized-before-auth');
        }
        updateProactiveRefresh() {
          this.internalListeners.size > 0 ? this.auth._startProactiveRefresh() : this.auth._stopProactiveRefresh();
        }
      }
      function Pr() {
        return window;
      }
      function Qr() {
        return (Qr = (0, h.Z)(function* (D, _, v) {
          var k;
          const { BuildInfo: Q } = Pr();
          it(_.sessionId, 'AuthEvent did not contain a session ID');
          const ze = yield Wc(_.sessionId),
            Lt = {};
          return (
            Jn()
              ? (Lt.ibi = Q.packageName)
              : dn()
              ? (Lt.apn = Q.packageName)
              : We(D, 'operation-not-supported-in-this-environment'),
            Q.displayName && (Lt.appDisplayName = Q.displayName),
            (Lt.sessionId = ze),
            js(D, v, _.type, void 0, null !== (k = _.eventId) && void 0 !== k ? k : void 0, Lt)
          );
        })).apply(this, arguments);
      }
      function la() {
        return (la = (0, h.Z)(function* (D) {
          const { BuildInfo: _ } = Pr(),
            v = {};
          Jn()
            ? (v.iosBundleId = _.packageName)
            : dn()
            ? (v.androidPackageName = _.packageName)
            : We(D, 'operation-not-supported-in-this-environment'),
            yield Th(D, v);
        })).apply(this, arguments);
      }
      function Gd() {
        return (Gd = (0, h.Z)(function* (D, _, v) {
          const { cordova: k } = Pr();
          let Q = () => {};
          try {
            yield new Promise((ze, Lt) => {
              let pn = null;
              function Fn() {
                var hi;
                ze();
                const Fi = null === (hi = k.plugins.browsertab) || void 0 === hi ? void 0 : hi.close;
                'function' == typeof Fi && Fi(), 'function' == typeof (null == v ? void 0 : v.close) && v.close();
              }
              function Kn() {
                pn ||
                  (pn = window.setTimeout(() => {
                    Lt($e(D, 'redirect-cancelled-by-user'));
                  }, 2e3));
              }
              function wi() {
                'visible' === (null == document ? void 0 : document.visibilityState) && Kn();
              }
              _.addPassiveListener(Fn),
                document.addEventListener('resume', Kn, !1),
                dn() && document.addEventListener('visibilitychange', wi, !1),
                (Q = () => {
                  _.removePassiveListener(Fn),
                    document.removeEventListener('resume', Kn, !1),
                    document.removeEventListener('visibilitychange', wi, !1),
                    pn && window.clearTimeout(pn);
                });
            });
          } finally {
            Q();
          }
        })).apply(this, arguments);
      }
      function Wc(D) {
        return nl.apply(this, arguments);
      }
      function nl() {
        return (nl = (0, h.Z)(function* (D) {
          const _ = xu(D),
            v = yield crypto.subtle.digest('SHA-256', _);
          return Array.from(new Uint8Array(v))
            .map((Q) => Q.toString(16).padStart(2, '0'))
            .join('');
        })).apply(this, arguments);
      }
      function xu(D) {
        if ((it(/[0-9a-zA-Z]+/.test(D), 'Can only convert alpha-numeric strings'), 'undefined' != typeof TextEncoder))
          return new TextEncoder().encode(D);
        const _ = new ArrayBuffer(D.length),
          v = new Uint8Array(_);
        for (let k = 0; k < D.length; k++) v[k] = D.charCodeAt(k);
        return v;
      }
      !(function vr(D) {
        (0, N._registerComponent)(
          new He.wA(
            'auth',
            (_, { options: v }) => {
              const k = _.getProvider('app').getImmediate(),
                { apiKey: Q, authDomain: ze } = k.options;
              return ((Lt) => {
                De(Q && !Q.includes(':'), 'invalid-api-key', { appName: Lt.name }),
                  De(!(null == ze ? void 0 : ze.includes(':')), 'argument-error', { appName: Lt.name });
                const pn = {
                    apiKey: Q,
                    authDomain: ze,
                    clientPlatform: D,
                    apiHost: 'identitytoolkit.googleapis.com',
                    tokenApiHost: 'securetoken.googleapis.com',
                    apiScheme: 'https',
                    sdkClientVersion: es(D),
                  },
                  Fn = new Cr(Lt, pn);
                return (
                  (function kt(D, _) {
                    const v = (null == _ ? void 0 : _.persistence) || [],
                      k = (Array.isArray(v) ? v : [v]).map(Ve);
                    (null == _ ? void 0 : _.errorMap) && D._updateErrorMap(_.errorMap),
                      D._initializeWithPersistence(k, null == _ ? void 0 : _.popupRedirectResolver);
                  })(Fn, v),
                  Fn
                );
              })(k);
            },
            'PUBLIC'
          )
            .setInstantiationMode('EXPLICIT')
            .setInstanceCreatedCallback((_, v, k) => {
              _.getProvider('auth-internal').initialize();
            })
        ),
          (0, N._registerComponent)(
            new He.wA(
              'auth-internal',
              (_) => {
                const v = xn(_.getProvider('auth').getImmediate());
                return new Fh(v);
              },
              'PRIVATE'
            ).setInstantiationMode('EXPLICIT')
          ),
          (0, N.registerVersion)(
            Ph,
            '0.19.7',
            (function $c(D) {
              switch (D) {
                case 'Node':
                  return 'node';
                case 'ReactNative':
                  return 'rn';
                case 'Worker':
                  return 'webworker';
                case 'Cordova':
                  return 'cordova';
                default:
                  return;
              }
            })(D)
          ),
          (0, N.registerVersion)(Ph, '0.19.7', 'esm2017');
      })('Browser');
      class ui extends tl {
        constructor() {
          super(...arguments),
            (this.passiveListeners = new Set()),
            (this.initPromise = new Promise((_) => {
              this.resolveInialized = _;
            }));
        }
        addPassiveListener(_) {
          this.passiveListeners.add(_);
        }
        removePassiveListener(_) {
          this.passiveListeners.delete(_);
        }
        resetRedirect() {
          (this.queuedRedirectEvent = null), (this.hasHandledPotentialRedirect = !1);
        }
        onEvent(_) {
          return this.resolveInialized(), this.passiveListeners.forEach((v) => v(_)), super.onEvent(_);
        }
        initialized() {
          var _ = this;
          return (0, h.Z)(function* () {
            yield _.initPromise;
          })();
        }
      }
      function Du(D) {
        return gc.apply(this, arguments);
      }
      function gc() {
        return (gc = (0, h.Z)(function* (D) {
          const _ = yield Ul()._get(jl(D));
          return _ && (yield Ul()._remove(jl(D))), _;
        })).apply(this, arguments);
      }
      function id() {
        const D = [],
          _ = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        for (let v = 0; v < 20; v++) {
          const k = Math.floor(Math.random() * _.length);
          D.push(_.charAt(k));
        }
        return D.join('');
      }
      function Ul() {
        return Ve(wa);
      }
      function jl(D) {
        return _n('authEvent', D.config.apiKey, D.name);
      }
      function zr(D) {
        if (!(null == D ? void 0 : D.includes('?'))) return {};
        const [_, ...v] = D.split('?');
        return (0, d.zd)(v.join('?'));
      }
      function os() {
        return {
          type: 'unknown',
          eventId: null,
          sessionId: null,
          urlResponse: null,
          postBody: null,
          tenantId: null,
          error: $e('no-auth-event'),
        };
      }
      function Hl() {
        var D;
        return (null === (D = null == self ? void 0 : self.location) || void 0 === D ? void 0 : D.protocol) || null;
      }
      function Ma(D = (0, d.z$)()) {
        return !(('file:' !== Hl() && 'ionic:' !== Hl()) || !D.toLowerCase().match(/iphone|ipad|ipod|android/));
      }
      function ad() {
        try {
          const D = self.localStorage,
            _ = Pa();
          if (D)
            return (
              D.setItem(_, '1'),
              D.removeItem(_),
              !(function od(D = (0, d.z$)()) {
                return (
                  (function _r() {
                    return (0, d.w1)() && 11 === (null == document ? void 0 : document.documentMode);
                  })() ||
                  (function sd(D = (0, d.z$)()) {
                    return /Edge\/\d+/.test(D);
                  })(D)
                );
              })() || (0, d.hl)()
            );
        } catch (D) {
          return Hs() && (0, d.hl)();
        }
        return !1;
      }
      function Hs() {
        return 'undefined' != typeof global && 'WorkerGlobalScope' in global && 'importScripts' in global;
      }
      function ml() {
        return (
          ((function wm() {
            return 'http:' === Hl() || 'https:' === Hl();
          })() ||
            (0, d.ru)() ||
            Ma()) &&
          !(function il() {
            return (0, d.b$)() || (0, d.UG)();
          })() &&
          ad() &&
          !Hs()
        );
      }
      function $d() {
        return Ma() && 'undefined' != typeof document;
      }
      function Yd() {
        return (Yd = (0, h.Z)(function* () {
          return (
            !!$d() &&
            new Promise((D) => {
              const _ = setTimeout(() => {
                D(!1);
              }, 1e3);
              document.addEventListener('deviceready', () => {
                clearTimeout(_), D(!0);
              });
            })
          );
        })).apply(this, arguments);
      }
      const xs = { LOCAL: 'local', NONE: 'none', SESSION: 'session' },
        gl = De,
        yc = 'persistence';
      function vc(D) {
        return Sa.apply(this, arguments);
      }
      function Sa() {
        return (Sa = (0, h.Z)(function* (D) {
          yield D._initializationPromise;
          const _ = Su(),
            v = _n(yc, D.config.apiKey, D.name);
          _ && _.setItem(v, D._getPersistence());
        })).apply(this, arguments);
      }
      function Su() {
        var D;
        try {
          return (
            (null ===
              (D = (function Bh() {
                return 'undefined' != typeof window ? window : null;
              })()) || void 0 === D
              ? void 0
              : D.sessionStorage) || null
          );
        } catch (_) {
          return null;
        }
      }
      const Gl = De;
      class Mo {
        constructor() {
          (this.browserResolver = Ve(
            class Ji {
              constructor() {
                (this.eventManagers = {}),
                  (this.iframes = {}),
                  (this.originValidationPromises = {}),
                  (this._redirectPersistence = ia),
                  (this._completeRedirectFn = ur);
              }
              _openPopup(_, v, k, Q) {
                var ze = this;
                return (0, h.Z)(function* () {
                  var Lt;
                  it(
                    null === (Lt = ze.eventManagers[_._key()]) || void 0 === Lt ? void 0 : Lt.manager,
                    '_initialize() not called before _openPopup()'
                  );
                  const pn = js(_, v, k, St(), Q);
                  return (function Nf(D, _, v, k = 500, Q = 600) {
                    const ze = Math.max((window.screen.availHeight - Q) / 2, 0).toString(),
                      Lt = Math.max((window.screen.availWidth - k) / 2, 0).toString();
                    let pn = '';
                    const Fn = Object.assign(Object.assign({}, ho), {
                        width: k.toString(),
                        height: Q.toString(),
                        top: ze,
                        left: Lt,
                      }),
                      Kn = (0, d.z$)().toLowerCase();
                    v && (pn = nt(Kn) ? '_blank' : v),
                      jt(Kn) && ((_ = _ || 'http://localhost'), (Fn.scrollbars = 'yes'));
                    const wi = Object.entries(Fn).reduce((Fi, [go, _l]) => `${Fi}${go}=${_l},`, '');
                    if (
                      (function ar(D = (0, d.z$)()) {
                        var _;
                        return Jn(D) && !!(null === (_ = window.navigator) || void 0 === _ ? void 0 : _.standalone);
                      })(Kn) &&
                      '_self' !== pn
                    )
                      return (
                        (function Bf(D, _) {
                          const v = document.createElement('a');
                          (v.href = D), (v.target = _);
                          const k = document.createEvent('MouseEvent');
                          k.initMouseEvent('click', !0, !0, window, 1, 0, 0, 0, 0, !1, !1, !1, !1, 1, null),
                            v.dispatchEvent(k);
                        })(_ || '', pn),
                        new Lf(null)
                      );
                    const hi = window.open(_ || '', pn, wi);
                    De(hi, D, 'popup-blocked');
                    try {
                      hi.focus();
                    } catch (Fi) {}
                    return new Lf(hi);
                  })(_, pn, Pa());
                })();
              }
              _openRedirect(_, v, k, Q) {
                var ze = this;
                return (0, h.Z)(function* () {
                  return (
                    yield ze._originValidation(_),
                    (function Bo(D) {
                      Ar().location.href = D;
                    })(js(_, v, k, St(), Q)),
                    new Promise(() => {})
                  );
                })();
              }
              _initialize(_) {
                const v = _._key();
                if (this.eventManagers[v]) {
                  const { manager: Q, promise: ze } = this.eventManagers[v];
                  return Q ? Promise.resolve(Q) : (it(ze, 'If manager is not set, promise should be'), ze);
                }
                const k = this.initAndGetManager(_);
                return (
                  (this.eventManagers[v] = { promise: k }),
                  k.catch(() => {
                    delete this.eventManagers[v];
                  }),
                  k
                );
              }
              initAndGetManager(_) {
                var v = this;
                return (0, h.Z)(function* () {
                  const k = yield (function rn(D) {
                      return En.apply(this, arguments);
                    })(_),
                    Q = new tl(_);
                  return (
                    k.register(
                      'authEvent',
                      (ze) => (
                        De(null == ze ? void 0 : ze.authEvent, _, 'invalid-auth-event'),
                        { status: Q.onEvent(ze.authEvent) ? 'ACK' : 'ERROR' }
                      ),
                      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                    ),
                    (v.eventManagers[_._key()] = { manager: Q }),
                    (v.iframes[_._key()] = k),
                    Q
                  );
                })();
              }
              _isIframeWebStorageSupported(_, v) {
                this.iframes[_._key()].send(
                  Hd,
                  { type: Hd },
                  (Q) => {
                    var ze;
                    const Lt = null === (ze = null == Q ? void 0 : Q[0]) || void 0 === ze ? void 0 : ze[Hd];
                    void 0 !== Lt && v(!!Lt), We(_, 'internal-error');
                  },
                  gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
                );
              }
              _originValidation(_) {
                const v = _._key();
                return (
                  this.originValidationPromises[v] ||
                    (this.originValidationPromises[v] = (function nd(D) {
                      return uo.apply(this, arguments);
                    })(_)),
                  this.originValidationPromises[v]
                );
              }
              get _shouldInitProactively() {
                return Rr() || wt() || Jn();
              }
            }
          )),
            (this.cordovaResolver = Ve(
              class rd {
                constructor() {
                  (this._redirectPersistence = ia),
                    (this._shouldInitProactively = !0),
                    (this.eventManagers = new Map()),
                    (this.originValidationPromises = {}),
                    (this._completeRedirectFn = ur);
                }
                _initialize(_) {
                  var v = this;
                  return (0, h.Z)(function* () {
                    const k = _._key();
                    let Q = v.eventManagers.get(k);
                    return Q || ((Q = new ui(_)), v.eventManagers.set(k, Q), v.attachCallbackListeners(_, Q)), Q;
                  })();
                }
                _openPopup(_) {
                  We(_, 'operation-not-supported-in-this-environment');
                }
                _openRedirect(_, v, k, Q) {
                  var ze = this;
                  return (0, h.Z)(function* () {
                    !(function bm(D) {
                      var _, v, k, Q, ze, Lt, pn, Fn, Kn, wi;
                      const hi = Pr();
                      De(
                        'function' ==
                          typeof (null === (_ = null == hi ? void 0 : hi.universalLinks) || void 0 === _
                            ? void 0
                            : _.subscribe),
                        D,
                        'invalid-cordova-configuration',
                        { missingPlugin: 'cordova-universal-links-plugin-fix' }
                      ),
                        De(
                          void 0 !==
                            (null === (v = null == hi ? void 0 : hi.BuildInfo) || void 0 === v
                              ? void 0
                              : v.packageName),
                          D,
                          'invalid-cordova-configuration',
                          { missingPlugin: 'cordova-plugin-buildInfo' }
                        ),
                        De(
                          'function' ==
                            typeof (null ===
                              (ze =
                                null ===
                                  (Q =
                                    null === (k = null == hi ? void 0 : hi.cordova) || void 0 === k
                                      ? void 0
                                      : k.plugins) || void 0 === Q
                                  ? void 0
                                  : Q.browsertab) || void 0 === ze
                              ? void 0
                              : ze.openUrl),
                          D,
                          'invalid-cordova-configuration',
                          { missingPlugin: 'cordova-plugin-browsertab' }
                        ),
                        De(
                          'function' ==
                            typeof (null ===
                              (Fn =
                                null ===
                                  (pn =
                                    null === (Lt = null == hi ? void 0 : hi.cordova) || void 0 === Lt
                                      ? void 0
                                      : Lt.plugins) || void 0 === pn
                                  ? void 0
                                  : pn.browsertab) || void 0 === Fn
                              ? void 0
                              : Fn.isAvailable),
                          D,
                          'invalid-cordova-configuration',
                          { missingPlugin: 'cordova-plugin-browsertab' }
                        ),
                        De(
                          'function' ==
                            typeof (null ===
                              (wi =
                                null === (Kn = null == hi ? void 0 : hi.cordova) || void 0 === Kn
                                  ? void 0
                                  : Kn.InAppBrowser) || void 0 === wi
                              ? void 0
                              : wi.open),
                          D,
                          'invalid-cordova-configuration',
                          { missingPlugin: 'cordova-plugin-inappbrowser' }
                        );
                    })(_);
                    const Lt = yield ze._initialize(_);
                    yield Lt.initialized(),
                      Lt.resetRedirect(),
                      (function Cu() {
                        jc.clear();
                      })(),
                      yield ze._originValidation(_);
                    const pn = (function mc(D, _, v = null) {
                      return {
                        type: _,
                        eventId: v,
                        urlResponse: null,
                        sessionId: id(),
                        postBody: null,
                        tenantId: D.tenantId,
                        error: $e(D, 'no-auth-event'),
                      };
                    })(_, k, Q);
                    yield (function fl(D, _) {
                      return Ul()._set(jl(D), _);
                    })(_, pn);
                    const Fn = yield (function hl(D, _, v) {
                        return Qr.apply(this, arguments);
                      })(_, pn, v),
                      Kn = yield (function Es(D) {
                        const { cordova: _ } = Pr();
                        return new Promise((v) => {
                          _.plugins.browsertab.isAvailable((k) => {
                            let Q = null;
                            k
                              ? _.plugins.browsertab.openUrl(D)
                              : (Q = _.InAppBrowser.open(
                                  D,
                                  (function Ci(D = (0, d.z$)()) {
                                    return (
                                      /(iPad|iPhone|iPod).*OS 7_\d/i.test(D) || /(iPad|iPhone|iPod).*OS 8_\d/i.test(D)
                                    );
                                  })()
                                    ? '_blank'
                                    : '_system',
                                  'location=yes'
                                )),
                              v(Q);
                          });
                        });
                      })(Fn);
                    return (function Eu(D, _, v) {
                      return Gd.apply(this, arguments);
                    })(_, Lt, Kn);
                  })();
                }
                _isIframeWebStorageSupported(_, v) {
                  throw new Error('Method not implemented.');
                }
                _originValidation(_) {
                  const v = _._key();
                  return (
                    this.originValidationPromises[v] ||
                      (this.originValidationPromises[v] = (function jf(D) {
                        return la.apply(this, arguments);
                      })(_)),
                    this.originValidationPromises[v]
                  );
                }
                attachCallbackListeners(_, v) {
                  const { universalLinks: k, handleOpenURL: Q, BuildInfo: ze } = Pr(),
                    Lt = setTimeout(
                      (0, h.Z)(function* () {
                        yield Du(_), v.onEvent(os());
                      }),
                      500
                    ),
                    pn = (function () {
                      var wi = (0, h.Z)(function* (hi) {
                        clearTimeout(Lt);
                        const Fi = yield Du(_);
                        let go = null;
                        Fi &&
                          (null == hi ? void 0 : hi.url) &&
                          (go = (function Hf(D, _) {
                            var v, k;
                            const Q = (function zd(D) {
                              const _ = zr(D),
                                v = _.link ? decodeURIComponent(_.link) : void 0,
                                k = zr(v).link,
                                Q = _.deep_link_id ? decodeURIComponent(_.deep_link_id) : void 0;
                              return zr(Q).link || Q || k || v || D;
                            })(_);
                            if (Q.includes('/__/auth/callback')) {
                              const ze = zr(Q),
                                Lt = ze.firebaseError
                                  ? (function _c(D) {
                                      try {
                                        return JSON.parse(D);
                                      } catch (_) {
                                        return null;
                                      }
                                    })(decodeURIComponent(ze.firebaseError))
                                  : null,
                                pn =
                                  null ===
                                    (k =
                                      null === (v = null == Lt ? void 0 : Lt.code) || void 0 === v
                                        ? void 0
                                        : v.split('auth/')) || void 0 === k
                                    ? void 0
                                    : k[1],
                                Fn = pn ? $e(pn) : null;
                              return Fn
                                ? {
                                    type: D.type,
                                    eventId: D.eventId,
                                    tenantId: D.tenantId,
                                    error: Fn,
                                    urlResponse: null,
                                    sessionId: null,
                                    postBody: null,
                                  }
                                : {
                                    type: D.type,
                                    eventId: D.eventId,
                                    tenantId: D.tenantId,
                                    sessionId: D.sessionId,
                                    urlResponse: Q,
                                    postBody: null,
                                  };
                            }
                            return null;
                          })(Fi, hi.url)),
                          v.onEvent(go || os());
                      });
                      return function (Fi) {
                        return wi.apply(this, arguments);
                      };
                    })();
                  void 0 !== k && 'function' == typeof k.subscribe && k.subscribe(null, pn);
                  const Fn = Q,
                    Kn = `${ze.packageName.toLowerCase()}://`;
                  Pr().handleOpenURL = (function () {
                    var wi = (0, h.Z)(function* (hi) {
                      if ((hi.toLowerCase().startsWith(Kn) && pn({ url: hi }), 'function' == typeof Fn))
                        try {
                          Fn(hi);
                        } catch (Fi) {
                          console.error(Fi);
                        }
                    });
                    return function (hi) {
                      return wi.apply(this, arguments);
                    };
                  })();
                }
              }
            )),
            (this.underlyingResolver = null),
            (this._redirectPersistence = ia),
            (this._completeRedirectFn = ur);
        }
        _initialize(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return yield v.selectUnderlyingResolver(), v.assertedUnderlyingResolver._initialize(_);
          })();
        }
        _openPopup(_, v, k, Q) {
          var ze = this;
          return (0, h.Z)(function* () {
            return yield ze.selectUnderlyingResolver(), ze.assertedUnderlyingResolver._openPopup(_, v, k, Q);
          })();
        }
        _openRedirect(_, v, k, Q) {
          var ze = this;
          return (0, h.Z)(function* () {
            return yield ze.selectUnderlyingResolver(), ze.assertedUnderlyingResolver._openRedirect(_, v, k, Q);
          })();
        }
        _isIframeWebStorageSupported(_, v) {
          this.assertedUnderlyingResolver._isIframeWebStorageSupported(_, v);
        }
        _originValidation(_) {
          return this.assertedUnderlyingResolver._originValidation(_);
        }
        get _shouldInitProactively() {
          return $d() || this.browserResolver._shouldInitProactively;
        }
        get assertedUnderlyingResolver() {
          return Gl(this.underlyingResolver, 'internal-error'), this.underlyingResolver;
        }
        selectUnderlyingResolver() {
          var _ = this;
          return (0, h.Z)(function* () {
            if (_.underlyingResolver) return;
            const v = yield (function Wd() {
              return Yd.apply(this, arguments);
            })();
            _.underlyingResolver = v ? _.cordovaResolver : _.browserResolver;
          })();
        }
      }
      function qc(D) {
        return D.unwrap();
      }
      function Zc(D) {
        return Qc(D);
      }
      function Qc(D) {
        const { _tokenResponse: _ } = D instanceof d.ZR ? D.customData : D;
        if (!_) return null;
        if (!(D instanceof d.ZR) && 'temporaryProof' in _ && 'phoneNumber' in _) return Pl.credentialFromResult(D);
        const v = _.providerId;
        if (!v || 'password' === v) return null;
        let k;
        switch (v) {
          case 'google.com':
            k = wr;
            break;
          case 'facebook.com':
            k = ns;
            break;
          case 'github.com':
            k = vs;
            break;
          case 'twitter.com':
            k = Wr;
            break;
          default:
            const { oauthIdToken: Q, oauthAccessToken: ze, oauthTokenSecret: Lt, pendingToken: pn, nonce: Fn } = _;
            return ze || Lt || Q || pn
              ? pn
                ? v.startsWith('saml.')
                  ? Ys._create(v, pn)
                  : ls._fromParams({ providerId: v, signInMethod: v, pendingToken: pn, idToken: Q, accessToken: ze })
                : new Bi(v).credential({ idToken: Q, accessToken: ze, rawNonce: Fn })
              : null;
        }
        return D instanceof d.ZR ? k.credentialFromError(D) : k.credentialFromResult(D);
      }
      function Xr(D, _) {
        return _.catch((v) => {
          throw (
            (v instanceof d.ZR &&
              (function Vh(D, _) {
                var v;
                const k = null === (v = _.customData) || void 0 === v ? void 0 : v._tokenResponse;
                if ('auth/multi-factor-auth-required' === _.code)
                  _.resolver = new Uh(
                    D,
                    (function Oc(D, _) {
                      var v;
                      const k = (0, d.m9)(D),
                        Q = _;
                      return (
                        De(_.customData.operationType, k, 'argument-error'),
                        De(
                          null === (v = Q.customData._serverResponse) || void 0 === v ? void 0 : v.mfaPendingCredential,
                          k,
                          'argument-error'
                        ),
                        qa._fromError(k, Q)
                      );
                    })(D, _)
                  );
                else if (k) {
                  const Q = Qc(_),
                    ze = _;
                  Q &&
                    ((ze.credential = Q),
                    (ze.tenantId = k.tenantId || void 0),
                    (ze.email = k.email || void 0),
                    (ze.phoneNumber = k.phoneNumber || void 0));
                }
              })(D, v),
            v)
          );
        }).then((v) => {
          const Q = v.user;
          return {
            operationType: v.operationType,
            credential: Zc(v),
            additionalUserInfo: fs(v),
            user: rl.getOrCreate(Q),
          };
        });
      }
      function qd(D, _) {
        return Xc.apply(this, arguments);
      }
      function Xc() {
        return (Xc = (0, h.Z)(function* (D, _) {
          const v = yield _;
          return { verificationId: v.verificationId, confirm: (k) => Xr(D, v.confirm(k)) };
        })).apply(this, arguments);
      }
      class Uh {
        constructor(_, v) {
          (this.resolver = v),
            (this.auth = (function Kd(D) {
              return D.wrapped();
            })(_));
        }
        get session() {
          return this.resolver.session;
        }
        get hints() {
          return this.resolver.hints;
        }
        resolveSignIn(_) {
          return Xr(qc(this.auth), this.resolver.resolveSignIn(_));
        }
      }
      class rl {
        constructor(_) {
          (this._delegate = _),
            (this.multiFactor = (function ll(D) {
              const _ = (0, d.m9)(D);
              return ta.has(_) || ta.set(_, Zo._fromUser(_)), ta.get(_);
            })(_));
        }
        static getOrCreate(_) {
          return rl.USER_MAP.has(_) || rl.USER_MAP.set(_, new rl(_)), rl.USER_MAP.get(_);
        }
        delete() {
          return this._delegate.delete();
        }
        reload() {
          return this._delegate.reload();
        }
        toJSON() {
          return this._delegate.toJSON();
        }
        getIdTokenResult(_) {
          return this._delegate.getIdTokenResult(_);
        }
        getIdToken(_) {
          return this._delegate.getIdToken(_);
        }
        linkAndRetrieveDataWithCredential(_) {
          return this.linkWithCredential(_);
        }
        linkWithCredential(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return Xr(v.auth, Vi(v._delegate, _));
          })();
        }
        linkWithPhoneNumber(_, v) {
          var k = this;
          return (0, h.Z)(function* () {
            return qd(
              k.auth,
              (function Nc(D, _, v) {
                return co.apply(this, arguments);
              })(k._delegate, _, v)
            );
          })();
        }
        linkWithPopup(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return Xr(
              v.auth,
              (function Xs(D, _, v) {
                return oc.apply(this, arguments);
              })(v._delegate, _, Mo)
            );
          })();
        }
        linkWithRedirect(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return (
              yield vc(xn(v.auth)),
              (function qn(D, _, v) {
                return (function $n(D, _, v) {
                  return $i.apply(this, arguments);
                })(D, _, v);
              })(v._delegate, _, Mo)
            );
          })();
        }
        reauthenticateAndRetrieveDataWithCredential(_) {
          return this.reauthenticateWithCredential(_);
        }
        reauthenticateWithCredential(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return Xr(v.auth, yi(v._delegate, _));
          })();
        }
        reauthenticateWithPhoneNumber(_, v) {
          return qd(
            this.auth,
            (function Ea(D, _, v) {
              return Xa.apply(this, arguments);
            })(this._delegate, _, v)
          );
        }
        reauthenticateWithPopup(_) {
          return Xr(
            this.auth,
            (function jd(D, _, v) {
              return xa.apply(this, arguments);
            })(this._delegate, _, Mo)
          );
        }
        reauthenticateWithRedirect(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return (
              yield vc(xn(v.auth)),
              (function Bt(D, _, v) {
                return (function sn(D, _, v) {
                  return Cn.apply(this, arguments);
                })(D, _, v);
              })(v._delegate, _, Mo)
            );
          })();
        }
        sendEmailVerification(_) {
          return (function rs(D, _) {
            return Er.apply(this, arguments);
          })(this._delegate, _);
        }
        unlink(_) {
          var v = this;
          return (0, h.Z)(function* () {
            return (
              yield (function is(D, _) {
                return Co.apply(this, arguments);
              })(v._delegate, _),
              v
            );
          })();
        }
        updateEmail(_) {
          return (function Lo(D, _) {
            return qs((0, d.m9)(D), _, null);
          })(this._delegate, _);
        }
        updatePassword(_) {
          return (function va(D, _) {
            return qs((0, d.m9)(D), null, _);
          })(this._delegate, _);
        }
        updatePhoneNumber(_) {
          return (function ss(D, _) {
            return sc.apply(this, arguments);
          })(this._delegate, _);
        }
        updateProfile(_) {
          return (function Fo(D, _) {
            return bs.apply(this, arguments);
          })(this._delegate, _);
        }
        verifyBeforeUpdateEmail(_, v) {
          return (function Jo(D, _, v) {
            return Yr.apply(this, arguments);
          })(this._delegate, _, v);
        }
        get emailVerified() {
          return this._delegate.emailVerified;
        }
        get isAnonymous() {
          return this._delegate.isAnonymous;
        }
        get metadata() {
          return this._delegate.metadata;
        }
        get phoneNumber() {
          return this._delegate.phoneNumber;
        }
        get providerData() {
          return this._delegate.providerData;
        }
        get refreshToken() {
          return this._delegate.refreshToken;
        }
        get tenantId() {
          return this._delegate.tenantId;
        }
        get displayName() {
          return this._delegate.displayName;
        }
        get email() {
          return this._delegate.email;
        }
        get photoURL() {
          return this._delegate.photoURL;
        }
        get providerId() {
          return this._delegate.providerId;
        }
        get uid() {
          return this._delegate.uid;
        }
        get auth() {
          return this._delegate.auth;
        }
      }
      rl.USER_MAP = new WeakMap();
      const Ba = De;
      let Zd = (() => {
        class D {
          constructor(v, k) {
            if (((this.app = v), k.isInitialized()))
              return (this._delegate = k.getImmediate()), void this.linkUnderlyingAuth();
            const { apiKey: Q } = v.options;
            Ba(Q, 'invalid-api-key', { appName: v.name }), Ba(Q, 'invalid-api-key', { appName: v.name });
            const ze = 'undefined' != typeof window ? Mo : void 0;
            (this._delegate = k.initialize({ options: { persistence: Jc(Q, v.name), popupRedirectResolver: ze } })),
              this._delegate._updateErrorMap(et),
              this.linkUnderlyingAuth();
          }
          get emulatorConfig() {
            return this._delegate.emulatorConfig;
          }
          get currentUser() {
            return this._delegate.currentUser ? rl.getOrCreate(this._delegate.currentUser) : null;
          }
          get languageCode() {
            return this._delegate.languageCode;
          }
          set languageCode(v) {
            this._delegate.languageCode = v;
          }
          get settings() {
            return this._delegate.settings;
          }
          get tenantId() {
            return this._delegate.tenantId;
          }
          set tenantId(v) {
            this._delegate.tenantId = v;
          }
          useDeviceLanguage() {
            this._delegate.useDeviceLanguage();
          }
          signOut() {
            return this._delegate.signOut();
          }
          useEmulator(v, k) {
            !(function J(D, _, v) {
              const k = xn(D);
              De(k._canInitEmulator, k, 'emulator-config-failed'),
                De(/^https?:\/\//.test(_), k, 'invalid-emulator-scheme');
              const Q = !!(null == v ? void 0 : v.disableWarnings),
                ze = Kt(_),
                { host: Lt, port: pn } = (function Ht(D) {
                  const _ = Kt(D),
                    v = /(\/\/)?([^?#/]+)/.exec(D.substr(_.length));
                  if (!v) return { host: '', port: null };
                  const k = v[2].split('@').pop() || '',
                    Q = /^(\[[^\]]+\])(:|$)/.exec(k);
                  if (Q) {
                    const ze = Q[1];
                    return { host: ze, port: fn(k.substr(ze.length + 1)) };
                  }
                  {
                    const [ze, Lt] = k.split(':');
                    return { host: ze, port: fn(Lt) };
                  }
                })(_);
              (k.config.emulator = { url: `${ze}//${Lt}${null === pn ? '' : `:${pn}`}/` }),
                (k.settings.appVerificationDisabledForTesting = !0),
                (k.emulatorConfig = Object.freeze({
                  host: Lt,
                  port: pn,
                  protocol: ze.replace(':', ''),
                  options: Object.freeze({ disableWarnings: Q }),
                })),
                Q ||
                  (function Wn() {
                    function D() {
                      const _ = document.createElement('p'),
                        v = _.style;
                      (_.innerText = 'Running in emulator mode. Do not use with production credentials.'),
                        (v.position = 'fixed'),
                        (v.width = '100%'),
                        (v.backgroundColor = '#ffffff'),
                        (v.border = '.1em solid #000000'),
                        (v.color = '#b50000'),
                        (v.bottom = '0px'),
                        (v.left = '0px'),
                        (v.margin = '0px'),
                        (v.zIndex = '10000'),
                        (v.textAlign = 'center'),
                        _.classList.add('firebase-emulator-warning'),
                        document.body.appendChild(_);
                    }
                    'undefined' != typeof console &&
                      'function' == typeof console.info &&
                      console.info(
                        'WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.'
                      ),
                      'undefined' != typeof window &&
                        'undefined' != typeof document &&
                        ('loading' === document.readyState ? window.addEventListener('DOMContentLoaded', D) : D());
                  })();
            })(this._delegate, v, k);
          }
          applyActionCode(v) {
            return (function E(D, _) {
              return M.apply(this, arguments);
            })(this._delegate, v);
          }
          checkActionCode(v) {
            return B(this._delegate, v);
          }
          confirmPasswordReset(v, k) {
            return (function bn(D, _, v) {
              return oe.apply(this, arguments);
            })(this._delegate, v, k);
          }
          createUserWithEmailAndPassword(v, k) {
            var Q = this;
            return (0, h.Z)(function* () {
              return Xr(
                Q._delegate,
                (function gt(D, _, v) {
                  return Vt.apply(this, arguments);
                })(Q._delegate, v, k)
              );
            })();
          }
          fetchProvidersForEmail(v) {
            return this.fetchSignInMethodsForEmail(v);
          }
          fetchSignInMethodsForEmail(v) {
            return (function mr(D, _) {
              return cr.apply(this, arguments);
            })(this._delegate, v);
          }
          isSignInWithEmailLink(v) {
            return (function ni(D, _) {
              const v = Hr.parseLink(_);
              return 'EMAIL_SIGNIN' === (null == v ? void 0 : v.operation);
            })(0, v);
          }
          getRedirectResult() {
            var v = this;
            return (0, h.Z)(function* () {
              Ba(ml(), v._delegate, 'operation-not-supported-in-this-environment');
              const k = yield (function Tr(D, _) {
                return Us.apply(this, arguments);
              })(v._delegate, Mo);
              return k ? Xr(v._delegate, Promise.resolve(k)) : { credential: null, user: null };
            })();
          }
          addFrameworkForLogging(v) {
            !(function Nh(D, _) {
              xn(D)._logFramework(_);
            })(this._delegate, v);
          }
          onAuthStateChanged(v, k, Q) {
            const { next: ze, error: Lt, complete: pn } = Au(v, k, Q);
            return this._delegate.onAuthStateChanged(ze, Lt, pn);
          }
          onIdTokenChanged(v, k, Q) {
            const { next: ze, error: Lt, complete: pn } = Au(v, k, Q);
            return this._delegate.onIdTokenChanged(ze, Lt, pn);
          }
          sendSignInLinkToEmail(v, k) {
            return (function Tn(D, _, v) {
              return zn.apply(this, arguments);
            })(this._delegate, v, k);
          }
          sendPasswordResetEmail(v, k) {
            return (function so(D, _, v) {
              return oo.apply(this, arguments);
            })(this._delegate, v, k || void 0);
          }
          setPersistence(v) {
            var k = this;
            return (0, h.Z)(function* () {
              let Q;
              switch (
                ((function Kc(D, _) {
                  gl(Object.values(xs).includes(_), D, 'invalid-persistence-type'),
                    (0, d.b$)()
                      ? gl(_ !== xs.SESSION, D, 'unsupported-persistence-type')
                      : (0, d.UG)()
                      ? gl(_ === xs.NONE, D, 'unsupported-persistence-type')
                      : Hs()
                      ? gl(_ === xs.NONE || (_ === xs.LOCAL && (0, d.hl)()), D, 'unsupported-persistence-type')
                      : gl(_ === xs.NONE || ad(), D, 'unsupported-persistence-type');
                })(k._delegate, v),
                v)
              ) {
                case xs.SESSION:
                  Q = ia;
                  break;
                case xs.LOCAL:
                  Q = (yield Ve(Fa)._isAvailable()) ? Fa : wa;
                  break;
                case xs.NONE:
                  Q = Yt;
                  break;
                default:
                  return We('argument-error', { appName: k._delegate.name });
              }
              return k._delegate.setPersistence(Q);
            })();
          }
          signInAndRetrieveDataWithCredential(v) {
            return this.signInWithCredential(v);
          }
          signInAnonymously() {
            return Xr(
              this._delegate,
              (function po(D) {
                return us.apply(this, arguments);
              })(this._delegate)
            );
          }
          signInWithCredential(v) {
            return Xr(this._delegate, Sn(this._delegate, v));
          }
          signInWithCustomToken(v) {
            return Xr(
              this._delegate,
              (function Me(D, _) {
                return Xt.apply(this, arguments);
              })(this._delegate, v)
            );
          }
          signInWithEmailAndPassword(v, k) {
            return Xr(
              this._delegate,
              (function cn(D, _, v) {
                return Sn((0, d.m9)(D), _s.credential(_, v));
              })(this._delegate, v, k)
            );
          }
          signInWithEmailLink(v, k) {
            return Xr(
              this._delegate,
              (function mi(D, _, v) {
                return Xn.apply(this, arguments);
              })(this._delegate, v, k)
            );
          }
          signInWithPhoneNumber(v, k) {
            return qd(
              this._delegate,
              (function ul(D, _, v) {
                return rc.apply(this, arguments);
              })(this._delegate, v, k)
            );
          }
          signInWithPopup(v) {
            var k = this;
            return (0, h.Z)(function* () {
              return (
                Ba(ml(), k._delegate, 'operation-not-supported-in-this-environment'),
                Xr(
                  k._delegate,
                  (function el(D, _, v) {
                    return Uc.apply(this, arguments);
                  })(k._delegate, v, Mo)
                )
              );
            })();
          }
          signInWithRedirect(v) {
            var k = this;
            return (0, h.Z)(function* () {
              return (
                Ba(ml(), k._delegate, 'operation-not-supported-in-this-environment'),
                yield vc(k._delegate),
                (function K(D, _, v) {
                  return (function Ee(D, _, v) {
                    return ct.apply(this, arguments);
                  })(D, _, v);
                })(k._delegate, v, Mo)
              );
            })();
          }
          updateCurrentUser(v) {
            return this._delegate.updateCurrentUser(v);
          }
          verifyPasswordResetCode(v) {
            return (function Ge(D, _) {
              return pt.apply(this, arguments);
            })(this._delegate, v);
          }
          unwrap() {
            return this._delegate;
          }
          _delete() {
            return this._delegate._delete();
          }
          linkUnderlyingAuth() {
            this._delegate.wrapped = () => this;
          }
        }
        return (D.Persistence = xs), D;
      })();
      function Au(D, _, v) {
        let k = D;
        'function' != typeof D && ({ next: k, error: _, complete: v } = D);
        const Q = k;
        return { next: (Lt) => Q(Lt && rl.getOrCreate(Lt)), error: _, complete: v };
      }
      function Jc(D, _) {
        const v = (function ca(D, _) {
          const v = Su();
          if (!v) return [];
          const k = _n(yc, D, _);
          switch (v.getItem(k)) {
            case xs.NONE:
              return [Yt];
            case xs.LOCAL:
              return [Fa, ia];
            case xs.SESSION:
              return [ia];
            default:
              return [];
          }
        })(D, _);
        if (('undefined' != typeof self && !v.includes(Fa) && v.push(Fa), 'undefined' != typeof window))
          for (const k of [wa, ia]) v.includes(k) || v.push(k);
        return v.includes(Yt) || v.push(Yt), v;
      }
      class bc {
        constructor() {
          (this.providerId = 'phone'), (this._delegate = new Pl(qc(m.Z.auth())));
        }
        static credential(_, v) {
          return Pl.credential(_, v);
        }
        verifyPhoneNumber(_, v) {
          return this._delegate.verifyPhoneNumber(_, v);
        }
        unwrap() {
          return this._delegate;
        }
      }
      (bc.PHONE_SIGN_IN_METHOD = Pl.PHONE_SIGN_IN_METHOD), (bc.PROVIDER_ID = Pl.PROVIDER_ID);
      const Tu = De;
      class Qd {
        constructor(_, v, k = m.Z.app()) {
          var Q;
          Tu(null === (Q = k.options) || void 0 === Q ? void 0 : Q.apiKey, 'invalid-api-key', { appName: k.name }),
            (this._delegate = new Ud(_, v, k.auth())),
            (this.type = this._delegate.type);
        }
        clear() {
          this._delegate.clear();
        }
        render() {
          return this._delegate.render();
        }
        verify() {
          return this._delegate.verify();
        }
      }
      !(function ua(D) {
        D.INTERNAL.registerComponent(
          new He.wA(
            'auth-compat',
            (_) => {
              const v = _.getProvider('app-compat').getImmediate(),
                k = _.getProvider('auth');
              return new Zd(v, k);
            },
            'PUBLIC'
          )
            .setServiceProps({
              ActionCodeInfo: {
                Operation: {
                  EMAIL_SIGNIN: 'EMAIL_SIGNIN',
                  PASSWORD_RESET: 'PASSWORD_RESET',
                  RECOVER_EMAIL: 'RECOVER_EMAIL',
                  REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',
                  VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',
                  VERIFY_EMAIL: 'VERIFY_EMAIL',
                },
              },
              EmailAuthProvider: _s,
              FacebookAuthProvider: ns,
              GithubAuthProvider: vs,
              GoogleAuthProvider: wr,
              OAuthProvider: Bi,
              SAMLAuthProvider: Gr,
              PhoneAuthProvider: bc,
              PhoneMultiFactorGenerator: Si,
              RecaptchaVerifier: Qd,
              TwitterAuthProvider: Wr,
              Auth: Zd,
              AuthCredential: Nn,
              Error: d.ZR,
            })
            .setInstantiationMode('LAZY')
            .setMultipleInstances(!1)
        ),
          D.registerVersion('@firebase/auth-compat', '0.2.7');
      })(m.Z);
    },
    2940: function (un, ft) {
      !(function (x) {
        'use strict';
        function h(me) {
          return Array.prototype.slice.call(me);
        }
        function m(me) {
          return new Promise(function (Ze, dt) {
            (me.onsuccess = function () {
              Ze(me.result);
            }),
              (me.onerror = function () {
                dt(me.error);
              });
          });
        }
        function d(me, Ze, dt) {
          var vt,
            We = new Promise(function ($e, ge) {
              m((vt = me[Ze].apply(me, dt))).then($e, ge);
            });
          return (We.request = vt), We;
        }
        function N(me, Ze, dt) {
          var vt = d(me, Ze, dt);
          return vt.then(function (We) {
            if (We) return new ee(We, vt.request);
          });
        }
        function Ce(me, Ze, dt) {
          dt.forEach(function (vt) {
            Object.defineProperty(me.prototype, vt, {
              get: function () {
                return this[Ze][vt];
              },
              set: function (We) {
                this[Ze][vt] = We;
              },
            });
          });
        }
        function Re(me, Ze, dt, vt) {
          vt.forEach(function (We) {
            We in dt.prototype &&
              (me.prototype[We] = function () {
                return d(this[Ze], We, arguments);
              });
          });
        }
        function He(me, Ze, dt, vt) {
          vt.forEach(function (We) {
            We in dt.prototype &&
              (me.prototype[We] = function () {
                return this[Ze][We].apply(this[Ze], arguments);
              });
          });
        }
        function Fe(me, Ze, dt, vt) {
          vt.forEach(function (We) {
            We in dt.prototype &&
              (me.prototype[We] = function () {
                return N(this[Ze], We, arguments);
              });
          });
        }
        function Ne(me) {
          this._index = me;
        }
        function ee(me, Ze) {
          (this._cursor = me), (this._request = Ze);
        }
        function fe(me) {
          this._store = me;
        }
        function ue(me) {
          (this._tx = me),
            (this.complete = new Promise(function (Ze, dt) {
              (me.oncomplete = function () {
                Ze();
              }),
                (me.onerror = function () {
                  dt(me.error);
                }),
                (me.onabort = function () {
                  dt(me.error);
                });
            }));
        }
        function Qe(me, Ze, dt) {
          (this._db = me), (this.oldVersion = Ze), (this.transaction = new ue(dt));
        }
        function Oe(me) {
          this._db = me;
        }
        Ce(Ne, '_index', ['name', 'keyPath', 'multiEntry', 'unique']),
          Re(Ne, '_index', IDBIndex, ['get', 'getKey', 'getAll', 'getAllKeys', 'count']),
          Fe(Ne, '_index', IDBIndex, ['openCursor', 'openKeyCursor']),
          Ce(ee, '_cursor', ['direction', 'key', 'primaryKey', 'value']),
          Re(ee, '_cursor', IDBCursor, ['update', 'delete']),
          ['advance', 'continue', 'continuePrimaryKey'].forEach(function (me) {
            me in IDBCursor.prototype &&
              (ee.prototype[me] = function () {
                var Ze = this,
                  dt = arguments;
                return Promise.resolve().then(function () {
                  return (
                    Ze._cursor[me].apply(Ze._cursor, dt),
                    m(Ze._request).then(function (vt) {
                      if (vt) return new ee(vt, Ze._request);
                    })
                  );
                });
              });
          }),
          (fe.prototype.createIndex = function () {
            return new Ne(this._store.createIndex.apply(this._store, arguments));
          }),
          (fe.prototype.index = function () {
            return new Ne(this._store.index.apply(this._store, arguments));
          }),
          Ce(fe, '_store', ['name', 'keyPath', 'indexNames', 'autoIncrement']),
          Re(fe, '_store', IDBObjectStore, [
            'put',
            'add',
            'delete',
            'clear',
            'get',
            'getAll',
            'getKey',
            'getAllKeys',
            'count',
          ]),
          Fe(fe, '_store', IDBObjectStore, ['openCursor', 'openKeyCursor']),
          He(fe, '_store', IDBObjectStore, ['deleteIndex']),
          (ue.prototype.objectStore = function () {
            return new fe(this._tx.objectStore.apply(this._tx, arguments));
          }),
          Ce(ue, '_tx', ['objectStoreNames', 'mode']),
          He(ue, '_tx', IDBTransaction, ['abort']),
          (Qe.prototype.createObjectStore = function () {
            return new fe(this._db.createObjectStore.apply(this._db, arguments));
          }),
          Ce(Qe, '_db', ['name', 'version', 'objectStoreNames']),
          He(Qe, '_db', IDBDatabase, ['deleteObjectStore', 'close']),
          (Oe.prototype.transaction = function () {
            return new ue(this._db.transaction.apply(this._db, arguments));
          }),
          Ce(Oe, '_db', ['name', 'version', 'objectStoreNames']),
          He(Oe, '_db', IDBDatabase, ['close']),
          ['openCursor', 'openKeyCursor'].forEach(function (me) {
            [fe, Ne].forEach(function (Ze) {
              me in Ze.prototype &&
                (Ze.prototype[me.replace('open', 'iterate')] = function () {
                  var dt = h(arguments),
                    vt = dt[dt.length - 1],
                    We = this._store || this._index,
                    $e = We[me].apply(We, dt.slice(0, -1));
                  $e.onsuccess = function () {
                    vt($e.result);
                  };
                });
            });
          }),
          [Ne, fe].forEach(function (me) {
            me.prototype.getAll ||
              (me.prototype.getAll = function (Ze, dt) {
                var vt = this,
                  We = [];
                return new Promise(function ($e) {
                  vt.iterateCursor(Ze, function (ge) {
                    ge ? (We.push(ge.value), void 0 === dt || We.length != dt ? ge.continue() : $e(We)) : $e(We);
                  });
                });
              });
          }),
          (x.openDb = function et(me, Ze, dt) {
            var vt = d(indexedDB, 'open', [me, Ze]),
              We = vt.request;
            return (
              We &&
                (We.onupgradeneeded = function ($e) {
                  dt && dt(new Qe(We.result, $e.oldVersion, We.transaction));
                }),
              vt.then(function ($e) {
                return new Oe($e);
              })
            );
          }),
          (x.deleteDb = function lt(me) {
            return d(indexedDB, 'deleteDatabase', [me]);
          }),
          Object.defineProperty(x, '__esModule', { value: !0 });
      })(ft);
    },
    1135: (un, ft, x) => {
      'use strict';
      x.d(ft, { X: () => m });
      var h = x(7579);
      class m extends h.x {
        constructor(N) {
          super(), (this._value = N);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(N) {
          const Ce = super._subscribe(N);
          return !Ce.closed && N.next(this._value), Ce;
        }
        getValue() {
          const { hasError: N, thrownError: Ce, _value: Re } = this;
          if (N) throw Ce;
          return this._throwIfClosed(), Re;
        }
        next(N) {
          super.next((this._value = N));
        }
      }
    },
    8306: (un, ft, x) => {
      'use strict';
      x.d(ft, { y: () => ee });
      var h = x(930),
        m = x(727),
        d = x(8822),
        N = x(4671);
      var He = x(2416),
        Fe = x(576),
        Ne = x(2806);
      let ee = (() => {
        class Oe {
          constructor(lt) {
            lt && (this._subscribe = lt);
          }
          lift(lt) {
            const me = new Oe();
            return (me.source = this), (me.operator = lt), me;
          }
          subscribe(lt, me, Ze) {
            const dt = (function Qe(Oe) {
              return (
                (Oe && Oe instanceof h.Lv) ||
                ((function ue(Oe) {
                  return Oe && (0, Fe.m)(Oe.next) && (0, Fe.m)(Oe.error) && (0, Fe.m)(Oe.complete);
                })(Oe) &&
                  (0, m.Nn)(Oe))
              );
            })(lt)
              ? lt
              : new h.Hp(lt, me, Ze);
            return (
              (0, Ne.x)(() => {
                const { operator: vt, source: We } = this;
                dt.add(vt ? vt.call(dt, We) : We ? this._subscribe(dt) : this._trySubscribe(dt));
              }),
              dt
            );
          }
          _trySubscribe(lt) {
            try {
              return this._subscribe(lt);
            } catch (me) {
              lt.error(me);
            }
          }
          forEach(lt, me) {
            return new (me = fe(me))((Ze, dt) => {
              const vt = new h.Hp({
                next: (We) => {
                  try {
                    lt(We);
                  } catch ($e) {
                    dt($e), vt.unsubscribe();
                  }
                },
                error: dt,
                complete: Ze,
              });
              this.subscribe(vt);
            });
          }
          _subscribe(lt) {
            var me;
            return null === (me = this.source) || void 0 === me ? void 0 : me.subscribe(lt);
          }
          [d.L]() {
            return this;
          }
          pipe(...lt) {
            return (function Re(Oe) {
              return 0 === Oe.length
                ? N.y
                : 1 === Oe.length
                ? Oe[0]
                : function (lt) {
                    return Oe.reduce((me, Ze) => Ze(me), lt);
                  };
            })(lt)(this);
          }
          toPromise(lt) {
            return new (lt = fe(lt))((me, Ze) => {
              let dt;
              this.subscribe(
                (vt) => (dt = vt),
                (vt) => Ze(vt),
                () => me(dt)
              );
            });
          }
        }
        return (Oe.create = (et) => new Oe(et)), Oe;
      })();
      function fe(Oe) {
        var et;
        return null !== (et = null != Oe ? Oe : He.v.Promise) && void 0 !== et ? et : Promise;
      }
    },
    7579: (un, ft, x) => {
      'use strict';
      x.d(ft, { x: () => He });
      var h = x(8306),
        m = x(727);
      const N = (0, x(3888).d)(
        (Ne) =>
          function () {
            Ne(this), (this.name = 'ObjectUnsubscribedError'), (this.message = 'object unsubscribed');
          }
      );
      var Ce = x(8737),
        Re = x(2806);
      let He = (() => {
        class Ne extends h.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(fe) {
            const ue = new Fe(this, this);
            return (ue.operator = fe), ue;
          }
          _throwIfClosed() {
            if (this.closed) throw new N();
          }
          next(fe) {
            (0, Re.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                const ue = this.observers.slice();
                for (const Qe of ue) Qe.next(fe);
              }
            });
          }
          error(fe) {
            (0, Re.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = fe);
                const { observers: ue } = this;
                for (; ue.length; ) ue.shift().error(fe);
              }
            });
          }
          complete() {
            (0, Re.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: fe } = this;
                for (; fe.length; ) fe.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0), (this.observers = null);
          }
          get observed() {
            var fe;
            return (null === (fe = this.observers) || void 0 === fe ? void 0 : fe.length) > 0;
          }
          _trySubscribe(fe) {
            return this._throwIfClosed(), super._trySubscribe(fe);
          }
          _subscribe(fe) {
            return this._throwIfClosed(), this._checkFinalizedStatuses(fe), this._innerSubscribe(fe);
          }
          _innerSubscribe(fe) {
            const { hasError: ue, isStopped: Qe, observers: Oe } = this;
            return ue || Qe ? m.Lc : (Oe.push(fe), new m.w0(() => (0, Ce.P)(Oe, fe)));
          }
          _checkFinalizedStatuses(fe) {
            const { hasError: ue, thrownError: Qe, isStopped: Oe } = this;
            ue ? fe.error(Qe) : Oe && fe.complete();
          }
          asObservable() {
            const fe = new h.y();
            return (fe.source = this), fe;
          }
        }
        return (Ne.create = (ee, fe) => new Fe(ee, fe)), Ne;
      })();
      class Fe extends He {
        constructor(ee, fe) {
          super(), (this.destination = ee), (this.source = fe);
        }
        next(ee) {
          var fe, ue;
          null === (ue = null === (fe = this.destination) || void 0 === fe ? void 0 : fe.next) ||
            void 0 === ue ||
            ue.call(fe, ee);
        }
        error(ee) {
          var fe, ue;
          null === (ue = null === (fe = this.destination) || void 0 === fe ? void 0 : fe.error) ||
            void 0 === ue ||
            ue.call(fe, ee);
        }
        complete() {
          var ee, fe;
          null === (fe = null === (ee = this.destination) || void 0 === ee ? void 0 : ee.complete) ||
            void 0 === fe ||
            fe.call(ee);
        }
        _subscribe(ee) {
          var fe, ue;
          return null !== (ue = null === (fe = this.source) || void 0 === fe ? void 0 : fe.subscribe(ee)) &&
            void 0 !== ue
            ? ue
            : m.Lc;
        }
      }
    },
    930: (un, ft, x) => {
      'use strict';
      x.d(ft, { Hp: () => Qe, Lv: () => ue });
      var h = x(576),
        m = x(727),
        d = x(2416),
        N = x(7849),
        Ce = x(5032);
      const Re = Ne('C', void 0, void 0);
      function Ne(Ze, dt, vt) {
        return { kind: Ze, value: dt, error: vt };
      }
      var ee = x(3410),
        fe = x(2806);
      class ue extends m.w0 {
        constructor(dt) {
          super(),
            (this.isStopped = !1),
            dt ? ((this.destination = dt), (0, m.Nn)(dt) && dt.add(this)) : (this.destination = me);
        }
        static create(dt, vt, We) {
          return new Qe(dt, vt, We);
        }
        next(dt) {
          this.isStopped
            ? lt(
                (function Fe(Ze) {
                  return Ne('N', Ze, void 0);
                })(dt),
                this
              )
            : this._next(dt);
        }
        error(dt) {
          this.isStopped
            ? lt(
                (function He(Ze) {
                  return Ne('E', void 0, Ze);
                })(dt),
                this
              )
            : ((this.isStopped = !0), this._error(dt));
        }
        complete() {
          this.isStopped ? lt(Re, this) : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe(), (this.destination = null));
        }
        _next(dt) {
          this.destination.next(dt);
        }
        _error(dt) {
          try {
            this.destination.error(dt);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      class Qe extends ue {
        constructor(dt, vt, We) {
          let $e;
          if ((super(), (0, h.m)(dt))) $e = dt;
          else if (dt) {
            let ge;
            ({ next: $e, error: vt, complete: We } = dt),
              this && d.v.useDeprecatedNextContext
                ? ((ge = Object.create(dt)), (ge.unsubscribe = () => this.unsubscribe()))
                : (ge = dt),
              ($e = null == $e ? void 0 : $e.bind(ge)),
              (vt = null == vt ? void 0 : vt.bind(ge)),
              (We = null == We ? void 0 : We.bind(ge));
          }
          this.destination = {
            next: $e ? Oe($e) : Ce.Z,
            error: Oe(null != vt ? vt : et),
            complete: We ? Oe(We) : Ce.Z,
          };
        }
      }
      function Oe(Ze, dt) {
        return (...vt) => {
          try {
            Ze(...vt);
          } catch (We) {
            d.v.useDeprecatedSynchronousErrorHandling ? (0, fe.O)(We) : (0, N.h)(We);
          }
        };
      }
      function et(Ze) {
        throw Ze;
      }
      function lt(Ze, dt) {
        const { onStoppedNotification: vt } = d.v;
        vt && ee.z.setTimeout(() => vt(Ze, dt));
      }
      const me = { closed: !0, next: Ce.Z, error: et, complete: Ce.Z };
    },
    727: (un, ft, x) => {
      'use strict';
      x.d(ft, { Lc: () => Re, w0: () => Ce, Nn: () => He });
      var h = x(576);
      const d = (0, x(3888).d)(
        (Ne) =>
          function (fe) {
            Ne(this),
              (this.message = fe
                ? `${fe.length} errors occurred during unsubscription:\n${fe
                    .map((ue, Qe) => `${Qe + 1}) ${ue.toString()}`)
                    .join('\n  ')}`
                : ''),
              (this.name = 'UnsubscriptionError'),
              (this.errors = fe);
          }
      );
      var N = x(8737);
      class Ce {
        constructor(ee) {
          (this.initialTeardown = ee), (this.closed = !1), (this._parentage = null), (this._teardowns = null);
        }
        unsubscribe() {
          let ee;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: fe } = this;
            if (fe)
              if (((this._parentage = null), Array.isArray(fe))) for (const Oe of fe) Oe.remove(this);
              else fe.remove(this);
            const { initialTeardown: ue } = this;
            if ((0, h.m)(ue))
              try {
                ue();
              } catch (Oe) {
                ee = Oe instanceof d ? Oe.errors : [Oe];
              }
            const { _teardowns: Qe } = this;
            if (Qe) {
              this._teardowns = null;
              for (const Oe of Qe)
                try {
                  Fe(Oe);
                } catch (et) {
                  (ee = null != ee ? ee : []), et instanceof d ? (ee = [...ee, ...et.errors]) : ee.push(et);
                }
            }
            if (ee) throw new d(ee);
          }
        }
        add(ee) {
          var fe;
          if (ee && ee !== this)
            if (this.closed) Fe(ee);
            else {
              if (ee instanceof Ce) {
                if (ee.closed || ee._hasParent(this)) return;
                ee._addParent(this);
              }
              (this._teardowns = null !== (fe = this._teardowns) && void 0 !== fe ? fe : []).push(ee);
            }
        }
        _hasParent(ee) {
          const { _parentage: fe } = this;
          return fe === ee || (Array.isArray(fe) && fe.includes(ee));
        }
        _addParent(ee) {
          const { _parentage: fe } = this;
          this._parentage = Array.isArray(fe) ? (fe.push(ee), fe) : fe ? [fe, ee] : ee;
        }
        _removeParent(ee) {
          const { _parentage: fe } = this;
          fe === ee ? (this._parentage = null) : Array.isArray(fe) && (0, N.P)(fe, ee);
        }
        remove(ee) {
          const { _teardowns: fe } = this;
          fe && (0, N.P)(fe, ee), ee instanceof Ce && ee._removeParent(this);
        }
      }
      Ce.EMPTY = (() => {
        const Ne = new Ce();
        return (Ne.closed = !0), Ne;
      })();
      const Re = Ce.EMPTY;
      function He(Ne) {
        return (
          Ne instanceof Ce ||
          (Ne && 'closed' in Ne && (0, h.m)(Ne.remove) && (0, h.m)(Ne.add) && (0, h.m)(Ne.unsubscribe))
        );
      }
      function Fe(Ne) {
        (0, h.m)(Ne) ? Ne() : Ne.unsubscribe();
      }
    },
    2416: (un, ft, x) => {
      'use strict';
      x.d(ft, { v: () => h });
      const h = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    4033: (un, ft, x) => {
      'use strict';
      x.d(ft, { c: () => Re });
      var h = x(8306),
        m = x(727),
        d = x(8343),
        N = x(5403),
        Ce = x(4482);
      class Re extends h.y {
        constructor(Fe, Ne) {
          super(),
            (this.source = Fe),
            (this.subjectFactory = Ne),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, Ce.A)(Fe) && (this.lift = Fe.lift);
        }
        _subscribe(Fe) {
          return this.getSubject().subscribe(Fe);
        }
        getSubject() {
          const Fe = this._subject;
          return (!Fe || Fe.isStopped) && (this._subject = this.subjectFactory()), this._subject;
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: Fe } = this;
          (this._subject = this._connection = null), null == Fe || Fe.unsubscribe();
        }
        connect() {
          let Fe = this._connection;
          if (!Fe) {
            Fe = this._connection = new m.w0();
            const Ne = this.getSubject();
            Fe.add(
              this.source.subscribe(
                new N.Q(
                  Ne,
                  void 0,
                  () => {
                    this._teardown(), Ne.complete();
                  },
                  (ee) => {
                    this._teardown(), Ne.error(ee);
                  },
                  () => this._teardown()
                )
              )
            ),
              Fe.closed && ((this._connection = null), (Fe = m.w0.EMPTY));
          }
          return Fe;
        }
        refCount() {
          return (0, d.x)()(this);
        }
      }
    },
    9841: (un, ft, x) => {
      'use strict';
      x.d(ft, { a: () => ee });
      var h = x(8306),
        m = x(4742),
        d = x(8996),
        N = x(4671),
        Ce = x(3268),
        Re = x(3269),
        He = x(1810),
        Fe = x(5403),
        Ne = x(9672);
      function ee(...Qe) {
        const Oe = (0, Re.yG)(Qe),
          et = (0, Re.jO)(Qe),
          { args: lt, keys: me } = (0, m.D)(Qe);
        if (0 === lt.length) return (0, d.D)([], Oe);
        const Ze = new h.y(
          (function fe(Qe, Oe, et = N.y) {
            return (lt) => {
              ue(
                Oe,
                () => {
                  const { length: me } = Qe,
                    Ze = new Array(me);
                  let dt = me,
                    vt = me;
                  for (let We = 0; We < me; We++)
                    ue(
                      Oe,
                      () => {
                        const $e = (0, d.D)(Qe[We], Oe);
                        let ge = !1;
                        $e.subscribe(
                          new Fe.Q(
                            lt,
                            (Ke) => {
                              (Ze[We] = Ke), ge || ((ge = !0), vt--), vt || lt.next(et(Ze.slice()));
                            },
                            () => {
                              --dt || lt.complete();
                            }
                          )
                        );
                      },
                      lt
                    );
                },
                lt
              );
            };
          })(lt, Oe, me ? (dt) => (0, He.n)(me, dt) : N.y)
        );
        return et ? Ze.pipe((0, Ce.Z)(et)) : Ze;
      }
      function ue(Qe, Oe, et) {
        Qe ? (0, Ne.f)(et, Qe, Oe) : Oe();
      }
    },
    7272: (un, ft, x) => {
      'use strict';
      x.d(ft, { z: () => Ce });
      var h = x(8189),
        d = x(3269),
        N = x(8996);
      function Ce(...Re) {
        return (function m() {
          return (0, h.J)(1);
        })()((0, N.D)(Re, (0, d.yG)(Re)));
      }
    },
    9770: (un, ft, x) => {
      'use strict';
      x.d(ft, { P: () => d });
      var h = x(8306),
        m = x(8421);
      function d(N) {
        return new h.y((Ce) => {
          (0, m.Xf)(N()).subscribe(Ce);
        });
      }
    },
    515: (un, ft, x) => {
      'use strict';
      x.d(ft, { E: () => m });
      const m = new (x(8306).y)((Ce) => Ce.complete());
    },
    4128: (un, ft, x) => {
      'use strict';
      x.d(ft, { D: () => Fe });
      var h = x(8306),
        m = x(4742),
        d = x(8421),
        N = x(3269),
        Ce = x(5403),
        Re = x(3268),
        He = x(1810);
      function Fe(...Ne) {
        const ee = (0, N.jO)(Ne),
          { args: fe, keys: ue } = (0, m.D)(Ne),
          Qe = new h.y((Oe) => {
            const { length: et } = fe;
            if (!et) return void Oe.complete();
            const lt = new Array(et);
            let me = et,
              Ze = et;
            for (let dt = 0; dt < et; dt++) {
              let vt = !1;
              (0, d.Xf)(fe[dt]).subscribe(
                new Ce.Q(
                  Oe,
                  (We) => {
                    vt || ((vt = !0), Ze--), (lt[dt] = We);
                  },
                  () => me--,
                  void 0,
                  () => {
                    (!me || !vt) && (Ze || Oe.next(ue ? (0, He.n)(ue, lt) : lt), Oe.complete());
                  }
                )
              );
            }
          });
        return ee ? Qe.pipe((0, Re.Z)(ee)) : Qe;
      }
    },
    8996: (un, ft, x) => {
      'use strict';
      x.d(ft, { D: () => $e });
      var h = x(8421),
        m = x(5363),
        d = x(9468),
        Re = x(8306),
        Fe = x(2202),
        Ne = x(576),
        ee = x(9672);
      function ue(ge, Ke) {
        if (!ge) throw new Error('Iterable cannot be null');
        return new Re.y((Ie) => {
          (0, ee.f)(Ie, Ke, () => {
            const De = ge[Symbol.asyncIterator]();
            (0, ee.f)(
              Ie,
              Ke,
              () => {
                De.next().then((Ye) => {
                  Ye.done ? Ie.complete() : Ie.next(Ye.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      var Qe = x(3670),
        Oe = x(8239),
        et = x(1144),
        lt = x(6495),
        me = x(2206),
        Ze = x(4532),
        dt = x(3260);
      function $e(ge, Ke) {
        return Ke
          ? (function We(ge, Ke) {
              if (null != ge) {
                if ((0, Qe.c)(ge))
                  return (function N(ge, Ke) {
                    return (0, h.Xf)(ge).pipe((0, d.R)(Ke), (0, m.Q)(Ke));
                  })(ge, Ke);
                if ((0, et.z)(ge))
                  return (function He(ge, Ke) {
                    return new Re.y((Ie) => {
                      let De = 0;
                      return Ke.schedule(function () {
                        De === ge.length ? Ie.complete() : (Ie.next(ge[De++]), Ie.closed || this.schedule());
                      });
                    });
                  })(ge, Ke);
                if ((0, Oe.t)(ge))
                  return (function Ce(ge, Ke) {
                    return (0, h.Xf)(ge).pipe((0, d.R)(Ke), (0, m.Q)(Ke));
                  })(ge, Ke);
                if ((0, me.D)(ge)) return ue(ge, Ke);
                if ((0, lt.T)(ge))
                  return (function fe(ge, Ke) {
                    return new Re.y((Ie) => {
                      let De;
                      return (
                        (0, ee.f)(Ie, Ke, () => {
                          (De = ge[Fe.h]()),
                            (0, ee.f)(
                              Ie,
                              Ke,
                              () => {
                                let Ye, it;
                                try {
                                  ({ value: Ye, done: it } = De.next());
                                } catch (qe) {
                                  return void Ie.error(qe);
                                }
                                it ? Ie.complete() : Ie.next(Ye);
                              },
                              0,
                              !0
                            );
                        }),
                        () => (0, Ne.m)(null == De ? void 0 : De.return) && De.return()
                      );
                    });
                  })(ge, Ke);
                if ((0, dt.L)(ge))
                  return (function vt(ge, Ke) {
                    return ue((0, dt.Q)(ge), Ke);
                  })(ge, Ke);
              }
              throw (0, Ze.z)(ge);
            })(ge, Ke)
          : (0, h.Xf)(ge);
      }
    },
    4968: (un, ft, x) => {
      'use strict';
      x.d(ft, { R: () => ee });
      var h = x(8421),
        m = x(8306),
        d = x(5577),
        N = x(1144),
        Ce = x(576),
        Re = x(3268);
      const He = ['addListener', 'removeListener'],
        Fe = ['addEventListener', 'removeEventListener'],
        Ne = ['on', 'off'];
      function ee(et, lt, me, Ze) {
        if (((0, Ce.m)(me) && ((Ze = me), (me = void 0)), Ze)) return ee(et, lt, me).pipe((0, Re.Z)(Ze));
        const [dt, vt] = (function Oe(et) {
          return (0, Ce.m)(et.addEventListener) && (0, Ce.m)(et.removeEventListener);
        })(et)
          ? Fe.map((We) => ($e) => et[We](lt, $e, me))
          : (function ue(et) {
              return (0, Ce.m)(et.addListener) && (0, Ce.m)(et.removeListener);
            })(et)
          ? He.map(fe(et, lt))
          : (function Qe(et) {
              return (0, Ce.m)(et.on) && (0, Ce.m)(et.off);
            })(et)
          ? Ne.map(fe(et, lt))
          : [];
        if (!dt && (0, N.z)(et)) return (0, d.z)((We) => ee(We, lt, me))((0, h.Xf)(et));
        if (!dt) throw new TypeError('Invalid event target');
        return new m.y((We) => {
          const $e = (...ge) => We.next(1 < ge.length ? ge : ge[0]);
          return dt($e), () => vt($e);
        });
      }
      function fe(et, lt) {
        return (me) => (Ze) => et[me](lt, Ze);
      }
    },
    8421: (un, ft, x) => {
      'use strict';
      x.d(ft, { Xf: () => Qe });
      var h = x(655),
        m = x(1144),
        d = x(8239),
        N = x(8306),
        Ce = x(3670),
        Re = x(2206),
        He = x(4532),
        Fe = x(6495),
        Ne = x(3260),
        ee = x(576),
        fe = x(7849),
        ue = x(8822);
      function Qe(We) {
        if (We instanceof N.y) return We;
        if (null != We) {
          if ((0, Ce.c)(We))
            return (function Oe(We) {
              return new N.y(($e) => {
                const ge = We[ue.L]();
                if ((0, ee.m)(ge.subscribe)) return ge.subscribe($e);
                throw new TypeError('Provided object does not correctly implement Symbol.observable');
              });
            })(We);
          if ((0, m.z)(We))
            return (function et(We) {
              return new N.y(($e) => {
                for (let ge = 0; ge < We.length && !$e.closed; ge++) $e.next(We[ge]);
                $e.complete();
              });
            })(We);
          if ((0, d.t)(We))
            return (function lt(We) {
              return new N.y(($e) => {
                We.then(
                  (ge) => {
                    $e.closed || ($e.next(ge), $e.complete());
                  },
                  (ge) => $e.error(ge)
                ).then(null, fe.h);
              });
            })(We);
          if ((0, Re.D)(We)) return Ze(We);
          if ((0, Fe.T)(We))
            return (function me(We) {
              return new N.y(($e) => {
                for (const ge of We) if (($e.next(ge), $e.closed)) return;
                $e.complete();
              });
            })(We);
          if ((0, Ne.L)(We))
            return (function dt(We) {
              return Ze((0, Ne.Q)(We));
            })(We);
        }
        throw (0, He.z)(We);
      }
      function Ze(We) {
        return new N.y(($e) => {
          (function vt(We, $e) {
            var ge, Ke, Ie, De;
            return (0, h.mG)(this, void 0, void 0, function* () {
              try {
                for (ge = (0, h.KL)(We); !(Ke = yield ge.next()).done; ) if (($e.next(Ke.value), $e.closed)) return;
              } catch (Ye) {
                Ie = { error: Ye };
              } finally {
                try {
                  Ke && !Ke.done && (De = ge.return) && (yield De.call(ge));
                } finally {
                  if (Ie) throw Ie.error;
                }
              }
              $e.complete();
            });
          })(We, $e).catch((ge) => $e.error(ge));
        });
      }
    },
    6451: (un, ft, x) => {
      'use strict';
      x.d(ft, { T: () => Re });
      var h = x(8189),
        m = x(8421),
        d = x(515),
        N = x(3269),
        Ce = x(8996);
      function Re(...He) {
        const Fe = (0, N.yG)(He),
          Ne = (0, N._6)(He, 1 / 0),
          ee = He;
        return ee.length ? (1 === ee.length ? (0, m.Xf)(ee[0]) : (0, h.J)(Ne)((0, Ce.D)(ee, Fe))) : d.E;
      }
    },
    9646: (un, ft, x) => {
      'use strict';
      x.d(ft, { of: () => d });
      var h = x(3269),
        m = x(8996);
      function d(...N) {
        const Ce = (0, h.yG)(N);
        return (0, m.D)(N, Ce);
      }
    },
    2843: (un, ft, x) => {
      'use strict';
      x.d(ft, { _: () => d });
      var h = x(8306),
        m = x(576);
      function d(N, Ce) {
        const Re = (0, m.m)(N) ? N : () => N,
          He = (Fe) => Fe.error(Re());
        return new h.y(Ce ? (Fe) => Ce.schedule(He, 0, Fe) : He);
      }
    },
    5963: (un, ft, x) => {
      'use strict';
      x.d(ft, { H: () => Ce });
      var h = x(8306),
        m = x(4986),
        d = x(3532);
      function Ce(Re = 0, He, Fe = m.P) {
        let Ne = -1;
        return (
          null != He && ((0, d.K)(He) ? (Fe = He) : (Ne = He)),
          new h.y((ee) => {
            let fe = (function N(Re) {
              return Re instanceof Date && !isNaN(Re);
            })(Re)
              ? +Re - Fe.now()
              : Re;
            fe < 0 && (fe = 0);
            let ue = 0;
            return Fe.schedule(function () {
              ee.closed || (ee.next(ue++), 0 <= Ne ? this.schedule(void 0, Ne) : ee.complete());
            }, fe);
          })
        );
      }
    },
    5403: (un, ft, x) => {
      'use strict';
      x.d(ft, { Q: () => m });
      var h = x(930);
      class m extends h.Lv {
        constructor(N, Ce, Re, He, Fe) {
          super(N),
            (this.onFinalize = Fe),
            (this._next = Ce
              ? function (Ne) {
                  try {
                    Ce(Ne);
                  } catch (ee) {
                    N.error(ee);
                  }
                }
              : super._next),
            (this._error = He
              ? function (Ne) {
                  try {
                    He(Ne);
                  } catch (ee) {
                    N.error(ee);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = Re
              ? function () {
                  try {
                    Re();
                  } catch (Ne) {
                    N.error(Ne);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var N;
          const { closed: Ce } = this;
          super.unsubscribe(), !Ce && (null === (N = this.onFinalize) || void 0 === N || N.call(this));
        }
      }
    },
    262: (un, ft, x) => {
      'use strict';
      x.d(ft, { K: () => N });
      var h = x(8421),
        m = x(5403),
        d = x(4482);
      function N(Ce) {
        return (0, d.e)((Re, He) => {
          let ee,
            Fe = null,
            Ne = !1;
          (Fe = Re.subscribe(
            new m.Q(He, void 0, void 0, (fe) => {
              (ee = (0, h.Xf)(Ce(fe, N(Ce)(Re)))), Fe ? (Fe.unsubscribe(), (Fe = null), ee.subscribe(He)) : (Ne = !0);
            })
          )),
            Ne && (Fe.unsubscribe(), (Fe = null), ee.subscribe(He));
        });
      }
    },
    4351: (un, ft, x) => {
      'use strict';
      x.d(ft, { b: () => d });
      var h = x(5577),
        m = x(576);
      function d(N, Ce) {
        return (0, m.m)(Ce) ? (0, h.z)(N, Ce, 1) : (0, h.z)(N, 1);
      }
    },
    8372: (un, ft, x) => {
      'use strict';
      x.d(ft, { b: () => N });
      var h = x(4986),
        m = x(4482),
        d = x(5403);
      function N(Ce, Re = h.z) {
        return (0, m.e)((He, Fe) => {
          let Ne = null,
            ee = null,
            fe = null;
          const ue = () => {
            if (Ne) {
              Ne.unsubscribe(), (Ne = null);
              const Oe = ee;
              (ee = null), Fe.next(Oe);
            }
          };
          function Qe() {
            const Oe = fe + Ce,
              et = Re.now();
            if (et < Oe) return (Ne = this.schedule(void 0, Oe - et)), void Fe.add(Ne);
            ue();
          }
          He.subscribe(
            new d.Q(
              Fe,
              (Oe) => {
                (ee = Oe), (fe = Re.now()), Ne || ((Ne = Re.schedule(Qe, Ce)), Fe.add(Ne));
              },
              () => {
                ue(), Fe.complete();
              },
              void 0,
              () => {
                ee = Ne = null;
              }
            )
          );
        });
      }
    },
    6590: (un, ft, x) => {
      'use strict';
      x.d(ft, { d: () => d });
      var h = x(4482),
        m = x(5403);
      function d(N) {
        return (0, h.e)((Ce, Re) => {
          let He = !1;
          Ce.subscribe(
            new m.Q(
              Re,
              (Fe) => {
                (He = !0), Re.next(Fe);
              },
              () => {
                He || Re.next(N), Re.complete();
              }
            )
          );
        });
      }
    },
    1005: (un, ft, x) => {
      'use strict';
      x.d(ft, { g: () => ue });
      var h = x(4986),
        m = x(7272),
        d = x(5698),
        N = x(4482),
        Ce = x(5403),
        Re = x(5032),
        Fe = x(9718),
        Ne = x(5577);
      function ee(Qe, Oe) {
        return Oe
          ? (et) =>
              (0, m.z)(
                Oe.pipe(
                  (0, d.q)(1),
                  (function He() {
                    return (0, N.e)((Qe, Oe) => {
                      Qe.subscribe(new Ce.Q(Oe, Re.Z));
                    });
                  })()
                ),
                et.pipe(ee(Qe))
              )
          : (0, Ne.z)((et, lt) => Qe(et, lt).pipe((0, d.q)(1), (0, Fe.h)(et)));
      }
      var fe = x(5963);
      function ue(Qe, Oe = h.z) {
        const et = (0, fe.H)(Qe, Oe);
        return ee(() => et);
      }
    },
    1884: (un, ft, x) => {
      'use strict';
      x.d(ft, { x: () => N });
      var h = x(4671),
        m = x(4482),
        d = x(5403);
      function N(Re, He = h.y) {
        return (
          (Re = null != Re ? Re : Ce),
          (0, m.e)((Fe, Ne) => {
            let ee,
              fe = !0;
            Fe.subscribe(
              new d.Q(Ne, (ue) => {
                const Qe = He(ue);
                (fe || !Re(ee, Qe)) && ((fe = !1), (ee = Qe), Ne.next(ue));
              })
            );
          })
        );
      }
      function Ce(Re, He) {
        return Re === He;
      }
    },
    9300: (un, ft, x) => {
      'use strict';
      x.d(ft, { h: () => d });
      var h = x(4482),
        m = x(5403);
      function d(N, Ce) {
        return (0, h.e)((Re, He) => {
          let Fe = 0;
          Re.subscribe(new m.Q(He, (Ne) => N.call(Ce, Ne, Fe++) && He.next(Ne)));
        });
      }
    },
    8746: (un, ft, x) => {
      'use strict';
      x.d(ft, { x: () => m });
      var h = x(4482);
      function m(d) {
        return (0, h.e)((N, Ce) => {
          try {
            N.subscribe(Ce);
          } finally {
            Ce.add(d);
          }
        });
      }
    },
    590: (un, ft, x) => {
      'use strict';
      x.d(ft, { P: () => He });
      var h = x(6805),
        m = x(9300),
        d = x(5698),
        N = x(6590),
        Ce = x(8068),
        Re = x(4671);
      function He(Fe, Ne) {
        const ee = arguments.length >= 2;
        return (fe) =>
          fe.pipe(
            Fe ? (0, m.h)((ue, Qe) => Fe(ue, Qe, fe)) : Re.y,
            (0, d.q)(1),
            ee ? (0, N.d)(Ne) : (0, Ce.T)(() => new h.K())
          );
      }
    },
    4004: (un, ft, x) => {
      'use strict';
      x.d(ft, { U: () => d });
      var h = x(4482),
        m = x(5403);
      function d(N, Ce) {
        return (0, h.e)((Re, He) => {
          let Fe = 0;
          Re.subscribe(
            new m.Q(He, (Ne) => {
              He.next(N.call(Ce, Ne, Fe++));
            })
          );
        });
      }
    },
    9718: (un, ft, x) => {
      'use strict';
      x.d(ft, { h: () => m });
      var h = x(4004);
      function m(d) {
        return (0, h.U)(() => d);
      }
    },
    8189: (un, ft, x) => {
      'use strict';
      x.d(ft, { J: () => d });
      var h = x(5577),
        m = x(4671);
      function d(N = 1 / 0) {
        return (0, h.z)(m.y, N);
      }
    },
    5577: (un, ft, x) => {
      'use strict';
      x.d(ft, { z: () => Fe });
      var h = x(4004),
        m = x(8421),
        d = x(4482),
        N = x(9672),
        Ce = x(5403),
        He = x(576);
      function Fe(Ne, ee, fe = 1 / 0) {
        return (0, He.m)(ee)
          ? Fe((ue, Qe) => (0, h.U)((Oe, et) => ee(ue, Oe, Qe, et))((0, m.Xf)(Ne(ue, Qe))), fe)
          : ('number' == typeof ee && (fe = ee),
            (0, d.e)((ue, Qe) =>
              (function Re(Ne, ee, fe, ue, Qe, Oe, et, lt) {
                const me = [];
                let Ze = 0,
                  dt = 0,
                  vt = !1;
                const We = () => {
                    vt && !me.length && !Ze && ee.complete();
                  },
                  $e = (Ke) => (Ze < ue ? ge(Ke) : me.push(Ke)),
                  ge = (Ke) => {
                    Oe && ee.next(Ke), Ze++;
                    let Ie = !1;
                    (0, m.Xf)(fe(Ke, dt++)).subscribe(
                      new Ce.Q(
                        ee,
                        (De) => {
                          null == Qe || Qe(De), Oe ? $e(De) : ee.next(De);
                        },
                        () => {
                          Ie = !0;
                        },
                        void 0,
                        () => {
                          if (Ie)
                            try {
                              for (Ze--; me.length && Ze < ue; ) {
                                const De = me.shift();
                                et ? (0, N.f)(ee, et, () => ge(De)) : ge(De);
                              }
                              We();
                            } catch (De) {
                              ee.error(De);
                            }
                        }
                      )
                    );
                  };
                return (
                  Ne.subscribe(
                    new Ce.Q(ee, $e, () => {
                      (vt = !0), We();
                    })
                  ),
                  () => {
                    null == lt || lt();
                  }
                );
              })(ue, Qe, Ne, fe)
            ));
      }
    },
    5363: (un, ft, x) => {
      'use strict';
      x.d(ft, { Q: () => N });
      var h = x(9672),
        m = x(4482),
        d = x(5403);
      function N(Ce, Re = 0) {
        return (0, m.e)((He, Fe) => {
          He.subscribe(
            new d.Q(
              Fe,
              (Ne) => (0, h.f)(Fe, Ce, () => Fe.next(Ne), Re),
              () => (0, h.f)(Fe, Ce, () => Fe.complete(), Re),
              (Ne) => (0, h.f)(Fe, Ce, () => Fe.error(Ne), Re)
            )
          );
        });
      }
    },
    8343: (un, ft, x) => {
      'use strict';
      x.d(ft, { x: () => d });
      var h = x(4482),
        m = x(5403);
      function d() {
        return (0, h.e)((N, Ce) => {
          let Re = null;
          N._refCount++;
          const He = new m.Q(Ce, void 0, void 0, void 0, () => {
            if (!N || N._refCount <= 0 || 0 < --N._refCount) return void (Re = null);
            const Fe = N._connection,
              Ne = Re;
            (Re = null), Fe && (!Ne || Fe === Ne) && Fe.unsubscribe(), Ce.unsubscribe();
          });
          N.subscribe(He), He.closed || (Re = N.connect());
        });
      }
    },
    5026: (un, ft, x) => {
      'use strict';
      x.d(ft, { R: () => N });
      var h = x(4482),
        m = x(5403);
      function d(Ce, Re, He, Fe, Ne) {
        return (ee, fe) => {
          let ue = He,
            Qe = Re,
            Oe = 0;
          ee.subscribe(
            new m.Q(
              fe,
              (et) => {
                const lt = Oe++;
                (Qe = ue ? Ce(Qe, et, lt) : ((ue = !0), et)), Fe && fe.next(Qe);
              },
              Ne &&
                (() => {
                  ue && fe.next(Qe), fe.complete();
                })
            )
          );
        };
      }
      function N(Ce, Re) {
        return (0, h.e)(d(Ce, Re, arguments.length >= 2, !0));
      }
    },
    3099: (un, ft, x) => {
      'use strict';
      x.d(ft, { B: () => Re });
      var h = x(8996),
        m = x(5698),
        d = x(7579),
        N = x(930),
        Ce = x(4482);
      function Re(Fe = {}) {
        const {
          connector: Ne = () => new d.x(),
          resetOnError: ee = !0,
          resetOnComplete: fe = !0,
          resetOnRefCountZero: ue = !0,
        } = Fe;
        return (Qe) => {
          let Oe = null,
            et = null,
            lt = null,
            me = 0,
            Ze = !1,
            dt = !1;
          const vt = () => {
              null == et || et.unsubscribe(), (et = null);
            },
            We = () => {
              vt(), (Oe = lt = null), (Ze = dt = !1);
            },
            $e = () => {
              const ge = Oe;
              We(), null == ge || ge.unsubscribe();
            };
          return (0, Ce.e)((ge, Ke) => {
            me++, !dt && !Ze && vt();
            const Ie = (lt = null != lt ? lt : Ne());
            Ke.add(() => {
              me--, 0 === me && !dt && !Ze && (et = He($e, ue));
            }),
              Ie.subscribe(Ke),
              Oe ||
                ((Oe = new N.Hp({
                  next: (De) => Ie.next(De),
                  error: (De) => {
                    (dt = !0), vt(), (et = He(We, ee, De)), Ie.error(De);
                  },
                  complete: () => {
                    (Ze = !0), vt(), (et = He(We, fe)), Ie.complete();
                  },
                })),
                (0, h.D)(ge).subscribe(Oe));
          })(Qe);
        };
      }
      function He(Fe, Ne, ...ee) {
        return !0 === Ne
          ? (Fe(), null)
          : !1 === Ne
          ? null
          : Ne(...ee)
              .pipe((0, m.q)(1))
              .subscribe(() => Fe());
      }
    },
    3151: (un, ft, x) => {
      'use strict';
      x.d(ft, { d: () => Ce });
      var h = x(7579),
        m = x(6063);
      class d extends h.x {
        constructor(He = 1 / 0, Fe = 1 / 0, Ne = m.l) {
          super(),
            (this._bufferSize = He),
            (this._windowTime = Fe),
            (this._timestampProvider = Ne),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = Fe === 1 / 0),
            (this._bufferSize = Math.max(1, He)),
            (this._windowTime = Math.max(1, Fe));
        }
        next(He) {
          const { isStopped: Fe, _buffer: Ne, _infiniteTimeWindow: ee, _timestampProvider: fe, _windowTime: ue } = this;
          Fe || (Ne.push(He), !ee && Ne.push(fe.now() + ue)), this._trimBuffer(), super.next(He);
        }
        _subscribe(He) {
          this._throwIfClosed(), this._trimBuffer();
          const Fe = this._innerSubscribe(He),
            { _infiniteTimeWindow: Ne, _buffer: ee } = this,
            fe = ee.slice();
          for (let ue = 0; ue < fe.length && !He.closed; ue += Ne ? 1 : 2) He.next(fe[ue]);
          return this._checkFinalizedStatuses(He), Fe;
        }
        _trimBuffer() {
          const { _bufferSize: He, _timestampProvider: Fe, _buffer: Ne, _infiniteTimeWindow: ee } = this,
            fe = (ee ? 1 : 2) * He;
          if ((He < 1 / 0 && fe < Ne.length && Ne.splice(0, Ne.length - fe), !ee)) {
            const ue = Fe.now();
            let Qe = 0;
            for (let Oe = 1; Oe < Ne.length && Ne[Oe] <= ue; Oe += 2) Qe = Oe;
            Qe && Ne.splice(0, Qe + 1);
          }
        }
      }
      var N = x(3099);
      function Ce(Re, He, Fe) {
        var Ne, ee;
        let fe,
          ue = !1;
        return (
          Re && 'object' == typeof Re
            ? ((fe = null !== (Ne = Re.bufferSize) && void 0 !== Ne ? Ne : 1 / 0),
              (He = null !== (ee = Re.windowTime) && void 0 !== ee ? ee : 1 / 0),
              (ue = !!Re.refCount),
              (Fe = Re.scheduler))
            : (fe = null != Re ? Re : 1 / 0),
          (0, N.B)({
            connector: () => new d(fe, He, Fe),
            resetOnError: !0,
            resetOnComplete: !1,
            resetOnRefCountZero: ue,
          })
        );
      }
    },
    5684: (un, ft, x) => {
      'use strict';
      x.d(ft, { T: () => m });
      var h = x(9300);
      function m(d) {
        return (0, h.h)((N, Ce) => d <= Ce);
      }
    },
    8675: (un, ft, x) => {
      'use strict';
      x.d(ft, { O: () => N });
      var h = x(7272),
        m = x(3269),
        d = x(4482);
      function N(...Ce) {
        const Re = (0, m.yG)(Ce);
        return (0, d.e)((He, Fe) => {
          (Re ? (0, h.z)(Ce, He, Re) : (0, h.z)(Ce, He)).subscribe(Fe);
        });
      }
    },
    9468: (un, ft, x) => {
      'use strict';
      x.d(ft, { R: () => m });
      var h = x(4482);
      function m(d, N = 0) {
        return (0, h.e)((Ce, Re) => {
          Re.add(d.schedule(() => Ce.subscribe(Re), N));
        });
      }
    },
    3900: (un, ft, x) => {
      'use strict';
      x.d(ft, { w: () => N });
      var h = x(8421),
        m = x(4482),
        d = x(5403);
      function N(Ce, Re) {
        return (0, m.e)((He, Fe) => {
          let Ne = null,
            ee = 0,
            fe = !1;
          const ue = () => fe && !Ne && Fe.complete();
          He.subscribe(
            new d.Q(
              Fe,
              (Qe) => {
                null == Ne || Ne.unsubscribe();
                let Oe = 0;
                const et = ee++;
                (0, h.Xf)(Ce(Qe, et)).subscribe(
                  (Ne = new d.Q(
                    Fe,
                    (lt) => Fe.next(Re ? Re(Qe, lt, et, Oe++) : lt),
                    () => {
                      (Ne = null), ue();
                    }
                  ))
                );
              },
              () => {
                (fe = !0), ue();
              }
            )
          );
        });
      }
    },
    5698: (un, ft, x) => {
      'use strict';
      x.d(ft, { q: () => N });
      var h = x(515),
        m = x(4482),
        d = x(5403);
      function N(Ce) {
        return Ce <= 0
          ? () => h.E
          : (0, m.e)((Re, He) => {
              let Fe = 0;
              Re.subscribe(
                new d.Q(He, (Ne) => {
                  ++Fe <= Ce && (He.next(Ne), Ce <= Fe && He.complete());
                })
              );
            });
      }
    },
    2722: (un, ft, x) => {
      'use strict';
      x.d(ft, { R: () => Ce });
      var h = x(4482),
        m = x(5403),
        d = x(8421),
        N = x(5032);
      function Ce(Re) {
        return (0, h.e)((He, Fe) => {
          (0, d.Xf)(Re).subscribe(new m.Q(Fe, () => Fe.complete(), N.Z)), !Fe.closed && He.subscribe(Fe);
        });
      }
    },
    8505: (un, ft, x) => {
      'use strict';
      x.d(ft, { b: () => Ce });
      var h = x(576),
        m = x(4482),
        d = x(5403),
        N = x(4671);
      function Ce(Re, He, Fe) {
        const Ne = (0, h.m)(Re) || He || Fe ? { next: Re, error: He, complete: Fe } : Re;
        return Ne
          ? (0, m.e)((ee, fe) => {
              var ue;
              null === (ue = Ne.subscribe) || void 0 === ue || ue.call(Ne);
              let Qe = !0;
              ee.subscribe(
                new d.Q(
                  fe,
                  (Oe) => {
                    var et;
                    null === (et = Ne.next) || void 0 === et || et.call(Ne, Oe), fe.next(Oe);
                  },
                  () => {
                    var Oe;
                    (Qe = !1), null === (Oe = Ne.complete) || void 0 === Oe || Oe.call(Ne), fe.complete();
                  },
                  (Oe) => {
                    var et;
                    (Qe = !1), null === (et = Ne.error) || void 0 === et || et.call(Ne, Oe), fe.error(Oe);
                  },
                  () => {
                    var Oe, et;
                    Qe && (null === (Oe = Ne.unsubscribe) || void 0 === Oe || Oe.call(Ne)),
                      null === (et = Ne.finalize) || void 0 === et || et.call(Ne);
                  }
                )
              );
            })
          : N.y;
      }
    },
    8068: (un, ft, x) => {
      'use strict';
      x.d(ft, { T: () => N });
      var h = x(6805),
        m = x(4482),
        d = x(5403);
      function N(Re = Ce) {
        return (0, m.e)((He, Fe) => {
          let Ne = !1;
          He.subscribe(
            new d.Q(
              Fe,
              (ee) => {
                (Ne = !0), Fe.next(ee);
              },
              () => (Ne ? Fe.complete() : Fe.error(Re()))
            )
          );
        });
      }
      function Ce() {
        return new h.K();
      }
    },
    4408: (un, ft, x) => {
      'use strict';
      x.d(ft, { o: () => Ce });
      var h = x(727);
      class m extends h.w0 {
        constructor(He, Fe) {
          super();
        }
        schedule(He, Fe = 0) {
          return this;
        }
      }
      const d = {
        setInterval(...Re) {
          const { delegate: He } = d;
          return ((null == He ? void 0 : He.setInterval) || setInterval)(...Re);
        },
        clearInterval(Re) {
          const { delegate: He } = d;
          return ((null == He ? void 0 : He.clearInterval) || clearInterval)(Re);
        },
        delegate: void 0,
      };
      var N = x(8737);
      class Ce extends m {
        constructor(He, Fe) {
          super(He, Fe), (this.scheduler = He), (this.work = Fe), (this.pending = !1);
        }
        schedule(He, Fe = 0) {
          if (this.closed) return this;
          this.state = He;
          const Ne = this.id,
            ee = this.scheduler;
          return (
            null != Ne && (this.id = this.recycleAsyncId(ee, Ne, Fe)),
            (this.pending = !0),
            (this.delay = Fe),
            (this.id = this.id || this.requestAsyncId(ee, this.id, Fe)),
            this
          );
        }
        requestAsyncId(He, Fe, Ne = 0) {
          return d.setInterval(He.flush.bind(He, this), Ne);
        }
        recycleAsyncId(He, Fe, Ne = 0) {
          if (null != Ne && this.delay === Ne && !1 === this.pending) return Fe;
          d.clearInterval(Fe);
        }
        execute(He, Fe) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const Ne = this._execute(He, Fe);
          if (Ne) return Ne;
          !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(He, Fe) {
          let ee,
            Ne = !1;
          try {
            this.work(He);
          } catch (fe) {
            (Ne = !0), (ee = fe || new Error('Scheduled action threw falsy error'));
          }
          if (Ne) return this.unsubscribe(), ee;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: He, scheduler: Fe } = this,
              { actions: Ne } = Fe;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, N.P)(Ne, this),
              null != He && (this.id = this.recycleAsyncId(Fe, He, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
    },
    7565: (un, ft, x) => {
      'use strict';
      x.d(ft, { v: () => d });
      var h = x(6063);
      class m {
        constructor(Ce, Re = m.now) {
          (this.schedulerActionCtor = Ce), (this.now = Re);
        }
        schedule(Ce, Re = 0, He) {
          return new this.schedulerActionCtor(this, Ce).schedule(He, Re);
        }
      }
      m.now = h.l.now;
      class d extends m {
        constructor(Ce, Re = m.now) {
          super(Ce, Re), (this.actions = []), (this._active = !1), (this._scheduled = void 0);
        }
        flush(Ce) {
          const { actions: Re } = this;
          if (this._active) return void Re.push(Ce);
          let He;
          this._active = !0;
          do {
            if ((He = Ce.execute(Ce.state, Ce.delay))) break;
          } while ((Ce = Re.shift()));
          if (((this._active = !1), He)) {
            for (; (Ce = Re.shift()); ) Ce.unsubscribe();
            throw He;
          }
        }
      }
    },
    3101: (un, ft, x) => {
      'use strict';
      x.d(ft, { E: () => Oe });
      var h = x(4408);
      let d,
        m = 1;
      const N = {};
      function Ce(lt) {
        return lt in N && (delete N[lt], !0);
      }
      const Re = {
          setImmediate(lt) {
            const me = m++;
            return (N[me] = !0), d || (d = Promise.resolve()), d.then(() => Ce(me) && lt()), me;
          },
          clearImmediate(lt) {
            Ce(lt);
          },
        },
        { setImmediate: Fe, clearImmediate: Ne } = Re,
        ee = {
          setImmediate(...lt) {
            const { delegate: me } = ee;
            return ((null == me ? void 0 : me.setImmediate) || Fe)(...lt);
          },
          clearImmediate(lt) {
            const { delegate: me } = ee;
            return ((null == me ? void 0 : me.clearImmediate) || Ne)(lt);
          },
          delegate: void 0,
        };
      var ue = x(7565);
      const Oe = new (class Qe extends ue.v {
        flush(me) {
          this._active = !0;
          const Ze = this._scheduled;
          this._scheduled = void 0;
          const { actions: dt } = this;
          let vt;
          me = me || dt.shift();
          do {
            if ((vt = me.execute(me.state, me.delay))) break;
          } while ((me = dt[0]) && me.id === Ze && dt.shift());
          if (((this._active = !1), vt)) {
            for (; (me = dt[0]) && me.id === Ze && dt.shift(); ) me.unsubscribe();
            throw vt;
          }
        }
      })(
        class fe extends h.o {
          constructor(me, Ze) {
            super(me, Ze), (this.scheduler = me), (this.work = Ze);
          }
          requestAsyncId(me, Ze, dt = 0) {
            return null !== dt && dt > 0
              ? super.requestAsyncId(me, Ze, dt)
              : (me.actions.push(this), me._scheduled || (me._scheduled = ee.setImmediate(me.flush.bind(me, void 0))));
          }
          recycleAsyncId(me, Ze, dt = 0) {
            if ((null != dt && dt > 0) || (null == dt && this.delay > 0)) return super.recycleAsyncId(me, Ze, dt);
            me.actions.some((vt) => vt.id === Ze) || (ee.clearImmediate(Ze), (me._scheduled = void 0));
          }
        }
      );
    },
    4986: (un, ft, x) => {
      'use strict';
      x.d(ft, { z: () => d, P: () => N });
      var h = x(4408);
      const d = new (x(7565).v)(h.o),
        N = d;
    },
    6063: (un, ft, x) => {
      'use strict';
      x.d(ft, { l: () => h });
      const h = { now: () => (h.delegate || Date).now(), delegate: void 0 };
    },
    3410: (un, ft, x) => {
      'use strict';
      x.d(ft, { z: () => h });
      const h = {
        setTimeout(...m) {
          const { delegate: d } = h;
          return ((null == d ? void 0 : d.setTimeout) || setTimeout)(...m);
        },
        clearTimeout(m) {
          const { delegate: d } = h;
          return ((null == d ? void 0 : d.clearTimeout) || clearTimeout)(m);
        },
        delegate: void 0,
      };
    },
    2202: (un, ft, x) => {
      'use strict';
      x.d(ft, { h: () => m });
      const m = (function h() {
        return 'function' == typeof Symbol && Symbol.iterator ? Symbol.iterator : '@@iterator';
      })();
    },
    8822: (un, ft, x) => {
      'use strict';
      x.d(ft, { L: () => h });
      const h = ('function' == typeof Symbol && Symbol.observable) || '@@observable';
    },
    6805: (un, ft, x) => {
      'use strict';
      x.d(ft, { K: () => m });
      const m = (0, x(3888).d)(
        (d) =>
          function () {
            d(this), (this.name = 'EmptyError'), (this.message = 'no elements in sequence');
          }
      );
    },
    3269: (un, ft, x) => {
      'use strict';
      x.d(ft, { jO: () => N, yG: () => Ce, _6: () => Re });
      var h = x(576),
        m = x(3532);
      function d(He) {
        return He[He.length - 1];
      }
      function N(He) {
        return (0, h.m)(d(He)) ? He.pop() : void 0;
      }
      function Ce(He) {
        return (0, m.K)(d(He)) ? He.pop() : void 0;
      }
      function Re(He, Fe) {
        return 'number' == typeof d(He) ? He.pop() : Fe;
      }
    },
    4742: (un, ft, x) => {
      'use strict';
      x.d(ft, { D: () => Ce });
      const { isArray: h } = Array,
        { getPrototypeOf: m, prototype: d, keys: N } = Object;
      function Ce(He) {
        if (1 === He.length) {
          const Fe = He[0];
          if (h(Fe)) return { args: Fe, keys: null };
          if (
            (function Re(He) {
              return He && 'object' == typeof He && m(He) === d;
            })(Fe)
          ) {
            const Ne = N(Fe);
            return { args: Ne.map((ee) => Fe[ee]), keys: Ne };
          }
        }
        return { args: He, keys: null };
      }
    },
    8737: (un, ft, x) => {
      'use strict';
      function h(m, d) {
        if (m) {
          const N = m.indexOf(d);
          0 <= N && m.splice(N, 1);
        }
      }
      x.d(ft, { P: () => h });
    },
    3888: (un, ft, x) => {
      'use strict';
      function h(m) {
        const N = m((Ce) => {
          Error.call(Ce), (Ce.stack = new Error().stack);
        });
        return (N.prototype = Object.create(Error.prototype)), (N.prototype.constructor = N), N;
      }
      x.d(ft, { d: () => h });
    },
    1810: (un, ft, x) => {
      'use strict';
      function h(m, d) {
        return m.reduce((N, Ce, Re) => ((N[Ce] = d[Re]), N), {});
      }
      x.d(ft, { n: () => h });
    },
    2806: (un, ft, x) => {
      'use strict';
      x.d(ft, { x: () => d, O: () => N });
      var h = x(2416);
      let m = null;
      function d(Ce) {
        if (h.v.useDeprecatedSynchronousErrorHandling) {
          const Re = !m;
          if ((Re && (m = { errorThrown: !1, error: null }), Ce(), Re)) {
            const { errorThrown: He, error: Fe } = m;
            if (((m = null), He)) throw Fe;
          }
        } else Ce();
      }
      function N(Ce) {
        h.v.useDeprecatedSynchronousErrorHandling && m && ((m.errorThrown = !0), (m.error = Ce));
      }
    },
    9672: (un, ft, x) => {
      'use strict';
      function h(m, d, N, Ce = 0, Re = !1) {
        const He = d.schedule(function () {
          N(), Re ? m.add(this.schedule(null, Ce)) : this.unsubscribe();
        }, Ce);
        if ((m.add(He), !Re)) return He;
      }
      x.d(ft, { f: () => h });
    },
    4671: (un, ft, x) => {
      'use strict';
      function h(m) {
        return m;
      }
      x.d(ft, { y: () => h });
    },
    1144: (un, ft, x) => {
      'use strict';
      x.d(ft, { z: () => h });
      const h = (m) => m && 'number' == typeof m.length && 'function' != typeof m;
    },
    2206: (un, ft, x) => {
      'use strict';
      x.d(ft, { D: () => m });
      var h = x(576);
      function m(d) {
        return Symbol.asyncIterator && (0, h.m)(null == d ? void 0 : d[Symbol.asyncIterator]);
      }
    },
    576: (un, ft, x) => {
      'use strict';
      function h(m) {
        return 'function' == typeof m;
      }
      x.d(ft, { m: () => h });
    },
    3670: (un, ft, x) => {
      'use strict';
      x.d(ft, { c: () => d });
      var h = x(8822),
        m = x(576);
      function d(N) {
        return (0, m.m)(N[h.L]);
      }
    },
    6495: (un, ft, x) => {
      'use strict';
      x.d(ft, { T: () => d });
      var h = x(2202),
        m = x(576);
      function d(N) {
        return (0, m.m)(null == N ? void 0 : N[h.h]);
      }
    },
    5191: (un, ft, x) => {
      'use strict';
      x.d(ft, { b: () => d });
      var h = x(8306),
        m = x(576);
      function d(N) {
        return !!N && (N instanceof h.y || ((0, m.m)(N.lift) && (0, m.m)(N.subscribe)));
      }
    },
    8239: (un, ft, x) => {
      'use strict';
      x.d(ft, { t: () => m });
      var h = x(576);
      function m(d) {
        return (0, h.m)(null == d ? void 0 : d.then);
      }
    },
    3260: (un, ft, x) => {
      'use strict';
      x.d(ft, { Q: () => d, L: () => N });
      var h = x(655),
        m = x(576);
      function d(Ce) {
        return (0, h.FC)(this, arguments, function* () {
          const He = Ce.getReader();
          try {
            for (;;) {
              const { value: Fe, done: Ne } = yield (0, h.qq)(He.read());
              if (Ne) return yield (0, h.qq)(void 0);
              yield yield (0, h.qq)(Fe);
            }
          } finally {
            He.releaseLock();
          }
        });
      }
      function N(Ce) {
        return (0, m.m)(null == Ce ? void 0 : Ce.getReader);
      }
    },
    3532: (un, ft, x) => {
      'use strict';
      x.d(ft, { K: () => m });
      var h = x(576);
      function m(d) {
        return d && (0, h.m)(d.schedule);
      }
    },
    4482: (un, ft, x) => {
      'use strict';
      x.d(ft, { A: () => m, e: () => d });
      var h = x(576);
      function m(N) {
        return (0, h.m)(null == N ? void 0 : N.lift);
      }
      function d(N) {
        return (Ce) => {
          if (m(Ce))
            return Ce.lift(function (Re) {
              try {
                return N(Re, this);
              } catch (He) {
                this.error(He);
              }
            });
          throw new TypeError('Unable to lift unknown Observable type');
        };
      }
    },
    3268: (un, ft, x) => {
      'use strict';
      x.d(ft, { Z: () => N });
      var h = x(4004);
      const { isArray: m } = Array;
      function N(Ce) {
        return (0, h.U)((Re) =>
          (function d(Ce, Re) {
            return m(Re) ? Ce(...Re) : Ce(Re);
          })(Ce, Re)
        );
      }
    },
    5032: (un, ft, x) => {
      'use strict';
      function h() {}
      x.d(ft, { Z: () => h });
    },
    7849: (un, ft, x) => {
      'use strict';
      x.d(ft, { h: () => d });
      var h = x(2416),
        m = x(3410);
      function d(N) {
        m.z.setTimeout(() => {
          const { onUnhandledError: Ce } = h.v;
          if (!Ce) throw N;
          Ce(N);
        });
      }
    },
    4532: (un, ft, x) => {
      'use strict';
      function h(m) {
        return new TypeError(
          `You provided ${
            null !== m && 'object' == typeof m ? 'an invalid object' : `'${m}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      x.d(ft, { z: () => h });
    },
    655: (un, ft, x) => {
      'use strict';
      function N(Ye, it) {
        var qe = {};
        for (var Ve in Ye) Object.prototype.hasOwnProperty.call(Ye, Ve) && it.indexOf(Ve) < 0 && (qe[Ve] = Ye[Ve]);
        if (null != Ye && 'function' == typeof Object.getOwnPropertySymbols) {
          var Ft = 0;
          for (Ve = Object.getOwnPropertySymbols(Ye); Ft < Ve.length; Ft++)
            it.indexOf(Ve[Ft]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(Ye, Ve[Ft]) &&
              (qe[Ve[Ft]] = Ye[Ve[Ft]]);
        }
        return qe;
      }
      function Ce(Ye, it, qe, Ve) {
        var St,
          Ft = arguments.length,
          kt = Ft < 3 ? it : null === Ve ? (Ve = Object.getOwnPropertyDescriptor(it, qe)) : Ve;
        if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) kt = Reflect.decorate(Ye, it, qe, Ve);
        else
          for (var on = Ye.length - 1; on >= 0; on--)
            (St = Ye[on]) && (kt = (Ft < 3 ? St(kt) : Ft > 3 ? St(it, qe, kt) : St(it, qe)) || kt);
        return Ft > 3 && kt && Object.defineProperty(it, qe, kt), kt;
      }
      function Fe(Ye, it, qe, Ve) {
        return new (qe || (qe = Promise))(function (kt, St) {
          function on(st) {
            try {
              Ct(Ve.next(st));
            } catch (Et) {
              St(Et);
            }
          }
          function Je(st) {
            try {
              Ct(Ve.throw(st));
            } catch (Et) {
              St(Et);
            }
          }
          function Ct(st) {
            st.done
              ? kt(st.value)
              : (function Ft(kt) {
                  return kt instanceof qe
                    ? kt
                    : new qe(function (St) {
                        St(kt);
                      });
                })(st.value).then(on, Je);
          }
          Ct((Ve = Ve.apply(Ye, it || [])).next());
        });
      }
      function me(Ye) {
        return this instanceof me ? ((this.v = Ye), this) : new me(Ye);
      }
      function Ze(Ye, it, qe) {
        if (!Symbol.asyncIterator) throw new TypeError('Symbol.asyncIterator is not defined.');
        var Ft,
          Ve = qe.apply(Ye, it || []),
          kt = [];
        return (
          (Ft = {}),
          St('next'),
          St('throw'),
          St('return'),
          (Ft[Symbol.asyncIterator] = function () {
            return this;
          }),
          Ft
        );
        function St(yt) {
          Ve[yt] &&
            (Ft[yt] = function (Ue) {
              return new Promise(function (bt, at) {
                kt.push([yt, Ue, bt, at]) > 1 || on(yt, Ue);
              });
            });
        }
        function on(yt, Ue) {
          try {
            !(function Je(yt) {
              yt.value instanceof me ? Promise.resolve(yt.value.v).then(Ct, st) : Et(kt[0][2], yt);
            })(Ve[yt](Ue));
          } catch (bt) {
            Et(kt[0][3], bt);
          }
        }
        function Ct(yt) {
          on('next', yt);
        }
        function st(yt) {
          on('throw', yt);
        }
        function Et(yt, Ue) {
          yt(Ue), kt.shift(), kt.length && on(kt[0][0], kt[0][1]);
        }
      }
      function vt(Ye) {
        if (!Symbol.asyncIterator) throw new TypeError('Symbol.asyncIterator is not defined.');
        var qe,
          it = Ye[Symbol.asyncIterator];
        return it
          ? it.call(Ye)
          : ((Ye = (function ue(Ye) {
              var it = 'function' == typeof Symbol && Symbol.iterator,
                qe = it && Ye[it],
                Ve = 0;
              if (qe) return qe.call(Ye);
              if (Ye && 'number' == typeof Ye.length)
                return {
                  next: function () {
                    return Ye && Ve >= Ye.length && (Ye = void 0), { value: Ye && Ye[Ve++], done: !Ye };
                  },
                };
              throw new TypeError(it ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
            })(Ye)),
            (qe = {}),
            Ve('next'),
            Ve('throw'),
            Ve('return'),
            (qe[Symbol.asyncIterator] = function () {
              return this;
            }),
            qe);
        function Ve(kt) {
          qe[kt] =
            Ye[kt] &&
            function (St) {
              return new Promise(function (on, Je) {
                !(function Ft(kt, St, on, Je) {
                  Promise.resolve(Je).then(function (Ct) {
                    kt({ value: Ct, done: on });
                  }, St);
                })(on, Je, (St = Ye[kt](St)).done, St.value);
              });
            };
        }
      }
      x.d(ft, { _T: () => N, gn: () => Ce, mG: () => Fe, qq: () => me, FC: () => Ze, KL: () => vt });
    },
    1777: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        l3: () => d,
        _j: () => h,
        LC: () => m,
        ZN: () => Ze,
        jt: () => Ce,
        pV: () => Qe,
        F4: () => ee,
        IO: () => et,
        vP: () => He,
        SB: () => Ne,
        oB: () => Fe,
        eR: () => fe,
        X$: () => N,
        ZE: () => dt,
        k1: () => vt,
      });
      class h {}
      class m {}
      const d = '*';
      function N(We, $e) {
        return { type: 7, name: We, definitions: $e, options: {} };
      }
      function Ce(We, $e = null) {
        return { type: 4, styles: $e, timings: We };
      }
      function He(We, $e = null) {
        return { type: 2, steps: We, options: $e };
      }
      function Fe(We) {
        return { type: 6, styles: We, offset: null };
      }
      function Ne(We, $e, ge) {
        return { type: 0, name: We, styles: $e, options: ge };
      }
      function ee(We) {
        return { type: 5, steps: We };
      }
      function fe(We, $e, ge = null) {
        return { type: 1, expr: We, animation: $e, options: ge };
      }
      function Qe(We = null) {
        return { type: 9, options: We };
      }
      function et(We, $e, ge = null) {
        return { type: 11, selector: We, animation: $e, options: ge };
      }
      function me(We) {
        Promise.resolve(null).then(We);
      }
      class Ze {
        constructor($e = 0, ge = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = $e + ge);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach(($e) => $e()), (this._onDoneFns = []));
        }
        onStart($e) {
          this._onStartFns.push($e);
        }
        onDone($e) {
          this._onDoneFns.push($e);
        }
        onDestroy($e) {
          this._onDestroyFns.push($e);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()), (this._started = !0);
        }
        triggerMicrotask() {
          me(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach(($e) => $e()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach(($e) => $e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this._started = !1;
        }
        setPosition($e) {
          this._position = this.totalTime ? $e * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback($e) {
          const ge = 'start' == $e ? this._onStartFns : this._onDoneFns;
          ge.forEach((Ke) => Ke()), (ge.length = 0);
        }
      }
      class dt {
        constructor($e) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = $e);
          let ge = 0,
            Ke = 0,
            Ie = 0;
          const De = this.players.length;
          0 == De
            ? me(() => this._onFinish())
            : this.players.forEach((Ye) => {
                Ye.onDone(() => {
                  ++ge == De && this._onFinish();
                }),
                  Ye.onDestroy(() => {
                    ++Ke == De && this._onDestroy();
                  }),
                  Ye.onStart(() => {
                    ++Ie == De && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce((Ye, it) => Math.max(Ye, it.totalTime), 0));
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach(($e) => $e()), (this._onDoneFns = []));
        }
        init() {
          this.players.forEach(($e) => $e.init());
        }
        onStart($e) {
          this._onStartFns.push($e);
        }
        _onStart() {
          this.hasStarted() || ((this._started = !0), this._onStartFns.forEach(($e) => $e()), (this._onStartFns = []));
        }
        onDone($e) {
          this._onDoneFns.push($e);
        }
        onDestroy($e) {
          this._onDestroyFns.push($e);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(), this._onStart(), this.players.forEach(($e) => $e.play());
        }
        pause() {
          this.players.forEach(($e) => $e.pause());
        }
        restart() {
          this.players.forEach(($e) => $e.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach(($e) => $e.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach(($e) => $e.destroy()),
            this._onDestroyFns.forEach(($e) => $e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach(($e) => $e.reset()), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        setPosition($e) {
          const ge = $e * this.totalTime;
          this.players.forEach((Ke) => {
            const Ie = Ke.totalTime ? Math.min(1, ge / Ke.totalTime) : 1;
            Ke.setPosition(Ie);
          });
        }
        getPosition() {
          const $e = this.players.reduce((ge, Ke) => (null === ge || Ke.totalTime > ge.totalTime ? Ke : ge), null);
          return null != $e ? $e.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach(($e) => {
            $e.beforeDestroy && $e.beforeDestroy();
          });
        }
        triggerCallback($e) {
          const ge = 'start' == $e ? this._onStartFns : this._onDoneFns;
          ge.forEach((Ke) => Ke()), (ge.length = 0);
        }
      }
      const vt = '!';
    },
    5664: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        rt: () => he,
        Em: () => on,
        tE: () => de,
        qV: () => Zt,
        qm: () => ie,
        ic: () => Ct,
        X6: () => Be,
        yG: () => Pe,
      });
      var h = x(9808),
        m = x(5e3),
        d = x(7579),
        N = x(727),
        Ce = x(1135),
        Re = x(9646),
        He = x(1159),
        Fe = x(8505),
        Ne = x(8372),
        ee = x(9300),
        fe = x(4004),
        ue = x(5698),
        Qe = x(5684),
        Oe = x(1884),
        et = x(2722),
        lt = x(3191),
        me = x(925),
        Ze = x(7144);
      class on extends class kt {
        constructor(pe) {
          (this._items = pe),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new d.x()),
            (this._typeaheadSubscription = N.w0.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (_e) => _e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new d.x()),
            (this.change = new d.x()),
            pe instanceof m.n_E &&
              pe.changes.subscribe((_e) => {
                if (this._activeItem) {
                  const Ot = _e.toArray().indexOf(this._activeItem);
                  Ot > -1 && Ot !== this._activeItemIndex && (this._activeItemIndex = Ot);
                }
              });
        }
        skipPredicate(pe) {
          return (this._skipPredicateFn = pe), this;
        }
        withWrap(pe = !0) {
          return (this._wrap = pe), this;
        }
        withVerticalOrientation(pe = !0) {
          return (this._vertical = pe), this;
        }
        withHorizontalOrientation(pe) {
          return (this._horizontal = pe), this;
        }
        withAllowedModifierKeys(pe) {
          return (this._allowedModifierKeys = pe), this;
        }
        withTypeAhead(pe = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                (0, Fe.b)((_e) => this._pressedLetters.push(_e)),
                (0, Ne.b)(pe),
                (0, ee.h)(() => this._pressedLetters.length > 0),
                (0, fe.U)(() => this._pressedLetters.join(''))
              )
              .subscribe((_e) => {
                const Xe = this._getItemsArray();
                for (let Ot = 1; Ot < Xe.length + 1; Ot++) {
                  const Yt = (this._activeItemIndex + Ot) % Xe.length,
                    _n = Xe[Yt];
                  if (!this._skipPredicateFn(_n) && 0 === _n.getLabel().toUpperCase().trim().indexOf(_e)) {
                    this.setActiveItem(Yt);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(pe = !0) {
          return (this._homeAndEnd = pe), this;
        }
        setActiveItem(pe) {
          const _e = this._activeItem;
          this.updateActiveItem(pe), this._activeItem !== _e && this.change.next(this._activeItemIndex);
        }
        onKeydown(pe) {
          const _e = pe.keyCode,
            Ot = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              (Yt) => !pe[Yt] || this._allowedModifierKeys.indexOf(Yt) > -1
            );
          switch (_e) {
            case He.Mf:
              return void this.tabOut.next();
            case He.JH:
              if (this._vertical && Ot) {
                this.setNextItemActive();
                break;
              }
              return;
            case He.LH:
              if (this._vertical && Ot) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case He.SV:
              if (this._horizontal && Ot) {
                'rtl' === this._horizontal ? this.setPreviousItemActive() : this.setNextItemActive();
                break;
              }
              return;
            case He.oh:
              if (this._horizontal && Ot) {
                'rtl' === this._horizontal ? this.setNextItemActive() : this.setPreviousItemActive();
                break;
              }
              return;
            case He.Sd:
              if (this._homeAndEnd && Ot) {
                this.setFirstItemActive();
                break;
              }
              return;
            case He.uR:
              if (this._homeAndEnd && Ot) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (Ot || (0, He.Vb)(pe, 'shiftKey')) &&
                (pe.key && 1 === pe.key.length
                  ? this._letterKeyStream.next(pe.key.toLocaleUpperCase())
                  : ((_e >= He.A && _e <= He.Z) || (_e >= He.xE && _e <= He.aO)) &&
                    this._letterKeyStream.next(String.fromCharCode(_e)))
              );
          }
          (this._pressedLetters = []), pe.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(pe) {
          const _e = this._getItemsArray(),
            Xe = 'number' == typeof pe ? pe : _e.indexOf(pe),
            Ot = _e[Xe];
          (this._activeItem = null == Ot ? null : Ot), (this._activeItemIndex = Xe);
        }
        _setActiveItemByDelta(pe) {
          this._wrap ? this._setActiveInWrapMode(pe) : this._setActiveInDefaultMode(pe);
        }
        _setActiveInWrapMode(pe) {
          const _e = this._getItemsArray();
          for (let Xe = 1; Xe <= _e.length; Xe++) {
            const Ot = (this._activeItemIndex + pe * Xe + _e.length) % _e.length;
            if (!this._skipPredicateFn(_e[Ot])) return void this.setActiveItem(Ot);
          }
        }
        _setActiveInDefaultMode(pe) {
          this._setActiveItemByIndex(this._activeItemIndex + pe, pe);
        }
        _setActiveItemByIndex(pe, _e) {
          const Xe = this._getItemsArray();
          if (Xe[pe]) {
            for (; this._skipPredicateFn(Xe[pe]); ) if (!Xe[(pe += _e)]) return;
            this.setActiveItem(pe);
          }
        }
        _getItemsArray() {
          return this._items instanceof m.n_E ? this._items.toArray() : this._items;
        }
      } {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(pe) {
          return (this._origin = pe), this;
        }
        setActiveItem(pe) {
          super.setActiveItem(pe), this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let Ct = (() => {
        class Te {
          constructor(_e) {
            this._platform = _e;
          }
          isDisabled(_e) {
            return _e.hasAttribute('disabled');
          }
          isVisible(_e) {
            return (
              (function Et(Te) {
                return !!(
                  Te.offsetWidth ||
                  Te.offsetHeight ||
                  ('function' == typeof Te.getClientRects && Te.getClientRects().length)
                );
              })(_e) && 'visible' === getComputedStyle(_e).visibility
            );
          }
          isTabbable(_e) {
            if (!this._platform.isBrowser) return !1;
            const Xe = (function st(Te) {
              try {
                return Te.frameElement;
              } catch (pe) {
                return null;
              }
            })(
              (function re(Te) {
                return (Te.ownerDocument && Te.ownerDocument.defaultView) || window;
              })(_e)
            );
            if (Xe && (-1 === en(Xe) || !this.isVisible(Xe))) return !1;
            let Ot = _e.nodeName.toLowerCase(),
              Yt = en(_e);
            return _e.hasAttribute('contenteditable')
              ? -1 !== Yt
              : !(
                  'iframe' === Ot ||
                  'object' === Ot ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function xt(Te) {
                      let pe = Te.nodeName.toLowerCase(),
                        _e = 'input' === pe && Te.type;
                      return 'text' === _e || 'password' === _e || 'select' === pe || 'textarea' === pe;
                    })(_e))
                ) &&
                  ('audio' === Ot
                    ? !!_e.hasAttribute('controls') && -1 !== Yt
                    : 'video' === Ot
                    ? -1 !== Yt && (null !== Yt || this._platform.FIREFOX || _e.hasAttribute('controls'))
                    : _e.tabIndex >= 0);
          }
          isFocusable(_e, Xe) {
            return (
              (function Gt(Te) {
                return (
                  !(function Ue(Te) {
                    return (
                      (function at(Te) {
                        return 'input' == Te.nodeName.toLowerCase();
                      })(Te) && 'hidden' == Te.type
                    );
                  })(Te) &&
                  ((function yt(Te) {
                    let pe = Te.nodeName.toLowerCase();
                    return 'input' === pe || 'select' === pe || 'button' === pe || 'textarea' === pe;
                  })(Te) ||
                    (function bt(Te) {
                      return (
                        (function mt(Te) {
                          return 'a' == Te.nodeName.toLowerCase();
                        })(Te) && Te.hasAttribute('href')
                      );
                    })(Te) ||
                    Te.hasAttribute('contenteditable') ||
                    Nt(Te))
                );
              })(_e) &&
              !this.isDisabled(_e) &&
              ((null == Xe ? void 0 : Xe.ignoreVisibility) || this.isVisible(_e))
            );
          }
        }
        return (
          (Te.ɵfac = function (_e) {
            return new (_e || Te)(m.LFG(me.t4));
          }),
          (Te.ɵprov = m.Yz7({ token: Te, factory: Te.ɵfac, providedIn: 'root' })),
          Te
        );
      })();
      function Nt(Te) {
        if (!Te.hasAttribute('tabindex') || void 0 === Te.tabIndex) return !1;
        let pe = Te.getAttribute('tabindex');
        return !(!pe || isNaN(parseInt(pe, 10)));
      }
      function en(Te) {
        if (!Nt(Te)) return null;
        const pe = parseInt(Te.getAttribute('tabindex') || '', 10);
        return isNaN(pe) ? -1 : pe;
      }
      class ot {
        constructor(pe, _e, Xe, Ot, Yt = !1) {
          (this._element = pe),
            (this._checker = _e),
            (this._ngZone = Xe),
            (this._document = Ot),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            Yt || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(pe) {
          (this._enabled = pe),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(pe, this._startAnchor), this._toggleAnchorTabIndex(pe, this._endAnchor));
        }
        destroy() {
          const pe = this._startAnchor,
            _e = this._endAnchor;
          pe && (pe.removeEventListener('focus', this.startAnchorListener), pe.remove()),
            _e && (_e.removeEventListener('focus', this.endAnchorListener), _e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener('focus', this.startAnchorListener)),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener('focus', this.endAnchorListener));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(this._startAnchor, this._element),
              this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(pe) {
          return new Promise((_e) => {
            this._executeOnStable(() => _e(this.focusInitialElement(pe)));
          });
        }
        focusFirstTabbableElementWhenReady(pe) {
          return new Promise((_e) => {
            this._executeOnStable(() => _e(this.focusFirstTabbableElement(pe)));
          });
        }
        focusLastTabbableElementWhenReady(pe) {
          return new Promise((_e) => {
            this._executeOnStable(() => _e(this.focusLastTabbableElement(pe)));
          });
        }
        _getRegionBoundary(pe) {
          const _e = this._element.querySelectorAll(
            `[cdk-focus-region-${pe}], [cdkFocusRegion${pe}], [cdk-focus-${pe}]`
          );
          return 'start' == pe
            ? _e.length
              ? _e[0]
              : this._getFirstTabbableElement(this._element)
            : _e.length
            ? _e[_e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(pe) {
          const _e = this._element.querySelector('[cdk-focus-initial], [cdkFocusInitial]');
          if (_e) {
            if (!this._checker.isFocusable(_e)) {
              const Xe = this._getFirstTabbableElement(_e);
              return null == Xe || Xe.focus(pe), !!Xe;
            }
            return _e.focus(pe), !0;
          }
          return this.focusFirstTabbableElement(pe);
        }
        focusFirstTabbableElement(pe) {
          const _e = this._getRegionBoundary('start');
          return _e && _e.focus(pe), !!_e;
        }
        focusLastTabbableElement(pe) {
          const _e = this._getRegionBoundary('end');
          return _e && _e.focus(pe), !!_e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(pe) {
          if (this._checker.isFocusable(pe) && this._checker.isTabbable(pe)) return pe;
          const _e = pe.children;
          for (let Xe = 0; Xe < _e.length; Xe++) {
            const Ot = _e[Xe].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(_e[Xe]) : null;
            if (Ot) return Ot;
          }
          return null;
        }
        _getLastTabbableElement(pe) {
          if (this._checker.isFocusable(pe) && this._checker.isTabbable(pe)) return pe;
          const _e = pe.children;
          for (let Xe = _e.length - 1; Xe >= 0; Xe--) {
            const Ot = _e[Xe].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(_e[Xe]) : null;
            if (Ot) return Ot;
          }
          return null;
        }
        _createAnchor() {
          const pe = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, pe),
            pe.classList.add('cdk-visually-hidden'),
            pe.classList.add('cdk-focus-trap-anchor'),
            pe.setAttribute('aria-hidden', 'true'),
            pe
          );
        }
        _toggleAnchorTabIndex(pe, _e) {
          pe ? _e.setAttribute('tabindex', '0') : _e.removeAttribute('tabindex');
        }
        toggleAnchors(pe) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(pe, this._startAnchor), this._toggleAnchorTabIndex(pe, this._endAnchor));
        }
        _executeOnStable(pe) {
          this._ngZone.isStable ? pe() : this._ngZone.onStable.pipe((0, ue.q)(1)).subscribe(pe);
        }
      }
      let Zt = (() => {
        class Te {
          constructor(_e, Xe, Ot) {
            (this._checker = _e), (this._ngZone = Xe), (this._document = Ot);
          }
          create(_e, Xe = !1) {
            return new ot(_e, this._checker, this._ngZone, this._document, Xe);
          }
        }
        return (
          (Te.ɵfac = function (_e) {
            return new (_e || Te)(m.LFG(Ct), m.LFG(m.R0b), m.LFG(h.K0));
          }),
          (Te.ɵprov = m.Yz7({ token: Te, factory: Te.ɵfac, providedIn: 'root' })),
          Te
        );
      })();
      function Be(Te) {
        return 0 === Te.buttons || (0 === Te.offsetX && 0 === Te.offsetY);
      }
      function Pe(Te) {
        const pe = (Te.touches && Te.touches[0]) || (Te.changedTouches && Te.changedTouches[0]);
        return !(
          !pe ||
          -1 !== pe.identifier ||
          (null != pe.radiusX && 1 !== pe.radiusX) ||
          (null != pe.radiusY && 1 !== pe.radiusY)
        );
      }
      const X = new m.OlP('cdk-input-modality-detector-options'),
        we = { ignoreKeys: [He.zL, He.jx, He.b2, He.MW, He.JU] },
        It = (0, me.i$)({ passive: !0, capture: !0 });
      let an = (() => {
        class Te {
          constructor(_e, Xe, Ot, Yt) {
            (this._platform = _e),
              (this._mostRecentTarget = null),
              (this._modality = new Ce.X(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (_n) => {
                var Qn, Ai;
                (null === (Ai = null === (Qn = this._options) || void 0 === Qn ? void 0 : Qn.ignoreKeys) ||
                void 0 === Ai
                  ? void 0
                  : Ai.some((jt) => jt === _n.keyCode)) ||
                  (this._modality.next('keyboard'), (this._mostRecentTarget = (0, me.sA)(_n)));
              }),
              (this._onMousedown = (_n) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(Be(_n) ? 'keyboard' : 'mouse'), (this._mostRecentTarget = (0, me.sA)(_n)));
              }),
              (this._onTouchstart = (_n) => {
                Pe(_n)
                  ? this._modality.next('keyboard')
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next('touch'),
                    (this._mostRecentTarget = (0, me.sA)(_n)));
              }),
              (this._options = Object.assign(Object.assign({}, we), Yt)),
              (this.modalityDetected = this._modality.pipe((0, Qe.T)(1))),
              (this.modalityChanged = this.modalityDetected.pipe((0, Oe.x)())),
              _e.isBrowser &&
                Xe.runOutsideAngular(() => {
                  Ot.addEventListener('keydown', this._onKeydown, It),
                    Ot.addEventListener('mousedown', this._onMousedown, It),
                    Ot.addEventListener('touchstart', this._onTouchstart, It);
                });
          }
          get mostRecentModality() {
            return this._modality.value;
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener('keydown', this._onKeydown, It),
                document.removeEventListener('mousedown', this._onMousedown, It),
                document.removeEventListener('touchstart', this._onTouchstart, It));
          }
        }
        return (
          (Te.ɵfac = function (_e) {
            return new (_e || Te)(m.LFG(me.t4), m.LFG(m.R0b), m.LFG(h.K0), m.LFG(X, 8));
          }),
          (Te.ɵprov = m.Yz7({ token: Te, factory: Te.ɵfac, providedIn: 'root' })),
          Te
        );
      })();
      const zt = new m.OlP('cdk-focus-monitor-default-options'),
        Wt = (0, me.i$)({ passive: !0, capture: !0 });
      let de = (() => {
        class Te {
          constructor(_e, Xe, Ot, Yt, _n) {
            (this._ngZone = _e),
              (this._platform = Xe),
              (this._inputModalityDetector = Ot),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = !1)));
              }),
              (this._stopInputModalityDetector = new d.x()),
              (this._rootNodeFocusAndBlurListener = (Qn) => {
                const Ai = (0, me.sA)(Qn),
                  jt = 'focus' === Qn.type ? this._onFocus : this._onBlur;
                for (let wt = Ai; wt; wt = wt.parentElement) jt.call(this, Qn, wt);
              }),
              (this._document = Yt),
              (this._detectionMode = (null == _n ? void 0 : _n.detectionMode) || 0);
          }
          monitor(_e, Xe = !1) {
            const Ot = (0, lt.fI)(_e);
            if (!this._platform.isBrowser || 1 !== Ot.nodeType) return (0, Re.of)(null);
            const Yt = (0, me.kV)(Ot) || this._getDocument(),
              _n = this._elementInfo.get(Ot);
            if (_n) return Xe && (_n.checkChildren = !0), _n.subject;
            const Qn = { checkChildren: Xe, subject: new d.x(), rootNode: Yt };
            return this._elementInfo.set(Ot, Qn), this._registerGlobalListeners(Qn), Qn.subject;
          }
          stopMonitoring(_e) {
            const Xe = (0, lt.fI)(_e),
              Ot = this._elementInfo.get(Xe);
            Ot &&
              (Ot.subject.complete(),
              this._setClasses(Xe),
              this._elementInfo.delete(Xe),
              this._removeGlobalListeners(Ot));
          }
          focusVia(_e, Xe, Ot) {
            const Yt = (0, lt.fI)(_e);
            Yt === this._getDocument().activeElement
              ? this._getClosestElementsInfo(Yt).forEach(([Qn, Ai]) => this._originChanged(Qn, Xe, Ai))
              : (this._setOrigin(Xe), 'function' == typeof Yt.focus && Yt.focus(Ot));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((_e, Xe) => this.stopMonitoring(Xe));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(_e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(_e)
                  ? 'touch'
                  : 'program'
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : 'program';
          }
          _shouldBeAttributedToTouch(_e) {
            return (
              1 === this._detectionMode ||
              !!(null == _e ? void 0 : _e.contains(this._inputModalityDetector._mostRecentTarget))
            );
          }
          _setClasses(_e, Xe) {
            _e.classList.toggle('cdk-focused', !!Xe),
              _e.classList.toggle('cdk-touch-focused', 'touch' === Xe),
              _e.classList.toggle('cdk-keyboard-focused', 'keyboard' === Xe),
              _e.classList.toggle('cdk-mouse-focused', 'mouse' === Xe),
              _e.classList.toggle('cdk-program-focused', 'program' === Xe);
          }
          _setOrigin(_e, Xe = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = _e),
                (this._originFromTouchInteraction = 'touch' === _e && Xe),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(_e, Xe) {
            const Ot = this._elementInfo.get(Xe),
              Yt = (0, me.sA)(_e);
            !Ot || (!Ot.checkChildren && Xe !== Yt) || this._originChanged(Xe, this._getFocusOrigin(Yt), Ot);
          }
          _onBlur(_e, Xe) {
            const Ot = this._elementInfo.get(Xe);
            !Ot ||
              (Ot.checkChildren && _e.relatedTarget instanceof Node && Xe.contains(_e.relatedTarget)) ||
              (this._setClasses(Xe), this._emitOrigin(Ot.subject, null));
          }
          _emitOrigin(_e, Xe) {
            this._ngZone.run(() => _e.next(Xe));
          }
          _registerGlobalListeners(_e) {
            if (!this._platform.isBrowser) return;
            const Xe = _e.rootNode,
              Ot = this._rootNodeFocusListenerCount.get(Xe) || 0;
            Ot ||
              this._ngZone.runOutsideAngular(() => {
                Xe.addEventListener('focus', this._rootNodeFocusAndBlurListener, Wt),
                  Xe.addEventListener('blur', this._rootNodeFocusAndBlurListener, Wt);
              }),
              this._rootNodeFocusListenerCount.set(Xe, Ot + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener('focus', this._windowFocusListener);
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe((0, et.R)(this._stopInputModalityDetector))
                  .subscribe((Yt) => {
                    this._setOrigin(Yt, !0);
                  }));
          }
          _removeGlobalListeners(_e) {
            const Xe = _e.rootNode;
            if (this._rootNodeFocusListenerCount.has(Xe)) {
              const Ot = this._rootNodeFocusListenerCount.get(Xe);
              Ot > 1
                ? this._rootNodeFocusListenerCount.set(Xe, Ot - 1)
                : (Xe.removeEventListener('focus', this._rootNodeFocusAndBlurListener, Wt),
                  Xe.removeEventListener('blur', this._rootNodeFocusAndBlurListener, Wt),
                  this._rootNodeFocusListenerCount.delete(Xe));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener('focus', this._windowFocusListener),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(_e, Xe, Ot) {
            this._setClasses(_e, Xe), this._emitOrigin(Ot.subject, Xe), (this._lastFocusOrigin = Xe);
          }
          _getClosestElementsInfo(_e) {
            const Xe = [];
            return (
              this._elementInfo.forEach((Ot, Yt) => {
                (Yt === _e || (Ot.checkChildren && Yt.contains(_e))) && Xe.push([Yt, Ot]);
              }),
              Xe
            );
          }
        }
        return (
          (Te.ɵfac = function (_e) {
            return new (_e || Te)(m.LFG(m.R0b), m.LFG(me.t4), m.LFG(an), m.LFG(h.K0, 8), m.LFG(zt, 8));
          }),
          (Te.ɵprov = m.Yz7({ token: Te, factory: Te.ɵfac, providedIn: 'root' })),
          Te
        );
      })();
      const le = 'cdk-high-contrast-black-on-white',
        Z = 'cdk-high-contrast-white-on-black',
        ye = 'cdk-high-contrast-active';
      let ie = (() => {
          class Te {
            constructor(_e, Xe) {
              (this._platform = _e), (this._document = Xe);
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const _e = this._document.createElement('div');
              (_e.style.backgroundColor = 'rgb(1,2,3)'),
                (_e.style.position = 'absolute'),
                this._document.body.appendChild(_e);
              const Xe = this._document.defaultView || window,
                Ot = Xe && Xe.getComputedStyle ? Xe.getComputedStyle(_e) : null,
                Yt = ((Ot && Ot.backgroundColor) || '').replace(/ /g, '');
              switch ((_e.remove(), Yt)) {
                case 'rgb(0,0,0)':
                  return 2;
                case 'rgb(255,255,255)':
                  return 1;
              }
              return 0;
            }
            _applyBodyHighContrastModeCssClasses() {
              if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {
                const _e = this._document.body.classList;
                _e.remove(ye), _e.remove(le), _e.remove(Z), (this._hasCheckedHighContrastMode = !0);
                const Xe = this.getHighContrastMode();
                1 === Xe ? (_e.add(ye), _e.add(le)) : 2 === Xe && (_e.add(ye), _e.add(Z));
              }
            }
          }
          return (
            (Te.ɵfac = function (_e) {
              return new (_e || Te)(m.LFG(me.t4), m.LFG(h.K0));
            }),
            (Te.ɵprov = m.Yz7({ token: Te, factory: Te.ɵfac, providedIn: 'root' })),
            Te
          );
        })(),
        he = (() => {
          class Te {
            constructor(_e) {
              _e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (Te.ɵfac = function (_e) {
              return new (_e || Te)(m.LFG(ie));
            }),
            (Te.ɵmod = m.oAB({ type: Te })),
            (Te.ɵinj = m.cJS({ imports: [[me.ud, Ze.Q8]] })),
            Te
          );
        })();
    },
    226: (un, ft, x) => {
      'use strict';
      x.d(ft, { vT: () => Ne, Is: () => He });
      var h = x(5e3),
        m = x(9808);
      const d = new h.OlP('cdk-dir-doc', {
          providedIn: 'root',
          factory: function N() {
            return (0, h.f3M)(m.K0);
          },
        }),
        Ce =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let He = (() => {
          class ee {
            constructor(ue) {
              if (((this.value = 'ltr'), (this.change = new h.vpe()), ue)) {
                const Oe = ue.documentElement ? ue.documentElement.dir : null;
                this.value = (function Re(ee) {
                  const fe = (null == ee ? void 0 : ee.toLowerCase()) || '';
                  return 'auto' === fe &&
                    'undefined' != typeof navigator &&
                    (null == navigator ? void 0 : navigator.language)
                    ? Ce.test(navigator.language)
                      ? 'rtl'
                      : 'ltr'
                    : 'rtl' === fe
                    ? 'rtl'
                    : 'ltr';
                })((ue.body ? ue.body.dir : null) || Oe || 'ltr');
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (ee.ɵfac = function (ue) {
              return new (ue || ee)(h.LFG(d, 8));
            }),
            (ee.ɵprov = h.Yz7({ token: ee, factory: ee.ɵfac, providedIn: 'root' })),
            ee
          );
        })(),
        Ne = (() => {
          class ee {}
          return (
            (ee.ɵfac = function (ue) {
              return new (ue || ee)();
            }),
            (ee.ɵmod = h.oAB({ type: ee })),
            (ee.ɵinj = h.cJS({})),
            ee
          );
        })();
    },
    3191: (un, ft, x) => {
      'use strict';
      x.d(ft, { Eq: () => Ce, Ig: () => m, HM: () => Re, fI: () => He, su: () => d });
      var h = x(5e3);
      function m(Ne) {
        return null != Ne && 'false' != `${Ne}`;
      }
      function d(Ne, ee = 0) {
        return (function N(Ne) {
          return !isNaN(parseFloat(Ne)) && !isNaN(Number(Ne));
        })(Ne)
          ? Number(Ne)
          : ee;
      }
      function Ce(Ne) {
        return Array.isArray(Ne) ? Ne : [Ne];
      }
      function Re(Ne) {
        return null == Ne ? '' : 'string' == typeof Ne ? Ne : `${Ne}px`;
      }
      function He(Ne) {
        return Ne instanceof h.SBq ? Ne.nativeElement : Ne;
      }
    },
    449: (un, ft, x) => {
      'use strict';
      x.d(ft, { Ov: () => Fe, A8: () => ee, yy: () => Re, eX: () => He, k: () => fe, Z9: () => N });
      var h = x(7579),
        m = x(5e3);
      function N(ue) {
        return ue && 'function' == typeof ue.connect;
      }
      class Re {
        applyChanges(Qe, Oe, et, lt, me) {
          Qe.forEachOperation((Ze, dt, vt) => {
            let We, $e;
            if (null == Ze.previousIndex) {
              const ge = et(Ze, dt, vt);
              (We = Oe.createEmbeddedView(ge.templateRef, ge.context, ge.index)), ($e = 1);
            } else null == vt ? (Oe.remove(dt), ($e = 3)) : ((We = Oe.get(dt)), Oe.move(We, vt), ($e = 2));
            me && me({ context: null == We ? void 0 : We.context, operation: $e, record: Ze });
          });
        }
        detach() {}
      }
      class He {
        constructor() {
          (this.viewCacheSize = 20), (this._viewCache = []);
        }
        applyChanges(Qe, Oe, et, lt, me) {
          Qe.forEachOperation((Ze, dt, vt) => {
            let We, $e;
            null == Ze.previousIndex
              ? ((We = this._insertView(() => et(Ze, dt, vt), vt, Oe, lt(Ze))), ($e = We ? 1 : 0))
              : null == vt
              ? (this._detachAndCacheView(dt, Oe), ($e = 3))
              : ((We = this._moveView(dt, vt, Oe, lt(Ze))), ($e = 2)),
              me && me({ context: null == We ? void 0 : We.context, operation: $e, record: Ze });
          });
        }
        detach() {
          for (const Qe of this._viewCache) Qe.destroy();
          this._viewCache = [];
        }
        _insertView(Qe, Oe, et, lt) {
          const me = this._insertViewFromCache(Oe, et);
          if (me) return void (me.context.$implicit = lt);
          const Ze = Qe();
          return et.createEmbeddedView(Ze.templateRef, Ze.context, Ze.index);
        }
        _detachAndCacheView(Qe, Oe) {
          const et = Oe.detach(Qe);
          this._maybeCacheView(et, Oe);
        }
        _moveView(Qe, Oe, et, lt) {
          const me = et.get(Qe);
          return et.move(me, Oe), (me.context.$implicit = lt), me;
        }
        _maybeCacheView(Qe, Oe) {
          if (this._viewCache.length < this.viewCacheSize) this._viewCache.push(Qe);
          else {
            const et = Oe.indexOf(Qe);
            -1 === et ? Qe.destroy() : Oe.remove(et);
          }
        }
        _insertViewFromCache(Qe, Oe) {
          const et = this._viewCache.pop();
          return et && Oe.insert(et, Qe), et || null;
        }
      }
      class Fe {
        constructor(Qe = !1, Oe, et = !0) {
          (this._multiple = Qe),
            (this._emitChanges = et),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new h.x()),
            Oe &&
              Oe.length &&
              (Qe ? Oe.forEach((lt) => this._markSelected(lt)) : this._markSelected(Oe[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return this._selected || (this._selected = Array.from(this._selection.values())), this._selected;
        }
        select(...Qe) {
          this._verifyValueAssignment(Qe), Qe.forEach((Oe) => this._markSelected(Oe)), this._emitChangeEvent();
        }
        deselect(...Qe) {
          this._verifyValueAssignment(Qe), Qe.forEach((Oe) => this._unmarkSelected(Oe)), this._emitChangeEvent();
        }
        toggle(Qe) {
          this.isSelected(Qe) ? this.deselect(Qe) : this.select(Qe);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(Qe) {
          return this._selection.has(Qe);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(Qe) {
          this._multiple && this.selected && this._selected.sort(Qe);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({ source: this, added: this._selectedToEmit, removed: this._deselectedToEmit }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(Qe) {
          this.isSelected(Qe) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(Qe),
            this._emitChanges && this._selectedToEmit.push(Qe));
        }
        _unmarkSelected(Qe) {
          this.isSelected(Qe) && (this._selection.delete(Qe), this._emitChanges && this._deselectedToEmit.push(Qe));
        }
        _unmarkAll() {
          this.isEmpty() || this._selection.forEach((Qe) => this._unmarkSelected(Qe));
        }
        _verifyValueAssignment(Qe) {}
      }
      let ee = (() => {
        class ue {
          constructor() {
            this._listeners = [];
          }
          notify(Oe, et) {
            for (let lt of this._listeners) lt(Oe, et);
          }
          listen(Oe) {
            return (
              this._listeners.push(Oe),
              () => {
                this._listeners = this._listeners.filter((et) => Oe !== et);
              }
            );
          }
          ngOnDestroy() {
            this._listeners = [];
          }
        }
        return (
          (ue.ɵfac = function (Oe) {
            return new (Oe || ue)();
          }),
          (ue.ɵprov = m.Yz7({ token: ue, factory: ue.ɵfac, providedIn: 'root' })),
          ue
        );
      })();
      const fe = new m.OlP('_ViewRepeater');
    },
    1159: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        A: () => yt,
        zL: () => Fe,
        ZH: () => m,
        jx: () => He,
        yY: () => Ke,
        JH: () => vt,
        uR: () => et,
        K5: () => Ce,
        hY: () => fe,
        Sd: () => lt,
        oh: () => me,
        b2: () => Os,
        MW: () => ln,
        aO: () => on,
        VM: () => Oe,
        Ku: () => Qe,
        SV: () => dt,
        JU: () => Re,
        L_: () => ue,
        Mf: () => d,
        LH: () => Ze,
        Z: () => mn,
        xE: () => Ie,
        Vb: () => fi,
      });
      const m = 8,
        d = 9,
        Ce = 13,
        Re = 16,
        He = 17,
        Fe = 18,
        fe = 27,
        ue = 32,
        Qe = 33,
        Oe = 34,
        et = 35,
        lt = 36,
        me = 37,
        Ze = 38,
        dt = 39,
        vt = 40,
        Ke = 46,
        Ie = 48,
        on = 57,
        yt = 65,
        mn = 90,
        ln = 91,
        Os = 224;
      function fi(Ti, ...Vr) {
        return Vr.length ? Vr.some((Jt) => Ti[Jt]) : Ti.altKey || Ti.shiftKey || Ti.ctrlKey || Ti.metaKey;
      }
    },
    7144: (un, ft, x) => {
      'use strict';
      x.d(ft, { wD: () => Fe, Q8: () => Ne });
      var h = x(3191),
        m = x(5e3),
        d = x(8306),
        N = x(7579),
        Ce = x(8372);
      let Re = (() => {
          class ee {
            create(ue) {
              return 'undefined' == typeof MutationObserver ? null : new MutationObserver(ue);
            }
          }
          return (
            (ee.ɵfac = function (ue) {
              return new (ue || ee)();
            }),
            (ee.ɵprov = m.Yz7({ token: ee, factory: ee.ɵfac, providedIn: 'root' })),
            ee
          );
        })(),
        He = (() => {
          class ee {
            constructor(ue) {
              (this._mutationObserverFactory = ue), (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((ue, Qe) => this._cleanupObserver(Qe));
            }
            observe(ue) {
              const Qe = (0, h.fI)(ue);
              return new d.y((Oe) => {
                const lt = this._observeElement(Qe).subscribe(Oe);
                return () => {
                  lt.unsubscribe(), this._unobserveElement(Qe);
                };
              });
            }
            _observeElement(ue) {
              if (this._observedElements.has(ue)) this._observedElements.get(ue).count++;
              else {
                const Qe = new N.x(),
                  Oe = this._mutationObserverFactory.create((et) => Qe.next(et));
                Oe && Oe.observe(ue, { characterData: !0, childList: !0, subtree: !0 }),
                  this._observedElements.set(ue, { observer: Oe, stream: Qe, count: 1 });
              }
              return this._observedElements.get(ue).stream;
            }
            _unobserveElement(ue) {
              this._observedElements.has(ue) &&
                (this._observedElements.get(ue).count--,
                this._observedElements.get(ue).count || this._cleanupObserver(ue));
            }
            _cleanupObserver(ue) {
              if (this._observedElements.has(ue)) {
                const { observer: Qe, stream: Oe } = this._observedElements.get(ue);
                Qe && Qe.disconnect(), Oe.complete(), this._observedElements.delete(ue);
              }
            }
          }
          return (
            (ee.ɵfac = function (ue) {
              return new (ue || ee)(m.LFG(Re));
            }),
            (ee.ɵprov = m.Yz7({ token: ee, factory: ee.ɵfac, providedIn: 'root' })),
            ee
          );
        })(),
        Fe = (() => {
          class ee {
            constructor(ue, Qe, Oe) {
              (this._contentObserver = ue),
                (this._elementRef = Qe),
                (this._ngZone = Oe),
                (this.event = new m.vpe()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(ue) {
              (this._disabled = (0, h.Ig)(ue)), this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(ue) {
              (this._debounce = (0, h.su)(ue)), this._subscribe();
            }
            ngAfterContentInit() {
              !this._currentSubscription && !this.disabled && this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const ue = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (this.debounce ? ue.pipe((0, Ce.b)(this.debounce)) : ue).subscribe(
                  this.event
                );
              });
            }
            _unsubscribe() {
              var ue;
              null === (ue = this._currentSubscription) || void 0 === ue || ue.unsubscribe();
            }
          }
          return (
            (ee.ɵfac = function (ue) {
              return new (ue || ee)(m.Y36(He), m.Y36(m.SBq), m.Y36(m.R0b));
            }),
            (ee.ɵdir = m.lG2({
              type: ee,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: { disabled: ['cdkObserveContentDisabled', 'disabled'], debounce: 'debounce' },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            ee
          );
        })(),
        Ne = (() => {
          class ee {}
          return (
            (ee.ɵfac = function (ue) {
              return new (ue || ee)();
            }),
            (ee.ɵmod = m.oAB({ type: ee })),
            (ee.ɵinj = m.cJS({ providers: [Re] })),
            ee
          );
        })();
    },
    1314: (un, ft, x) => {
      'use strict';
      x.d(ft, { aV: () => mt, X_: () => $e, Xj: () => qe, U8: () => Zt });
      var h = x(495),
        m = x(9808),
        d = x(5e3),
        N = x(3191),
        Ce = x(925),
        Re = x(226),
        He = x(7429),
        Fe = x(7579),
        Ne = x(727),
        ee = x(6451),
        fe = x(5698),
        ue = x(2722);
      const Qe = (0, Ce.Mq)();
      class Oe {
        constructor(ae, Le) {
          (this._viewportRuler = ae),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = Le);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const ae = this._document.documentElement;
            (this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = ae.style.left || ''),
              (this._previousHTMLStyles.top = ae.style.top || ''),
              (ae.style.left = (0, N.HM)(-this._previousScrollPosition.left)),
              (ae.style.top = (0, N.HM)(-this._previousScrollPosition.top)),
              ae.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const ae = this._document.documentElement,
              ht = ae.style,
              Se = this._document.body.style,
              Be = ht.scrollBehavior || '',
              Pe = Se.scrollBehavior || '';
            (this._isEnabled = !1),
              (ht.left = this._previousHTMLStyles.left),
              (ht.top = this._previousHTMLStyles.top),
              ae.classList.remove('cdk-global-scrollblock'),
              Qe && (ht.scrollBehavior = Se.scrollBehavior = 'auto'),
              window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top),
              Qe && ((ht.scrollBehavior = Be), (Se.scrollBehavior = Pe));
          }
        }
        _canBeEnabled() {
          if (this._document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) return !1;
          const Le = this._document.body,
            ht = this._viewportRuler.getViewportSize();
          return Le.scrollHeight > ht.height || Le.scrollWidth > ht.width;
        }
      }
      class lt {
        constructor(ae, Le, ht, Se) {
          (this._scrollDispatcher = ae),
            (this._ngZone = Le),
            (this._viewportRuler = ht),
            (this._config = Se),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(), this._overlayRef.hasAttached() && this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(ae) {
          this._overlayRef = ae;
        }
        enable() {
          if (this._scrollSubscription) return;
          const ae = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = ae.subscribe(() => {
                const Le = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(Le - this._initialScrollPosition) > this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = ae.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class me {
        enable() {}
        disable() {}
        attach() {}
      }
      function Ze(At, ae) {
        return ae.some((Le) => At.bottom < Le.top || At.top > Le.bottom || At.right < Le.left || At.left > Le.right);
      }
      function dt(At, ae) {
        return ae.some((Le) => At.top < Le.top || At.bottom > Le.bottom || At.left < Le.left || At.right > Le.right);
      }
      class vt {
        constructor(ae, Le, ht, Se) {
          (this._scrollDispatcher = ae),
            (this._viewportRuler = Le),
            (this._ngZone = ht),
            (this._config = Se),
            (this._scrollSubscription = null);
        }
        attach(ae) {
          this._overlayRef = ae;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if ((this._overlayRef.updatePosition(), this._config && this._config.autoClose)) {
                  const Le = this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: ht, height: Se } = this._viewportRuler.getViewportSize();
                  Ze(Le, [{ width: ht, height: Se, bottom: Se, right: ht, top: 0, left: 0 }]) &&
                    (this.disable(), this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let We = (() => {
        class At {
          constructor(Le, ht, Se, Be) {
            (this._scrollDispatcher = Le),
              (this._viewportRuler = ht),
              (this._ngZone = Se),
              (this.noop = () => new me()),
              (this.close = (Pe) => new lt(this._scrollDispatcher, this._ngZone, this._viewportRuler, Pe)),
              (this.block = () => new Oe(this._viewportRuler, this._document)),
              (this.reposition = (Pe) => new vt(this._scrollDispatcher, this._viewportRuler, this._ngZone, Pe)),
              (this._document = Be);
          }
        }
        return (
          (At.ɵfac = function (Le) {
            return new (Le || At)(d.LFG(h.mF), d.LFG(h.rL), d.LFG(d.R0b), d.LFG(m.K0));
          }),
          (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac, providedIn: 'root' })),
          At
        );
      })();
      class $e {
        constructor(ae) {
          if (
            ((this.scrollStrategy = new me()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            ae)
          ) {
            const Le = Object.keys(ae);
            for (const ht of Le) void 0 !== ae[ht] && (this[ht] = ae[ht]);
          }
        }
      }
      class Ie {
        constructor(ae, Le) {
          (this.connectionPair = ae), (this.scrollableViewProperties = Le);
        }
      }
      class it {
        constructor(ae, Le, ht, Se, Be, Pe, X, we, Rt) {
          (this._portalOutlet = ae),
            (this._host = Le),
            (this._pane = ht),
            (this._config = Se),
            (this._ngZone = Be),
            (this._keyboardDispatcher = Pe),
            (this._document = X),
            (this._location = we),
            (this._outsideClickDispatcher = Rt),
            (this._backdropElement = null),
            (this._backdropClick = new Fe.x()),
            (this._attachments = new Fe.x()),
            (this._detachments = new Fe.x()),
            (this._locationChanges = Ne.w0.EMPTY),
            (this._backdropClickHandler = (It) => this._backdropClick.next(It)),
            (this._keydownEvents = new Fe.x()),
            (this._outsidePointerEvents = new Fe.x()),
            Se.scrollStrategy && ((this._scrollStrategy = Se.scrollStrategy), this._scrollStrategy.attach(this)),
            (this._positionStrategy = Se.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(ae) {
          let Le = this._portalOutlet.attach(ae);
          return (
            !this._host.parentElement && this._previousHostParent && this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe((0, fe.q)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() => this.dispose())),
            this._outsideClickDispatcher.add(this),
            Le
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy && this._positionStrategy.detach && this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const ae = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            ae
          );
        }
        dispose() {
          var ae;
          const Le = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            null === (ae = this._host) || void 0 === ae || ae.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            Le && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(ae) {
          ae !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = ae),
            this.hasAttached() && (ae.attach(this), this.updatePosition()));
        }
        updateSize(ae) {
          (this._config = Object.assign(Object.assign({}, this._config), ae)), this._updateElementSize();
        }
        setDirection(ae) {
          (this._config = Object.assign(Object.assign({}, this._config), { direction: ae })),
            this._updateElementDirection();
        }
        addPanelClass(ae) {
          this._pane && this._toggleClasses(this._pane, ae, !0);
        }
        removePanelClass(ae) {
          this._pane && this._toggleClasses(this._pane, ae, !1);
        }
        getDirection() {
          const ae = this._config.direction;
          return ae ? ('string' == typeof ae ? ae : ae.value) : 'ltr';
        }
        updateScrollStrategy(ae) {
          ae !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = ae),
            this.hasAttached() && (ae.attach(this), ae.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const ae = this._pane.style;
          (ae.width = (0, N.HM)(this._config.width)),
            (ae.height = (0, N.HM)(this._config.height)),
            (ae.minWidth = (0, N.HM)(this._config.minWidth)),
            (ae.minHeight = (0, N.HM)(this._config.minHeight)),
            (ae.maxWidth = (0, N.HM)(this._config.maxWidth)),
            (ae.maxHeight = (0, N.HM)(this._config.maxHeight));
        }
        _togglePointerEvents(ae) {
          this._pane.style.pointerEvents = ae ? '' : 'none';
        }
        _attachBackdrop() {
          const ae = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._config.backdropClass && this._toggleClasses(this._backdropElement, this._config.backdropClass, !0),
            this._host.parentElement.insertBefore(this._backdropElement, this._host),
            this._backdropElement.addEventListener('click', this._backdropClickHandler),
            'undefined' != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement && this._backdropElement.classList.add(ae);
                  });
                })
              : this._backdropElement.classList.add(ae);
        }
        _updateStackingOrder() {
          this._host.nextSibling && this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const ae = this._backdropElement;
          if (!ae) return;
          let Le;
          const ht = () => {
            ae &&
              (ae.removeEventListener('click', this._backdropClickHandler),
              ae.removeEventListener('transitionend', ht),
              this._disposeBackdrop(ae)),
              this._config.backdropClass && this._toggleClasses(ae, this._config.backdropClass, !1),
              clearTimeout(Le);
          };
          ae.classList.remove('cdk-overlay-backdrop-showing'),
            this._ngZone.runOutsideAngular(() => {
              ae.addEventListener('transitionend', ht);
            }),
            (ae.style.pointerEvents = 'none'),
            (Le = this._ngZone.runOutsideAngular(() => setTimeout(ht, 500)));
        }
        _toggleClasses(ae, Le, ht) {
          const Se = (0, N.Eq)(Le || []).filter((Be) => !!Be);
          Se.length && (ht ? ae.classList.add(...Se) : ae.classList.remove(...Se));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const ae = this._ngZone.onStable
              .pipe((0, ue.R)((0, ee.T)(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane || !this._host || 0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(this._pane, this._config.panelClass, !1),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement), this._host.remove()),
                  ae.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const ae = this._scrollStrategy;
          ae && (ae.disable(), ae.detach && ae.detach());
        }
        _disposeBackdrop(ae) {
          ae && (ae.remove(), this._backdropElement === ae && (this._backdropElement = null));
        }
      }
      let qe = (() => {
        class At {
          constructor(Le, ht) {
            (this._platform = ht), (this._document = Le);
          }
          ngOnDestroy() {
            var Le;
            null === (Le = this._containerElement) || void 0 === Le || Le.remove();
          }
          getContainerElement() {
            return this._containerElement || this._createContainer(), this._containerElement;
          }
          _createContainer() {
            const Le = 'cdk-overlay-container';
            if (this._platform.isBrowser || (0, Ce.Oy)()) {
              const Se = this._document.querySelectorAll(`.${Le}[platform="server"], .${Le}[platform="test"]`);
              for (let Be = 0; Be < Se.length; Be++) Se[Be].remove();
            }
            const ht = this._document.createElement('div');
            ht.classList.add(Le),
              (0, Ce.Oy)()
                ? ht.setAttribute('platform', 'test')
                : this._platform.isBrowser || ht.setAttribute('platform', 'server'),
              this._document.body.appendChild(ht),
              (this._containerElement = ht);
          }
        }
        return (
          (At.ɵfac = function (Le) {
            return new (Le || At)(d.LFG(m.K0), d.LFG(Ce.t4));
          }),
          (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac, providedIn: 'root' })),
          At
        );
      })();
      const Ve = 'cdk-overlay-connected-position-bounding-box',
        Ft = /([A-Za-z%]+)$/;
      class kt {
        constructor(ae, Le, ht, Se, Be) {
          (this._viewportRuler = Le),
            (this._document = ht),
            (this._platform = Se),
            (this._overlayContainer = Be),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new Fe.x()),
            (this._resizeSubscription = Ne.w0.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(ae);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(ae) {
          this._validatePositions(),
            ae.hostElement.classList.add(Ve),
            (this._overlayRef = ae),
            (this._boundingBox = ae.hostElement),
            (this._pane = ae.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler.change().subscribe(() => {
              (this._isInitialRender = !0), this.apply();
            }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (!this._isInitialRender && this._positionLocked && this._lastPosition)
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect());
          const ae = this._originRect,
            Le = this._overlayRect,
            ht = this._viewportRect,
            Se = this._containerRect,
            Be = [];
          let Pe;
          for (let X of this._preferredPositions) {
            let we = this._getOriginPoint(ae, Se, X),
              Rt = this._getOverlayPoint(we, Le, X),
              It = this._getOverlayFit(Rt, Le, ht, X);
            if (It.isCompletelyWithinViewport) return (this._isPushed = !1), void this._applyPosition(X, we);
            this._canFitWithFlexibleDimensions(It, Rt, ht)
              ? Be.push({
                  position: X,
                  origin: we,
                  overlayRect: Le,
                  boundingBoxRect: this._calculateBoundingBoxRect(we, X),
                })
              : (!Pe || Pe.overlayFit.visibleArea < It.visibleArea) &&
                (Pe = { overlayFit: It, overlayPoint: Rt, originPoint: we, position: X, overlayRect: Le });
          }
          if (Be.length) {
            let X = null,
              we = -1;
            for (const Rt of Be) {
              const It = Rt.boundingBoxRect.width * Rt.boundingBoxRect.height * (Rt.position.weight || 1);
              It > we && ((we = It), (X = Rt));
            }
            return (this._isPushed = !1), void this._applyPosition(X.position, X.origin);
          }
          if (this._canPush) return (this._isPushed = !0), void this._applyPosition(Pe.position, Pe.originPoint);
          this._applyPosition(Pe.position, Pe.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              St(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef && this._overlayRef.hostElement.classList.remove(Ve),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect());
            const ae = this._lastPosition || this._preferredPositions[0],
              Le = this._getOriginPoint(this._originRect, this._containerRect, ae);
            this._applyPosition(ae, Le);
          }
        }
        withScrollableContainers(ae) {
          return (this._scrollables = ae), this;
        }
        withPositions(ae) {
          return (
            (this._preferredPositions = ae),
            -1 === ae.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(ae) {
          return (this._viewportMargin = ae), this;
        }
        withFlexibleDimensions(ae = !0) {
          return (this._hasFlexibleDimensions = ae), this;
        }
        withGrowAfterOpen(ae = !0) {
          return (this._growAfterOpen = ae), this;
        }
        withPush(ae = !0) {
          return (this._canPush = ae), this;
        }
        withLockedPosition(ae = !0) {
          return (this._positionLocked = ae), this;
        }
        setOrigin(ae) {
          return (this._origin = ae), this;
        }
        withDefaultOffsetX(ae) {
          return (this._offsetX = ae), this;
        }
        withDefaultOffsetY(ae) {
          return (this._offsetY = ae), this;
        }
        withTransformOriginOn(ae) {
          return (this._transformOriginSelector = ae), this;
        }
        _getOriginPoint(ae, Le, ht) {
          let Se, Be;
          if ('center' == ht.originX) Se = ae.left + ae.width / 2;
          else {
            const Pe = this._isRtl() ? ae.right : ae.left,
              X = this._isRtl() ? ae.left : ae.right;
            Se = 'start' == ht.originX ? Pe : X;
          }
          return (
            Le.left < 0 && (Se -= Le.left),
            (Be = 'center' == ht.originY ? ae.top + ae.height / 2 : 'top' == ht.originY ? ae.top : ae.bottom),
            Le.top < 0 && (Be -= Le.top),
            { x: Se, y: Be }
          );
        }
        _getOverlayPoint(ae, Le, ht) {
          let Se, Be;
          return (
            (Se =
              'center' == ht.overlayX
                ? -Le.width / 2
                : 'start' === ht.overlayX
                ? this._isRtl()
                  ? -Le.width
                  : 0
                : this._isRtl()
                ? 0
                : -Le.width),
            (Be = 'center' == ht.overlayY ? -Le.height / 2 : 'top' == ht.overlayY ? 0 : -Le.height),
            { x: ae.x + Se, y: ae.y + Be }
          );
        }
        _getOverlayFit(ae, Le, ht, Se) {
          const Be = Je(Le);
          let { x: Pe, y: X } = ae,
            we = this._getOffset(Se, 'x'),
            Rt = this._getOffset(Se, 'y');
          we && (Pe += we), Rt && (X += Rt);
          let mn = 0 - X,
            ln = X + Be.height - ht.height,
            An = this._subtractOverflows(Be.width, 0 - Pe, Pe + Be.width - ht.width),
            Yn = this._subtractOverflows(Be.height, mn, ln),
            Hn = An * Yn;
          return {
            visibleArea: Hn,
            isCompletelyWithinViewport: Be.width * Be.height === Hn,
            fitsInViewportVertically: Yn === Be.height,
            fitsInViewportHorizontally: An == Be.width,
          };
        }
        _canFitWithFlexibleDimensions(ae, Le, ht) {
          if (this._hasFlexibleDimensions) {
            const Se = ht.bottom - Le.y,
              Be = ht.right - Le.x,
              Pe = on(this._overlayRef.getConfig().minHeight),
              X = on(this._overlayRef.getConfig().minWidth),
              Rt = ae.fitsInViewportHorizontally || (null != X && X <= Be);
            return (ae.fitsInViewportVertically || (null != Pe && Pe <= Se)) && Rt;
          }
          return !1;
        }
        _pushOverlayOnScreen(ae, Le, ht) {
          if (this._previousPushAmount && this._positionLocked)
            return { x: ae.x + this._previousPushAmount.x, y: ae.y + this._previousPushAmount.y };
          const Se = Je(Le),
            Be = this._viewportRect,
            Pe = Math.max(ae.x + Se.width - Be.width, 0),
            X = Math.max(ae.y + Se.height - Be.height, 0),
            we = Math.max(Be.top - ht.top - ae.y, 0),
            Rt = Math.max(Be.left - ht.left - ae.x, 0);
          let It = 0,
            an = 0;
          return (
            (It = Se.width <= Be.width ? Rt || -Pe : ae.x < this._viewportMargin ? Be.left - ht.left - ae.x : 0),
            (an = Se.height <= Be.height ? we || -X : ae.y < this._viewportMargin ? Be.top - ht.top - ae.y : 0),
            (this._previousPushAmount = { x: It, y: an }),
            { x: ae.x + It, y: ae.y + an }
          );
        }
        _applyPosition(ae, Le) {
          if (
            (this._setTransformOrigin(ae),
            this._setOverlayElementStyles(Le, ae),
            this._setBoundingBoxStyles(Le, ae),
            ae.panelClass && this._addPanelClasses(ae.panelClass),
            (this._lastPosition = ae),
            this._positionChanges.observers.length)
          ) {
            const ht = this._getScrollVisibility(),
              Se = new Ie(ae, ht);
            this._positionChanges.next(Se);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(ae) {
          if (!this._transformOriginSelector) return;
          const Le = this._boundingBox.querySelectorAll(this._transformOriginSelector);
          let ht,
            Se = ae.overlayY;
          ht =
            'center' === ae.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === ae.overlayX
                ? 'right'
                : 'left'
              : 'start' === ae.overlayX
              ? 'left'
              : 'right';
          for (let Be = 0; Be < Le.length; Be++) Le[Be].style.transformOrigin = `${ht} ${Se}`;
        }
        _calculateBoundingBoxRect(ae, Le) {
          const ht = this._viewportRect,
            Se = this._isRtl();
          let Be, Pe, X, It, an, mn;
          if ('top' === Le.overlayY) (Pe = ae.y), (Be = ht.height - Pe + this._viewportMargin);
          else if ('bottom' === Le.overlayY)
            (X = ht.height - ae.y + 2 * this._viewportMargin), (Be = ht.height - X + this._viewportMargin);
          else {
            const ln = Math.min(ht.bottom - ae.y + ht.top, ae.y),
              An = this._lastBoundingBoxSize.height;
            (Be = 2 * ln),
              (Pe = ae.y - ln),
              Be > An && !this._isInitialRender && !this._growAfterOpen && (Pe = ae.y - An / 2);
          }
          if (('end' === Le.overlayX && !Se) || ('start' === Le.overlayX && Se))
            (mn = ht.width - ae.x + this._viewportMargin), (It = ae.x - this._viewportMargin);
          else if (('start' === Le.overlayX && !Se) || ('end' === Le.overlayX && Se))
            (an = ae.x), (It = ht.right - ae.x);
          else {
            const ln = Math.min(ht.right - ae.x + ht.left, ae.x),
              An = this._lastBoundingBoxSize.width;
            (It = 2 * ln),
              (an = ae.x - ln),
              It > An && !this._isInitialRender && !this._growAfterOpen && (an = ae.x - An / 2);
          }
          return { top: Pe, left: an, bottom: X, right: mn, width: It, height: Be };
        }
        _setBoundingBoxStyles(ae, Le) {
          const ht = this._calculateBoundingBoxRect(ae, Le);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((ht.height = Math.min(ht.height, this._lastBoundingBoxSize.height)),
            (ht.width = Math.min(ht.width, this._lastBoundingBoxSize.width)));
          const Se = {};
          if (this._hasExactPosition())
            (Se.top = Se.left = '0'),
              (Se.bottom = Se.right = Se.maxHeight = Se.maxWidth = ''),
              (Se.width = Se.height = '100%');
          else {
            const Be = this._overlayRef.getConfig().maxHeight,
              Pe = this._overlayRef.getConfig().maxWidth;
            (Se.height = (0, N.HM)(ht.height)),
              (Se.top = (0, N.HM)(ht.top)),
              (Se.bottom = (0, N.HM)(ht.bottom)),
              (Se.width = (0, N.HM)(ht.width)),
              (Se.left = (0, N.HM)(ht.left)),
              (Se.right = (0, N.HM)(ht.right)),
              (Se.alignItems = 'center' === Le.overlayX ? 'center' : 'end' === Le.overlayX ? 'flex-end' : 'flex-start'),
              (Se.justifyContent =
                'center' === Le.overlayY ? 'center' : 'bottom' === Le.overlayY ? 'flex-end' : 'flex-start'),
              Be && (Se.maxHeight = (0, N.HM)(Be)),
              Pe && (Se.maxWidth = (0, N.HM)(Pe));
          }
          (this._lastBoundingBoxSize = ht), St(this._boundingBox.style, Se);
        }
        _resetBoundingBoxStyles() {
          St(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          St(this._pane.style, { top: '', left: '', bottom: '', right: '', position: '', transform: '' });
        }
        _setOverlayElementStyles(ae, Le) {
          const ht = {},
            Se = this._hasExactPosition(),
            Be = this._hasFlexibleDimensions,
            Pe = this._overlayRef.getConfig();
          if (Se) {
            const It = this._viewportRuler.getViewportScrollPosition();
            St(ht, this._getExactOverlayY(Le, ae, It)), St(ht, this._getExactOverlayX(Le, ae, It));
          } else ht.position = 'static';
          let X = '',
            we = this._getOffset(Le, 'x'),
            Rt = this._getOffset(Le, 'y');
          we && (X += `translateX(${we}px) `),
            Rt && (X += `translateY(${Rt}px)`),
            (ht.transform = X.trim()),
            Pe.maxHeight && (Se ? (ht.maxHeight = (0, N.HM)(Pe.maxHeight)) : Be && (ht.maxHeight = '')),
            Pe.maxWidth && (Se ? (ht.maxWidth = (0, N.HM)(Pe.maxWidth)) : Be && (ht.maxWidth = '')),
            St(this._pane.style, ht);
        }
        _getExactOverlayY(ae, Le, ht) {
          let Se = { top: '', bottom: '' },
            Be = this._getOverlayPoint(Le, this._overlayRect, ae);
          return (
            this._isPushed && (Be = this._pushOverlayOnScreen(Be, this._overlayRect, ht)),
            'bottom' === ae.overlayY
              ? (Se.bottom = this._document.documentElement.clientHeight - (Be.y + this._overlayRect.height) + 'px')
              : (Se.top = (0, N.HM)(Be.y)),
            Se
          );
        }
        _getExactOverlayX(ae, Le, ht) {
          let Pe,
            Se = { left: '', right: '' },
            Be = this._getOverlayPoint(Le, this._overlayRect, ae);
          return (
            this._isPushed && (Be = this._pushOverlayOnScreen(Be, this._overlayRect, ht)),
            (Pe = this._isRtl()
              ? 'end' === ae.overlayX
                ? 'left'
                : 'right'
              : 'end' === ae.overlayX
              ? 'right'
              : 'left'),
            'right' === Pe
              ? (Se.right = this._document.documentElement.clientWidth - (Be.x + this._overlayRect.width) + 'px')
              : (Se.left = (0, N.HM)(Be.x)),
            Se
          );
        }
        _getScrollVisibility() {
          const ae = this._getOriginRect(),
            Le = this._pane.getBoundingClientRect(),
            ht = this._scrollables.map((Se) => Se.getElementRef().nativeElement.getBoundingClientRect());
          return {
            isOriginClipped: dt(ae, ht),
            isOriginOutsideView: Ze(ae, ht),
            isOverlayClipped: dt(Le, ht),
            isOverlayOutsideView: Ze(Le, ht),
          };
        }
        _subtractOverflows(ae, ...Le) {
          return Le.reduce((ht, Se) => ht - Math.max(Se, 0), ae);
        }
        _getNarrowedViewportRect() {
          const ae = this._document.documentElement.clientWidth,
            Le = this._document.documentElement.clientHeight,
            ht = this._viewportRuler.getViewportScrollPosition();
          return {
            top: ht.top + this._viewportMargin,
            left: ht.left + this._viewportMargin,
            right: ht.left + ae - this._viewportMargin,
            bottom: ht.top + Le - this._viewportMargin,
            width: ae - 2 * this._viewportMargin,
            height: Le - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(ae, Le) {
          return 'x' === Le
            ? null == ae.offsetX
              ? this._offsetX
              : ae.offsetX
            : null == ae.offsetY
            ? this._offsetY
            : ae.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(ae) {
          this._pane &&
            (0, N.Eq)(ae).forEach((Le) => {
              '' !== Le &&
                -1 === this._appliedPanelClasses.indexOf(Le) &&
                (this._appliedPanelClasses.push(Le), this._pane.classList.add(Le));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((ae) => {
              this._pane.classList.remove(ae);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const ae = this._origin;
          if (ae instanceof d.SBq) return ae.nativeElement.getBoundingClientRect();
          if (ae instanceof Element) return ae.getBoundingClientRect();
          const Le = ae.width || 0,
            ht = ae.height || 0;
          return { top: ae.y, bottom: ae.y + ht, left: ae.x, right: ae.x + Le, height: ht, width: Le };
        }
      }
      function St(At, ae) {
        for (let Le in ae) ae.hasOwnProperty(Le) && (At[Le] = ae[Le]);
        return At;
      }
      function on(At) {
        if ('number' != typeof At && null != At) {
          const [ae, Le] = At.split(Ft);
          return Le && 'px' !== Le ? null : parseFloat(ae);
        }
        return At || null;
      }
      function Je(At) {
        return {
          top: Math.floor(At.top),
          right: Math.floor(At.right),
          bottom: Math.floor(At.bottom),
          left: Math.floor(At.left),
          width: Math.floor(At.width),
          height: Math.floor(At.height),
        };
      }
      const Ct = 'cdk-global-overlay-wrapper';
      class st {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._leftOffset = ''),
            (this._rightOffset = ''),
            (this._alignItems = ''),
            (this._justifyContent = ''),
            (this._width = ''),
            (this._height = '');
        }
        attach(ae) {
          const Le = ae.getConfig();
          (this._overlayRef = ae),
            this._width && !Le.width && ae.updateSize({ width: this._width }),
            this._height && !Le.height && ae.updateSize({ height: this._height }),
            ae.hostElement.classList.add(Ct),
            (this._isDisposed = !1);
        }
        top(ae = '') {
          return (this._bottomOffset = ''), (this._topOffset = ae), (this._alignItems = 'flex-start'), this;
        }
        left(ae = '') {
          return (this._rightOffset = ''), (this._leftOffset = ae), (this._justifyContent = 'flex-start'), this;
        }
        bottom(ae = '') {
          return (this._topOffset = ''), (this._bottomOffset = ae), (this._alignItems = 'flex-end'), this;
        }
        right(ae = '') {
          return (this._leftOffset = ''), (this._rightOffset = ae), (this._justifyContent = 'flex-end'), this;
        }
        width(ae = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ width: ae }) : (this._width = ae), this;
        }
        height(ae = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ height: ae }) : (this._height = ae), this;
        }
        centerHorizontally(ae = '') {
          return this.left(ae), (this._justifyContent = 'center'), this;
        }
        centerVertically(ae = '') {
          return this.top(ae), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const ae = this._overlayRef.overlayElement.style,
            Le = this._overlayRef.hostElement.style,
            ht = this._overlayRef.getConfig(),
            { width: Se, height: Be, maxWidth: Pe, maxHeight: X } = ht,
            we = !(('100%' !== Se && '100vw' !== Se) || (Pe && '100%' !== Pe && '100vw' !== Pe)),
            Rt = !(('100%' !== Be && '100vh' !== Be) || (X && '100%' !== X && '100vh' !== X));
          (ae.position = this._cssPosition),
            (ae.marginLeft = we ? '0' : this._leftOffset),
            (ae.marginTop = Rt ? '0' : this._topOffset),
            (ae.marginBottom = this._bottomOffset),
            (ae.marginRight = this._rightOffset),
            we
              ? (Le.justifyContent = 'flex-start')
              : 'center' === this._justifyContent
              ? (Le.justifyContent = 'center')
              : 'rtl' === this._overlayRef.getConfig().direction
              ? 'flex-start' === this._justifyContent
                ? (Le.justifyContent = 'flex-end')
                : 'flex-end' === this._justifyContent && (Le.justifyContent = 'flex-start')
              : (Le.justifyContent = this._justifyContent),
            (Le.alignItems = Rt ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const ae = this._overlayRef.overlayElement.style,
            Le = this._overlayRef.hostElement,
            ht = Le.style;
          Le.classList.remove(Ct),
            (ht.justifyContent =
              ht.alignItems =
              ae.marginTop =
              ae.marginBottom =
              ae.marginLeft =
              ae.marginRight =
              ae.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let Et = (() => {
          class At {
            constructor(Le, ht, Se, Be) {
              (this._viewportRuler = Le), (this._document = ht), (this._platform = Se), (this._overlayContainer = Be);
            }
            global() {
              return new st();
            }
            flexibleConnectedTo(Le) {
              return new kt(Le, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
          }
          return (
            (At.ɵfac = function (Le) {
              return new (Le || At)(d.LFG(h.rL), d.LFG(m.K0), d.LFG(Ce.t4), d.LFG(qe));
            }),
            (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac, providedIn: 'root' })),
            At
          );
        })(),
        yt = (() => {
          class At {
            constructor(Le) {
              (this._attachedOverlays = []), (this._document = Le);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(Le) {
              this.remove(Le), this._attachedOverlays.push(Le);
            }
            remove(Le) {
              const ht = this._attachedOverlays.indexOf(Le);
              ht > -1 && this._attachedOverlays.splice(ht, 1), 0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (At.ɵfac = function (Le) {
              return new (Le || At)(d.LFG(m.K0));
            }),
            (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac, providedIn: 'root' })),
            At
          );
        })(),
        Ue = (() => {
          class At extends yt {
            constructor(Le) {
              super(Le),
                (this._keydownListener = (ht) => {
                  const Se = this._attachedOverlays;
                  for (let Be = Se.length - 1; Be > -1; Be--)
                    if (Se[Be]._keydownEvents.observers.length > 0) {
                      Se[Be]._keydownEvents.next(ht);
                      break;
                    }
                });
            }
            add(Le) {
              super.add(Le),
                this._isAttached ||
                  (this._document.body.addEventListener('keydown', this._keydownListener), (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener('keydown', this._keydownListener), (this._isAttached = !1));
            }
          }
          return (
            (At.ɵfac = function (Le) {
              return new (Le || At)(d.LFG(m.K0));
            }),
            (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac, providedIn: 'root' })),
            At
          );
        })(),
        bt = (() => {
          class At extends yt {
            constructor(Le, ht) {
              super(Le),
                (this._platform = ht),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (Se) => {
                  this._pointerDownEventTarget = (0, Ce.sA)(Se);
                }),
                (this._clickListener = (Se) => {
                  const Be = (0, Ce.sA)(Se),
                    Pe = 'click' === Se.type && this._pointerDownEventTarget ? this._pointerDownEventTarget : Be;
                  this._pointerDownEventTarget = null;
                  const X = this._attachedOverlays.slice();
                  for (let we = X.length - 1; we > -1; we--) {
                    const Rt = X[we];
                    if (!(Rt._outsidePointerEvents.observers.length < 1) && Rt.hasAttached()) {
                      if (Rt.overlayElement.contains(Be) || Rt.overlayElement.contains(Pe)) break;
                      Rt._outsidePointerEvents.next(Se);
                    }
                  }
                });
            }
            add(Le) {
              if ((super.add(Le), !this._isAttached)) {
                const ht = this._document.body;
                ht.addEventListener('pointerdown', this._pointerDownListener, !0),
                  ht.addEventListener('click', this._clickListener, !0),
                  ht.addEventListener('auxclick', this._clickListener, !0),
                  ht.addEventListener('contextmenu', this._clickListener, !0),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = ht.style.cursor),
                    (ht.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const Le = this._document.body;
                Le.removeEventListener('pointerdown', this._pointerDownListener, !0),
                  Le.removeEventListener('click', this._clickListener, !0),
                  Le.removeEventListener('auxclick', this._clickListener, !0),
                  Le.removeEventListener('contextmenu', this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((Le.style.cursor = this._cursorOriginalValue), (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
          }
          return (
            (At.ɵfac = function (Le) {
              return new (Le || At)(d.LFG(m.K0), d.LFG(Ce.t4));
            }),
            (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac, providedIn: 'root' })),
            At
          );
        })(),
        at = 0,
        mt = (() => {
          class At {
            constructor(Le, ht, Se, Be, Pe, X, we, Rt, It, an, mn) {
              (this.scrollStrategies = Le),
                (this._overlayContainer = ht),
                (this._componentFactoryResolver = Se),
                (this._positionBuilder = Be),
                (this._keyboardDispatcher = Pe),
                (this._injector = X),
                (this._ngZone = we),
                (this._document = Rt),
                (this._directionality = It),
                (this._location = an),
                (this._outsideClickDispatcher = mn);
            }
            create(Le) {
              const ht = this._createHostElement(),
                Se = this._createPaneElement(ht),
                Be = this._createPortalOutlet(Se),
                Pe = new $e(Le);
              return (
                (Pe.direction = Pe.direction || this._directionality.value),
                new it(
                  Be,
                  ht,
                  Se,
                  Pe,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(Le) {
              const ht = this._document.createElement('div');
              return (ht.id = 'cdk-overlay-' + at++), ht.classList.add('cdk-overlay-pane'), Le.appendChild(ht), ht;
            }
            _createHostElement() {
              const Le = this._document.createElement('div');
              return this._overlayContainer.getContainerElement().appendChild(Le), Le;
            }
            _createPortalOutlet(Le) {
              return (
                this._appRef || (this._appRef = this._injector.get(d.z2F)),
                new He.u0(Le, this._componentFactoryResolver, this._appRef, this._injector, this._document)
              );
            }
          }
          return (
            (At.ɵfac = function (Le) {
              return new (Le || At)(
                d.LFG(We),
                d.LFG(qe),
                d.LFG(d._Vd),
                d.LFG(Et),
                d.LFG(Ue),
                d.LFG(d.zs3),
                d.LFG(d.R0b),
                d.LFG(m.K0),
                d.LFG(Re.Is),
                d.LFG(m.Ye),
                d.LFG(bt)
              );
            }),
            (At.ɵprov = d.Yz7({ token: At, factory: At.ɵfac })),
            At
          );
        })();
      const ot = {
        provide: new d.OlP('cdk-connected-overlay-scroll-strategy'),
        deps: [mt],
        useFactory: function re(At) {
          return () => At.scrollStrategies.reposition();
        },
      };
      let Zt = (() => {
        class At {}
        return (
          (At.ɵfac = function (Le) {
            return new (Le || At)();
          }),
          (At.ɵmod = d.oAB({ type: At })),
          (At.ɵinj = d.cJS({ providers: [mt, ot], imports: [[Re.vT, He.eL, h.Cl], h.Cl] })),
          At
        );
      })();
    },
    925: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        t4: () => N,
        ud: () => Ce,
        sA: () => vt,
        ht: () => dt,
        kV: () => Ze,
        Oy: () => We,
        _i: () => et,
        qK: () => Fe,
        i$: () => fe,
        Mq: () => Oe,
      });
      var h = x(5e3),
        m = x(9808);
      let d;
      try {
        d = 'undefined' != typeof Intl && Intl.v8BreakIterator;
      } catch ($e) {
        d = !1;
      }
      let Re,
        N = (() => {
          class $e {
            constructor(Ke) {
              (this._platformId = Ke),
                (this.isBrowser = this._platformId
                  ? (0, m.NF)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !d) &&
                  'undefined' != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window)),
                (this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT),
                (this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
            }
          }
          return (
            ($e.ɵfac = function (Ke) {
              return new (Ke || $e)(h.LFG(h.Lbi));
            }),
            ($e.ɵprov = h.Yz7({ token: $e, factory: $e.ɵfac, providedIn: 'root' })),
            $e
          );
        })(),
        Ce = (() => {
          class $e {}
          return (
            ($e.ɵfac = function (Ke) {
              return new (Ke || $e)();
            }),
            ($e.ɵmod = h.oAB({ type: $e })),
            ($e.ɵinj = h.cJS({})),
            $e
          );
        })();
      const He = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function Fe() {
        if (Re) return Re;
        if ('object' != typeof document || !document) return (Re = new Set(He)), Re;
        let $e = document.createElement('input');
        return (Re = new Set(He.filter((ge) => ($e.setAttribute('type', ge), $e.type === ge)))), Re;
      }
      let Ne, ue, Qe, lt;
      function fe($e) {
        return (function ee() {
          if (null == Ne && 'undefined' != typeof window)
            try {
              window.addEventListener('test', null, Object.defineProperty({}, 'passive', { get: () => (Ne = !0) }));
            } finally {
              Ne = Ne || !1;
            }
          return Ne;
        })()
          ? $e
          : !!$e.capture;
      }
      function Oe() {
        if (null == Qe) {
          if ('object' != typeof document || !document || 'function' != typeof Element || !Element)
            return (Qe = !1), Qe;
          if ('scrollBehavior' in document.documentElement.style) Qe = !0;
          else {
            const $e = Element.prototype.scrollTo;
            Qe = !!$e && !/\{\s*\[native code\]\s*\}/.test($e.toString());
          }
        }
        return Qe;
      }
      function et() {
        if ('object' != typeof document || !document) return 0;
        if (null == ue) {
          const $e = document.createElement('div'),
            ge = $e.style;
          ($e.dir = 'rtl'),
            (ge.width = '1px'),
            (ge.overflow = 'auto'),
            (ge.visibility = 'hidden'),
            (ge.pointerEvents = 'none'),
            (ge.position = 'absolute');
          const Ke = document.createElement('div'),
            Ie = Ke.style;
          (Ie.width = '2px'),
            (Ie.height = '1px'),
            $e.appendChild(Ke),
            document.body.appendChild($e),
            (ue = 0),
            0 === $e.scrollLeft && (($e.scrollLeft = 1), (ue = 0 === $e.scrollLeft ? 1 : 2)),
            $e.remove();
        }
        return ue;
      }
      function Ze($e) {
        if (
          (function me() {
            if (null == lt) {
              const $e = 'undefined' != typeof document ? document.head : null;
              lt = !(!$e || (!$e.createShadowRoot && !$e.attachShadow));
            }
            return lt;
          })()
        ) {
          const ge = $e.getRootNode ? $e.getRootNode() : null;
          if ('undefined' != typeof ShadowRoot && ShadowRoot && ge instanceof ShadowRoot) return ge;
        }
        return null;
      }
      function dt() {
        let $e = 'undefined' != typeof document && document ? document.activeElement : null;
        for (; $e && $e.shadowRoot; ) {
          const ge = $e.shadowRoot.activeElement;
          if (ge === $e) break;
          $e = ge;
        }
        return $e;
      }
      function vt($e) {
        return $e.composedPath ? $e.composedPath()[0] : $e.target;
      }
      function We() {
        return (
          ('undefined' != typeof __karma__ && !!__karma__) ||
          ('undefined' != typeof jasmine && !!jasmine) ||
          ('undefined' != typeof jest && !!jest) ||
          ('undefined' != typeof Mocha && !!Mocha)
        );
      }
    },
    7429: (un, ft, x) => {
      'use strict';
      x.d(ft, { en: () => Qe, Pl: () => dt, C5: () => ee, u0: () => et, eL: () => We, UE: () => fe });
      var h = x(5e3),
        m = x(9808);
      class Ne {
        attach(Ke) {
          return (this._attachedHost = Ke), Ke.attach(this);
        }
        detach() {
          let Ke = this._attachedHost;
          null != Ke && ((this._attachedHost = null), Ke.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(Ke) {
          this._attachedHost = Ke;
        }
      }
      class ee extends Ne {
        constructor(Ke, Ie, De, Ye) {
          super(),
            (this.component = Ke),
            (this.viewContainerRef = Ie),
            (this.injector = De),
            (this.componentFactoryResolver = Ye);
        }
      }
      class fe extends Ne {
        constructor(Ke, Ie, De) {
          super(), (this.templateRef = Ke), (this.viewContainerRef = Ie), (this.context = De);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(Ke, Ie = this.context) {
          return (this.context = Ie), super.attach(Ke);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class ue extends Ne {
        constructor(Ke) {
          super(), (this.element = Ke instanceof h.SBq ? Ke.nativeElement : Ke);
        }
      }
      class Qe {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(Ke) {
          return Ke instanceof ee
            ? ((this._attachedPortal = Ke), this.attachComponentPortal(Ke))
            : Ke instanceof fe
            ? ((this._attachedPortal = Ke), this.attachTemplatePortal(Ke))
            : this.attachDomPortal && Ke instanceof ue
            ? ((this._attachedPortal = Ke), this.attachDomPortal(Ke))
            : void 0;
        }
        detach() {
          this._attachedPortal && (this._attachedPortal.setAttachedHost(null), (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(), this._invokeDisposeFn(), (this._isDisposed = !0);
        }
        setDisposeFn(Ke) {
          this._disposeFn = Ke;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class et extends Qe {
        constructor(Ke, Ie, De, Ye, it) {
          super(),
            (this.outletElement = Ke),
            (this._componentFactoryResolver = Ie),
            (this._appRef = De),
            (this._defaultInjector = Ye),
            (this.attachDomPortal = (qe) => {
              const Ve = qe.element,
                Ft = this._document.createComment('dom-portal');
              Ve.parentNode.insertBefore(Ft, Ve),
                this.outletElement.appendChild(Ve),
                (this._attachedPortal = qe),
                super.setDisposeFn(() => {
                  Ft.parentNode && Ft.parentNode.replaceChild(Ve, Ft);
                });
            }),
            (this._document = it);
        }
        attachComponentPortal(Ke) {
          const De = (Ke.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(
            Ke.component
          );
          let Ye;
          return (
            Ke.viewContainerRef
              ? ((Ye = Ke.viewContainerRef.createComponent(
                  De,
                  Ke.viewContainerRef.length,
                  Ke.injector || Ke.viewContainerRef.injector
                )),
                this.setDisposeFn(() => Ye.destroy()))
              : ((Ye = De.create(Ke.injector || this._defaultInjector)),
                this._appRef.attachView(Ye.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(Ye.hostView), Ye.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(Ye)),
            (this._attachedPortal = Ke),
            Ye
          );
        }
        attachTemplatePortal(Ke) {
          let Ie = Ke.viewContainerRef,
            De = Ie.createEmbeddedView(Ke.templateRef, Ke.context);
          return (
            De.rootNodes.forEach((Ye) => this.outletElement.appendChild(Ye)),
            De.detectChanges(),
            this.setDisposeFn(() => {
              let Ye = Ie.indexOf(De);
              -1 !== Ye && Ie.remove(Ye);
            }),
            (this._attachedPortal = Ke),
            De
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(Ke) {
          return Ke.hostView.rootNodes[0];
        }
      }
      let dt = (() => {
          class ge extends Qe {
            constructor(Ie, De, Ye) {
              super(),
                (this._componentFactoryResolver = Ie),
                (this._viewContainerRef = De),
                (this._isInitialized = !1),
                (this.attached = new h.vpe()),
                (this.attachDomPortal = (it) => {
                  const qe = it.element,
                    Ve = this._document.createComment('dom-portal');
                  it.setAttachedHost(this),
                    qe.parentNode.insertBefore(Ve, qe),
                    this._getRootNode().appendChild(qe),
                    (this._attachedPortal = it),
                    super.setDisposeFn(() => {
                      Ve.parentNode && Ve.parentNode.replaceChild(qe, Ve);
                    });
                }),
                (this._document = Ye);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(Ie) {
              (this.hasAttached() && !Ie && !this._isInitialized) ||
                (this.hasAttached() && super.detach(), Ie && super.attach(Ie), (this._attachedPortal = Ie || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(), (this._attachedPortal = null), (this._attachedRef = null);
            }
            attachComponentPortal(Ie) {
              Ie.setAttachedHost(this);
              const De = null != Ie.viewContainerRef ? Ie.viewContainerRef : this._viewContainerRef,
                it = (Ie.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(
                  Ie.component
                ),
                qe = De.createComponent(it, De.length, Ie.injector || De.injector);
              return (
                De !== this._viewContainerRef && this._getRootNode().appendChild(qe.hostView.rootNodes[0]),
                super.setDisposeFn(() => qe.destroy()),
                (this._attachedPortal = Ie),
                (this._attachedRef = qe),
                this.attached.emit(qe),
                qe
              );
            }
            attachTemplatePortal(Ie) {
              Ie.setAttachedHost(this);
              const De = this._viewContainerRef.createEmbeddedView(Ie.templateRef, Ie.context);
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = Ie),
                (this._attachedRef = De),
                this.attached.emit(De),
                De
              );
            }
            _getRootNode() {
              const Ie = this._viewContainerRef.element.nativeElement;
              return Ie.nodeType === Ie.ELEMENT_NODE ? Ie : Ie.parentNode;
            }
          }
          return (
            (ge.ɵfac = function (Ie) {
              return new (Ie || ge)(h.Y36(h._Vd), h.Y36(h.s_b), h.Y36(m.K0));
            }),
            (ge.ɵdir = h.lG2({
              type: ge,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [h.qOj],
            })),
            ge
          );
        })(),
        We = (() => {
          class ge {}
          return (
            (ge.ɵfac = function (Ie) {
              return new (Ie || ge)();
            }),
            (ge.ɵmod = h.oAB({ type: ge })),
            (ge.ɵinj = h.cJS({})),
            ge
          );
        })();
    },
    495: (un, ft, x) => {
      'use strict';
      x.d(ft, { PQ: () => Ct, ZD: () => Nt, mF: () => Je, Cl: () => en, rL: () => Et });
      var h = x(3191),
        m = x(5e3),
        d = x(4408),
        N = x(727);
      const Ce = {
        schedule(xt) {
          let Gt = requestAnimationFrame,
            re = cancelAnimationFrame;
          const { delegate: ot } = Ce;
          ot && ((Gt = ot.requestAnimationFrame), (re = ot.cancelAnimationFrame));
          const Zt = Gt((hn) => {
            (re = void 0), xt(hn);
          });
          return new N.w0(() => (null == re ? void 0 : re(Zt)));
        },
        requestAnimationFrame(...xt) {
          const { delegate: Gt } = Ce;
          return ((null == Gt ? void 0 : Gt.requestAnimationFrame) || requestAnimationFrame)(...xt);
        },
        cancelAnimationFrame(...xt) {
          const { delegate: Gt } = Ce;
          return ((null == Gt ? void 0 : Gt.cancelAnimationFrame) || cancelAnimationFrame)(...xt);
        },
        delegate: void 0,
      };
      var He = x(7565);
      new (class Fe extends He.v {
        flush(Gt) {
          this._active = !0;
          const re = this._scheduled;
          this._scheduled = void 0;
          const { actions: ot } = this;
          let Zt;
          Gt = Gt || ot.shift();
          do {
            if ((Zt = Gt.execute(Gt.state, Gt.delay))) break;
          } while ((Gt = ot[0]) && Gt.id === re && ot.shift());
          if (((this._active = !1), Zt)) {
            for (; (Gt = ot[0]) && Gt.id === re && ot.shift(); ) Gt.unsubscribe();
            throw Zt;
          }
        }
      })(
        class Re extends d.o {
          constructor(Gt, re) {
            super(Gt, re), (this.scheduler = Gt), (this.work = re);
          }
          requestAsyncId(Gt, re, ot = 0) {
            return null !== ot && ot > 0
              ? super.requestAsyncId(Gt, re, ot)
              : (Gt.actions.push(this),
                Gt._scheduled || (Gt._scheduled = Ce.requestAnimationFrame(() => Gt.flush(void 0))));
          }
          recycleAsyncId(Gt, re, ot = 0) {
            if ((null != ot && ot > 0) || (null == ot && this.delay > 0)) return super.recycleAsyncId(Gt, re, ot);
            Gt.actions.some((Zt) => Zt.id === re) || (Ce.cancelAnimationFrame(re), (Gt._scheduled = void 0));
          }
        }
      );
      var fe = x(7579),
        ue = x(9646),
        Qe = x(8306),
        Oe = x(4968),
        lt = (x(3101), x(4986)),
        me = x(4482),
        Ze = x(8421),
        dt = x(5403),
        We = x(5963);
      function $e(xt, Gt = lt.z) {
        return (function vt(xt) {
          return (0, me.e)((Gt, re) => {
            let ot = !1,
              Zt = null,
              hn = null,
              At = !1;
            const ae = () => {
                if ((null == hn || hn.unsubscribe(), (hn = null), ot)) {
                  ot = !1;
                  const ht = Zt;
                  (Zt = null), re.next(ht);
                }
                At && re.complete();
              },
              Le = () => {
                (hn = null), At && re.complete();
              };
            Gt.subscribe(
              new dt.Q(
                re,
                (ht) => {
                  (ot = !0), (Zt = ht), hn || (0, Ze.Xf)(xt(ht)).subscribe((hn = new dt.Q(re, ae, Le)));
                },
                () => {
                  (At = !0), (!ot || !hn || hn.closed) && re.complete();
                }
              )
            );
          });
        })(() => (0, We.H)(xt, Gt));
      }
      var ge = x(9300),
        Ke = x(2722),
        Ie = x(9808),
        De = x(925),
        Ye = x(226);
      let Je = (() => {
          class xt {
            constructor(re, ot, Zt) {
              (this._ngZone = re),
                (this._platform = ot),
                (this._scrolled = new fe.x()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = Zt);
            }
            register(re) {
              this.scrollContainers.has(re) ||
                this.scrollContainers.set(
                  re,
                  re.elementScrolled().subscribe(() => this._scrolled.next(re))
                );
            }
            deregister(re) {
              const ot = this.scrollContainers.get(re);
              ot && (ot.unsubscribe(), this.scrollContainers.delete(re));
            }
            scrolled(re = 20) {
              return this._platform.isBrowser
                ? new Qe.y((ot) => {
                    this._globalSubscription || this._addGlobalListener();
                    const Zt = re > 0 ? this._scrolled.pipe($e(re)).subscribe(ot) : this._scrolled.subscribe(ot);
                    return (
                      this._scrolledCount++,
                      () => {
                        Zt.unsubscribe(), this._scrolledCount--, this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : (0, ue.of)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((re, ot) => this.deregister(ot)),
                this._scrolled.complete();
            }
            ancestorScrolled(re, ot) {
              const Zt = this.getAncestorScrollContainers(re);
              return this.scrolled(ot).pipe((0, ge.h)((hn) => !hn || Zt.indexOf(hn) > -1));
            }
            getAncestorScrollContainers(re) {
              const ot = [];
              return (
                this.scrollContainers.forEach((Zt, hn) => {
                  this._scrollableContainsElement(hn, re) && ot.push(hn);
                }),
                ot
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(re, ot) {
              let Zt = (0, h.fI)(ot),
                hn = re.getElementRef().nativeElement;
              do {
                if (Zt == hn) return !0;
              } while ((Zt = Zt.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() => {
                const re = this._getWindow();
                return (0, Oe.R)(re.document, 'scroll').subscribe(() => this._scrolled.next());
              });
            }
            _removeGlobalListener() {
              this._globalSubscription && (this._globalSubscription.unsubscribe(), (this._globalSubscription = null));
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(m.LFG(m.R0b), m.LFG(De.t4), m.LFG(Ie.K0, 8));
            }),
            (xt.ɵprov = m.Yz7({ token: xt, factory: xt.ɵfac, providedIn: 'root' })),
            xt
          );
        })(),
        Ct = (() => {
          class xt {
            constructor(re, ot, Zt, hn) {
              (this.elementRef = re),
                (this.scrollDispatcher = ot),
                (this.ngZone = Zt),
                (this.dir = hn),
                (this._destroyed = new fe.x()),
                (this._elementScrolled = new Qe.y((At) =>
                  this.ngZone.runOutsideAngular(() =>
                    (0, Oe.R)(this.elementRef.nativeElement, 'scroll')
                      .pipe((0, Ke.R)(this._destroyed))
                      .subscribe(At)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this), this._destroyed.next(), this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(re) {
              const ot = this.elementRef.nativeElement,
                Zt = this.dir && 'rtl' == this.dir.value;
              null == re.left && (re.left = Zt ? re.end : re.start),
                null == re.right && (re.right = Zt ? re.start : re.end),
                null != re.bottom && (re.top = ot.scrollHeight - ot.clientHeight - re.bottom),
                Zt && 0 != (0, De._i)()
                  ? (null != re.left && (re.right = ot.scrollWidth - ot.clientWidth - re.left),
                    2 == (0, De._i)()
                      ? (re.left = re.right)
                      : 1 == (0, De._i)() && (re.left = re.right ? -re.right : re.right))
                  : null != re.right && (re.left = ot.scrollWidth - ot.clientWidth - re.right),
                this._applyScrollToOptions(re);
            }
            _applyScrollToOptions(re) {
              const ot = this.elementRef.nativeElement;
              (0, De.Mq)()
                ? ot.scrollTo(re)
                : (null != re.top && (ot.scrollTop = re.top), null != re.left && (ot.scrollLeft = re.left));
            }
            measureScrollOffset(re) {
              const ot = 'left',
                hn = this.elementRef.nativeElement;
              if ('top' == re) return hn.scrollTop;
              if ('bottom' == re) return hn.scrollHeight - hn.clientHeight - hn.scrollTop;
              const At = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == re ? (re = At ? 'right' : ot) : 'end' == re && (re = At ? ot : 'right'),
                At && 2 == (0, De._i)()
                  ? re == ot
                    ? hn.scrollWidth - hn.clientWidth - hn.scrollLeft
                    : hn.scrollLeft
                  : At && 1 == (0, De._i)()
                  ? re == ot
                    ? hn.scrollLeft + hn.scrollWidth - hn.clientWidth
                    : -hn.scrollLeft
                  : re == ot
                  ? hn.scrollLeft
                  : hn.scrollWidth - hn.clientWidth - hn.scrollLeft
              );
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(m.Y36(m.SBq), m.Y36(Je), m.Y36(m.R0b), m.Y36(Ye.Is, 8));
            }),
            (xt.ɵdir = m.lG2({
              type: xt,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
            })),
            xt
          );
        })(),
        Et = (() => {
          class xt {
            constructor(re, ot, Zt) {
              (this._platform = re),
                (this._change = new fe.x()),
                (this._changeListener = (hn) => {
                  this._change.next(hn);
                }),
                (this._document = Zt),
                ot.runOutsideAngular(() => {
                  if (re.isBrowser) {
                    const hn = this._getWindow();
                    hn.addEventListener('resize', this._changeListener),
                      hn.addEventListener('orientationchange', this._changeListener);
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const re = this._getWindow();
                re.removeEventListener('resize', this._changeListener),
                  re.removeEventListener('orientationchange', this._changeListener);
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const re = { width: this._viewportSize.width, height: this._viewportSize.height };
              return this._platform.isBrowser || (this._viewportSize = null), re;
            }
            getViewportRect() {
              const re = this.getViewportScrollPosition(),
                { width: ot, height: Zt } = this.getViewportSize();
              return { top: re.top, left: re.left, bottom: re.top + Zt, right: re.left + ot, height: Zt, width: ot };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const re = this._document,
                ot = this._getWindow(),
                Zt = re.documentElement,
                hn = Zt.getBoundingClientRect();
              return {
                top: -hn.top || re.body.scrollTop || ot.scrollY || Zt.scrollTop || 0,
                left: -hn.left || re.body.scrollLeft || ot.scrollX || Zt.scrollLeft || 0,
              };
            }
            change(re = 20) {
              return re > 0 ? this._change.pipe($e(re)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const re = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: re.innerWidth, height: re.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(m.LFG(De.t4), m.LFG(m.R0b), m.LFG(Ie.K0, 8));
            }),
            (xt.ɵprov = m.Yz7({ token: xt, factory: xt.ɵfac, providedIn: 'root' })),
            xt
          );
        })(),
        Nt = (() => {
          class xt {}
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)();
            }),
            (xt.ɵmod = m.oAB({ type: xt })),
            (xt.ɵinj = m.cJS({})),
            xt
          );
        })(),
        en = (() => {
          class xt {}
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)();
            }),
            (xt.ɵmod = m.oAB({ type: xt })),
            (xt.ɵinj = m.cJS({ imports: [[Ye.vT, De.ud, Nt], Ye.vT, Nt] })),
            xt
          );
        })();
    },
    9808: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        mr: () => dt,
        ez: () => Ys,
        K0: () => He,
        Do: () => We,
        V_: () => ee,
        Ye: () => $e,
        S$: () => me,
        mk: () => _i,
        sg: () => lr,
        O5: () => fi,
        PC: () => Bn,
        RF: () => ji,
        n9: () => tr,
        b0: () => vt,
        lw: () => Fe,
        EM: () => ds,
        JF: () => Ni,
        NF: () => Or,
        PM: () => Zi,
        w_: () => Re,
        bD: () => Po,
        q: () => d,
        Mx: () => ks,
        HT: () => Ce,
      });
      var h = x(5e3);
      let m = null;
      function d() {
        return m;
      }
      function Ce(z) {
        m || (m = z);
      }
      class Re {}
      const He = new h.OlP('DocumentToken');
      let Fe = (() => {
        class z {
          historyGo($) {
            throw new Error('Not implemented');
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)();
          }),
          (z.ɵprov = h.Yz7({
            token: z,
            factory: function () {
              return (function Ne() {
                return (0, h.LFG)(fe);
              })();
            },
            providedIn: 'platform',
          })),
          z
        );
      })();
      const ee = new h.OlP('Location Initialized');
      let fe = (() => {
        class z extends Fe {
          constructor($) {
            super(), (this._doc = $), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return d().getBaseHref(this._doc);
          }
          onPopState($) {
            const ke = d().getGlobalEventTarget(this._doc, 'window');
            return ke.addEventListener('popstate', $, !1), () => ke.removeEventListener('popstate', $);
          }
          onHashChange($) {
            const ke = d().getGlobalEventTarget(this._doc, 'window');
            return ke.addEventListener('hashchange', $, !1), () => ke.removeEventListener('hashchange', $);
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname($) {
            this.location.pathname = $;
          }
          pushState($, ke, Dt) {
            ue() ? this._history.pushState($, ke, Dt) : (this.location.hash = Dt);
          }
          replaceState($, ke, Dt) {
            ue() ? this._history.replaceState($, ke, Dt) : (this.location.hash = Dt);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo($ = 0) {
            this._history.go($);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)(h.LFG(He));
          }),
          (z.ɵprov = h.Yz7({
            token: z,
            factory: function () {
              return (function Qe() {
                return new fe((0, h.LFG)(He));
              })();
            },
            providedIn: 'platform',
          })),
          z
        );
      })();
      function ue() {
        return !!window.history.pushState;
      }
      function Oe(z, be) {
        if (0 == z.length) return be;
        if (0 == be.length) return z;
        let $ = 0;
        return (
          z.endsWith('/') && $++,
          be.startsWith('/') && $++,
          2 == $ ? z + be.substring(1) : 1 == $ ? z + be : z + '/' + be
        );
      }
      function et(z) {
        const be = z.match(/#|\?|$/),
          $ = (be && be.index) || z.length;
        return z.slice(0, $ - ('/' === z[$ - 1] ? 1 : 0)) + z.slice($);
      }
      function lt(z) {
        return z && '?' !== z[0] ? '?' + z : z;
      }
      let me = (() => {
        class z {
          historyGo($) {
            throw new Error('Not implemented');
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)();
          }),
          (z.ɵprov = h.Yz7({
            token: z,
            factory: function () {
              return (function Ze(z) {
                const be = (0, h.LFG)(He).location;
                return new vt((0, h.LFG)(Fe), (be && be.origin) || '');
              })();
            },
            providedIn: 'root',
          })),
          z
        );
      })();
      const dt = new h.OlP('appBaseHref');
      let vt = (() => {
          class z extends me {
            constructor($, ke) {
              if (
                (super(),
                (this._platformLocation = $),
                (this._removeListenerFns = []),
                null == ke && (ke = this._platformLocation.getBaseHrefFromDOM()),
                null == ke)
              )
                throw new Error(
                  'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                );
              this._baseHref = ke;
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; ) this._removeListenerFns.pop()();
            }
            onPopState($) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState($),
                this._platformLocation.onHashChange($)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl($) {
              return Oe(this._baseHref, $);
            }
            path($ = !1) {
              const ke = this._platformLocation.pathname + lt(this._platformLocation.search),
                Dt = this._platformLocation.hash;
              return Dt && $ ? `${ke}${Dt}` : ke;
            }
            pushState($, ke, Dt, tn) {
              const yn = this.prepareExternalUrl(Dt + lt(tn));
              this._platformLocation.pushState($, ke, yn);
            }
            replaceState($, ke, Dt, tn) {
              const yn = this.prepareExternalUrl(Dt + lt(tn));
              this._platformLocation.replaceState($, ke, yn);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo($ = 0) {
              var ke, Dt;
              null === (Dt = (ke = this._platformLocation).historyGo) || void 0 === Dt || Dt.call(ke, $);
            }
          }
          return (
            (z.ɵfac = function ($) {
              return new ($ || z)(h.LFG(Fe), h.LFG(dt, 8));
            }),
            (z.ɵprov = h.Yz7({ token: z, factory: z.ɵfac })),
            z
          );
        })(),
        We = (() => {
          class z extends me {
            constructor($, ke) {
              super(),
                (this._platformLocation = $),
                (this._baseHref = ''),
                (this._removeListenerFns = []),
                null != ke && (this._baseHref = ke);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; ) this._removeListenerFns.pop()();
            }
            onPopState($) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState($),
                this._platformLocation.onHashChange($)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path($ = !1) {
              let ke = this._platformLocation.hash;
              return null == ke && (ke = '#'), ke.length > 0 ? ke.substring(1) : ke;
            }
            prepareExternalUrl($) {
              const ke = Oe(this._baseHref, $);
              return ke.length > 0 ? '#' + ke : ke;
            }
            pushState($, ke, Dt, tn) {
              let yn = this.prepareExternalUrl(Dt + lt(tn));
              0 == yn.length && (yn = this._platformLocation.pathname), this._platformLocation.pushState($, ke, yn);
            }
            replaceState($, ke, Dt, tn) {
              let yn = this.prepareExternalUrl(Dt + lt(tn));
              0 == yn.length && (yn = this._platformLocation.pathname), this._platformLocation.replaceState($, ke, yn);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            historyGo($ = 0) {
              var ke, Dt;
              null === (Dt = (ke = this._platformLocation).historyGo) || void 0 === Dt || Dt.call(ke, $);
            }
          }
          return (
            (z.ɵfac = function ($) {
              return new ($ || z)(h.LFG(Fe), h.LFG(dt, 8));
            }),
            (z.ɵprov = h.Yz7({ token: z, factory: z.ɵfac })),
            z
          );
        })(),
        $e = (() => {
          class z {
            constructor($, ke) {
              (this._subject = new h.vpe()), (this._urlChangeListeners = []), (this._platformStrategy = $);
              const Dt = this._platformStrategy.getBaseHref();
              (this._platformLocation = ke),
                (this._baseHref = et(Ie(Dt))),
                this._platformStrategy.onPopState((tn) => {
                  this._subject.emit({ url: this.path(!0), pop: !0, state: tn.state, type: tn.type });
                });
            }
            path($ = !1) {
              return this.normalize(this._platformStrategy.path($));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo($, ke = '') {
              return this.path() == this.normalize($ + lt(ke));
            }
            normalize($) {
              return z.stripTrailingSlash(
                (function Ke(z, be) {
                  return z && be.startsWith(z) ? be.substring(z.length) : be;
                })(this._baseHref, Ie($))
              );
            }
            prepareExternalUrl($) {
              return $ && '/' !== $[0] && ($ = '/' + $), this._platformStrategy.prepareExternalUrl($);
            }
            go($, ke = '', Dt = null) {
              this._platformStrategy.pushState(Dt, '', $, ke),
                this._notifyUrlChangeListeners(this.prepareExternalUrl($ + lt(ke)), Dt);
            }
            replaceState($, ke = '', Dt = null) {
              this._platformStrategy.replaceState(Dt, '', $, ke),
                this._notifyUrlChangeListeners(this.prepareExternalUrl($ + lt(ke)), Dt);
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            historyGo($ = 0) {
              var ke, Dt;
              null === (Dt = (ke = this._platformStrategy).historyGo) || void 0 === Dt || Dt.call(ke, $);
            }
            onUrlChange($) {
              this._urlChangeListeners.push($),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((ke) => {
                    this._notifyUrlChangeListeners(ke.url, ke.state);
                  }));
            }
            _notifyUrlChangeListeners($ = '', ke) {
              this._urlChangeListeners.forEach((Dt) => Dt($, ke));
            }
            subscribe($, ke, Dt) {
              return this._subject.subscribe({ next: $, error: ke, complete: Dt });
            }
          }
          return (
            (z.normalizeQueryParams = lt),
            (z.joinWithSlash = Oe),
            (z.stripTrailingSlash = et),
            (z.ɵfac = function ($) {
              return new ($ || z)(h.LFG(me), h.LFG(Fe));
            }),
            (z.ɵprov = h.Yz7({
              token: z,
              factory: function () {
                return (function ge() {
                  return new $e((0, h.LFG)(me), (0, h.LFG)(Fe));
                })();
              },
              providedIn: 'root',
            })),
            z
          );
        })();
      function Ie(z) {
        return z.replace(/\/index.html$/, '');
      }
      var it = (() => (
        ((it = it || {})[(it.Zero = 0)] = 'Zero'),
        (it[(it.One = 1)] = 'One'),
        (it[(it.Two = 2)] = 'Two'),
        (it[(it.Few = 3)] = 'Few'),
        (it[(it.Many = 4)] = 'Many'),
        (it[(it.Other = 5)] = 'Other'),
        it
      ))();
      const Zt = h.kL8;
      class Nn {}
      let qi = (() => {
        class z extends Nn {
          constructor($) {
            super(), (this.locale = $);
          }
          getPluralCategory($, ke) {
            switch (Zt(ke || this.locale)($)) {
              case it.Zero:
                return 'zero';
              case it.One:
                return 'one';
              case it.Two:
                return 'two';
              case it.Few:
                return 'few';
              case it.Many:
                return 'many';
              default:
                return 'other';
            }
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)(h.LFG(h.soG));
          }),
          (z.ɵprov = h.Yz7({ token: z, factory: z.ɵfac })),
          z
        );
      })();
      function ks(z, be) {
        be = encodeURIComponent(be);
        for (const $ of z.split(';')) {
          const ke = $.indexOf('='),
            [Dt, tn] = -1 == ke ? [$, ''] : [$.slice(0, ke), $.slice(ke + 1)];
          if (Dt.trim() === be) return decodeURIComponent(tn);
        }
        return null;
      }
      let _i = (() => {
        class z {
          constructor($, ke, Dt, tn) {
            (this._iterableDiffers = $),
              (this._keyValueDiffers = ke),
              (this._ngEl = Dt),
              (this._renderer = tn),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass($) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses = 'string' == typeof $ ? $.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass($) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = 'string' == typeof $ ? $.split(/\s+/) : $),
              this._rawClass &&
                ((0, h.sIi)(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create())
                  : (this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const $ = this._iterableDiffer.diff(this._rawClass);
              $ && this._applyIterableChanges($);
            } else if (this._keyValueDiffer) {
              const $ = this._keyValueDiffer.diff(this._rawClass);
              $ && this._applyKeyValueChanges($);
            }
          }
          _applyKeyValueChanges($) {
            $.forEachAddedItem((ke) => this._toggleClass(ke.key, ke.currentValue)),
              $.forEachChangedItem((ke) => this._toggleClass(ke.key, ke.currentValue)),
              $.forEachRemovedItem((ke) => {
                ke.previousValue && this._toggleClass(ke.key, !1);
              });
          }
          _applyIterableChanges($) {
            $.forEachAddedItem((ke) => {
              if ('string' != typeof ke.item)
                throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${(0, h.AaK)(ke.item)}`);
              this._toggleClass(ke.item, !0);
            }),
              $.forEachRemovedItem((ke) => this._toggleClass(ke.item, !1));
          }
          _applyClasses($) {
            $ &&
              (Array.isArray($) || $ instanceof Set
                ? $.forEach((ke) => this._toggleClass(ke, !0))
                : Object.keys($).forEach((ke) => this._toggleClass(ke, !!$[ke])));
          }
          _removeClasses($) {
            $ &&
              (Array.isArray($) || $ instanceof Set
                ? $.forEach((ke) => this._toggleClass(ke, !1))
                : Object.keys($).forEach((ke) => this._toggleClass(ke, !1)));
          }
          _toggleClass($, ke) {
            ($ = $.trim()) &&
              $.split(/\s+/g).forEach((Dt) => {
                ke
                  ? this._renderer.addClass(this._ngEl.nativeElement, Dt)
                  : this._renderer.removeClass(this._ngEl.nativeElement, Dt);
              });
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)(h.Y36(h.ZZ4), h.Y36(h.aQg), h.Y36(h.SBq), h.Y36(h.Qsj));
          }),
          (z.ɵdir = h.lG2({
            type: z,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
          })),
          z
        );
      })();
      class ps {
        constructor(be, $, ke, Dt) {
          (this.$implicit = be), (this.ngForOf = $), (this.index = ke), (this.count = Dt);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let lr = (() => {
        class z {
          constructor($, ke, Dt) {
            (this._viewContainer = $),
              (this._template = ke),
              (this._differs = Dt),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf($) {
            (this._ngForOf = $), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy($) {
            this._trackByFn = $;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate($) {
            $ && (this._template = $);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const $ = this._ngForOf;
              !this._differ && $ && (this._differ = this._differs.find($).create(this.ngForTrackBy));
            }
            if (this._differ) {
              const $ = this._differ.diff(this._ngForOf);
              $ && this._applyChanges($);
            }
          }
          _applyChanges($) {
            const ke = this._viewContainer;
            $.forEachOperation((Dt, tn, yn) => {
              if (null == Dt.previousIndex)
                ke.createEmbeddedView(
                  this._template,
                  new ps(Dt.item, this._ngForOf, -1, -1),
                  null === yn ? void 0 : yn
                );
              else if (null == yn) ke.remove(null === tn ? void 0 : tn);
              else if (null !== tn) {
                const Sn = ke.get(tn);
                ke.move(Sn, yn), ts(Sn, Dt);
              }
            });
            for (let Dt = 0, tn = ke.length; Dt < tn; Dt++) {
              const Sn = ke.get(Dt).context;
              (Sn.index = Dt), (Sn.count = tn), (Sn.ngForOf = this._ngForOf);
            }
            $.forEachIdentityChange((Dt) => {
              ts(ke.get(Dt.currentIndex), Dt);
            });
          }
          static ngTemplateContextGuard($, ke) {
            return !0;
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)(h.Y36(h.s_b), h.Y36(h.Rgc), h.Y36(h.ZZ4));
          }),
          (z.ɵdir = h.lG2({
            type: z,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: { ngForOf: 'ngForOf', ngForTrackBy: 'ngForTrackBy', ngForTemplate: 'ngForTemplate' },
          })),
          z
        );
      })();
      function ts(z, be) {
        z.context.$implicit = be.item;
      }
      let fi = (() => {
        class z {
          constructor($, ke) {
            (this._viewContainer = $),
              (this._context = new Ti()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = ke);
          }
          set ngIf($) {
            (this._context.$implicit = this._context.ngIf = $), this._updateView();
          }
          set ngIfThen($) {
            Vr('ngIfThen', $), (this._thenTemplateRef = $), (this._thenViewRef = null), this._updateView();
          }
          set ngIfElse($) {
            Vr('ngIfElse', $), (this._elseTemplateRef = $), (this._elseViewRef = null), this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context)))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)));
          }
          static ngTemplateContextGuard($, ke) {
            return !0;
          }
        }
        return (
          (z.ɵfac = function ($) {
            return new ($ || z)(h.Y36(h.s_b), h.Y36(h.Rgc));
          }),
          (z.ɵdir = h.lG2({
            type: z,
            selectors: [['', 'ngIf', '']],
            inputs: { ngIf: 'ngIf', ngIfThen: 'ngIfThen', ngIfElse: 'ngIfElse' },
          })),
          z
        );
      })();
      class Ti {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Vr(z, be) {
        if (be && !be.createEmbeddedView)
          throw new Error(`${z} must be a TemplateRef, but received '${(0, h.AaK)(be)}'.`);
      }
      class Jt {
        constructor(be, $) {
          (this._viewContainerRef = be), (this._templateRef = $), (this._created = !1);
        }
        create() {
          (this._created = !0), this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(be) {
          be && !this._created ? this.create() : !be && this._created && this.destroy();
        }
      }
      let ji = (() => {
          class z {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch($) {
              (this._ngSwitch = $), 0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault($) {
              this._defaultViews || (this._defaultViews = []), this._defaultViews.push($);
            }
            _matchCase($) {
              const ke = $ == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || ke),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                ke
              );
            }
            _updateDefaultCases($) {
              if (this._defaultViews && $ !== this._defaultUsed) {
                this._defaultUsed = $;
                for (let ke = 0; ke < this._defaultViews.length; ke++) this._defaultViews[ke].enforceState($);
              }
            }
          }
          return (
            (z.ɵfac = function ($) {
              return new ($ || z)();
            }),
            (z.ɵdir = h.lG2({ type: z, selectors: [['', 'ngSwitch', '']], inputs: { ngSwitch: 'ngSwitch' } })),
            z
          );
        })(),
        tr = (() => {
          class z {
            constructor($, ke, Dt) {
              (this.ngSwitch = Dt), Dt._addCase(), (this._view = new Jt($, ke));
            }
            ngDoCheck() {
              this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
            }
          }
          return (
            (z.ɵfac = function ($) {
              return new ($ || z)(h.Y36(h.s_b), h.Y36(h.Rgc), h.Y36(ji, 9));
            }),
            (z.ɵdir = h.lG2({
              type: z,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
            })),
            z
          );
        })(),
        Bn = (() => {
          class z {
            constructor($, ke, Dt) {
              (this._ngEl = $),
                (this._differs = ke),
                (this._renderer = Dt),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle($) {
              (this._ngStyle = $), !this._differ && $ && (this._differ = this._differs.find($).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const $ = this._differ.diff(this._ngStyle);
                $ && this._applyChanges($);
              }
            }
            _setStyle($, ke) {
              const [Dt, tn] = $.split('.');
              null != (ke = null != ke && tn ? `${ke}${tn}` : ke)
                ? this._renderer.setStyle(this._ngEl.nativeElement, Dt, ke)
                : this._renderer.removeStyle(this._ngEl.nativeElement, Dt);
            }
            _applyChanges($) {
              $.forEachRemovedItem((ke) => this._setStyle(ke.key, null)),
                $.forEachAddedItem((ke) => this._setStyle(ke.key, ke.currentValue)),
                $.forEachChangedItem((ke) => this._setStyle(ke.key, ke.currentValue));
            }
          }
          return (
            (z.ɵfac = function ($) {
              return new ($ || z)(h.Y36(h.SBq), h.Y36(h.aQg), h.Y36(h.Qsj));
            }),
            (z.ɵdir = h.lG2({ type: z, selectors: [['', 'ngStyle', '']], inputs: { ngStyle: 'ngStyle' } })),
            z
          );
        })(),
        Ys = (() => {
          class z {}
          return (
            (z.ɵfac = function ($) {
              return new ($ || z)();
            }),
            (z.ɵmod = h.oAB({ type: z })),
            (z.ɵinj = h.cJS({ providers: [{ provide: Nn, useClass: qi }] })),
            z
          );
        })();
      const Po = 'browser';
      function Or(z) {
        return z === Po;
      }
      function Zi(z) {
        return 'server' === z;
      }
      let ds = (() => {
        class z {}
        return (
          (z.ɵprov = (0, h.Yz7)({ token: z, providedIn: 'root', factory: () => new ya((0, h.LFG)(He), window) })), z
        );
      })();
      class ya {
        constructor(be, $) {
          (this.document = be), (this.window = $), (this.offset = () => [0, 0]);
        }
        setOffset(be) {
          this.offset = Array.isArray(be) ? () => be : be;
        }
        getScrollPosition() {
          return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0];
        }
        scrollToPosition(be) {
          this.supportsScrolling() && this.window.scrollTo(be[0], be[1]);
        }
        scrollToAnchor(be) {
          if (!this.supportsScrolling()) return;
          const $ = (function is(z, be) {
            const $ = z.getElementById(be) || z.getElementsByName(be)[0];
            if ($) return $;
            if ('function' == typeof z.createTreeWalker && z.body && (z.body.createShadowRoot || z.body.attachShadow)) {
              const ke = z.createTreeWalker(z.body, NodeFilter.SHOW_ELEMENT);
              let Dt = ke.currentNode;
              for (; Dt; ) {
                const tn = Dt.shadowRoot;
                if (tn) {
                  const yn = tn.getElementById(be) || tn.querySelector(`[name="${be}"]`);
                  if (yn) return yn;
                }
                Dt = ke.nextNode();
              }
            }
            return null;
          })(this.document, be);
          $ && (this.scrollToElement($), this.attemptFocus($));
        }
        setHistoryScrollRestoration(be) {
          if (this.supportScrollRestoration()) {
            const $ = this.window.history;
            $ && $.scrollRestoration && ($.scrollRestoration = be);
          }
        }
        scrollToElement(be) {
          const $ = be.getBoundingClientRect(),
            ke = $.left + this.window.pageXOffset,
            Dt = $.top + this.window.pageYOffset,
            tn = this.offset();
          this.window.scrollTo(ke - tn[0], Dt - tn[1]);
        }
        attemptFocus(be) {
          return be.focus(), this.document.activeElement === be;
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const be = Qi(this.window.history) || Qi(Object.getPrototypeOf(this.window.history));
            return !(!be || (!be.writable && !be.set));
          } catch (be) {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return !!this.window && !!this.window.scrollTo && 'pageXOffset' in this.window;
          } catch (be) {
            return !1;
          }
        }
      }
      function Qi(z) {
        return Object.getOwnPropertyDescriptor(z, 'scrollRestoration');
      }
      class Ni {}
    },
    520: (un, ft, x) => {
      'use strict';
      x.d(ft, { TP: () => on, eN: () => kt, JF: () => ht });
      var h = x(9808),
        m = x(5e3),
        d = x(9646),
        N = x(8306),
        Ce = x(4351),
        Re = x(9300),
        He = x(4004);
      class Fe {}
      class Ne {}
      class ee {
        constructor(X) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            X
              ? (this.lazyInit =
                  'string' == typeof X
                    ? () => {
                        (this.headers = new Map()),
                          X.split('\n').forEach((we) => {
                            const Rt = we.indexOf(':');
                            if (Rt > 0) {
                              const It = we.slice(0, Rt),
                                an = It.toLowerCase(),
                                mn = we.slice(Rt + 1).trim();
                              this.maybeSetNormalizedName(It, an),
                                this.headers.has(an) ? this.headers.get(an).push(mn) : this.headers.set(an, [mn]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(X).forEach((we) => {
                            let Rt = X[we];
                            const It = we.toLowerCase();
                            'string' == typeof Rt && (Rt = [Rt]),
                              Rt.length > 0 && (this.headers.set(It, Rt), this.maybeSetNormalizedName(we, It));
                          });
                      })
              : (this.headers = new Map());
        }
        has(X) {
          return this.init(), this.headers.has(X.toLowerCase());
        }
        get(X) {
          this.init();
          const we = this.headers.get(X.toLowerCase());
          return we && we.length > 0 ? we[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(X) {
          return this.init(), this.headers.get(X.toLowerCase()) || null;
        }
        append(X, we) {
          return this.clone({ name: X, value: we, op: 'a' });
        }
        set(X, we) {
          return this.clone({ name: X, value: we, op: 's' });
        }
        delete(X, we) {
          return this.clone({ name: X, value: we, op: 'd' });
        }
        maybeSetNormalizedName(X, we) {
          this.normalizedNames.has(we) || this.normalizedNames.set(we, X);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof ee ? this.copyFrom(this.lazyInit) : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate && (this.lazyUpdate.forEach((X) => this.applyUpdate(X)), (this.lazyUpdate = null)));
        }
        copyFrom(X) {
          X.init(),
            Array.from(X.headers.keys()).forEach((we) => {
              this.headers.set(we, X.headers.get(we)), this.normalizedNames.set(we, X.normalizedNames.get(we));
            });
        }
        clone(X) {
          const we = new ee();
          return (
            (we.lazyInit = this.lazyInit && this.lazyInit instanceof ee ? this.lazyInit : this),
            (we.lazyUpdate = (this.lazyUpdate || []).concat([X])),
            we
          );
        }
        applyUpdate(X) {
          const we = X.name.toLowerCase();
          switch (X.op) {
            case 'a':
            case 's':
              let Rt = X.value;
              if (('string' == typeof Rt && (Rt = [Rt]), 0 === Rt.length)) return;
              this.maybeSetNormalizedName(X.name, we);
              const It = ('a' === X.op ? this.headers.get(we) : void 0) || [];
              It.push(...Rt), this.headers.set(we, It);
              break;
            case 'd':
              const an = X.value;
              if (an) {
                let mn = this.headers.get(we);
                if (!mn) return;
                (mn = mn.filter((ln) => -1 === an.indexOf(ln))),
                  0 === mn.length
                    ? (this.headers.delete(we), this.normalizedNames.delete(we))
                    : this.headers.set(we, mn);
              } else this.headers.delete(we), this.normalizedNames.delete(we);
          }
        }
        forEach(X) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((we) =>
              X(this.normalizedNames.get(we), this.headers.get(we))
            );
        }
      }
      class fe {
        encodeKey(X) {
          return et(X);
        }
        encodeValue(X) {
          return et(X);
        }
        decodeKey(X) {
          return decodeURIComponent(X);
        }
        decodeValue(X) {
          return decodeURIComponent(X);
        }
      }
      const Qe = /%(\d[a-f0-9])/gi,
        Oe = { 40: '@', '3A': ':', 24: '$', '2C': ',', '3B': ';', '2B': '+', '3D': '=', '3F': '?', '2F': '/' };
      function et(Pe) {
        return encodeURIComponent(Pe).replace(Qe, (X, we) => {
          var Rt;
          return null !== (Rt = Oe[we]) && void 0 !== Rt ? Rt : X;
        });
      }
      function lt(Pe) {
        return `${Pe}`;
      }
      class me {
        constructor(X = {}) {
          if (((this.updates = null), (this.cloneFrom = null), (this.encoder = X.encoder || new fe()), X.fromString)) {
            if (X.fromObject) throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function ue(Pe, X) {
              const we = new Map();
              return (
                Pe.length > 0 &&
                  Pe.replace(/^\?/, '')
                    .split('&')
                    .forEach((It) => {
                      const an = It.indexOf('='),
                        [mn, ln] =
                          -1 == an
                            ? [X.decodeKey(It), '']
                            : [X.decodeKey(It.slice(0, an)), X.decodeValue(It.slice(an + 1))],
                        An = we.get(mn) || [];
                      An.push(ln), we.set(mn, An);
                    }),
                we
              );
            })(X.fromString, this.encoder);
          } else
            X.fromObject
              ? ((this.map = new Map()),
                Object.keys(X.fromObject).forEach((we) => {
                  const Rt = X.fromObject[we];
                  this.map.set(we, Array.isArray(Rt) ? Rt : [Rt]);
                }))
              : (this.map = null);
        }
        has(X) {
          return this.init(), this.map.has(X);
        }
        get(X) {
          this.init();
          const we = this.map.get(X);
          return we ? we[0] : null;
        }
        getAll(X) {
          return this.init(), this.map.get(X) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(X, we) {
          return this.clone({ param: X, value: we, op: 'a' });
        }
        appendAll(X) {
          const we = [];
          return (
            Object.keys(X).forEach((Rt) => {
              const It = X[Rt];
              Array.isArray(It)
                ? It.forEach((an) => {
                    we.push({ param: Rt, value: an, op: 'a' });
                  })
                : we.push({ param: Rt, value: It, op: 'a' });
            }),
            this.clone(we)
          );
        }
        set(X, we) {
          return this.clone({ param: X, value: we, op: 's' });
        }
        delete(X, we) {
          return this.clone({ param: X, value: we, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((X) => {
                const we = this.encoder.encodeKey(X);
                return this.map
                  .get(X)
                  .map((Rt) => we + '=' + this.encoder.encodeValue(Rt))
                  .join('&');
              })
              .filter((X) => '' !== X)
              .join('&')
          );
        }
        clone(X) {
          const we = new me({ encoder: this.encoder });
          return (we.cloneFrom = this.cloneFrom || this), (we.updates = (this.updates || []).concat(X)), we;
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom.keys().forEach((X) => this.map.set(X, this.cloneFrom.map.get(X))),
              this.updates.forEach((X) => {
                switch (X.op) {
                  case 'a':
                  case 's':
                    const we = ('a' === X.op ? this.map.get(X.param) : void 0) || [];
                    we.push(lt(X.value)), this.map.set(X.param, we);
                    break;
                  case 'd':
                    if (void 0 === X.value) {
                      this.map.delete(X.param);
                      break;
                    }
                    {
                      let Rt = this.map.get(X.param) || [];
                      const It = Rt.indexOf(lt(X.value));
                      -1 !== It && Rt.splice(It, 1),
                        Rt.length > 0 ? this.map.set(X.param, Rt) : this.map.delete(X.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class dt {
        constructor() {
          this.map = new Map();
        }
        set(X, we) {
          return this.map.set(X, we), this;
        }
        get(X) {
          return this.map.has(X) || this.map.set(X, X.defaultValue()), this.map.get(X);
        }
        delete(X) {
          return this.map.delete(X), this;
        }
        has(X) {
          return this.map.has(X);
        }
        keys() {
          return this.map.keys();
        }
      }
      function We(Pe) {
        return 'undefined' != typeof ArrayBuffer && Pe instanceof ArrayBuffer;
      }
      function $e(Pe) {
        return 'undefined' != typeof Blob && Pe instanceof Blob;
      }
      function ge(Pe) {
        return 'undefined' != typeof FormData && Pe instanceof FormData;
      }
      class Ie {
        constructor(X, we, Rt, It) {
          let an;
          if (
            ((this.url = we),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = X.toUpperCase()),
            (function vt(Pe) {
              switch (Pe) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || It
              ? ((this.body = void 0 !== Rt ? Rt : null), (an = It))
              : (an = Rt),
            an &&
              ((this.reportProgress = !!an.reportProgress),
              (this.withCredentials = !!an.withCredentials),
              an.responseType && (this.responseType = an.responseType),
              an.headers && (this.headers = an.headers),
              an.context && (this.context = an.context),
              an.params && (this.params = an.params)),
            this.headers || (this.headers = new ee()),
            this.context || (this.context = new dt()),
            this.params)
          ) {
            const mn = this.params.toString();
            if (0 === mn.length) this.urlWithParams = we;
            else {
              const ln = we.indexOf('?');
              this.urlWithParams = we + (-1 === ln ? '?' : ln < we.length - 1 ? '&' : '') + mn;
            }
          } else (this.params = new me()), (this.urlWithParams = we);
        }
        serializeBody() {
          return null === this.body
            ? null
            : We(this.body) ||
              $e(this.body) ||
              ge(this.body) ||
              (function Ke(Pe) {
                return 'undefined' != typeof URLSearchParams && Pe instanceof URLSearchParams;
              })(this.body) ||
              'string' == typeof this.body
            ? this.body
            : this.body instanceof me
            ? this.body.toString()
            : 'object' == typeof this.body || 'boolean' == typeof this.body || Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || ge(this.body)
            ? null
            : $e(this.body)
            ? this.body.type || null
            : We(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof me
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body || 'number' == typeof this.body || 'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(X = {}) {
          var we;
          const Rt = X.method || this.method,
            It = X.url || this.url,
            an = X.responseType || this.responseType,
            mn = void 0 !== X.body ? X.body : this.body,
            ln = void 0 !== X.withCredentials ? X.withCredentials : this.withCredentials,
            An = void 0 !== X.reportProgress ? X.reportProgress : this.reportProgress;
          let Yn = X.headers || this.headers,
            Hn = X.params || this.params;
          const zt = null !== (we = X.context) && void 0 !== we ? we : this.context;
          return (
            void 0 !== X.setHeaders &&
              (Yn = Object.keys(X.setHeaders).reduce((Wt, de) => Wt.set(de, X.setHeaders[de]), Yn)),
            X.setParams && (Hn = Object.keys(X.setParams).reduce((Wt, de) => Wt.set(de, X.setParams[de]), Hn)),
            new Ie(Rt, It, mn, {
              params: Hn,
              headers: Yn,
              context: zt,
              reportProgress: An,
              responseType: an,
              withCredentials: ln,
            })
          );
        }
      }
      var De = (() => (
        ((De = De || {})[(De.Sent = 0)] = 'Sent'),
        (De[(De.UploadProgress = 1)] = 'UploadProgress'),
        (De[(De.ResponseHeader = 2)] = 'ResponseHeader'),
        (De[(De.DownloadProgress = 3)] = 'DownloadProgress'),
        (De[(De.Response = 4)] = 'Response'),
        (De[(De.User = 5)] = 'User'),
        De
      ))();
      class Ye {
        constructor(X, we = 200, Rt = 'OK') {
          (this.headers = X.headers || new ee()),
            (this.status = void 0 !== X.status ? X.status : we),
            (this.statusText = X.statusText || Rt),
            (this.url = X.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class it extends Ye {
        constructor(X = {}) {
          super(X), (this.type = De.ResponseHeader);
        }
        clone(X = {}) {
          return new it({
            headers: X.headers || this.headers,
            status: void 0 !== X.status ? X.status : this.status,
            statusText: X.statusText || this.statusText,
            url: X.url || this.url || void 0,
          });
        }
      }
      class qe extends Ye {
        constructor(X = {}) {
          super(X), (this.type = De.Response), (this.body = void 0 !== X.body ? X.body : null);
        }
        clone(X = {}) {
          return new qe({
            body: void 0 !== X.body ? X.body : this.body,
            headers: X.headers || this.headers,
            status: void 0 !== X.status ? X.status : this.status,
            statusText: X.statusText || this.statusText,
            url: X.url || this.url || void 0,
          });
        }
      }
      class Ve extends Ye {
        constructor(X) {
          super(X, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${X.url || '(unknown url)'}`
                : `Http failure response for ${X.url || '(unknown url)'}: ${X.status} ${X.statusText}`),
            (this.error = X.error || null);
        }
      }
      function Ft(Pe, X) {
        return {
          body: X,
          headers: Pe.headers,
          context: Pe.context,
          observe: Pe.observe,
          params: Pe.params,
          reportProgress: Pe.reportProgress,
          responseType: Pe.responseType,
          withCredentials: Pe.withCredentials,
        };
      }
      let kt = (() => {
        class Pe {
          constructor(we) {
            this.handler = we;
          }
          request(we, Rt, It = {}) {
            let an;
            if (we instanceof Ie) an = we;
            else {
              let An, Yn;
              (An = It.headers instanceof ee ? It.headers : new ee(It.headers)),
                It.params && (Yn = It.params instanceof me ? It.params : new me({ fromObject: It.params })),
                (an = new Ie(we, Rt, void 0 !== It.body ? It.body : null, {
                  headers: An,
                  context: It.context,
                  params: Yn,
                  reportProgress: It.reportProgress,
                  responseType: It.responseType || 'json',
                  withCredentials: It.withCredentials,
                }));
            }
            const mn = (0, d.of)(an).pipe((0, Ce.b)((An) => this.handler.handle(An)));
            if (we instanceof Ie || 'events' === It.observe) return mn;
            const ln = mn.pipe((0, Re.h)((An) => An instanceof qe));
            switch (It.observe || 'body') {
              case 'body':
                switch (an.responseType) {
                  case 'arraybuffer':
                    return ln.pipe(
                      (0, He.U)((An) => {
                        if (null !== An.body && !(An.body instanceof ArrayBuffer))
                          throw new Error('Response is not an ArrayBuffer.');
                        return An.body;
                      })
                    );
                  case 'blob':
                    return ln.pipe(
                      (0, He.U)((An) => {
                        if (null !== An.body && !(An.body instanceof Blob)) throw new Error('Response is not a Blob.');
                        return An.body;
                      })
                    );
                  case 'text':
                    return ln.pipe(
                      (0, He.U)((An) => {
                        if (null !== An.body && 'string' != typeof An.body)
                          throw new Error('Response is not a string.');
                        return An.body;
                      })
                    );
                  default:
                    return ln.pipe((0, He.U)((An) => An.body));
                }
              case 'response':
                return ln;
              default:
                throw new Error(`Unreachable: unhandled observe type ${It.observe}}`);
            }
          }
          delete(we, Rt = {}) {
            return this.request('DELETE', we, Rt);
          }
          get(we, Rt = {}) {
            return this.request('GET', we, Rt);
          }
          head(we, Rt = {}) {
            return this.request('HEAD', we, Rt);
          }
          jsonp(we, Rt) {
            return this.request('JSONP', we, {
              params: new me().append(Rt, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(we, Rt = {}) {
            return this.request('OPTIONS', we, Rt);
          }
          patch(we, Rt, It = {}) {
            return this.request('PATCH', we, Ft(It, Rt));
          }
          post(we, Rt, It = {}) {
            return this.request('POST', we, Ft(It, Rt));
          }
          put(we, Rt, It = {}) {
            return this.request('PUT', we, Ft(It, Rt));
          }
        }
        return (
          (Pe.ɵfac = function (we) {
            return new (we || Pe)(m.LFG(Fe));
          }),
          (Pe.ɵprov = m.Yz7({ token: Pe, factory: Pe.ɵfac })),
          Pe
        );
      })();
      class St {
        constructor(X, we) {
          (this.next = X), (this.interceptor = we);
        }
        handle(X) {
          return this.interceptor.intercept(X, this.next);
        }
      }
      const on = new m.OlP('HTTP_INTERCEPTORS');
      let Je = (() => {
        class Pe {
          intercept(we, Rt) {
            return Rt.handle(we);
          }
        }
        return (
          (Pe.ɵfac = function (we) {
            return new (we || Pe)();
          }),
          (Pe.ɵprov = m.Yz7({ token: Pe, factory: Pe.ɵfac })),
          Pe
        );
      })();
      const mt = /^\)\]\}',?\n/;
      let en = (() => {
        class Pe {
          constructor(we) {
            this.xhrFactory = we;
          }
          handle(we) {
            if ('JSONP' === we.method)
              throw new Error('Attempted to construct Jsonp request without HttpClientJsonpModule installed.');
            return new N.y((Rt) => {
              const It = this.xhrFactory.build();
              if (
                (It.open(we.method, we.urlWithParams),
                we.withCredentials && (It.withCredentials = !0),
                we.headers.forEach((de, q) => It.setRequestHeader(de, q.join(','))),
                we.headers.has('Accept') || It.setRequestHeader('Accept', 'application/json, text/plain, */*'),
                !we.headers.has('Content-Type'))
              ) {
                const de = we.detectContentTypeHeader();
                null !== de && It.setRequestHeader('Content-Type', de);
              }
              if (we.responseType) {
                const de = we.responseType.toLowerCase();
                It.responseType = 'json' !== de ? de : 'text';
              }
              const an = we.serializeBody();
              let mn = null;
              const ln = () => {
                  if (null !== mn) return mn;
                  const de = 1223 === It.status ? 204 : It.status,
                    q = It.statusText || 'OK',
                    le = new ee(It.getAllResponseHeaders()),
                    Z =
                      (function Nt(Pe) {
                        return 'responseURL' in Pe && Pe.responseURL
                          ? Pe.responseURL
                          : /^X-Request-URL:/m.test(Pe.getAllResponseHeaders())
                          ? Pe.getResponseHeader('X-Request-URL')
                          : null;
                      })(It) || we.url;
                  return (mn = new it({ headers: le, status: de, statusText: q, url: Z })), mn;
                },
                An = () => {
                  let { headers: de, status: q, statusText: le, url: Z } = ln(),
                    ye = null;
                  204 !== q && (ye = void 0 === It.response ? It.responseText : It.response),
                    0 === q && (q = ye ? 200 : 0);
                  let ie = q >= 200 && q < 300;
                  if ('json' === we.responseType && 'string' == typeof ye) {
                    const he = ye;
                    ye = ye.replace(mt, '');
                    try {
                      ye = '' !== ye ? JSON.parse(ye) : null;
                    } catch (Te) {
                      (ye = he), ie && ((ie = !1), (ye = { error: Te, text: ye }));
                    }
                  }
                  ie
                    ? (Rt.next(new qe({ body: ye, headers: de, status: q, statusText: le, url: Z || void 0 })),
                      Rt.complete())
                    : Rt.error(new Ve({ error: ye, headers: de, status: q, statusText: le, url: Z || void 0 }));
                },
                Yn = (de) => {
                  const { url: q } = ln(),
                    le = new Ve({
                      error: de,
                      status: It.status || 0,
                      statusText: It.statusText || 'Unknown Error',
                      url: q || void 0,
                    });
                  Rt.error(le);
                };
              let Hn = !1;
              const zt = (de) => {
                  Hn || (Rt.next(ln()), (Hn = !0));
                  let q = { type: De.DownloadProgress, loaded: de.loaded };
                  de.lengthComputable && (q.total = de.total),
                    'text' === we.responseType && !!It.responseText && (q.partialText = It.responseText),
                    Rt.next(q);
                },
                Wt = (de) => {
                  let q = { type: De.UploadProgress, loaded: de.loaded };
                  de.lengthComputable && (q.total = de.total), Rt.next(q);
                };
              return (
                It.addEventListener('load', An),
                It.addEventListener('error', Yn),
                It.addEventListener('timeout', Yn),
                It.addEventListener('abort', Yn),
                we.reportProgress &&
                  (It.addEventListener('progress', zt),
                  null !== an && It.upload && It.upload.addEventListener('progress', Wt)),
                It.send(an),
                Rt.next({ type: De.Sent }),
                () => {
                  It.removeEventListener('error', Yn),
                    It.removeEventListener('abort', Yn),
                    It.removeEventListener('load', An),
                    It.removeEventListener('timeout', Yn),
                    we.reportProgress &&
                      (It.removeEventListener('progress', zt),
                      null !== an && It.upload && It.upload.removeEventListener('progress', Wt)),
                    It.readyState !== It.DONE && It.abort();
                }
              );
            });
          }
        }
        return (
          (Pe.ɵfac = function (we) {
            return new (we || Pe)(m.LFG(h.JF));
          }),
          (Pe.ɵprov = m.Yz7({ token: Pe, factory: Pe.ɵfac })),
          Pe
        );
      })();
      const xt = new m.OlP('XSRF_COOKIE_NAME'),
        Gt = new m.OlP('XSRF_HEADER_NAME');
      class re {}
      let ot = (() => {
          class Pe {
            constructor(we, Rt, It) {
              (this.doc = we),
                (this.platform = Rt),
                (this.cookieName = It),
                (this.lastCookieString = ''),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ('server' === this.platform) return null;
              const we = this.doc.cookie || '';
              return (
                we !== this.lastCookieString &&
                  (this.parseCount++, (this.lastToken = (0, h.Mx)(we, this.cookieName)), (this.lastCookieString = we)),
                this.lastToken
              );
            }
          }
          return (
            (Pe.ɵfac = function (we) {
              return new (we || Pe)(m.LFG(h.K0), m.LFG(m.Lbi), m.LFG(xt));
            }),
            (Pe.ɵprov = m.Yz7({ token: Pe, factory: Pe.ɵfac })),
            Pe
          );
        })(),
        Zt = (() => {
          class Pe {
            constructor(we, Rt) {
              (this.tokenService = we), (this.headerName = Rt);
            }
            intercept(we, Rt) {
              const It = we.url.toLowerCase();
              if ('GET' === we.method || 'HEAD' === we.method || It.startsWith('http://') || It.startsWith('https://'))
                return Rt.handle(we);
              const an = this.tokenService.getToken();
              return (
                null !== an &&
                  !we.headers.has(this.headerName) &&
                  (we = we.clone({ headers: we.headers.set(this.headerName, an) })),
                Rt.handle(we)
              );
            }
          }
          return (
            (Pe.ɵfac = function (we) {
              return new (we || Pe)(m.LFG(re), m.LFG(Gt));
            }),
            (Pe.ɵprov = m.Yz7({ token: Pe, factory: Pe.ɵfac })),
            Pe
          );
        })(),
        hn = (() => {
          class Pe {
            constructor(we, Rt) {
              (this.backend = we), (this.injector = Rt), (this.chain = null);
            }
            handle(we) {
              if (null === this.chain) {
                const Rt = this.injector.get(on, []);
                this.chain = Rt.reduceRight((It, an) => new St(It, an), this.backend);
              }
              return this.chain.handle(we);
            }
          }
          return (
            (Pe.ɵfac = function (we) {
              return new (we || Pe)(m.LFG(Ne), m.LFG(m.zs3));
            }),
            (Pe.ɵprov = m.Yz7({ token: Pe, factory: Pe.ɵfac })),
            Pe
          );
        })(),
        Le = (() => {
          class Pe {
            static disable() {
              return { ngModule: Pe, providers: [{ provide: Zt, useClass: Je }] };
            }
            static withOptions(we = {}) {
              return {
                ngModule: Pe,
                providers: [
                  we.cookieName ? { provide: xt, useValue: we.cookieName } : [],
                  we.headerName ? { provide: Gt, useValue: we.headerName } : [],
                ],
              };
            }
          }
          return (
            (Pe.ɵfac = function (we) {
              return new (we || Pe)();
            }),
            (Pe.ɵmod = m.oAB({ type: Pe })),
            (Pe.ɵinj = m.cJS({
              providers: [
                Zt,
                { provide: on, useExisting: Zt, multi: !0 },
                { provide: re, useClass: ot },
                { provide: xt, useValue: 'XSRF-TOKEN' },
                { provide: Gt, useValue: 'X-XSRF-TOKEN' },
              ],
            })),
            Pe
          );
        })(),
        ht = (() => {
          class Pe {}
          return (
            (Pe.ɵfac = function (we) {
              return new (we || Pe)();
            }),
            (Pe.ɵmod = m.oAB({ type: Pe })),
            (Pe.ɵinj = m.cJS({
              providers: [kt, { provide: Fe, useClass: hn }, en, { provide: Ne, useExisting: en }],
              imports: [[Le.withOptions({ cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN' })]],
            })),
            Pe
          );
        })();
    },
    5e3: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        deG: () => Xu,
        tb: () => Dw,
        AFp: () => Rd,
        ip1: () => Nv,
        CZH: () => gf,
        hGG: () => Xw,
        z2F: () => tm,
        sBO: () => QD,
        Sil: () => Vv,
        _Vd: () => Wp,
        EJc: () => Mw,
        SBq: () => $o,
        qLn: () => Zc,
        vpe: () => cu,
        tBr: () => ur,
        XFs: () => ae,
        OlP: () => Zr,
        zs3: () => za,
        ZZ4: () => n_,
        aQg: () => i_,
        soG: () => _f,
        YKP: () => gv,
        h0i: () => Ad,
        PXZ: () => Fw,
        R0b: () => Al,
        FiY: () => Ir,
        Lbi: () => xw,
        g9A: () => Bv,
        n_E: () => Qp,
        Qsj: () => cv,
        FYo: () => PC,
        JOm: () => Q,
        q3G: () => zr,
        tp0: () => Do,
        Rgc: () => pf,
        dDg: () => Rw,
        q4F: () => LC,
        GfV: () => FC,
        s_b: () => Pg,
        ifc: () => an,
        eFA: () => Lw,
        G48: () => KD,
        Gpc: () => fe,
        f3M: () => Cn,
        X6Q: () => jw,
        _c5: () => lM,
        VLi: () => $D,
        c2e: () => qg,
        zSh: () => q_,
        wAp: () => Ei,
        GuJ: () => ye,
        vHH: () => et,
        EiD: () => jl,
        mCW: () => Pr,
        qzn: () => js,
        JVY: () => Hd,
        pB0: () => eo,
        eBb: () => zc,
        L6k: () => Ji,
        LAX: () => Uf,
        cg1: () => qy,
        kL8: () => dC,
        yhl: () => Oh,
        dqk: () => Hn,
        sIi: () => dh,
        CqO: () => N0,
        QGY: () => My,
        F4k: () => L0,
        RDi: () => us,
        AaK: () => Fe,
        z3N: () => Vl,
        qOj: () => fp,
        TTD: () => ns,
        _Bn: () => $p,
        xp6: () => km,
        uIk: () => tg,
        ekj: () => Fy,
        Suo: () => SD,
        Xpm: () => _e,
        lG2: () => wt,
        Yz7: () => bt,
        cJS: () => mt,
        oAB: () => Qn,
        Yjl: () => nt,
        Y36: () => yp,
        _UZ: () => Dy,
        GkF: () => wp,
        BQk: () => dg,
        ynx: () => Cp,
        qZA: () => xy,
        TgZ: () => bp,
        EpF: () => F0,
        n5z: () => vu,
        Ikx: () => ou,
        LFG: () => Bt,
        $8M: () => ic,
        $Z: () => ug,
        NdJ: () => hg,
        CRH: () => AD,
        kcU: () => Sr,
        O4$: () => fs,
        oxw: () => Dp,
        ALo: () => KC,
        lcZ: () => qC,
        Hsn: () => mg,
        F$t: () => Ay,
        Q6J: () => wy,
        VKq: () => UC,
        iGM: () => DD,
        MAs: () => w0,
        CHM: () => E,
        LSH: () => pl,
        Udp: () => _g,
        WFA: () => Ep,
        d8E: () => Ky,
        YNc: () => C0,
        W1O: () => Bg,
        _uU: () => By,
        Oqu: () => Sc,
        hij: () => Vy,
        Gf: () => MD,
      });
      var h = x(7579),
        m = x(727),
        d = x(8306),
        N = x(6451),
        Ce = x(3099);
      function Re(r) {
        for (let s in r) if (r[s] === Re) return s;
        throw Error('Could not find renamed property on target object.');
      }
      function He(r, s) {
        for (const a in s) s.hasOwnProperty(a) && !r.hasOwnProperty(a) && (r[a] = s[a]);
      }
      function Fe(r) {
        if ('string' == typeof r) return r;
        if (Array.isArray(r)) return '[' + r.map(Fe).join(', ') + ']';
        if (null == r) return '' + r;
        if (r.overriddenName) return `${r.overriddenName}`;
        if (r.name) return `${r.name}`;
        const s = r.toString();
        if (null == s) return '' + s;
        const a = s.indexOf('\n');
        return -1 === a ? s : s.substring(0, a);
      }
      function Ne(r, s) {
        return null == r || '' === r ? (null === s ? '' : s) : null == s || '' === s ? r : r + ' ' + s;
      }
      const ee = Re({ __forward_ref__: Re });
      function fe(r) {
        return (
          (r.__forward_ref__ = fe),
          (r.toString = function () {
            return Fe(this());
          }),
          r
        );
      }
      function ue(r) {
        return Qe(r) ? r() : r;
      }
      function Qe(r) {
        return 'function' == typeof r && r.hasOwnProperty(ee) && r.__forward_ref__ === fe;
      }
      class et extends Error {
        constructor(s, a) {
          super(
            (function lt(r, s) {
              return `NG0${Math.abs(r)}${s ? ': ' + s : ''}`;
            })(s, a)
          ),
            (this.code = s);
        }
      }
      function me(r) {
        return 'string' == typeof r ? r : null == r ? '' : String(r);
      }
      function Ze(r) {
        return 'function' == typeof r
          ? r.name || r.toString()
          : 'object' == typeof r && null != r && 'function' == typeof r.type
          ? r.type.name || r.type.toString()
          : me(r);
      }
      function $e(r, s) {
        const a = s ? ` in ${s}` : '';
        throw new et(-201, `No provider for ${Ze(r)} found${a}`);
      }
      function Ct(r, s) {
        null == r &&
          (function st(r, s, a, u) {
            throw new Error(`ASSERTION ERROR: ${r}` + (null == u ? '' : ` [Expected=> ${a} ${u} ${s} <=Actual]`));
          })(s, r, null, '!=');
      }
      function bt(r) {
        return { token: r.token, providedIn: r.providedIn || null, factory: r.factory, value: void 0 };
      }
      function mt(r) {
        return { providers: r.providers || [], imports: r.imports || [] };
      }
      function Nt(r) {
        return en(r, ot) || en(r, hn);
      }
      function en(r, s) {
        return r.hasOwnProperty(s) ? r[s] : null;
      }
      function re(r) {
        return r && (r.hasOwnProperty(Zt) || r.hasOwnProperty(At)) ? r[Zt] : null;
      }
      const ot = Re({ ɵprov: Re }),
        Zt = Re({ ɵinj: Re }),
        hn = Re({ ngInjectableDef: Re }),
        At = Re({ ngInjectorDef: Re });
      var ae = (() => (
        ((ae = ae || {})[(ae.Default = 0)] = 'Default'),
        (ae[(ae.Host = 1)] = 'Host'),
        (ae[(ae.Self = 2)] = 'Self'),
        (ae[(ae.SkipSelf = 4)] = 'SkipSelf'),
        (ae[(ae.Optional = 8)] = 'Optional'),
        ae
      ))();
      let Le;
      function Se(r) {
        const s = Le;
        return (Le = r), s;
      }
      function Be(r, s, a) {
        const u = Nt(r);
        return u && 'root' == u.providedIn
          ? void 0 === u.value
            ? (u.value = u.factory())
            : u.value
          : a & ae.Optional
          ? null
          : void 0 !== s
          ? s
          : void $e(Fe(r), 'Injector');
      }
      function X(r) {
        return { toString: r }.toString();
      }
      var we = (() => (((we = we || {})[(we.OnPush = 0)] = 'OnPush'), (we[(we.Default = 1)] = 'Default'), we))(),
        an = (() => {
          return (
            ((r = an || (an = {}))[(r.Emulated = 0)] = 'Emulated'),
            (r[(r.None = 2)] = 'None'),
            (r[(r.ShadowDom = 3)] = 'ShadowDom'),
            an
          );
          var r;
        })();
      const mn = 'undefined' != typeof globalThis && globalThis,
        ln = 'undefined' != typeof window && window,
        An =
          'undefined' != typeof self &&
          'undefined' != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        Hn = mn || ('undefined' != typeof global && global) || ln || An,
        de = {},
        q = [],
        le = Re({ ɵcmp: Re }),
        Z = Re({ ɵdir: Re }),
        ye = Re({ ɵpipe: Re }),
        ie = Re({ ɵmod: Re }),
        he = Re({ ɵfac: Re }),
        Te = Re({ __NG_ELEMENT_ID__: Re });
      let pe = 0;
      function _e(r) {
        return X(() => {
          const a = {},
            u = {
              type: r.type,
              providersResolver: null,
              decls: r.decls,
              vars: r.vars,
              factory: null,
              template: r.template || null,
              consts: r.consts || null,
              ngContentSelectors: r.ngContentSelectors,
              hostBindings: r.hostBindings || null,
              hostVars: r.hostVars || 0,
              hostAttrs: r.hostAttrs || null,
              contentQueries: r.contentQueries || null,
              declaredInputs: a,
              inputs: null,
              outputs: null,
              exportAs: r.exportAs || null,
              onPush: r.changeDetection === we.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: r.selectors || q,
              viewQuery: r.viewQuery || null,
              features: r.features || null,
              data: r.data || {},
              encapsulation: r.encapsulation || an.Emulated,
              id: 'c',
              styles: r.styles || q,
              _: null,
              setInput: null,
              schemas: r.schemas || null,
              tView: null,
            },
            f = r.directives,
            y = r.features,
            S = r.pipes;
          return (
            (u.id += pe++),
            (u.inputs = jt(r.inputs, a)),
            (u.outputs = jt(r.outputs)),
            y && y.forEach((O) => O(u)),
            (u.directiveDefs = f ? () => ('function' == typeof f ? f() : f).map(Ot) : null),
            (u.pipeDefs = S ? () => ('function' == typeof S ? S() : S).map(Yt) : null),
            u
          );
        });
      }
      function Ot(r) {
        return (
          Pt(r) ||
          (function dn(r) {
            return r[Z] || null;
          })(r)
        );
      }
      function Yt(r) {
        return (function kn(r) {
          return r[ye] || null;
        })(r);
      }
      const _n = {};
      function Qn(r) {
        return X(() => {
          const s = {
            type: r.type,
            bootstrap: r.bootstrap || q,
            declarations: r.declarations || q,
            imports: r.imports || q,
            exports: r.exports || q,
            transitiveCompileScopes: null,
            schemas: r.schemas || null,
            id: r.id || null,
          };
          return null != r.id && (_n[r.id] = r.type), s;
        });
      }
      function jt(r, s) {
        if (null == r) return de;
        const a = {};
        for (const u in r)
          if (r.hasOwnProperty(u)) {
            let f = r[u],
              y = f;
            Array.isArray(f) && ((y = f[1]), (f = f[0])), (a[f] = u), s && (s[f] = y);
          }
        return a;
      }
      const wt = _e;
      function nt(r) {
        return {
          type: r.type,
          name: r.name,
          factory: null,
          pure: !1 !== r.pure,
          onDestroy: r.type.prototype.ngOnDestroy || null,
        };
      }
      function Pt(r) {
        return r[le] || null;
      }
      function Gn(r, s) {
        const a = r[ie] || null;
        if (!a && !0 === s) throw new Error(`Type ${Fe(r)} does not have '\u0275mod' property.`);
        return a;
      }
      function ji(r) {
        return Array.isArray(r) && 'object' == typeof r[1];
      }
      function tr(r) {
        return Array.isArray(r) && !0 === r[1];
      }
      function kr(r) {
        return 0 != (8 & r.flags);
      }
      function je(r) {
        return 2 == (2 & r.flags);
      }
      function ms(r) {
        return 1 == (1 & r.flags);
      }
      function nr(r) {
        return null !== r.template;
      }
      function Bn(r) {
        return 0 != (512 & r[2]);
      }
      function cs(r, s) {
        return r.hasOwnProperty(he) ? r[he] : null;
      }
      class Bi {
        constructor(s, a, u) {
          (this.previousValue = s), (this.currentValue = a), (this.firstChange = u);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function ns() {
        return wr;
      }
      function wr(r) {
        return r.type.prototype.ngOnChanges && (r.setInput = Yo), vs;
      }
      function vs() {
        const r = Po(this),
          s = null == r ? void 0 : r.current;
        if (s) {
          const a = r.previous;
          if (a === de) r.previous = s;
          else for (let u in s) a[u] = s[u];
          (r.current = null), this.ngOnChanges(s);
        }
      }
      function Yo(r, s, a, u) {
        const f =
            Po(r) ||
            (function Gr(r, s) {
              return (r[Ys] = s);
            })(r, { previous: de, current: null }),
          y = f.current || (f.current = {}),
          S = f.previous,
          O = this.declaredInputs[a],
          V = S[O];
        (y[O] = new Bi(V && V.currentValue, s, S === de)), (r[u] = s);
      }
      ns.ngInherit = !0;
      const Ys = '__ngSimpleChanges__';
      function Po(r) {
        return r[Ys] || null;
      }
      const Zi = 'http://www.w3.org/2000/svg';
      let po;
      function us(r) {
        po = r;
      }
      function Qi(r) {
        return !!r.listen;
      }
      const is = {
        createRenderer: (r, s) =>
          (function ds() {
            return void 0 !== po ? po : 'undefined' != typeof document ? document : void 0;
          })(),
      };
      function Ni(r) {
        for (; Array.isArray(r); ) r = r[0];
        return r;
      }
      function $(r, s) {
        return Ni(s[r]);
      }
      function ke(r, s) {
        return Ni(s[r.index]);
      }
      function tn(r, s) {
        return r.data[s];
      }
      function yn(r, s) {
        return r[s];
      }
      function Sn(r, s) {
        const a = s[r];
        return ji(a) ? a : a[0];
      }
      function di(r) {
        return 4 == (4 & r[2]);
      }
      function Vi(r) {
        return 128 == (128 & r[2]);
      }
      function yi(r, s) {
        return null == s ? null : r[s];
      }
      function W(r) {
        r[18] = 0;
      }
      function H(r, s) {
        r[5] += s;
        let a = r,
          u = r[3];
        for (; null !== u && ((1 === s && 1 === a[5]) || (-1 === s && 0 === a[5])); ) (u[5] += s), (a = u), (u = u[3]);
      }
      const F = { lFrame: qs(null), bindingsEnabled: !0, isInCheckNoChangesMode: !1 };
      function pr() {
        return F.bindingsEnabled;
      }
      function bn() {
        return F.lFrame.lView;
      }
      function oe() {
        return F.lFrame.tView;
      }
      function E(r) {
        return (F.lFrame.contextLView = r), r[8];
      }
      function M() {
        let r = B();
        for (; null !== r && 64 === r.type; ) r = r.parent;
        return r;
      }
      function B() {
        return F.lFrame.currentTNode;
      }
      function Ge(r, s) {
        const a = F.lFrame;
        (a.currentTNode = r), (a.isParent = s);
      }
      function pt() {
        return F.lFrame.isParent;
      }
      function gt() {
        F.lFrame.isParent = !1;
      }
      function Tn() {
        return F.isInCheckNoChangesMode;
      }
      function zn(r) {
        F.isInCheckNoChangesMode = r;
      }
      function ni() {
        const r = F.lFrame;
        let s = r.bindingRootIndex;
        return -1 === s && (s = r.bindingRootIndex = r.tView.bindingStartIndex), s;
      }
      function si() {
        return F.lFrame.bindingIndex++;
      }
      function rs(r, s) {
        const a = F.lFrame;
        (a.bindingIndex = a.bindingRootIndex = r), Jo(s);
      }
      function Jo(r) {
        F.lFrame.currentDirectiveIndex = r;
      }
      function Yr(r) {
        const s = F.lFrame.currentDirectiveIndex;
        return -1 === s ? null : r[s];
      }
      function Kr() {
        return F.lFrame.currentQueryIndex;
      }
      function hs(r) {
        F.lFrame.currentQueryIndex = r;
      }
      function Fo(r) {
        const s = r[1];
        return 2 === s.type ? s.declTNode : 1 === s.type ? r[6] : null;
      }
      function bs(r, s, a) {
        if (a & ae.SkipSelf) {
          let f = s,
            y = r;
          for (
            ;
            !((f = f.parent), null !== f || a & ae.Host || ((f = Fo(y)), null === f || ((y = y[15]), 10 & f.type)));

          );
          if (null === f) return !1;
          (s = f), (r = y);
        }
        const u = (F.lFrame = va());
        return (u.currentTNode = s), (u.lView = r), !0;
      }
      function Lo(r) {
        const s = va(),
          a = r[1];
        (F.lFrame = s),
          (s.currentTNode = a.firstChild),
          (s.lView = r),
          (s.tView = a),
          (s.contextLView = r),
          (s.bindingIndex = a.bindingStartIndex),
          (s.inI18n = !1);
      }
      function va() {
        const r = F.lFrame,
          s = null === r ? null : r.child;
        return null === s ? qs(r) : s;
      }
      function qs(r) {
        const s = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: r,
          child: null,
          inI18n: !1,
        };
        return null !== r && (r.child = s), s;
      }
      function qo() {
        const r = F.lFrame;
        return (F.lFrame = r.parent), (r.currentTNode = null), (r.lView = null), r;
      }
      const ea = qo;
      function Vn() {
        const r = qo();
        (r.isParent = !0),
          (r.tView = null),
          (r.selectedIndex = -1),
          (r.contextLView = null),
          (r.elementDepthCount = 0),
          (r.currentDirectiveIndex = -1),
          (r.currentNamespace = null),
          (r.bindingRootIndex = -1),
          (r.bindingIndex = -1),
          (r.currentQueryIndex = 0);
      }
      function gi() {
        return F.lFrame.selectedIndex;
      }
      function ir(r) {
        F.lFrame.selectedIndex = r;
      }
      function Ri() {
        const r = F.lFrame;
        return tn(r.tView, r.selectedIndex);
      }
      function fs() {
        F.lFrame.currentNamespace = Zi;
      }
      function Sr() {
        !(function ba() {
          F.lFrame.currentNamespace = null;
        })();
      }
      function Cs(r, s) {
        for (let a = s.directiveStart, u = s.directiveEnd; a < u; a++) {
          const y = r.data[a].type.prototype,
            {
              ngAfterContentInit: S,
              ngAfterContentChecked: O,
              ngAfterViewInit: V,
              ngAfterViewChecked: ne,
              ngOnDestroy: ve,
            } = y;
          S && (r.contentHooks || (r.contentHooks = [])).push(-a, S),
            O &&
              ((r.contentHooks || (r.contentHooks = [])).push(a, O),
              (r.contentCheckHooks || (r.contentCheckHooks = [])).push(a, O)),
            V && (r.viewHooks || (r.viewHooks = [])).push(-a, V),
            ne &&
              ((r.viewHooks || (r.viewHooks = [])).push(a, ne),
              (r.viewCheckHooks || (r.viewCheckHooks = [])).push(a, ne)),
            null != ve && (r.destroyHooks || (r.destroyHooks = [])).push(a, ve);
        }
      }
      function qr(r, s, a) {
        qa(r, s, 3, a);
      }
      function ws(r, s, a, u) {
        (3 & r[2]) === a && qa(r, s, a, u);
      }
      function ao(r, s) {
        let a = r[2];
        (3 & a) === s && ((a &= 2047), (a += 1), (r[2] = a));
      }
      function qa(r, s, a, u) {
        const y = null != u ? u : -1,
          S = s.length - 1;
        let O = 0;
        for (let V = void 0 !== u ? 65535 & r[18] : 0; V < S; V++)
          if ('number' == typeof s[V + 1]) {
            if (((O = s[V]), null != u && O >= u)) break;
          } else
            s[V] < 0 && (r[18] += 65536),
              (O < y || -1 == y) && (Oc(r, a, s, V), (r[18] = (4294901760 & r[18]) + V + 2)),
              V++;
      }
      function Oc(r, s, a, u) {
        const f = a[u] < 0,
          y = a[u + 1],
          O = r[f ? -a[u] : a[u]];
        if (f) {
          if (r[2] >> 11 < r[18] >> 16 && (3 & r[2]) === s) {
            r[2] += 2048;
            try {
              y.call(O);
            } finally {
            }
          }
        } else
          try {
            y.call(O);
          } finally {
          }
      }
      class gr {
        constructor(s, a, u) {
          (this.factory = s), (this.resolving = !1), (this.canSeeViewProviders = a), (this.injectImpl = u);
        }
      }
      function Za(r, s, a) {
        const u = Qi(r);
        let f = 0;
        for (; f < a.length; ) {
          const y = a[f];
          if ('number' == typeof y) {
            if (0 !== y) break;
            f++;
            const S = a[f++],
              O = a[f++],
              V = a[f++];
            u ? r.setAttribute(s, O, V, S) : s.setAttributeNS(S, O, V);
          } else {
            const S = y,
              O = a[++f];
            wa(S) ? u && r.setProperty(s, S, O) : u ? r.setAttribute(s, S, O) : s.setAttribute(S, O), f++;
          }
        }
        return f;
      }
      function Jl(r) {
        return 3 === r || 4 === r || 6 === r;
      }
      function wa(r) {
        return 64 === r.charCodeAt(0);
      }
      function Zs(r, s) {
        if (null !== s && 0 !== s.length)
          if (null === r || 0 === r.length) r = s.slice();
          else {
            let a = -1;
            for (let u = 0; u < s.length; u++) {
              const f = s[u];
              'number' == typeof f ? (a = f) : 0 === a || ia(r, a, f, null, -1 === a || 2 === a ? s[++u] : null);
            }
          }
        return r;
      }
      function ia(r, s, a, u, f) {
        let y = 0,
          S = r.length;
        if (-1 === s) S = -1;
        else
          for (; y < r.length; ) {
            const O = r[y++];
            if ('number' == typeof O) {
              if (O === s) {
                S = -1;
                break;
              }
              if (O > s) {
                S = y - 1;
                break;
              }
            }
          }
        for (; y < r.length; ) {
          const O = r[y];
          if ('number' == typeof O) break;
          if (O === a) {
            if (null === u) return void (null !== f && (r[y + 1] = f));
            if (u === r[y + 1]) return void (r[y + 2] = f);
          }
          y++, null !== u && y++, null !== f && y++;
        }
        -1 !== S && (r.splice(S, 0, s), (y = S + 1)),
          r.splice(y++, 0, a),
          null !== u && r.splice(y++, 0, u),
          null !== f && r.splice(y++, 0, f);
      }
      function ec(r) {
        return -1 !== r;
      }
      function ra(r) {
        return 32767 & r;
      }
      function Qo(r, s) {
        let a = (function Pa(r) {
            return r >> 16;
          })(r),
          u = s;
        for (; a > 0; ) (u = u[15]), a--;
        return u;
      }
      let Ar = !0;
      function Bo(r) {
        const s = Ar;
        return (Ar = r), s;
      }
      let G = 0;
      function Ae(r, s) {
        const a = Mt(r, s);
        if (-1 !== a) return a;
        const u = s[1];
        u.firstCreatePass && ((r.injectorIndex = s.length), ut(u.data, r), ut(s, null), ut(u.blueprint, null));
        const f = nn(r, s),
          y = r.injectorIndex;
        if (ec(f)) {
          const S = ra(f),
            O = Qo(f, s),
            V = O[1].data;
          for (let ne = 0; ne < 8; ne++) s[y + ne] = O[S + ne] | V[S + ne];
        }
        return (s[y + 8] = f), y;
      }
      function ut(r, s) {
        r.push(0, 0, 0, 0, 0, 0, 0, 0, s);
      }
      function Mt(r, s) {
        return -1 === r.injectorIndex ||
          (r.parent && r.parent.injectorIndex === r.injectorIndex) ||
          null === s[r.injectorIndex + 8]
          ? -1
          : r.injectorIndex;
      }
      function nn(r, s) {
        if (r.parent && -1 !== r.parent.injectorIndex) return r.parent.injectorIndex;
        let a = 0,
          u = null,
          f = s;
        for (; null !== f; ) {
          const y = f[1],
            S = y.type;
          if (((u = 2 === S ? y.declTNode : 1 === S ? f[6] : null), null === u)) return -1;
          if ((a++, (f = f[15]), -1 !== u.injectorIndex)) return u.injectorIndex | (a << 16);
        }
        return -1;
      }
      function On(r, s, a) {
        !(function te(r, s, a) {
          let u;
          'string' == typeof a ? (u = a.charCodeAt(0) || 0) : a.hasOwnProperty(Te) && (u = a[Te]),
            null == u && (u = a[Te] = G++);
          const f = 255 & u;
          s.data[r + (f >> 5)] |= 1 << f;
        })(r, s, a);
      }
      function ai(r, s, a) {
        if (a & ae.Optional) return r;
        $e(s, 'NodeInjector');
      }
      function Di(r, s, a, u) {
        if ((a & ae.Optional && void 0 === u && (u = null), 0 == (a & (ae.Self | ae.Host)))) {
          const f = r[9],
            y = Se(void 0);
          try {
            return f ? f.get(s, u, a & ae.Optional) : Be(s, u, a & ae.Optional);
          } finally {
            Se(y);
          }
        }
        return ai(u, s, a);
      }
      function Xi(r, s, a, u = ae.Default, f) {
        if (null !== r) {
          const y = (function lo(r) {
            if ('string' == typeof r) return r.charCodeAt(0) || 0;
            const s = r.hasOwnProperty(Te) ? r[Te] : void 0;
            return 'number' == typeof s ? (s >= 0 ? 255 & s : Qs) : s;
          })(a);
          if ('function' == typeof y) {
            if (!bs(s, r, u)) return u & ae.Host ? ai(f, a, u) : Di(s, a, u, f);
            try {
              const S = y(u);
              if (null != S || u & ae.Optional) return S;
              $e(a);
            } finally {
              ea();
            }
          } else if ('number' == typeof y) {
            let S = null,
              O = Mt(r, s),
              V = -1,
              ne = u & ae.Host ? s[16][6] : null;
            for (
              (-1 === O || u & ae.SkipSelf) &&
              ((V = -1 === O ? nn(r, s) : s[O + 8]),
              -1 !== V && Fa(u, !1) ? ((S = s[1]), (O = ra(V)), (s = Qo(V, s))) : (O = -1));
              -1 !== O;

            ) {
              const ve = s[1];
              if (Ol(y, O, ve.data)) {
                const tt = wo(O, s, a, S, u, ne);
                if (tt !== zi) return tt;
              }
              (V = s[O + 8]),
                -1 !== V && Fa(u, s[1].data[O + 8] === ne) && Ol(y, O, s)
                  ? ((S = ve), (O = ra(V)), (s = Qo(V, s)))
                  : (O = -1);
            }
          }
        }
        return Di(s, a, u, f);
      }
      const zi = {};
      function Qs() {
        return new tc(M(), bn());
      }
      function wo(r, s, a, u, f, y) {
        const S = s[1],
          O = S.data[r + 8],
          ve = Eo(O, S, a, null == u ? je(O) && Ar : u != S && 0 != (3 & O.type), f & ae.Host && y === O);
        return null !== ve ? Bs(s, S, ve, O) : zi;
      }
      function Eo(r, s, a, u, f) {
        const y = r.providerIndexes,
          S = s.data,
          O = 1048575 & y,
          V = r.directiveStart,
          ve = y >> 20,
          Tt = f ? O + ve : r.directiveEnd;
        for (let $t = u ? O : O + ve; $t < Tt; $t++) {
          const gn = S[$t];
          if (($t < V && a === gn) || ($t >= V && gn.type === a)) return $t;
        }
        if (f) {
          const $t = S[V];
          if ($t && nr($t) && $t.type === a) return V;
        }
        return null;
      }
      function Bs(r, s, a, u) {
        let f = r[a];
        const y = s.data;
        if (
          (function Pc(r) {
            return r instanceof gr;
          })(f)
        ) {
          const S = f;
          S.resolving &&
            (function dt(r, s) {
              const a = s ? `. Dependency path: ${s.join(' > ')} > ${r}` : '';
              throw new et(-200, `Circular dependency in DI detected for ${r}${a}`);
            })(Ze(y[a]));
          const O = Bo(S.canSeeViewProviders);
          S.resolving = !0;
          const V = S.injectImpl ? Se(S.injectImpl) : null;
          bs(r, u, ae.Default);
          try {
            (f = r[a] = S.factory(void 0, y, r, u)),
              s.firstCreatePass &&
                a >= u.directiveStart &&
                (function Gi(r, s, a) {
                  const { ngOnChanges: u, ngOnInit: f, ngDoCheck: y } = s.type.prototype;
                  if (u) {
                    const S = wr(s);
                    (a.preOrderHooks || (a.preOrderHooks = [])).push(r, S),
                      (a.preOrderCheckHooks || (a.preOrderCheckHooks = [])).push(r, S);
                  }
                  f && (a.preOrderHooks || (a.preOrderHooks = [])).push(0 - r, f),
                    y &&
                      ((a.preOrderHooks || (a.preOrderHooks = [])).push(r, y),
                      (a.preOrderCheckHooks || (a.preOrderCheckHooks = [])).push(r, y));
                })(a, y[a], s);
          } finally {
            null !== V && Se(V), Bo(O), (S.resolving = !1), ea();
          }
        }
        return f;
      }
      function Ol(r, s, a) {
        return !!(a[s + (r >> 5)] & (1 << r));
      }
      function Fa(r, s) {
        return !(r & ae.Self || (r & ae.Host && s));
      }
      class tc {
        constructor(s, a) {
          (this._tNode = s), (this._lView = a);
        }
        get(s, a, u) {
          return Xi(this._tNode, this._lView, s, u, a);
        }
      }
      function vu(r) {
        return X(() => {
          const s = r.prototype.constructor,
            a = s[he] || nc(s),
            u = Object.prototype;
          let f = Object.getPrototypeOf(r.prototype).constructor;
          for (; f && f !== u; ) {
            const y = f[he] || nc(f);
            if (y && y !== a) return y;
            f = Object.getPrototypeOf(f);
          }
          return (y) => new y();
        });
      }
      function nc(r) {
        return Qe(r)
          ? () => {
              const s = nc(ue(r));
              return s && s();
            }
          : cs(r);
      }
      function ic(r) {
        return (function Mi(r, s) {
          if ('class' === s) return r.classes;
          if ('style' === s) return r.styles;
          const a = r.attrs;
          if (a) {
            const u = a.length;
            let f = 0;
            for (; f < u; ) {
              const y = a[f];
              if (Jl(y)) break;
              if (0 === y) f += 2;
              else if ('number' == typeof y) for (f++; f < u && 'string' == typeof a[f]; ) f++;
              else {
                if (y === s) return a[f + 1];
                f += 2;
              }
            }
          }
          return null;
        })(M(), r);
      }
      const Vo = '__parameters__';
      function xo(r, s, a) {
        return X(() => {
          const u = (function Qa(r) {
            return function (...a) {
              if (r) {
                const u = r(...a);
                for (const f in u) this[f] = u[f];
              }
            };
          })(s);
          function f(...y) {
            if (this instanceof f) return u.apply(this, y), this;
            const S = new f(...y);
            return (O.annotation = S), O;
            function O(V, ne, ve) {
              const tt = V.hasOwnProperty(Vo) ? V[Vo] : Object.defineProperty(V, Vo, { value: [] })[Vo];
              for (; tt.length <= ve; ) tt.push(null);
              return (tt[ve] = tt[ve] || []).push(S), V;
            }
          }
          return (
            a && (f.prototype = Object.create(a.prototype)), (f.prototype.ngMetadataName = r), (f.annotationCls = f), f
          );
        });
      }
      class Zr {
        constructor(s, a) {
          (this._desc = s),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof a
              ? (this.__NG_ELEMENT_ID__ = a)
              : void 0 !== a &&
                (this.ɵprov = bt({ token: this, providedIn: a.providedIn || 'root', factory: a.factory }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const Xu = new Zr('AnalyzeForEntryComponents');
      function co(r, s) {
        void 0 === s && (s = r);
        for (let a = 0; a < r.length; a++) {
          let u = r[a];
          Array.isArray(u) ? (s === r && (s = r.slice(0, a)), co(u, s)) : s !== r && s.push(u);
        }
        return s;
      }
      function Ea(r, s) {
        r.forEach((a) => (Array.isArray(a) ? Ea(a, s) : s(a)));
      }
      function Xa(r, s, a) {
        s >= r.length ? r.push(a) : r.splice(s, 0, a);
      }
      function sa(r, s) {
        return s >= r.length - 1 ? r.pop() : r.splice(s, 1)[0];
      }
      function Ja(r, s) {
        const a = [];
        for (let u = 0; u < r; u++) a.push(s);
        return a;
      }
      function mo(r, s, a) {
        let u = oa(r, s);
        return (
          u >= 0
            ? (r[1 | u] = a)
            : ((u = ~u),
              (function Pl(r, s, a, u) {
                let f = r.length;
                if (f == s) r.push(a, u);
                else if (1 === f) r.push(u, r[0]), (r[0] = a);
                else {
                  for (f--, r.push(r[f - 1], r[f]); f > s; ) (r[f] = r[f - 2]), f--;
                  (r[s] = a), (r[s + 1] = u);
                }
              })(r, u, s, a)),
          u
        );
      }
      function Fl(r, s) {
        const a = oa(r, s);
        if (a >= 0) return r[1 | a];
      }
      function oa(r, s) {
        return (function ed(r, s, a) {
          let u = 0,
            f = r.length >> a;
          for (; f !== u; ) {
            const y = u + ((f - u) >> 1),
              S = r[y << a];
            if (s === S) return y << a;
            S > s ? (f = y) : (u = y + 1);
          }
          return ~(f << a);
        })(r, s, 1);
      }
      const jo = {},
        Ll = '__NG_DI_FLAG__',
        ac = 'ngTempTokenPath',
        aa = /\n/gm,
        cc = '__source',
        j = Re({ provide: String, useValue: Re });
      let K;
      function Ee(r) {
        const s = K;
        return (K = r), s;
      }
      function ct(r, s = ae.Default) {
        if (void 0 === K) throw new et(203, '');
        return null === K ? Be(r, void 0, s) : K.get(r, s & ae.Optional ? null : void 0, s);
      }
      function Bt(r, s = ae.Default) {
        return (
          (function ht() {
            return Le;
          })() || ct
        )(ue(r), s);
      }
      const Cn = Bt;
      function qn(r) {
        const s = [];
        for (let a = 0; a < r.length; a++) {
          const u = ue(r[a]);
          if (Array.isArray(u)) {
            if (0 === u.length) throw new et(900, '');
            let f,
              y = ae.Default;
            for (let S = 0; S < u.length; S++) {
              const O = u[S],
                V = $i(O);
              'number' == typeof V ? (-1 === V ? (f = O.token) : (y |= V)) : (f = O);
            }
            s.push(Bt(f, y));
          } else s.push(Bt(u));
        }
        return s;
      }
      function $n(r, s) {
        return (r[Ll] = s), (r.prototype[Ll] = s), r;
      }
      function $i(r) {
        return r[Ll];
      }
      const ur = $n(
          xo('Inject', (r) => ({ token: r })),
          -1
        ),
        Ir = $n(xo('Optional'), 8),
        Do = $n(xo('SkipSelf'), 4);
      let hc;
      function ii(r) {
        var s;
        return (
          (null ===
            (s = (function wu() {
              if (void 0 === hc && ((hc = null), Hn.trustedTypes))
                try {
                  hc = Hn.trustedTypes.createPolicy('angular', {
                    createHTML: (r) => r,
                    createScript: (r) => r,
                    createScriptURL: (r) => r,
                  });
                } catch (r) {}
              return hc;
            })()) || void 0 === s
            ? void 0
            : s.createHTML(r)) || r
        );
      }
      class Gc {
        constructor(s) {
          this.changingThisBreaksApplicationSecurity = s;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      class ym extends Gc {
        getTypeName() {
          return 'HTML';
        }
      }
      class Lf extends Gc {
        getTypeName() {
          return 'Style';
        }
      }
      class Nf extends Gc {
        getTypeName() {
          return 'Script';
        }
      }
      class Bf extends Gc {
        getTypeName() {
          return 'URL';
        }
      }
      class Vf extends Gc {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function Vl(r) {
        return r instanceof Gc ? r.changingThisBreaksApplicationSecurity : r;
      }
      function js(r, s) {
        const a = Oh(r);
        if (null != a && a !== s) {
          if ('ResourceURL' === a && 'URL' === s) return !0;
          throw new Error(`Required a safe ${s}, got a ${a} (see https://g.co/ng/security#xss)`);
        }
        return a === s;
      }
      function Oh(r) {
        return (r instanceof Gc && r.getTypeName()) || null;
      }
      function Hd(r) {
        return new ym(r);
      }
      function Ji(r) {
        return new Lf(r);
      }
      function zc(r) {
        return new Nf(r);
      }
      function Uf(r) {
        return new Bf(r);
      }
      function eo(r) {
        return new Vf(r);
      }
      class Ph {
        constructor(s) {
          this.inertDocumentHelper = s;
        }
        getInertBodyElement(s) {
          s = '<body><remove></remove>' + s;
          try {
            const a = new window.DOMParser().parseFromString(ii(s), 'text/html').body;
            return null === a ? this.inertDocumentHelper.getInertBodyElement(s) : (a.removeChild(a.firstChild), a);
          } catch (a) {
            return null;
          }
        }
      }
      class fc {
        constructor(s) {
          if (
            ((this.defaultDoc = s),
            (this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert')),
            null == this.inertDocument.body)
          ) {
            const a = this.inertDocument.createElement('html');
            this.inertDocument.appendChild(a);
            const u = this.inertDocument.createElement('body');
            a.appendChild(u);
          }
        }
        getInertBodyElement(s) {
          const a = this.inertDocument.createElement('template');
          if ('content' in a) return (a.innerHTML = ii(s)), a;
          const u = this.inertDocument.createElement('body');
          return (u.innerHTML = ii(s)), this.defaultDoc.documentMode && this.stripCustomNsAttrs(u), u;
        }
        stripCustomNsAttrs(s) {
          const a = s.attributes;
          for (let f = a.length - 1; 0 < f; f--) {
            const S = a.item(f).name;
            ('xmlns:ns1' === S || 0 === S.indexOf('ns1:')) && s.removeAttribute(S);
          }
          let u = s.firstChild;
          for (; u; ) u.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(u), (u = u.nextSibling);
        }
      }
      const $c = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        vm =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function Pr(r) {
        return (r = String(r)).match($c) || r.match(vm) ? r : 'unsafe:' + r;
      }
      function hl(r) {
        const s = {};
        for (const a of r.split(',')) s[a] = !0;
        return s;
      }
      function Qr(...r) {
        const s = {};
        for (const a of r) for (const u in a) a.hasOwnProperty(u) && (s[u] = !0);
        return s;
      }
      const jf = hl('area,br,col,hr,img,wbr'),
        la = hl('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Es = hl('rp,rt'),
        Wc = Qr(
          jf,
          Qr(
            la,
            hl(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
            )
          ),
          Qr(
            Es,
            hl(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
            )
          ),
          Qr(Es, la)
        ),
        nl = hl('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        xu = hl('srcset'),
        mc = Qr(
          nl,
          xu,
          hl(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
          ),
          hl(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
          )
        ),
        fl = hl('script,style,template');
      class Du {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(s) {
          let a = s.firstChild,
            u = !0;
          for (; a; )
            if (
              (a.nodeType === Node.ELEMENT_NODE
                ? (u = this.startElement(a))
                : a.nodeType === Node.TEXT_NODE
                ? this.chars(a.nodeValue)
                : (this.sanitizedSomething = !0),
              u && a.firstChild)
            )
              a = a.firstChild;
            else
              for (; a; ) {
                a.nodeType === Node.ELEMENT_NODE && this.endElement(a);
                let f = this.checkClobberedElement(a, a.nextSibling);
                if (f) {
                  a = f;
                  break;
                }
                a = this.checkClobberedElement(a, a.parentNode);
              }
          return this.buf.join('');
        }
        startElement(s) {
          const a = s.nodeName.toLowerCase();
          if (!Wc.hasOwnProperty(a)) return (this.sanitizedSomething = !0), !fl.hasOwnProperty(a);
          this.buf.push('<'), this.buf.push(a);
          const u = s.attributes;
          for (let f = 0; f < u.length; f++) {
            const y = u.item(f),
              S = y.name,
              O = S.toLowerCase();
            if (!mc.hasOwnProperty(O)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let V = y.value;
            nl[O] && (V = Pr(V)),
              xu[O] &&
                ((r = V),
                (V = (r = String(r))
                  .split(',')
                  .map((s) => Pr(s.trim()))
                  .join(', '))),
              this.buf.push(' ', S, '="', id(V), '"');
          }
          var r;
          return this.buf.push('>'), !0;
        }
        endElement(s) {
          const a = s.nodeName.toLowerCase();
          Wc.hasOwnProperty(a) && !jf.hasOwnProperty(a) && (this.buf.push('</'), this.buf.push(a), this.buf.push('>'));
        }
        chars(s) {
          this.buf.push(id(s));
        }
        checkClobberedElement(s, a) {
          if (
            a &&
            (s.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(`Failed to sanitize html because the element is clobbered: ${s.outerHTML}`);
          return a;
        }
      }
      const gc = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Hf = /([^\#-~ |!])/g;
      function id(r) {
        return r
          .replace(/&/g, '&amp;')
          .replace(gc, function (s) {
            return '&#' + (1024 * (s.charCodeAt(0) - 55296) + (s.charCodeAt(1) - 56320) + 65536) + ';';
          })
          .replace(Hf, function (s) {
            return '&#' + s.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let Ul;
      function jl(r, s) {
        let a = null;
        try {
          Ul =
            Ul ||
            (function Si(r) {
              const s = new fc(r);
              return (function Fh() {
                try {
                  return !!new window.DOMParser().parseFromString(ii(''), 'text/html');
                } catch (r) {
                  return !1;
                }
              })()
                ? new Ph(s)
                : s;
            })(r);
          let u = s ? String(s) : '';
          a = Ul.getInertBodyElement(u);
          let f = 5,
            y = u;
          do {
            if (0 === f) throw new Error('Failed to sanitize html because the input is unstable');
            f--, (u = y), (y = a.innerHTML), (a = Ul.getInertBodyElement(u));
          } while (u !== y);
          return ii(new Du().sanitizeChildren(_c(a) || a));
        } finally {
          if (a) {
            const u = _c(a) || a;
            for (; u.firstChild; ) u.removeChild(u.firstChild);
          }
        }
      }
      function _c(r) {
        return 'content' in r &&
          (function zd(r) {
            return r.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === r.nodeName;
          })(r)
          ? r.content
          : null;
      }
      var zr = (() => (
        ((zr = zr || {})[(zr.NONE = 0)] = 'NONE'),
        (zr[(zr.HTML = 1)] = 'HTML'),
        (zr[(zr.STYLE = 2)] = 'STYLE'),
        (zr[(zr.SCRIPT = 3)] = 'SCRIPT'),
        (zr[(zr.URL = 4)] = 'URL'),
        (zr[(zr.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        zr
      ))();
      function pl(r) {
        const s = (function il() {
          const r = bn();
          return r && r[12];
        })();
        return s ? s.sanitize(zr.URL, r) || '' : js(r, 'URL') ? Vl(r) : Pr(me(r));
      }
      const ad = '__ngContext__';
      function Hs(r, s) {
        r[ad] = s;
      }
      function $d(r) {
        const s = (function ml(r) {
          return r[ad] || null;
        })(r);
        return s ? (Array.isArray(s) ? s : s.lView) : null;
      }
      function Mo(r) {
        return r.ngOriginalError;
      }
      function Kd(r, ...s) {
        r.error(...s);
      }
      class Zc {
        constructor() {
          this._console = console;
        }
        handleError(s) {
          const a = this._findOriginalError(s),
            u = (function qc(r) {
              return (r && r.ngErrorLogger) || Kd;
            })(s);
          u(this._console, 'ERROR', s), a && u(this._console, 'ORIGINAL ERROR', a);
        }
        _findOriginalError(s) {
          let a = s && Mo(s);
          for (; a && Mo(a); ) a = Mo(a);
          return a || null;
        }
      }
      const Jc = (() =>
        (('undefined' != typeof requestAnimationFrame && requestAnimationFrame) || setTimeout).bind(Hn))();
      function ua(r) {
        return r instanceof Function ? r() : r;
      }
      var Q = (() => (((Q = Q || {})[(Q.Important = 1)] = 'Important'), (Q[(Q.DashCase = 2)] = 'DashCase'), Q))();
      function Lt(r, s) {
        return undefined(r, s);
      }
      function Kn(r) {
        const s = r[3];
        return tr(s) ? s[3] : s;
      }
      function Fi(r) {
        return _l(r[13]);
      }
      function go(r) {
        return _l(r[4]);
      }
      function _l(r) {
        for (; null !== r && !tr(r); ) r = r[4];
        return r;
      }
      function Va(r, s, a, u, f) {
        if (null != u) {
          let y,
            S = !1;
          tr(u) ? (y = u) : ji(u) && ((S = !0), (u = u[0]));
          const O = Ni(u);
          0 === r && null !== a
            ? null == f
              ? xm(s, a, O)
              : $r(s, a, O, f || null, !0)
            : 1 === r && null !== a
            ? $r(s, a, O, f || null, !0)
            : 2 === r
            ? (function Sm(r, s, a) {
                const u = $f(r, s);
                u &&
                  (function vl(r, s, a, u) {
                    Qi(r) ? r.removeChild(s, a, u) : s.removeChild(a);
                  })(r, u, s, a);
              })(s, O, S)
            : 3 === r && s.destroyNode(O),
            null != y &&
              (function w_(r, s, a, u, f) {
                const y = a[7];
                y !== Ni(a) && Va(s, r, u, y, f);
                for (let O = 10; O < a.length; O++) {
                  const V = a[O];
                  th(V[1], V, r, s, u, y);
                }
              })(s, r, y, a, f);
        }
      }
      function zl(r, s, a) {
        return Qi(r) ? r.createElement(s, a) : null === a ? r.createElement(s) : r.createElementNS(a, s);
      }
      function Em(r, s) {
        const a = r[9],
          u = a.indexOf(s),
          f = s[3];
        1024 & s[2] && ((s[2] &= -1025), H(f, -1)), a.splice(u, 1);
      }
      function to(r, s) {
        if (r.length <= 10) return;
        const a = 10 + s,
          u = r[a];
        if (u) {
          const f = u[17];
          null !== f && f !== r && Em(f, u), s > 0 && (r[a - 1][4] = u[4]);
          const y = sa(r, 10 + s);
          !(function yl(r, s) {
            th(r, s, s[11], 2, null, null), (s[0] = null), (s[6] = null);
          })(u[1], u);
          const S = y[19];
          null !== S && S.detachView(y[1]), (u[3] = null), (u[4] = null), (u[2] &= -129);
        }
        return u;
      }
      function dr(r, s) {
        if (!(256 & s[2])) {
          const a = s[11];
          Qi(a) && a.destroyNode && th(r, s, a, 3, null, null),
            (function jh(r) {
              let s = r[13];
              if (!s) return zf(r[1], r);
              for (; s; ) {
                let a = null;
                if (ji(s)) a = s[13];
                else {
                  const u = s[10];
                  u && (a = u);
                }
                if (!a) {
                  for (; s && !s[4] && s !== r; ) ji(s) && zf(s[1], s), (s = s[3]);
                  null === s && (s = r), ji(s) && zf(s[1], s), (a = s && s[4]);
                }
                s = a;
              }
            })(s);
        }
      }
      function zf(r, s) {
        if (!(256 & s[2])) {
          (s[2] &= -129),
            (s[2] |= 256),
            (function So(r, s) {
              let a;
              if (null != r && null != (a = r.destroyHooks))
                for (let u = 0; u < a.length; u += 2) {
                  const f = s[a[u]];
                  if (!(f instanceof gr)) {
                    const y = a[u + 1];
                    if (Array.isArray(y))
                      for (let S = 0; S < y.length; S += 2) {
                        const O = f[y[S]],
                          V = y[S + 1];
                        try {
                          V.call(O);
                        } finally {
                        }
                      }
                    else
                      try {
                        y.call(f);
                      } finally {
                      }
                  }
                }
            })(r, s),
            (function y_(r, s) {
              const a = r.cleanup,
                u = s[7];
              let f = -1;
              if (null !== a)
                for (let y = 0; y < a.length - 1; y += 2)
                  if ('string' == typeof a[y]) {
                    const S = a[y + 1],
                      O = 'function' == typeof S ? S(s) : Ni(s[S]),
                      V = u[(f = a[y + 2])],
                      ne = a[y + 3];
                    'boolean' == typeof ne
                      ? O.removeEventListener(a[y], V, ne)
                      : ne >= 0
                      ? u[(f = ne)]()
                      : u[(f = -ne)].unsubscribe(),
                      (y += 2);
                  } else {
                    const S = u[(f = a[y + 1])];
                    a[y].call(S);
                  }
              if (null !== u) {
                for (let y = f + 1; y < u.length; y++) u[y]();
                s[7] = null;
              }
            })(r, s),
            1 === s[1].type && Qi(s[11]) && s[11].destroy();
          const a = s[17];
          if (null !== a && tr(s[3])) {
            a !== s[3] && Em(a, s);
            const u = s[19];
            null !== u && u.detachView(r);
          }
        }
      }
      function Hh(r, s, a) {
        return (function Go(r, s, a) {
          let u = s;
          for (; null !== u && 40 & u.type; ) u = (s = u).parent;
          if (null === u) return a[0];
          if (2 & u.flags) {
            const f = r.data[u.directiveStart].encapsulation;
            if (f === an.None || f === an.Emulated) return null;
          }
          return ke(u, a);
        })(r, s.parent, a);
      }
      function $r(r, s, a, u, f) {
        Qi(r) ? r.insertBefore(s, a, u, f) : s.insertBefore(a, u, f);
      }
      function xm(r, s, a) {
        Qi(r) ? r.appendChild(s, a) : s.appendChild(a);
      }
      function v_(r, s, a, u, f) {
        null !== u ? $r(r, s, a, u, f) : xm(r, s, a);
      }
      function $f(r, s) {
        return Qi(r) ? r.parentNode(s) : s.parentNode;
      }
      function b_(r, s, a) {
        return Mm(r, s, a);
      }
      let Mm = function Wf(r, s, a) {
        return 40 & r.type ? ke(r, a) : null;
      };
      function hd(r, s, a, u) {
        const f = Hh(r, u, s),
          y = s[11],
          O = b_(u.parent || s[6], u, s);
        if (null != f)
          if (Array.isArray(a)) for (let V = 0; V < a.length; V++) v_(y, f, a[V], O, !1);
          else v_(y, f, a, O, !1);
      }
      function Ru(r, s) {
        if (null !== s) {
          const a = s.type;
          if (3 & a) return ke(s, r);
          if (4 & a) return fd(-1, r[s.index]);
          if (8 & a) {
            const u = s.child;
            if (null !== u) return Ru(r, u);
            {
              const f = r[s.index];
              return tr(f) ? fd(-1, f) : Ni(f);
            }
          }
          if (32 & a) return Lt(s, r)() || Ni(r[s.index]);
          {
            const u = eh(r, s);
            return null !== u ? (Array.isArray(u) ? u[0] : Ru(Kn(r[16]), u)) : Ru(r, s.next);
          }
        }
        return null;
      }
      function eh(r, s) {
        return null !== s ? r[16][6].projection[s.projection] : null;
      }
      function fd(r, s) {
        const a = 10 + r + 1;
        if (a < s.length) {
          const u = s[a],
            f = u[1].firstChild;
          if (null !== f) return Ru(u, f);
        }
        return s[7];
      }
      function Yf(r, s, a, u, f, y, S) {
        for (; null != a; ) {
          const O = u[a.index],
            V = a.type;
          if ((S && 0 === s && (O && Hs(Ni(O), u), (a.flags |= 4)), 64 != (64 & a.flags)))
            if (8 & V) Yf(r, s, a.child, u, f, y, !1), Va(s, r, f, O, y);
            else if (32 & V) {
              const ne = Lt(a, u);
              let ve;
              for (; (ve = ne()); ) Va(s, r, f, ve, y);
              Va(s, r, f, O, y);
            } else 16 & V ? Am(r, s, u, a, f, y) : Va(s, r, f, O, y);
          a = S ? a.projectionNext : a.next;
        }
      }
      function th(r, s, a, u, f, y) {
        Yf(a, u, r.firstChild, s, f, y, !1);
      }
      function Am(r, s, a, u, f, y) {
        const S = a[16],
          V = S[6].projection[u.projection];
        if (Array.isArray(V)) for (let ne = 0; ne < V.length; ne++) Va(s, r, f, V[ne], y);
        else Yf(r, s, V, S[3], f, y, !0);
      }
      function E_(r, s, a) {
        Qi(r) ? r.setAttribute(s, 'style', a) : (s.style.cssText = a);
      }
      function Tm(r, s, a) {
        Qi(r) ? ('' === a ? r.removeAttribute(s, 'class') : r.setAttribute(s, 'class', a)) : (s.className = a);
      }
      function nh(r, s, a) {
        let u = r.length;
        for (;;) {
          const f = r.indexOf(s, a);
          if (-1 === f) return f;
          if (0 === f || r.charCodeAt(f - 1) <= 32) {
            const y = s.length;
            if (f + y === u || r.charCodeAt(f + y) <= 32) return f;
          }
          a = f + 1;
        }
      }
      const x_ = 'ng-template';
      function zo(r, s, a) {
        let u = 0;
        for (; u < r.length; ) {
          let f = r[u++];
          if (a && 'class' === f) {
            if (((f = r[u]), -1 !== nh(f.toLowerCase(), s, 0))) return !0;
          } else if (1 === f) {
            for (; u < r.length && 'string' == typeof (f = r[u++]); ) if (f.toLowerCase() === s) return !0;
            return !1;
          }
        }
        return !1;
      }
      function Kf(r) {
        return 4 === r.type && r.value !== x_;
      }
      function D_(r, s, a) {
        return s === (4 !== r.type || a ? r.value : x_);
      }
      function Gh(r, s, a) {
        let u = 4;
        const f = r.attrs || [],
          y = (function M_(r) {
            for (let s = 0; s < r.length; s++) if (Jl(r[s])) return s;
            return r.length;
          })(f);
        let S = !1;
        for (let O = 0; O < s.length; O++) {
          const V = s[O];
          if ('number' != typeof V) {
            if (!S)
              if (4 & u) {
                if (((u = 2 | (1 & u)), ('' !== V && !D_(r, V, a)) || ('' === V && 1 === s.length))) {
                  if (_o(u)) return !1;
                  S = !0;
                }
              } else {
                const ne = 8 & u ? V : s[++O];
                if (8 & u && null !== r.attrs) {
                  if (!zo(r.attrs, ne, a)) {
                    if (_o(u)) return !1;
                    S = !0;
                  }
                  continue;
                }
                const tt = Im(8 & u ? 'class' : V, f, Kf(r), a);
                if (-1 === tt) {
                  if (_o(u)) return !1;
                  S = !0;
                  continue;
                }
                if ('' !== ne) {
                  let Tt;
                  Tt = tt > y ? '' : f[tt + 1].toLowerCase();
                  const $t = 8 & u ? Tt : null;
                  if (($t && -1 !== nh($t, ne, 0)) || (2 & u && ne !== Tt)) {
                    if (_o(u)) return !1;
                    S = !0;
                  }
                }
              }
          } else {
            if (!S && !_o(u) && !_o(V)) return !1;
            if (S && _o(V)) continue;
            (S = !1), (u = V | (1 & u));
          }
        }
        return _o(u) || S;
      }
      function _o(r) {
        return 0 == (1 & r);
      }
      function Im(r, s, a, u) {
        if (null === s) return -1;
        let f = 0;
        if (u || !a) {
          let y = !1;
          for (; f < s.length; ) {
            const S = s[f];
            if (S === r) return f;
            if (3 === S || 6 === S) y = !0;
            else {
              if (1 === S || 2 === S) {
                let O = s[++f];
                for (; 'string' == typeof O; ) O = s[++f];
                continue;
              }
              if (4 === S) break;
              if (0 === S) {
                f += 4;
                continue;
              }
            }
            f += y ? 1 : 2;
          }
          return -1;
        }
        return (function S_(r, s) {
          let a = r.indexOf(4);
          if (a > -1)
            for (a++; a < r.length; ) {
              const u = r[a];
              if ('number' == typeof u) return -1;
              if (u === s) return a;
              a++;
            }
          return -1;
        })(s, r);
      }
      function Rm(r, s, a = !1) {
        for (let u = 0; u < s.length; u++) if (Gh(r, s[u], a)) return !0;
        return !1;
      }
      function A_(r, s) {
        e: for (let a = 0; a < s.length; a++) {
          const u = s[a];
          if (r.length === u.length) {
            for (let f = 0; f < r.length; f++) if (r[f] !== u[f]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function T_(r, s) {
        return r ? ':not(' + s.trim() + ')' : s;
      }
      function Lb(r) {
        let s = r[0],
          a = 1,
          u = 2,
          f = '',
          y = !1;
        for (; a < r.length; ) {
          let S = r[a];
          if ('string' == typeof S)
            if (2 & u) {
              const O = r[++a];
              f += '[' + S + (O.length > 0 ? '="' + O + '"' : '') + ']';
            } else 8 & u ? (f += '.' + S) : 4 & u && (f += ' ' + S);
          else '' !== f && !_o(S) && ((s += T_(y, f)), (f = '')), (u = S), (y = y || !_o(u));
          a++;
        }
        return '' !== f && (s += T_(y, f)), s;
      }
      const Oi = {};
      function km(r) {
        Om(oe(), bn(), gi() + r, Tn());
      }
      function Om(r, s, a, u) {
        if (!u)
          if (3 == (3 & s[2])) {
            const y = r.preOrderCheckHooks;
            null !== y && qr(s, y, a);
          } else {
            const y = r.preOrderHooks;
            null !== y && ws(s, y, 0, a);
          }
        ir(a);
      }
      function Zf(r, s) {
        return (r << 17) | (s << 2);
      }
      function bl(r) {
        return (r >> 17) & 32767;
      }
      function Lm(r) {
        return 2 | r;
      }
      function tu(r) {
        return (131068 & r) >> 2;
      }
      function ku(r, s) {
        return (-131069 & r) | (s << 2);
      }
      function Ou(r) {
        return 1 | r;
      }
      function yo(r, s) {
        const a = r.contentQueries;
        if (null !== a)
          for (let u = 0; u < a.length; u += 2) {
            const f = a[u],
              y = a[u + 1];
            if (-1 !== y) {
              const S = r.data[y];
              hs(f), S.contentQueries(2, s[y], y);
            }
          }
      }
      function Ms(r, s, a, u, f, y, S, O, V, ne) {
        const ve = s.blueprint.slice();
        return (
          (ve[0] = f),
          (ve[2] = 140 | u),
          W(ve),
          (ve[3] = ve[15] = r),
          (ve[8] = a),
          (ve[10] = S || (r && r[10])),
          (ve[11] = O || (r && r[11])),
          (ve[12] = V || (r && r[12]) || null),
          (ve[9] = ne || (r && r[9]) || null),
          (ve[6] = y),
          (ve[16] = 2 == s.type ? r[16] : ve),
          ve
        );
      }
      function Ga(r, s, a, u, f) {
        let y = r.data[s];
        if (null === y)
          (y = (function pd(r, s, a, u, f) {
            const y = B(),
              S = pt(),
              V = (r.data[s] = (function md(r, s, a, u, f, y) {
                return {
                  type: a,
                  index: u,
                  insertBeforeIndex: null,
                  injectorIndex: s ? s.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: f,
                  attrs: y,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: s,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, S ? y : y && y.parent, a, s, u, f));
            return (
              null === r.firstChild && (r.firstChild = V),
              null !== y &&
                (S ? null == y.child && null !== V.parent && (y.child = V) : null === y.next && (y.next = V)),
              V
            );
          })(r, s, a, u, f)),
            (function mr() {
              return F.lFrame.inI18n;
            })() && (y.flags |= 64);
        else if (64 & y.type) {
          (y.type = a), (y.value = u), (y.attrs = f);
          const S = (function ce() {
            const r = F.lFrame,
              s = r.currentTNode;
            return r.isParent ? s : s.parent;
          })();
          y.injectorIndex = null === S ? -1 : S.injectorIndex;
        }
        return Ge(y, !0), y;
      }
      function Ec(r, s, a, u) {
        if (0 === a) return -1;
        const f = s.length;
        for (let y = 0; y < a; y++) s.push(u), r.blueprint.push(u), r.data.push(null);
        return f;
      }
      function Nu(r, s, a) {
        Lo(s);
        try {
          const u = r.viewQuery;
          null !== u && sp(1, u, a);
          const f = r.template;
          null !== f && O_(r, s, f, 1, a),
            r.firstCreatePass && (r.firstCreatePass = !1),
            r.staticContentQueries && yo(r, s),
            r.staticViewQueries && sp(2, r.viewQuery, a);
          const y = r.components;
          null !== y &&
            (function Ha(r, s) {
              for (let a = 0; a < s.length; a++) e0(r, s[a]);
            })(s, y);
        } catch (u) {
          throw (r.firstCreatePass && ((r.incompleteFirstPass = !0), (r.firstCreatePass = !1)), u);
        } finally {
          (s[2] &= -5), Vn();
        }
      }
      function Yh(r, s, a, u) {
        const f = s[2];
        if (256 == (256 & f)) return;
        Lo(s);
        const y = Tn();
        try {
          W(s),
            (function Xn(r) {
              return (F.lFrame.bindingIndex = r);
            })(r.bindingStartIndex),
            null !== a && O_(r, s, a, 2, u);
          const S = 3 == (3 & f);
          if (!y)
            if (S) {
              const ne = r.preOrderCheckHooks;
              null !== ne && qr(s, ne, null);
            } else {
              const ne = r.preOrderHooks;
              null !== ne && ws(s, ne, 0, null), ao(s, 0);
            }
          if (
            ((function j_(r) {
              for (let s = Fi(r); null !== s; s = go(s)) {
                if (!s[2]) continue;
                const a = s[9];
                for (let u = 0; u < a.length; u++) {
                  const f = a[u],
                    y = f[3];
                  0 == (1024 & f[2]) && H(y, 1), (f[2] |= 1024);
                }
              }
            })(s),
            (function Xb(r) {
              for (let s = Fi(r); null !== s; s = go(s))
                for (let a = 10; a < s.length; a++) {
                  const u = s[a],
                    f = u[1];
                  Vi(u) && Yh(f, u, f.template, u[8]);
                }
            })(s),
            null !== r.contentQueries && yo(r, s),
            !y)
          )
            if (S) {
              const ne = r.contentCheckHooks;
              null !== ne && qr(s, ne);
            } else {
              const ne = r.contentHooks;
              null !== ne && ws(s, ne, 1), ao(s, 1);
            }
          !(function Yi(r, s) {
            const a = r.hostBindingOpCodes;
            if (null !== a)
              try {
                for (let u = 0; u < a.length; u++) {
                  const f = a[u];
                  if (f < 0) ir(~f);
                  else {
                    const y = f,
                      S = a[++u],
                      O = a[++u];
                    rs(S, y), O(2, s[y]);
                  }
                }
              } finally {
                ir(-1);
              }
          })(r, s);
          const O = r.components;
          null !== O &&
            (function Lu(r, s) {
              for (let a = 0; a < s.length; a++) Jb(r, s[a]);
            })(s, O);
          const V = r.viewQuery;
          if ((null !== V && sp(2, V, u), !y))
            if (S) {
              const ne = r.viewCheckHooks;
              null !== ne && qr(s, ne);
            } else {
              const ne = r.viewHooks;
              null !== ne && ws(s, ne, 2), ao(s, 2);
            }
          !0 === r.firstUpdatePass && (r.firstUpdatePass = !1),
            y || (s[2] &= -73),
            1024 & s[2] && ((s[2] &= -1025), H(s[3], -1));
        } finally {
          Vn();
        }
      }
      function jb(r, s, a, u) {
        const f = s[10],
          y = !Tn(),
          S = di(s);
        try {
          y && !S && f.begin && f.begin(), S && Nu(r, s, u), Yh(r, s, a, u);
        } finally {
          y && !S && f.end && f.end();
        }
      }
      function O_(r, s, a, u, f) {
        const y = gi(),
          S = 2 & u;
        try {
          ir(-1), S && s.length > 20 && Om(r, s, 20, Tn()), a(u, f);
        } finally {
          ir(y);
        }
      }
      function Hb(r, s, a) {
        if (kr(s)) {
          const f = s.directiveEnd;
          for (let y = s.directiveStart; y < f; y++) {
            const S = r.data[y];
            S.contentQueries && S.contentQueries(1, a[y], y);
          }
        }
      }
      function ep(r, s, a) {
        !pr() ||
          ((function Um(r, s, a, u) {
            const f = a.directiveStart,
              y = a.directiveEnd;
            r.firstCreatePass || Ae(a, s), Hs(u, s);
            const S = a.initialInputs;
            for (let O = f; O < y; O++) {
              const V = r.data[O],
                ne = nr(V);
              ne && qb(s, a, V);
              const ve = Bs(s, r, O, a);
              Hs(ve, s), null !== S && rp(0, O - f, ve, V, 0, S), ne && (Sn(a.index, s)[8] = ve);
            }
          })(r, s, a, ke(a, s)),
          128 == (128 & a.flags) &&
            (function Zh(r, s, a) {
              const u = a.directiveStart,
                f = a.directiveEnd,
                S = a.index,
                O = (function Er() {
                  return F.lFrame.currentDirectiveIndex;
                })();
              try {
                ir(S);
                for (let V = u; V < f; V++) {
                  const ne = r.data[V],
                    ve = s[V];
                  Jo(V), (null !== ne.hostBindings || 0 !== ne.hostVars || null !== ne.hostAttrs) && U_(ne, ve);
                }
              } finally {
                ir(-1), Jo(O);
              }
            })(r, s, a));
      }
      function P_(r, s, a = ke) {
        const u = s.localNames;
        if (null !== u) {
          let f = s.index + 1;
          for (let y = 0; y < u.length; y += 2) {
            const S = u[y + 1],
              O = -1 === S ? a(s, r) : r[S];
            r[f++] = O;
          }
        }
      }
      function F_(r) {
        const s = r.tView;
        return null === s || s.incompleteFirstPass
          ? (r.tView = tp(
              1,
              null,
              r.template,
              r.decls,
              r.vars,
              r.directiveDefs,
              r.pipeDefs,
              r.viewQuery,
              r.schemas,
              r.consts
            ))
          : s;
      }
      function tp(r, s, a, u, f, y, S, O, V, ne) {
        const ve = 20 + u,
          tt = ve + f,
          Tt = (function sl(r, s) {
            const a = [];
            for (let u = 0; u < s; u++) a.push(u < r ? null : Oi);
            return a;
          })(ve, tt),
          $t = 'function' == typeof ne ? ne() : ne;
        return (Tt[1] = {
          type: r,
          blueprint: Tt,
          template: a,
          queries: null,
          viewQuery: O,
          declTNode: s,
          data: Tt.slice().fill(null, ve),
          bindingStartIndex: ve,
          expandoStartIndex: tt,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof y ? y() : y,
          pipeRegistry: 'function' == typeof S ? S() : S,
          firstChild: null,
          schemas: V,
          consts: $t,
          incompleteFirstPass: !1,
        });
      }
      function B_(r, s, a, u) {
        const f = W_(s);
        null === a ? f.push(u) : (f.push(a), r.firstCreatePass && o0(r).push(u, f.length - 1));
      }
      function sh(r, s, a) {
        for (let u in r)
          if (r.hasOwnProperty(u)) {
            const f = r[u];
            (a = null === a ? {} : a).hasOwnProperty(u) ? a[u].push(s, f) : (a[u] = [s, f]);
          }
        return a;
      }
      function El(r, s, a, u, f, y, S, O) {
        const V = ke(s, a);
        let ve,
          ne = s.inputs;
        !O && null != ne && (ve = ne[u])
          ? (zm(r, a, ve, u, f),
            je(s) &&
              (function Kh(r, s) {
                const a = Sn(s, r);
                16 & a[2] || (a[2] |= 64);
              })(a, s.index))
          : 3 & s.type &&
            ((u = (function oh(r) {
              return 'class' === r
                ? 'className'
                : 'for' === r
                ? 'htmlFor'
                : 'formaction' === r
                ? 'formAction'
                : 'innerHtml' === r
                ? 'innerHTML'
                : 'readonly' === r
                ? 'readOnly'
                : 'tabindex' === r
                ? 'tabIndex'
                : r;
            })(u)),
            (f = null != S ? S(f, s.value || '', u) : f),
            Qi(y) ? y.setProperty(V, u, f) : wa(u) || (V.setProperty ? V.setProperty(u, f) : (V[u] = f)));
      }
      function V_(r, s, a, u) {
        let f = !1;
        if (pr()) {
          const y = (function $E(r, s, a) {
              const u = r.directiveRegistry;
              let f = null;
              if (u)
                for (let y = 0; y < u.length; y++) {
                  const S = u[y];
                  Rm(a, S.selectors, !1) &&
                    (f || (f = []), On(Ae(a, s), r, S.type), nr(S) ? (Wb(r, a), f.unshift(S)) : f.push(S));
                }
              return f;
            })(r, s, a),
            S = null === u ? null : { '': -1 };
          if (null !== y) {
            (f = !0), np(a, r.data.length, y.length);
            for (let ve = 0; ve < y.length; ve++) {
              const tt = y[ve];
              tt.providersResolver && tt.providersResolver(tt);
            }
            let O = !1,
              V = !1,
              ne = Ec(r, s, y.length, null);
            for (let ve = 0; ve < y.length; ve++) {
              const tt = y[ve];
              (a.mergedAttrs = Zs(a.mergedAttrs, tt.hostAttrs)),
                Kb(r, a, s, ne, tt),
                gd(ne, tt, S),
                null !== tt.contentQueries && (a.flags |= 8),
                (null !== tt.hostBindings || null !== tt.hostAttrs || 0 !== tt.hostVars) && (a.flags |= 128);
              const Tt = tt.type.prototype;
              !O &&
                (Tt.ngOnChanges || Tt.ngOnInit || Tt.ngDoCheck) &&
                ((r.preOrderHooks || (r.preOrderHooks = [])).push(a.index), (O = !0)),
                !V &&
                  (Tt.ngOnChanges || Tt.ngDoCheck) &&
                  ((r.preOrderCheckHooks || (r.preOrderCheckHooks = [])).push(a.index), (V = !0)),
                ne++;
            }
            !(function Gb(r, s) {
              const u = s.directiveEnd,
                f = r.data,
                y = s.attrs,
                S = [];
              let O = null,
                V = null;
              for (let ne = s.directiveStart; ne < u; ne++) {
                const ve = f[ne],
                  tt = ve.inputs,
                  Tt = null === y || Kf(s) ? null : jm(tt, y);
                S.push(Tt), (O = sh(tt, ne, O)), (V = sh(ve.outputs, ne, V));
              }
              null !== O &&
                (O.hasOwnProperty('class') && (s.flags |= 16), O.hasOwnProperty('style') && (s.flags |= 32)),
                (s.initialInputs = S),
                (s.inputs = O),
                (s.outputs = V);
            })(r, a);
          }
          S &&
            (function Yb(r, s, a) {
              if (s) {
                const u = (r.localNames = []);
                for (let f = 0; f < s.length; f += 2) {
                  const y = a[s[f + 1]];
                  if (null == y) throw new et(-301, `Export of name '${s[f + 1]}' not found!`);
                  u.push(s[f], y);
                }
              }
            })(a, u, S);
        }
        return (a.mergedAttrs = Zs(a.mergedAttrs, a.attrs)), f;
      }
      function $b(r, s, a, u, f, y) {
        const S = y.hostBindings;
        if (S) {
          let O = r.hostBindingOpCodes;
          null === O && (O = r.hostBindingOpCodes = []);
          const V = ~s.index;
          (function zE(r) {
            let s = r.length;
            for (; s > 0; ) {
              const a = r[--s];
              if ('number' == typeof a && a < 0) return a;
            }
            return 0;
          })(O) != V && O.push(V),
            O.push(u, f, S);
        }
      }
      function U_(r, s) {
        null !== r.hostBindings && r.hostBindings(1, s);
      }
      function Wb(r, s) {
        (s.flags |= 2), (r.components || (r.components = [])).push(s.index);
      }
      function gd(r, s, a) {
        if (a) {
          if (s.exportAs) for (let u = 0; u < s.exportAs.length; u++) a[s.exportAs[u]] = r;
          nr(s) && (a[''] = r);
        }
      }
      function np(r, s, a) {
        (r.flags |= 1), (r.directiveStart = s), (r.directiveEnd = s + a), (r.providerIndexes = s);
      }
      function Kb(r, s, a, u, f) {
        r.data[u] = f;
        const y = f.factory || (f.factory = cs(f.type)),
          S = new gr(y, nr(f), null);
        (r.blueprint[u] = S), (a[u] = S), $b(r, s, 0, u, Ec(r, a, f.hostVars, Oi), f);
      }
      function qb(r, s, a) {
        const u = ke(s, r),
          f = F_(a),
          y = r[10],
          S = Qh(r, Ms(r, f, null, a.onPush ? 64 : 16, u, s, y, y.createRenderer(u, a), null, null));
        r[s.index] = S;
      }
      function Yl(r, s, a, u, f, y) {
        const S = ke(r, s);
        !(function ip(r, s, a, u, f, y, S) {
          if (null == y) Qi(r) ? r.removeAttribute(s, f, a) : s.removeAttribute(f);
          else {
            const O = null == S ? me(y) : S(y, u || '', f);
            Qi(r) ? r.setAttribute(s, f, O, a) : a ? s.setAttributeNS(a, f, O) : s.setAttribute(f, O);
          }
        })(s[11], S, y, r.value, a, u, f);
      }
      function rp(r, s, a, u, f, y) {
        const S = y[s];
        if (null !== S) {
          const O = u.setInput;
          for (let V = 0; V < S.length; ) {
            const ne = S[V++],
              ve = S[V++],
              tt = S[V++];
            null !== O ? u.setInput(a, tt, ne, ve) : (a[ve] = tt);
          }
        }
      }
      function jm(r, s) {
        let a = null,
          u = 0;
        for (; u < s.length; ) {
          const f = s[u];
          if (0 !== f)
            if (5 !== f) {
              if ('number' == typeof f) break;
              r.hasOwnProperty(f) && (null === a && (a = []), a.push(f, r[f], s[u + 1])), (u += 2);
            } else u += 2;
          else u += 4;
        }
        return a;
      }
      function Qb(r, s, a, u) {
        return new Array(r, !0, !1, s, null, 0, u, a, null, null);
      }
      function Jb(r, s) {
        const a = Sn(s, r);
        if (Vi(a)) {
          const u = a[1];
          80 & a[2] ? Yh(u, a, u.template, a[8]) : a[5] > 0 && H_(a);
        }
      }
      function H_(r) {
        for (let u = Fi(r); null !== u; u = go(u))
          for (let f = 10; f < u.length; f++) {
            const y = u[f];
            if (1024 & y[2]) {
              const S = y[1];
              Yh(S, y, S.template, y[8]);
            } else y[5] > 0 && H_(y);
          }
        const a = r[1].components;
        if (null !== a)
          for (let u = 0; u < a.length; u++) {
            const f = Sn(a[u], r);
            Vi(f) && f[5] > 0 && H_(f);
          }
      }
      function e0(r, s) {
        const a = Sn(s, r),
          u = a[1];
        (function t0(r, s) {
          for (let a = s.length; a < r.blueprint.length; a++) s.push(r.blueprint[a]);
        })(u, a),
          Nu(u, a, a[8]);
      }
      function Qh(r, s) {
        return r[13] ? (r[14][4] = s) : (r[13] = s), (r[14] = s), s;
      }
      function G_(r) {
        for (; r; ) {
          r[2] |= 64;
          const s = Kn(r);
          if (Bn(r) && !s) return r;
          r = s;
        }
        return null;
      }
      function Hm(r, s, a) {
        const u = s[10];
        u.begin && u.begin();
        try {
          Yh(r, s, r.template, a);
        } catch (f) {
          throw (a0(s, f), f);
        } finally {
          u.end && u.end();
        }
      }
      function r0(r) {
        !(function z_(r) {
          for (let s = 0; s < r.components.length; s++) {
            const a = r.components[s],
              u = $d(a),
              f = u[1];
            jb(f, u, f.template, a);
          }
        })(r[8]);
      }
      function sp(r, s, a) {
        hs(0), s(r, a);
      }
      const s0 = (() => Promise.resolve(null))();
      function W_(r) {
        return r[7] || (r[7] = []);
      }
      function o0(r) {
        return r.cleanup || (r.cleanup = []);
      }
      function Gm(r, s, a) {
        return (
          (null === r || nr(r)) &&
            (a = (function z(r) {
              for (; Array.isArray(r); ) {
                if ('object' == typeof r[1]) return r;
                r = r[0];
              }
              return null;
            })(a[s.index])),
          a[11]
        );
      }
      function a0(r, s) {
        const a = r[9],
          u = a ? a.get(Zc, null) : null;
        u && u.handleError(s);
      }
      function zm(r, s, a, u, f) {
        for (let y = 0; y < a.length; ) {
          const S = a[y++],
            O = a[y++],
            V = s[S],
            ne = r.data[S];
          null !== ne.setInput ? ne.setInput(V, f, u, O) : (V[O] = f);
        }
      }
      function Bu(r, s, a) {
        const u = $(s, r);
        !(function cd(r, s, a) {
          Qi(r) ? r.setValue(s, a) : (s.textContent = a);
        })(r[11], u, a);
      }
      function ef(r, s, a) {
        let u = a ? r.styles : null,
          f = a ? r.classes : null,
          y = 0;
        if (null !== s)
          for (let S = 0; S < s.length; S++) {
            const O = s[S];
            'number' == typeof O ? (y = O) : 1 == y ? (f = Ne(f, O)) : 2 == y && (u = Ne(u, O + ': ' + s[++S] + ';'));
          }
        a ? (r.styles = u) : (r.stylesWithoutHost = u), a ? (r.classes = f) : (r.classesWithoutHost = f);
      }
      const K_ = new Zr('INJECTOR', -1);
      class l0 {
        get(s, a = jo) {
          if (a === jo) {
            const u = new Error(`NullInjectorError: No provider for ${Fe(s)}!`);
            throw ((u.name = 'NullInjectorError'), u);
          }
          return a;
        }
      }
      const q_ = new Zr('Set Injector scope.'),
        op = {},
        YE = {};
      let Z_;
      function $m() {
        return void 0 === Z_ && (Z_ = new l0()), Z_;
      }
      function Q_(r, s = null, a = null, u) {
        const f = X_(r, s, a, u);
        return f._resolveInjectorDefTypes(), f;
      }
      function X_(r, s = null, a = null, u) {
        return new J_(r, a, s || $m(), u);
      }
      class J_ {
        constructor(s, a, u, f = null) {
          (this.parent = u),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const y = [];
          a && Ea(a, (O) => this.processProvider(O, s, a)),
            Ea([s], (O) => this.processInjectorType(O, [], y)),
            this.records.set(K_, _d(void 0, this));
          const S = this.records.get(q_);
          (this.scope = null != S ? S.value : null), (this.source = f || ('object' == typeof s ? null : Fe(s)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((s) => s.ngOnDestroy());
          } finally {
            this.records.clear(), this.onDestroy.clear(), this.injectorDefTypes.clear();
          }
        }
        get(s, a = jo, u = ae.Default) {
          this.assertNotDestroyed();
          const f = Ee(this),
            y = Se(void 0);
          try {
            if (!(u & ae.SkipSelf)) {
              let O = this.records.get(s);
              if (void 0 === O) {
                const V =
                  (function u0(r) {
                    return 'function' == typeof r || ('object' == typeof r && r instanceof Zr);
                  })(s) && Nt(s);
                (O = V && this.injectableDefInScope(V) ? _d(tf(s), op) : null), this.records.set(s, O);
              }
              if (null != O) return this.hydrate(s, O);
            }
            return (u & ae.Self ? $m() : this.parent).get(s, (a = u & ae.Optional && a === jo ? null : a));
          } catch (S) {
            if ('NullInjectorError' === S.name) {
              if (((S[ac] = S[ac] || []).unshift(Fe(s)), f)) throw S;
              return (function Tr(r, s, a, u) {
                const f = r[ac];
                throw (
                  (s[cc] && f.unshift(s[cc]),
                  (r.message = (function Us(r, s, a, u = null) {
                    r = r && '\n' === r.charAt(0) && '\u0275' == r.charAt(1) ? r.substr(2) : r;
                    let f = Fe(s);
                    if (Array.isArray(s)) f = s.map(Fe).join(' -> ');
                    else if ('object' == typeof s) {
                      let y = [];
                      for (let S in s)
                        if (s.hasOwnProperty(S)) {
                          let O = s[S];
                          y.push(S + ':' + ('string' == typeof O ? JSON.stringify(O) : Fe(O)));
                        }
                      f = `{${y.join(', ')}}`;
                    }
                    return `${a}${u ? '(' + u + ')' : ''}[${f}]: ${r.replace(aa, '\n  ')}`;
                  })('\n' + r.message, f, a, u)),
                  (r.ngTokenPath = f),
                  (r[ac] = null),
                  r)
                );
              })(S, s, 'R3InjectorError', this.source);
            }
            throw S;
          } finally {
            Se(y), Ee(f);
          }
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((s) => this.get(s));
        }
        toString() {
          const s = [];
          return this.records.forEach((u, f) => s.push(Fe(f))), `R3Injector[${s.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new et(205, '');
        }
        processInjectorType(s, a, u) {
          if (!(s = ue(s))) return !1;
          let f = re(s);
          const y = (null == f && s.ngModule) || void 0,
            S = void 0 === y ? s : y,
            O = -1 !== u.indexOf(S);
          if ((void 0 !== y && (f = re(y)), null == f)) return !1;
          if (null != f.imports && !O) {
            let ve;
            u.push(S);
            try {
              Ea(f.imports, (tt) => {
                this.processInjectorType(tt, a, u) && (void 0 === ve && (ve = []), ve.push(tt));
              });
            } finally {
            }
            if (void 0 !== ve)
              for (let tt = 0; tt < ve.length; tt++) {
                const { ngModule: Tt, providers: $t } = ve[tt];
                Ea($t, (gn) => this.processProvider(gn, Tt, $t || q));
              }
          }
          this.injectorDefTypes.add(S);
          const V = cs(S) || (() => new S());
          this.records.set(S, _d(V, op));
          const ne = f.providers;
          if (null != ne && !O) {
            const ve = s;
            Ea(ne, (tt) => this.processProvider(tt, ve, ne));
          }
          return void 0 !== y && void 0 !== s.providers;
        }
        processProvider(s, a, u) {
          let f = lh((s = ue(s))) ? s : ue(s && s.provide);
          const y = (function Wm(r, s, a) {
            return Km(r) ? _d(void 0, r.useValue) : _d(Ym(r), op);
          })(s);
          if (lh(s) || !0 !== s.multi) this.records.get(f);
          else {
            let S = this.records.get(f);
            S || ((S = _d(void 0, op, !0)), (S.factory = () => qn(S.multi)), this.records.set(f, S)),
              (f = s),
              S.multi.push(s);
          }
          this.records.set(f, y);
        }
        hydrate(s, a) {
          return (
            a.value === op && ((a.value = YE), (a.value = a.factory())),
            'object' == typeof a.value &&
              a.value &&
              (function QE(r) {
                return null !== r && 'object' == typeof r && 'function' == typeof r.ngOnDestroy;
              })(a.value) &&
              this.onDestroy.add(a.value),
            a.value
          );
        }
        injectableDefInScope(s) {
          if (!s.providedIn) return !1;
          const a = ue(s.providedIn);
          return 'string' == typeof a ? 'any' === a || a === this.scope : this.injectorDefTypes.has(a);
        }
      }
      function tf(r) {
        const s = Nt(r),
          a = null !== s ? s.factory : cs(r);
        if (null !== a) return a;
        if (r instanceof Zr) throw new et(204, '');
        if (r instanceof Function)
          return (function ap(r) {
            const s = r.length;
            if (s > 0) throw (Ja(s, '?'), new et(204, ''));
            const a = (function xt(r) {
              const s = r && (r[ot] || r[hn]);
              if (s) {
                const a = (function Gt(r) {
                  if (r.hasOwnProperty('name')) return r.name;
                  const s = ('' + r).match(/^function\s*([^\s(]+)/);
                  return null === s ? '' : s[1];
                })(r);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${a}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${a}" class.`
                  ),
                  s
                );
              }
              return null;
            })(r);
            return null !== a ? () => a.factory(r) : () => new r();
          })(r);
        throw new et(204, '');
      }
      function Ym(r, s, a) {
        let u;
        if (lh(r)) {
          const f = ue(r);
          return cs(f) || tf(f);
        }
        if (Km(r)) u = () => ue(r.useValue);
        else if (
          (function KE(r) {
            return !(!r || !r.useFactory);
          })(r)
        )
          u = () => r.useFactory(...qn(r.deps || []));
        else if (
          (function c0(r) {
            return !(!r || !r.useExisting);
          })(r)
        )
          u = () => Bt(ue(r.useExisting));
        else {
          const f = ue(r && (r.useClass || r.provide));
          if (
            !(function ZE(r) {
              return !!r.deps;
            })(r)
          )
            return cs(f) || tf(f);
          u = () => new f(...qn(r.deps));
        }
        return u;
      }
      function _d(r, s, a = !1) {
        return { factory: r, value: s, multi: a ? [] : void 0 };
      }
      function Km(r) {
        return null !== r && 'object' == typeof r && j in r;
      }
      function lh(r) {
        return 'function' == typeof r;
      }
      let za = (() => {
        class r {
          static create(a, u) {
            var f;
            if (Array.isArray(a)) return Q_({ name: '' }, u, a, '');
            {
              const y = null !== (f = a.name) && void 0 !== f ? f : '';
              return Q_({ name: y }, a.parent, a.providers, y);
            }
          }
        }
        return (
          (r.THROW_IF_NOT_FOUND = jo),
          (r.NULL = new l0()),
          (r.ɵprov = bt({ token: r, providedIn: 'any', factory: () => Bt(K_) })),
          (r.__NG_ELEMENT_ID__ = -1),
          r
        );
      })();
      function iy(r, s) {
        Cs($d(r)[1], M());
      }
      function fp(r) {
        let s = (function uh(r) {
            return Object.getPrototypeOf(r.prototype).constructor;
          })(r.type),
          a = !0;
        const u = [r];
        for (; s; ) {
          let f;
          if (nr(r)) f = s.ɵcmp || s.ɵdir;
          else {
            if (s.ɵcmp) throw new et(903, '');
            f = s.ɵdir;
          }
          if (f) {
            if (a) {
              u.push(f);
              const S = r;
              (S.inputs = ry(r.inputs)), (S.declaredInputs = ry(r.declaredInputs)), (S.outputs = ry(r.outputs));
              const O = f.hostBindings;
              O && rx(r, O);
              const V = f.viewQuery,
                ne = f.contentQueries;
              if (
                (V && g0(r, V),
                ne && _0(r, ne),
                He(r.inputs, f.inputs),
                He(r.declaredInputs, f.declaredInputs),
                He(r.outputs, f.outputs),
                nr(f) && f.data.animation)
              ) {
                const ve = r.data;
                ve.animation = (ve.animation || []).concat(f.data.animation);
              }
            }
            const y = f.features;
            if (y)
              for (let S = 0; S < y.length; S++) {
                const O = y[S];
                O && O.ngInherit && O(r), O === fp && (a = !1);
              }
          }
          s = Object.getPrototypeOf(s);
        }
        !(function ix(r) {
          let s = 0,
            a = null;
          for (let u = r.length - 1; u >= 0; u--) {
            const f = r[u];
            (f.hostVars = s += f.hostVars), (f.hostAttrs = Zs(f.hostAttrs, (a = Zs(a, f.hostAttrs))));
          }
        })(u);
      }
      function ry(r) {
        return r === de ? {} : r === q ? [] : r;
      }
      function g0(r, s) {
        const a = r.viewQuery;
        r.viewQuery = a
          ? (u, f) => {
              s(u, f), a(u, f);
            }
          : s;
      }
      function _0(r, s) {
        const a = r.contentQueries;
        r.contentQueries = a
          ? (u, f, y) => {
              s(u, f, y), a(u, f, y);
            }
          : s;
      }
      function rx(r, s) {
        const a = r.hostBindings;
        r.hostBindings = a
          ? (u, f) => {
              s(u, f), a(u, f);
            }
          : s;
      }
      let eg = null;
      function yd() {
        if (!eg) {
          const r = Hn.Symbol;
          if (r && r.iterator) eg = r.iterator;
          else {
            const s = Object.getOwnPropertyNames(Map.prototype);
            for (let a = 0; a < s.length; ++a) {
              const u = s[a];
              'entries' !== u && 'size' !== u && Map.prototype[u] === Map.prototype.entries && (eg = u);
            }
          }
        }
        return eg;
      }
      function dh(r) {
        return !!pp(r) && (Array.isArray(r) || (!(r instanceof Map) && yd() in r));
      }
      function pp(r) {
        return null !== r && ('function' == typeof r || 'object' == typeof r);
      }
      function io(r, s, a) {
        return !Object.is(r[s], a) && ((r[s] = a), !0);
      }
      function tg(r, s, a, u) {
        const f = bn();
        return io(f, si(), s) && (oe(), Yl(Ri(), f, r, s, a, u)), tg;
      }
      function C0(r, s, a, u, f, y, S, O) {
        const V = bn(),
          ne = oe(),
          ve = r + 20,
          tt = ne.firstCreatePass
            ? (function ax(r, s, a, u, f, y, S, O, V) {
                const ne = s.consts,
                  ve = Ga(s, r, 4, S || null, yi(ne, O));
                V_(s, a, ve, yi(ne, V)), Cs(s, ve);
                const tt = (ve.tViews = tp(2, ve, u, f, y, s.directiveRegistry, s.pipeRegistry, null, s.schemas, ne));
                return (
                  null !== s.queries && (s.queries.template(s, ve), (tt.queries = s.queries.embeddedTView(ve))), ve
                );
              })(ve, ne, V, s, a, u, f, y, S)
            : ne.data[ve];
        Ge(tt, !1);
        const Tt = V[11].createComment('');
        hd(ne, V, Tt, tt),
          Hs(Tt, V),
          Qh(V, (V[ve] = Qb(Tt, V, Tt, tt))),
          ms(tt) && ep(ne, V, tt),
          null != S && P_(V, tt, O);
      }
      function w0(r) {
        return yn(
          (function cn() {
            return F.lFrame.contextLView;
          })(),
          20 + r
        );
      }
      function yp(r, s = ae.Default) {
        const a = bn();
        return null === a ? Bt(r, s) : Xi(M(), a, ue(r), s);
      }
      function ug() {
        throw new Error('invalid');
      }
      function wy(r, s, a) {
        const u = bn();
        return io(u, si(), s) && El(oe(), Ri(), u, r, s, u[11], a, !1), wy;
      }
      function vp(r, s, a, u, f) {
        const S = f ? 'class' : 'style';
        zm(r, a, s.inputs[S], S, u);
      }
      function bp(r, s, a, u) {
        const f = bn(),
          y = oe(),
          S = 20 + r,
          O = f[11],
          V = (f[S] = zl(
            O,
            s,
            (function Ca() {
              return F.lFrame.currentNamespace;
            })()
          )),
          ne = y.firstCreatePass
            ? (function Ey(r, s, a, u, f, y, S) {
                const O = s.consts,
                  ne = Ga(s, r, 2, f, yi(O, y));
                return (
                  V_(s, a, ne, yi(O, S)),
                  null !== ne.attrs && ef(ne, ne.attrs, !1),
                  null !== ne.mergedAttrs && ef(ne, ne.mergedAttrs, !0),
                  null !== s.queries && s.queries.elementStart(s, ne),
                  ne
                );
              })(S, y, f, 0, s, a, u)
            : y.data[S];
        Ge(ne, !0);
        const ve = ne.mergedAttrs;
        null !== ve && Za(O, V, ve);
        const tt = ne.classes;
        null !== tt && Tm(O, V, tt);
        const Tt = ne.styles;
        null !== Tt && E_(O, V, Tt),
          64 != (64 & ne.flags) && hd(y, f, V, ne),
          0 ===
            (function Xt() {
              return F.lFrame.elementDepthCount;
            })() && Hs(V, f),
          (function Pn() {
            F.lFrame.elementDepthCount++;
          })(),
          ms(ne) && (ep(y, f, ne), Hb(y, ne, f)),
          null !== u && P_(f, ne);
      }
      function xy() {
        let r = M();
        pt() ? gt() : ((r = r.parent), Ge(r, !1));
        const s = r;
        !(function Pi() {
          F.lFrame.elementDepthCount--;
        })();
        const a = oe();
        a.firstCreatePass && (Cs(a, r), kr(r) && a.queries.elementEnd(r)),
          null != s.classesWithoutHost &&
            (function na(r) {
              return 0 != (16 & r.flags);
            })(s) &&
            vp(a, s, bn(), s.classesWithoutHost, !0),
          null != s.stylesWithoutHost &&
            (function Fc(r) {
              return 0 != (32 & r.flags);
            })(s) &&
            vp(a, s, bn(), s.stylesWithoutHost, !1);
      }
      function Dy(r, s, a, u) {
        bp(r, s, a, u), xy();
      }
      function Cp(r, s, a) {
        const u = bn(),
          f = oe(),
          y = r + 20,
          S = f.firstCreatePass
            ? (function yx(r, s, a, u, f) {
                const y = s.consts,
                  S = yi(y, u),
                  O = Ga(s, r, 8, 'ng-container', S);
                return (
                  null !== S && ef(O, S, !0),
                  V_(s, a, O, yi(y, f)),
                  null !== s.queries && s.queries.elementStart(s, O),
                  O
                );
              })(y, f, u, s, a)
            : f.data[y];
        Ge(S, !0);
        const O = (u[y] = u[11].createComment(''));
        hd(f, u, O, S), Hs(O, u), ms(S) && (ep(f, u, S), Hb(f, S, u)), null != a && P_(u, S);
      }
      function dg() {
        let r = M();
        const s = oe();
        pt() ? gt() : ((r = r.parent), Ge(r, !1)), s.firstCreatePass && (Cs(s, r), kr(r) && s.queries.elementEnd(r));
      }
      function wp(r, s, a) {
        Cp(r, s, a), dg();
      }
      function F0() {
        return bn();
      }
      function My(r) {
        return !!r && 'function' == typeof r.then;
      }
      function L0(r) {
        return !!r && 'function' == typeof r.subscribe;
      }
      const N0 = L0;
      function hg(r, s, a, u) {
        const f = bn(),
          y = oe(),
          S = M();
        return fg(y, f, f[11], S, r, s, !!a, u), hg;
      }
      function Ep(r, s) {
        const a = M(),
          u = bn(),
          f = oe();
        return fg(f, u, Gm(Yr(f.data), a, u), a, r, s, !1), Ep;
      }
      function fg(r, s, a, u, f, y, S, O) {
        const V = ms(u),
          ve = r.firstCreatePass && o0(r),
          tt = s[8],
          Tt = W_(s);
        let $t = !0;
        if (3 & u.type || O) {
          const jn = ke(u, s),
            ri = O ? O(jn) : jn,
            wn = Tt.length,
            bi = O ? (rr) => O(Ni(rr[u.index])) : u.index;
          if (Qi(a)) {
            let rr = null;
            if (
              (!O &&
                V &&
                (rr = (function B0(r, s, a, u) {
                  const f = r.cleanup;
                  if (null != f)
                    for (let y = 0; y < f.length - 1; y += 2) {
                      const S = f[y];
                      if (S === a && f[y + 1] === u) {
                        const O = s[7],
                          V = f[y + 2];
                        return O.length > V ? O[V] : null;
                      }
                      'string' == typeof S && (y += 2);
                    }
                  return null;
                })(r, s, f, u.index)),
              null !== rr)
            )
              ((rr.__ngLastListenerFn__ || rr).__ngNextListenerFn__ = y), (rr.__ngLastListenerFn__ = y), ($t = !1);
            else {
              y = xp(u, s, tt, y, !1);
              const Fr = a.listen(ri, f, y);
              Tt.push(y, Fr), ve && ve.push(f, bi, wn, wn + 1);
            }
          } else (y = xp(u, s, tt, y, !0)), ri.addEventListener(f, y, S), Tt.push(y), ve && ve.push(f, bi, wn, S);
        } else y = xp(u, s, tt, y, !1);
        const gn = u.outputs;
        let Rn;
        if ($t && null !== gn && (Rn = gn[f])) {
          const jn = Rn.length;
          if (jn)
            for (let ri = 0; ri < jn; ri += 2) {
              const Il = s[Rn[ri]][Rn[ri + 1]].subscribe(y),
                xh = Tt.length;
              Tt.push(y, Il), ve && ve.push(f, u.index, xh, -(xh + 1));
            }
        }
      }
      function pg(r, s, a, u) {
        try {
          return !1 !== a(u);
        } catch (f) {
          return a0(r, f), !1;
        }
      }
      function xp(r, s, a, u, f) {
        return function y(S) {
          if (S === Function) return u;
          const O = 2 & r.flags ? Sn(r.index, s) : s;
          0 == (32 & s[2]) && G_(O);
          let V = pg(s, 0, u, S),
            ne = y.__ngNextListenerFn__;
          for (; ne; ) (V = pg(s, 0, ne, S) && V), (ne = ne.__ngNextListenerFn__);
          return f && !1 === V && (S.preventDefault(), (S.returnValue = !1)), V;
        };
      }
      function Dp(r = 1) {
        return (function li(r) {
          return (F.lFrame.contextLView = (function oi(r, s) {
            for (; r > 0; ) (s = s[15]), r--;
            return s;
          })(r, F.lFrame.contextLView))[8];
        })(r);
      }
      function Sy(r, s) {
        let a = null;
        const u = (function zh(r) {
          const s = r.attrs;
          if (null != s) {
            const a = s.indexOf(5);
            if (0 == (1 & a)) return s[a + 1];
          }
          return null;
        })(r);
        for (let f = 0; f < s.length; f++) {
          const y = s[f];
          if ('*' !== y) {
            if (null === u ? Rm(r, y, !0) : A_(u, y)) return f;
          } else a = f;
        }
        return a;
      }
      function Ay(r) {
        const s = bn()[16][6];
        if (!s.projection) {
          const u = (s.projection = Ja(r ? r.length : 1, null)),
            f = u.slice();
          let y = s.child;
          for (; null !== y; ) {
            const S = r ? Sy(y, r) : 0;
            null !== S && (f[S] ? (f[S].projectionNext = y) : (u[S] = y), (f[S] = y)), (y = y.next);
          }
        }
      }
      function mg(r, s = 0, a) {
        const u = bn(),
          f = oe(),
          y = Ga(f, 20 + r, 16, null, a || null);
        null === y.projection && (y.projection = s),
          gt(),
          64 != (64 & y.flags) &&
            (function Ob(r, s, a) {
              Am(s[11], 0, s, a, Hh(r, a, s), b_(a.parent || s[6], a, s));
            })(f, u, y);
      }
      function G0(r, s, a, u, f) {
        const y = r[a + 1],
          S = null === s;
        let O = u ? bl(y) : tu(y),
          V = !1;
        for (; 0 !== O && (!1 === V || S); ) {
          const ve = r[O + 1];
          Cx(r[O], s) && ((V = !0), (r[O + 1] = u ? Ou(ve) : Lm(ve))), (O = u ? bl(ve) : tu(ve));
        }
        V && (r[a + 1] = u ? Lm(y) : Ou(y));
      }
      function Cx(r, s) {
        return (
          null === r ||
          null == s ||
          (Array.isArray(r) ? r[1] : r) === s ||
          (!(!Array.isArray(r) || 'string' != typeof s) && oa(r, s) >= 0)
        );
      }
      function _g(r, s, a) {
        return Ml(r, s, a, !1), _g;
      }
      function Fy(r, s) {
        return Ml(r, s, null, !0), Fy;
      }
      function Ml(r, s, a, u) {
        const f = bn(),
          y = oe(),
          S = (function vi(r) {
            const s = F.lFrame,
              a = s.bindingIndex;
            return (s.bindingIndex = s.bindingIndex + r), a;
          })(2);
        y.firstUpdatePass &&
          (function As(r, s, a, u) {
            const f = r.data;
            if (null === f[a + 1]) {
              const y = f[gi()],
                S = (function Z0(r, s) {
                  return s >= r.expandoStartIndex;
                })(r, a);
              (function nC(r, s) {
                return 0 != (r.flags & (s ? 16 : 32));
              })(y, u) &&
                null === s &&
                !S &&
                (s = !1),
                (s = (function FS(r, s, a, u) {
                  const f = Yr(r);
                  let y = u ? s.residualClasses : s.residualStyles;
                  if (null === f)
                    0 === (u ? s.classBindings : s.styleBindings) &&
                      ((a = Tp((a = Ly(null, r, s, a, u)), s.attrs, u)), (y = null));
                  else {
                    const S = s.directiveStylingLast;
                    if (-1 === S || r[S] !== f)
                      if (((a = Ly(f, r, s, a, u)), null === y)) {
                        let V = (function LS(r, s, a) {
                          const u = a ? s.classBindings : s.styleBindings;
                          if (0 !== tu(u)) return r[bl(u)];
                        })(r, s, u);
                        void 0 !== V &&
                          Array.isArray(V) &&
                          ((V = Ly(null, r, s, V[1], u)),
                          (V = Tp(V, s.attrs, u)),
                          (function Io(r, s, a, u) {
                            r[bl(a ? s.classBindings : s.styleBindings)] = u;
                          })(r, s, u, V));
                      } else
                        y = (function Q0(r, s, a) {
                          let u;
                          const f = s.directiveEnd;
                          for (let y = 1 + s.directiveStylingLast; y < f; y++) u = Tp(u, r[y].hostAttrs, a);
                          return Tp(u, s.attrs, a);
                        })(r, s, u);
                  }
                  return void 0 !== y && (u ? (s.residualClasses = y) : (s.residualStyles = y)), a;
                })(f, y, s, u)),
                (function vx(r, s, a, u, f, y) {
                  let S = y ? s.classBindings : s.styleBindings,
                    O = bl(S),
                    V = tu(S);
                  r[u] = a;
                  let ve,
                    ne = !1;
                  if (Array.isArray(a)) {
                    const tt = a;
                    (ve = tt[1]), (null === ve || oa(tt, ve) > 0) && (ne = !0);
                  } else ve = a;
                  if (f)
                    if (0 !== V) {
                      const Tt = bl(r[O + 1]);
                      (r[u + 1] = Zf(Tt, O)),
                        0 !== Tt && (r[Tt + 1] = ku(r[Tt + 1], u)),
                        (r[O + 1] = (function Fm(r, s) {
                          return (131071 & r) | (s << 17);
                        })(r[O + 1], u));
                    } else (r[u + 1] = Zf(O, 0)), 0 !== O && (r[O + 1] = ku(r[O + 1], u)), (O = u);
                  else (r[u + 1] = Zf(V, 0)), 0 === O ? (O = u) : (r[V + 1] = ku(r[V + 1], u)), (V = u);
                  ne && (r[u + 1] = Lm(r[u + 1])),
                    G0(r, ve, u, !0),
                    G0(r, ve, u, !1),
                    (function bx(r, s, a, u, f) {
                      const y = f ? r.residualClasses : r.residualStyles;
                      null != y && 'string' == typeof s && oa(y, s) >= 0 && (a[u + 1] = Ou(a[u + 1]));
                    })(s, ve, r, u, y),
                    (S = Zf(O, V)),
                    y ? (s.classBindings = S) : (s.styleBindings = S);
                })(f, y, s, a, S, u);
            }
          })(y, r, S, u),
          s !== Oi &&
            io(f, S, s) &&
            (function eC(r, s, a, u, f, y, S, O) {
              if (!(3 & s.type)) return;
              const V = r.data,
                ne = V[O + 1];
              Ny(
                (function $l(r) {
                  return 1 == (1 & r);
                })(ne)
                  ? tC(V, s, a, f, tu(ne), S)
                  : void 0
              ) ||
                (Ny(y) ||
                  ((function Qf(r) {
                    return 2 == (2 & r);
                  })(ne) &&
                    (y = tC(V, null, a, f, O, S))),
                (function Pb(r, s, a, u, f) {
                  const y = Qi(r);
                  if (s)
                    f ? (y ? r.addClass(a, u) : a.classList.add(u)) : y ? r.removeClass(a, u) : a.classList.remove(u);
                  else {
                    let S = -1 === u.indexOf('-') ? void 0 : Q.DashCase;
                    if (null == f) y ? r.removeStyle(a, u, S) : a.style.removeProperty(u);
                    else {
                      const O = 'string' == typeof f && f.endsWith('!important');
                      O && ((f = f.slice(0, -10)), (S |= Q.Important)),
                        y ? r.setStyle(a, u, f, S) : a.style.setProperty(u, f, O ? 'important' : '');
                    }
                  }
                })(u, S, $(gi(), a), f, y));
            })(
              y,
              y.data[gi()],
              f,
              f[11],
              r,
              (f[S + 1] = (function Ex(r, s) {
                return null == r || ('string' == typeof s ? (r += s) : 'object' == typeof r && (r = Fe(Vl(r)))), r;
              })(s, a)),
              u,
              S
            );
      }
      function Ly(r, s, a, u, f) {
        let y = null;
        const S = a.directiveEnd;
        let O = a.directiveStylingLast;
        for (-1 === O ? (O = a.directiveStart) : O++; O < S && ((y = s[O]), (u = Tp(u, y.hostAttrs, f)), y !== r); )
          O++;
        return null !== r && (a.directiveStylingLast = O), u;
      }
      function Tp(r, s, a) {
        const u = a ? 1 : 2;
        let f = -1;
        if (null !== s)
          for (let y = 0; y < s.length; y++) {
            const S = s[y];
            'number' == typeof S
              ? (f = S)
              : f === u && (Array.isArray(r) || (r = void 0 === r ? [] : ['', r]), mo(r, S, !!a || s[++y]));
          }
        return void 0 === r ? null : r;
      }
      function tC(r, s, a, u, f, y) {
        const S = null === s;
        let O;
        for (; f > 0; ) {
          const V = r[f],
            ne = Array.isArray(V),
            ve = ne ? V[1] : V,
            tt = null === ve;
          let Tt = a[f + 1];
          Tt === Oi && (Tt = tt ? q : void 0);
          let $t = tt ? Fl(Tt, u) : ve === u ? Tt : void 0;
          if ((ne && !Ny($t) && ($t = Fl(V, u)), Ny($t) && ((O = $t), S))) return O;
          const gn = r[f + 1];
          f = S ? bl(gn) : tu(gn);
        }
        if (null !== s) {
          let V = y ? s.residualClasses : s.residualStyles;
          null != V && (O = Fl(V, u));
        }
        return O;
      }
      function Ny(r) {
        return void 0 !== r;
      }
      function By(r, s = '') {
        const a = bn(),
          u = oe(),
          f = r + 20,
          y = u.firstCreatePass ? Ga(u, f, 1, s, null) : u.data[f],
          S = (a[f] = (function ld(r, s) {
            return Qi(r) ? r.createText(s) : r.createTextNode(s);
          })(a[11], s));
        hd(u, a, S, y), Ge(y, !1);
      }
      function Sc(r) {
        return Vy('', r, ''), Sc;
      }
      function Vy(r, s, a) {
        const u = bn(),
          f = (function nf(r, s, a, u) {
            return io(r, si(), a) ? s + me(a) + u : Oi;
          })(u, r, s, a);
        return f !== Oi && Bu(u, gi(), f), Vy;
      }
      function ou(r, s, a) {
        const u = bn();
        return io(u, si(), s) && El(oe(), Ri(), u, r, s, u[11], a, !0), ou;
      }
      function Ky(r, s, a) {
        const u = bn();
        if (io(u, si(), s)) {
          const y = oe(),
            S = Ri();
          El(y, S, u, r, s, Gm(Yr(y.data), S, u), a, !0);
        }
        return Ky;
      }
      const Dd = void 0;
      var Lp = [
        'en',
        [['a', 'p'], ['AM', 'PM'], Dd],
        [['AM', 'PM'], Dd, Dd],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        Dd,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        Dd,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', Dd, "{1} 'at' {0}", Dd],
        ['.', ',', ';', '%', '+', '-', 'E', '\xd7', '\u2030', '\u221e', 'NaN', ':'],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function uC(r) {
          const a = Math.floor(Math.abs(r)),
            u = r.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === a && 0 === u ? 1 : 5;
        },
      ];
      let Sl = {};
      function qy(r) {
        const s = (function hC(r) {
          return r.toLowerCase().replace(/_/g, '-');
        })(r);
        let a = Zy(s);
        if (a) return a;
        const u = s.split('-')[0];
        if (((a = Zy(u)), a)) return a;
        if ('en' === u) return Lp;
        throw new Error(`Missing locale data for the locale "${r}".`);
      }
      function dC(r) {
        return qy(r)[Ei.PluralCase];
      }
      function Zy(r) {
        return r in Sl || (Sl[r] = Hn.ng && Hn.ng.common && Hn.ng.common.locales && Hn.ng.common.locales[r]), Sl[r];
      }
      var Ei = (() => (
        ((Ei = Ei || {})[(Ei.LocaleId = 0)] = 'LocaleId'),
        (Ei[(Ei.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
        (Ei[(Ei.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
        (Ei[(Ei.DaysFormat = 3)] = 'DaysFormat'),
        (Ei[(Ei.DaysStandalone = 4)] = 'DaysStandalone'),
        (Ei[(Ei.MonthsFormat = 5)] = 'MonthsFormat'),
        (Ei[(Ei.MonthsStandalone = 6)] = 'MonthsStandalone'),
        (Ei[(Ei.Eras = 7)] = 'Eras'),
        (Ei[(Ei.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
        (Ei[(Ei.WeekendRange = 9)] = 'WeekendRange'),
        (Ei[(Ei.DateFormat = 10)] = 'DateFormat'),
        (Ei[(Ei.TimeFormat = 11)] = 'TimeFormat'),
        (Ei[(Ei.DateTimeFormat = 12)] = 'DateTimeFormat'),
        (Ei[(Ei.NumberSymbols = 13)] = 'NumberSymbols'),
        (Ei[(Ei.NumberFormats = 14)] = 'NumberFormats'),
        (Ei[(Ei.CurrencyCode = 15)] = 'CurrencyCode'),
        (Ei[(Ei.CurrencySymbol = 16)] = 'CurrencySymbol'),
        (Ei[(Ei.CurrencyName = 17)] = 'CurrencyName'),
        (Ei[(Ei.Currencies = 18)] = 'Currencies'),
        (Ei[(Ei.Directionality = 19)] = 'Directionality'),
        (Ei[(Ei.PluralCase = 20)] = 'PluralCase'),
        (Ei[(Ei.ExtraData = 21)] = 'ExtraData'),
        Ei
      ))();
      const Np = 'en-US';
      let Qy = Np;
      function IC(r, s, a, u, f) {
        if (((r = ue(r)), Array.isArray(r))) for (let y = 0; y < r.length; y++) IC(r[y], s, a, u, f);
        else {
          const y = oe(),
            S = bn();
          let O = lh(r) ? r : ue(r.provide),
            V = Ym(r);
          const ne = M(),
            ve = 1048575 & ne.providerIndexes,
            tt = ne.directiveStart,
            Tt = ne.providerIndexes >> 20;
          if (lh(r) || !r.multi) {
            const $t = new gr(V, f, yp),
              gn = Mg(O, s, f ? ve : ve + Tt, tt);
            -1 === gn
              ? (On(Ae(ne, S), y, O),
                RC(y, r, s.length),
                s.push(O),
                ne.directiveStart++,
                ne.directiveEnd++,
                f && (ne.providerIndexes += 1048576),
                a.push($t),
                S.push($t))
              : ((a[gn] = $t), (S[gn] = $t));
          } else {
            const $t = Mg(O, s, ve + Tt, tt),
              gn = Mg(O, s, ve, ve + Tt),
              Rn = $t >= 0 && a[$t],
              jn = gn >= 0 && a[gn];
            if ((f && !jn) || (!f && !Rn)) {
              On(Ae(ne, S), y, O);
              const ri = (function Tc(r, s, a, u, f) {
                const y = new gr(r, a, yp);
                return (y.multi = []), (y.index = s), (y.componentProviders = 0), eD(y, f, u && !a), y;
              })(f ? nD : tD, a.length, f, u, V);
              !f && jn && (a[gn].providerFactory = ri),
                RC(y, r, s.length, 0),
                s.push(O),
                ne.directiveStart++,
                ne.directiveEnd++,
                f && (ne.providerIndexes += 1048576),
                a.push(ri),
                S.push(ri);
            } else RC(y, r, $t > -1 ? $t : gn, eD(a[f ? gn : $t], V, !f && u));
            !f && u && jn && a[gn].componentProviders++;
          }
        }
      }
      function RC(r, s, a, u) {
        const f = lh(s),
          y = (function qE(r) {
            return !!r.useClass;
          })(s);
        if (f || y) {
          const V = (y ? ue(s.useClass) : s).prototype.ngOnDestroy;
          if (V) {
            const ne = r.destroyHooks || (r.destroyHooks = []);
            if (!f && s.multi) {
              const ve = ne.indexOf(a);
              -1 === ve ? ne.push(a, [u, V]) : ne[ve + 1].push(u, V);
            } else ne.push(a, V);
          }
        }
      }
      function eD(r, s, a) {
        return a && r.componentProviders++, r.multi.push(s) - 1;
      }
      function Mg(r, s, a, u) {
        for (let f = a; f < u; f++) if (s[f] === r) return f;
        return -1;
      }
      function tD(r, s, a, u) {
        return Ro(this.multi, []);
      }
      function nD(r, s, a, u) {
        const f = this.multi;
        let y;
        if (this.providerFactory) {
          const S = this.providerFactory.componentProviders,
            O = Bs(a, a[1], this.providerFactory.index, u);
          (y = O.slice(0, S)), Ro(f, y);
          for (let V = S; V < O.length; V++) y.push(O[V]);
        } else (y = []), Ro(f, y);
        return y;
      }
      function Ro(r, s) {
        for (let a = 0; a < r.length; a++) s.push((0, r[a])());
        return s;
      }
      function $p(r, s = []) {
        return (a) => {
          a.providersResolver = (u, f) =>
            (function KS(r, s, a) {
              const u = oe();
              if (u.firstCreatePass) {
                const f = nr(r);
                IC(a, u.data, u.blueprint, f, !0), IC(s, u.data, u.blueprint, f, !1);
              }
            })(u, f ? f(r) : r, s);
        };
      }
      class kC {}
      class sD {
        resolveComponentFactory(s) {
          throw (function iD(r) {
            const s = Error(`No component factory found for ${Fe(r)}. Did you add it to @NgModule.entryComponents?`);
            return (s.ngComponent = r), s;
          })(s);
        }
      }
      let Wp = (() => {
        class r {}
        return (r.NULL = new sD()), r;
      })();
      function oD() {
        return hf(M(), bn());
      }
      function hf(r, s) {
        return new $o(ke(r, s));
      }
      let $o = (() => {
        class r {
          constructor(a) {
            this.nativeElement = a;
          }
        }
        return (r.__NG_ELEMENT_ID__ = oD), r;
      })();
      function Sg(r) {
        return r instanceof $o ? r.nativeElement : r;
      }
      class PC {}
      let cv = (() => {
          class r {}
          return (
            (r.__NG_ELEMENT_ID__ = () =>
              (function uv() {
                const r = bn(),
                  a = Sn(M().index, r);
                return (function Ag(r) {
                  return r[11];
                })(ji(a) ? a : r);
              })()),
            r
          );
        })(),
        dv = (() => {
          class r {}
          return (r.ɵprov = bt({ token: r, providedIn: 'root', factory: () => null })), r;
        })();
      class FC {
        constructor(s) {
          (this.full = s),
            (this.major = s.split('.')[0]),
            (this.minor = s.split('.')[1]),
            (this.patch = s.split('.').slice(2).join('.'));
        }
      }
      const LC = new FC('13.1.3'),
        hv = {};
      function Tg(r, s, a, u, f = !1) {
        for (; null !== a; ) {
          const y = s[a.index];
          if ((null !== y && u.push(Ni(y)), tr(y)))
            for (let O = 10; O < y.length; O++) {
              const V = y[O],
                ne = V[1].firstChild;
              null !== ne && Tg(V[1], V, ne, u);
            }
          const S = a.type;
          if (8 & S) Tg(r, s, a.child, u);
          else if (32 & S) {
            const O = Lt(a, s);
            let V;
            for (; (V = O()); ) u.push(V);
          } else if (16 & S) {
            const O = eh(s, a);
            if (Array.isArray(O)) u.push(...O);
            else {
              const V = Kn(s[16]);
              Tg(V[1], V, O, u, !0);
            }
          }
          a = f ? a.projectionNext : a.next;
        }
        return u;
      }
      class Yp {
        constructor(s, a) {
          (this._lView = s),
            (this._cdRefInjectingView = a),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const s = this._lView,
            a = s[1];
          return Tg(a, s, a.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(s) {
          this._lView[8] = s;
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const s = this._lView[3];
            if (tr(s)) {
              const a = s[8],
                u = a ? a.indexOf(this) : -1;
              u > -1 && (to(s, u), sa(a, u));
            }
            this._attachedToViewContainer = !1;
          }
          dr(this._lView[1], this._lView);
        }
        onDestroy(s) {
          B_(this._lView[1], this._lView, null, s);
        }
        markForCheck() {
          G_(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          Hm(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function Xh(r, s, a) {
            zn(!0);
            try {
              Hm(r, s, a);
            } finally {
              zn(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef() {
          if (this._appRef) throw new et(902, '');
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function Xd(r, s) {
              th(r, s, s[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(s) {
          if (this._attachedToViewContainer) throw new et(902, '');
          this._appRef = s;
        }
      }
      class Kp extends Yp {
        constructor(s) {
          super(s), (this._view = s);
        }
        detectChanges() {
          r0(this._view);
        }
        checkNoChanges() {
          !(function Jh(r) {
            zn(!0);
            try {
              r0(r);
            } finally {
              zn(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      class fv extends Wp {
        constructor(s) {
          super(), (this.ngModule = s);
        }
        resolveComponentFactory(s) {
          const a = Pt(s);
          return new pv(a, this.ngModule);
        }
      }
      function qp(r) {
        const s = [];
        for (let a in r) r.hasOwnProperty(a) && s.push({ propName: r[a], templateName: a });
        return s;
      }
      const lD = new Zr('SCHEDULER_TOKEN', { providedIn: 'root', factory: () => Jc });
      class pv extends kC {
        constructor(s, a) {
          super(),
            (this.componentDef = s),
            (this.ngModule = a),
            (this.componentType = s.type),
            (this.selector = (function qf(r) {
              return r.map(Lb).join(',');
            })(s.selectors)),
            (this.ngContentSelectors = s.ngContentSelectors ? s.ngContentSelectors : []),
            (this.isBoundToModule = !!a);
        }
        get inputs() {
          return qp(this.componentDef.inputs);
        }
        get outputs() {
          return qp(this.componentDef.outputs);
        }
        create(s, a, u, f) {
          const y = (f = f || this.ngModule)
              ? (function cD(r, s) {
                  return {
                    get: (a, u, f) => {
                      const y = r.get(a, hv, f);
                      return y !== hv || u === hv ? y : s.get(a, u, f);
                    },
                  };
                })(s, f.injector)
              : s,
            S = y.get(PC, is),
            O = y.get(dv, null),
            V = S.createRenderer(null, this.componentDef),
            ne = this.componentDef.selectors[0][0] || 'div',
            ve = u
              ? (function Bm(r, s, a) {
                  if (Qi(r)) return r.selectRootElement(s, a === an.ShadowDom);
                  let u = 'string' == typeof s ? r.querySelector(s) : s;
                  return (u.textContent = ''), u;
                })(V, u, this.componentDef.encapsulation)
              : zl(
                  S.createRenderer(null, this.componentDef),
                  ne,
                  (function NC(r) {
                    const s = r.toLowerCase();
                    return 'svg' === s ? Zi : 'math' === s ? 'http://www.w3.org/1998/MathML/' : null;
                  })(ne)
                ),
            tt = this.componentDef.onPush ? 576 : 528,
            Tt = (function hp(r, s) {
              return { components: [], scheduler: r || Jc, clean: s0, playerHandler: s || null, flags: 0 };
            })(),
            $t = tp(0, null, null, 1, 0, null, null, null, null, null),
            gn = Ms(null, $t, Tt, tt, null, null, S, V, O, y);
          let Rn, jn;
          Lo(gn);
          try {
            const ri = (function m0(r, s, a, u, f, y) {
              const S = a[1];
              a[20] = r;
              const V = Ga(S, 20, 2, '#host', null),
                ne = (V.mergedAttrs = s.hostAttrs);
              null !== ne &&
                (ef(V, ne, !0),
                null !== r &&
                  (Za(f, r, ne), null !== V.classes && Tm(f, r, V.classes), null !== V.styles && E_(f, r, V.styles)));
              const ve = u.createRenderer(r, s),
                tt = Ms(a, F_(s), null, s.onPush ? 64 : 16, a[20], V, u, ve, y || null, null);
              return (
                S.firstCreatePass && (On(Ae(V, a), S, s.type), Wb(S, V), np(V, a.length, 1)), Qh(a, tt), (a[20] = tt)
              );
            })(ve, this.componentDef, gn, S, V);
            if (ve)
              if (u) Za(V, ve, ['ng-version', LC.full]);
              else {
                const { attrs: wn, classes: bi } = (function I_(r) {
                  const s = [],
                    a = [];
                  let u = 1,
                    f = 2;
                  for (; u < r.length; ) {
                    let y = r[u];
                    if ('string' == typeof y) 2 === f ? '' !== y && s.push(y, r[++u]) : 8 === f && a.push(y);
                    else {
                      if (!_o(f)) break;
                      f = y;
                    }
                    u++;
                  }
                  return { attrs: s, classes: a };
                })(this.componentDef.selectors[0]);
                wn && Za(V, ve, wn), bi && bi.length > 0 && Tm(V, ve, bi.join(' '));
              }
            if (((jn = tn($t, 20)), void 0 !== a)) {
              const wn = (jn.projection = []);
              for (let bi = 0; bi < this.ngContentSelectors.length; bi++) {
                const rr = a[bi];
                wn.push(null != rr ? Array.from(rr) : null);
              }
            }
            (Rn = (function Jm(r, s, a, u, f) {
              const y = a[1],
                S = (function GE(r, s, a) {
                  const u = M();
                  r.firstCreatePass &&
                    (a.providersResolver && a.providersResolver(a), Kb(r, u, s, Ec(r, s, 1, null), a));
                  const f = Bs(s, r, u.directiveStart, u);
                  Hs(f, s);
                  const y = ke(u, s);
                  return y && Hs(y, s), f;
                })(y, a, s);
              if ((u.components.push(S), (r[8] = S), f && f.forEach((V) => V(S, s)), s.contentQueries)) {
                const V = M();
                s.contentQueries(1, S, V.directiveStart);
              }
              const O = M();
              return (
                !y.firstCreatePass ||
                  (null === s.hostBindings && null === s.hostAttrs) ||
                  (ir(O.index), $b(a[1], O, 0, O.directiveStart, O.directiveEnd, s), U_(s, S)),
                S
              );
            })(ri, this.componentDef, gn, Tt, [iy])),
              Nu($t, gn, null);
          } finally {
            Vn();
          }
          return new mv(this.componentType, Rn, hf(jn, gn), gn, jn);
        }
      }
      class mv extends class lv {} {
        constructor(s, a, u, f, y) {
          super(),
            (this.location = u),
            (this._rootLView = f),
            (this._tNode = y),
            (this.instance = a),
            (this.hostView = this.changeDetectorRef = new Kp(f)),
            (this.componentType = s);
        }
        get injector() {
          return new tc(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(s) {
          this.hostView.onDestroy(s);
        }
      }
      class Ad {}
      class gv {}
      const lu = new Map();
      class _v extends Ad {
        constructor(s, a) {
          super(),
            (this._parent = a),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new fv(this));
          const u = Gn(s);
          (this._bootstrapComponents = ua(u.bootstrap)),
            (this._r3Injector = X_(
              s,
              a,
              [
                { provide: Ad, useValue: this },
                { provide: Wp, useValue: this.componentFactoryResolver },
              ],
              Fe(s)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(s));
        }
        get(s, a = za.THROW_IF_NOT_FOUND, u = ae.Default) {
          return s === za || s === Ad || s === K_ ? this : this._r3Injector.get(s, a, u);
        }
        destroy() {
          const s = this._r3Injector;
          !s.destroyed && s.destroy(), this.destroyCbs.forEach((a) => a()), (this.destroyCbs = null);
        }
        onDestroy(s) {
          this.destroyCbs.push(s);
        }
      }
      class Zp extends gv {
        constructor(s) {
          super(),
            (this.moduleType = s),
            null !== Gn(s) &&
              (function VC(r) {
                const s = new Set();
                !(function a(u) {
                  const f = Gn(u, !0),
                    y = f.id;
                  null !== y &&
                    ((function Ig(r, s, a) {
                      if (s && s !== a)
                        throw new Error(`Duplicate module registered for ${r} - ${Fe(s)} vs ${Fe(s.name)}`);
                    })(y, lu.get(y), u),
                    lu.set(y, u));
                  const S = ua(f.imports);
                  for (const O of S) s.has(O) || (s.add(O), a(O));
                })(r);
              })(s);
        }
        create(s) {
          return new _v(this.moduleType, s);
        }
      }
      function UC(r, s, a, u) {
        return GC(bn(), ni(), r, s, a, u);
      }
      function GC(r, s, a, u, f, y) {
        const S = s + a;
        return io(r, S, f)
          ? (function Kl(r, s, a) {
              return (r[s] = a);
            })(r, S + 1, y ? u.call(y, f) : u(f))
          : (function Td(r, s) {
              const a = r[s];
              return a === Oi ? void 0 : a;
            })(r, S + 1);
      }
      function KC(r, s) {
        const a = oe();
        let u;
        const f = r + 20;
        a.firstCreatePass
          ? ((u = (function gD(r, s) {
              if (s)
                for (let a = s.length - 1; a >= 0; a--) {
                  const u = s[a];
                  if (r === u.name) return u;
                }
            })(s, a.pipeRegistry)),
            (a.data[f] = u),
            u.onDestroy && (a.destroyHooks || (a.destroyHooks = [])).push(f, u.onDestroy))
          : (u = a.data[f]);
        const y = u.factory || (u.factory = cs(u.type)),
          S = Se(yp);
        try {
          const O = Bo(!1),
            V = y();
          return (
            Bo(O),
            (function lx(r, s, a, u) {
              a >= r.data.length && ((r.data[a] = null), (r.blueprint[a] = null)), (s[a] = u);
            })(a, bn(), f, V),
            V
          );
        } finally {
          Se(S);
        }
      }
      function qC(r, s, a) {
        const u = r + 20,
          f = bn(),
          y = yn(f, u);
        return (function ff(r, s) {
          return r[1].data[s].pure;
        })(f, u)
          ? GC(f, ni(), s, y.transform, a, y)
          : y.transform(a);
      }
      function wv(r) {
        return (s) => {
          setTimeout(r, void 0, s);
        };
      }
      const cu = class Cv extends h.x {
        constructor(s = !1) {
          super(), (this.__isAsync = s);
        }
        emit(s) {
          super.next(s);
        }
        subscribe(s, a, u) {
          var f, y, S;
          let O = s,
            V = a || (() => null),
            ne = u;
          if (s && 'object' == typeof s) {
            const tt = s;
            (O = null === (f = tt.next) || void 0 === f ? void 0 : f.bind(tt)),
              (V = null === (y = tt.error) || void 0 === y ? void 0 : y.bind(tt)),
              (ne = null === (S = tt.complete) || void 0 === S ? void 0 : S.bind(tt));
          }
          this.__isAsync && ((V = wv(V)), O && (O = wv(O)), ne && (ne = wv(ne)));
          const ve = super.subscribe({ next: O, error: V, complete: ne });
          return s instanceof m.w0 && s.add(ve), ve;
        }
      };
      function vD() {
        return this._results[yd()]();
      }
      class Qp {
        constructor(s = !1) {
          (this._emitDistinctChangesOnly = s),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const a = yd(),
            u = Qp.prototype;
          u[a] || (u[a] = vD);
        }
        get changes() {
          return this._changes || (this._changes = new cu());
        }
        get(s) {
          return this._results[s];
        }
        map(s) {
          return this._results.map(s);
        }
        filter(s) {
          return this._results.filter(s);
        }
        find(s) {
          return this._results.find(s);
        }
        reduce(s, a) {
          return this._results.reduce(s, a);
        }
        forEach(s) {
          this._results.forEach(s);
        }
        some(s) {
          return this._results.some(s);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(s, a) {
          const u = this;
          u.dirty = !1;
          const f = co(s);
          (this._changesDetected = !(function Nc(r, s, a) {
            if (r.length !== s.length) return !1;
            for (let u = 0; u < r.length; u++) {
              let f = r[u],
                y = s[u];
              if ((a && ((f = a(f)), (y = a(y))), y !== f)) return !1;
            }
            return !0;
          })(u._results, f, a)) &&
            ((u._results = f), (u.length = f.length), (u.last = f[this.length - 1]), (u.first = f[0]));
        }
        notifyOnChanges() {
          this._changes && (this._changesDetected || !this._emitDistinctChangesOnly) && this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      Symbol;
      let pf = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = JC), r;
      })();
      const QC = pf,
        XC = class extends QC {
          constructor(s, a, u) {
            super(), (this._declarationLView = s), (this._declarationTContainer = a), (this.elementRef = u);
          }
          createEmbeddedView(s) {
            const a = this._declarationTContainer.tViews,
              u = Ms(this._declarationLView, a, s, 16, null, a.declTNode, null, null, null, null);
            u[17] = this._declarationLView[this._declarationTContainer.index];
            const y = this._declarationLView[19];
            return null !== y && (u[19] = y.createEmbeddedView(a)), Nu(a, u, s), new Yp(u);
          }
        };
      function JC() {
        return Ev(M(), bn());
      }
      function Ev(r, s) {
        return 4 & r.type ? new XC(s, r, hf(r, s)) : null;
      }
      let Pg = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = QS), r;
      })();
      function QS() {
        return Dv(M(), bn());
      }
      const XS = Pg,
        Fg = class extends XS {
          constructor(s, a, u) {
            super(), (this._lContainer = s), (this._hostTNode = a), (this._hostLView = u);
          }
          get element() {
            return hf(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new tc(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const s = nn(this._hostTNode, this._hostLView);
            if (ec(s)) {
              const a = Qo(s, this._hostLView),
                u = ra(s);
              return new tc(a[1].data[u + 8], a);
            }
            return new tc(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(s) {
            const a = bD(this._lContainer);
            return (null !== a && a[s]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(s, a, u) {
            const f = s.createEmbeddedView(a || {});
            return this.insert(f, u), f;
          }
          createComponent(s, a, u, f, y) {
            const S =
              s &&
              !(function ul(r) {
                return 'function' == typeof r;
              })(s);
            let O;
            if (S) O = a;
            else {
              const tt = a || {};
              (O = tt.index), (u = tt.injector), (f = tt.projectableNodes), (y = tt.ngModuleRef);
            }
            const V = S ? s : new pv(Pt(s)),
              ne = u || this.parentInjector;
            if (!y && null == V.ngModule && ne) {
              const tt = ne.get(Ad, null);
              tt && (y = tt);
            }
            const ve = V.create(ne, f, void 0, y);
            return this.insert(ve.hostView, O), ve;
          }
          insert(s, a) {
            const u = s._lView,
              f = u[1];
            if (
              (function ki(r) {
                return tr(r[3]);
              })(u)
            ) {
              const ve = this.indexOf(s);
              if (-1 !== ve) this.detach(ve);
              else {
                const tt = u[3],
                  Tt = new Fg(tt, tt[6], tt[3]);
                Tt.detach(Tt.indexOf(s));
              }
            }
            const y = this._adjustIndex(a),
              S = this._lContainer;
            !(function eu(r, s, a, u) {
              const f = 10 + u,
                y = a.length;
              u > 0 && (a[f - 1][4] = s),
                u < y - 10 ? ((s[4] = a[f]), Xa(a, 10 + u, s)) : (a.push(s), (s[4] = null)),
                (s[3] = a);
              const S = s[17];
              null !== S &&
                a !== S &&
                (function Jd(r, s) {
                  const a = r[9];
                  s[16] !== s[3][3][16] && (r[2] = !0), null === a ? (r[9] = [s]) : a.push(s);
                })(S, s);
              const O = s[19];
              null !== O && O.insertView(r), (s[2] |= 128);
            })(f, u, S, y);
            const O = fd(y, S),
              V = u[11],
              ne = $f(V, S[7]);
            return (
              null !== ne &&
                (function dd(r, s, a, u, f, y) {
                  (u[0] = f), (u[6] = s), th(r, u, a, 1, f, y);
                })(f, S[6], V, u, ne, O),
              s.attachToViewContainerRef(),
              Xa(xv(S), y, s),
              s
            );
          }
          move(s, a) {
            return this.insert(s, a);
          }
          indexOf(s) {
            const a = bD(this._lContainer);
            return null !== a ? a.indexOf(s) : -1;
          }
          remove(s) {
            const a = this._adjustIndex(s, -1),
              u = to(this._lContainer, a);
            u && (sa(xv(this._lContainer), a), dr(u[1], u));
          }
          detach(s) {
            const a = this._adjustIndex(s, -1),
              u = to(this._lContainer, a);
            return u && null != sa(xv(this._lContainer), a) ? new Yp(u) : null;
          }
          _adjustIndex(s, a = 0) {
            return null == s ? this.length + a : s;
          }
        };
      function bD(r) {
        return r[8];
      }
      function xv(r) {
        return r[8] || (r[8] = []);
      }
      function Dv(r, s) {
        let a;
        const u = s[r.index];
        if (tr(u)) a = u;
        else {
          let f;
          if (8 & r.type) f = Ni(u);
          else {
            const y = s[11];
            f = y.createComment('');
            const S = ke(r, s);
            $r(
              y,
              $f(y, S),
              f,
              (function Dm(r, s) {
                return Qi(r) ? r.nextSibling(s) : s.nextSibling;
              })(y, S),
              !1
            );
          }
          (s[r.index] = a = Qb(u, s, f, r)), Qh(s, a);
        }
        return new Fg(a, r, s);
      }
      class vh {
        constructor(s) {
          (this.queryList = s), (this.matches = null);
        }
        clone() {
          return new vh(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class nw {
        constructor(s = []) {
          this.queries = s;
        }
        createEmbeddedView(s) {
          const a = s.queries;
          if (null !== a) {
            const u = null !== s.contentQueries ? s.contentQueries[0] : a.length,
              f = [];
            for (let y = 0; y < u; y++) {
              const S = a.getByIndex(y);
              f.push(this.queries[S.indexInDeclarationView].clone());
            }
            return new nw(f);
          }
          return null;
        }
        insertView(s) {
          this.dirtyQueriesWithMatches(s);
        }
        detachView(s) {
          this.dirtyQueriesWithMatches(s);
        }
        dirtyQueriesWithMatches(s) {
          for (let a = 0; a < this.queries.length; a++) null !== Ng(s, a).matches && this.queries[a].setDirty();
        }
      }
      class Lg {
        constructor(s, a, u = null) {
          (this.predicate = s), (this.flags = a), (this.read = u);
        }
      }
      class iw {
        constructor(s = []) {
          this.queries = s;
        }
        elementStart(s, a) {
          for (let u = 0; u < this.queries.length; u++) this.queries[u].elementStart(s, a);
        }
        elementEnd(s) {
          for (let a = 0; a < this.queries.length; a++) this.queries[a].elementEnd(s);
        }
        embeddedTView(s) {
          let a = null;
          for (let u = 0; u < this.length; u++) {
            const f = null !== a ? a.length : 0,
              y = this.getByIndex(u).embeddedTView(s, f);
            y && ((y.indexInDeclarationView = u), null !== a ? a.push(y) : (a = [y]));
          }
          return null !== a ? new iw(a) : null;
        }
        template(s, a) {
          for (let u = 0; u < this.queries.length; u++) this.queries[u].template(s, a);
        }
        getByIndex(s) {
          return this.queries[s];
        }
        get length() {
          return this.queries.length;
        }
        track(s) {
          this.queries.push(s);
        }
      }
      class Mv {
        constructor(s, a = -1) {
          (this.metadata = s),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = a);
        }
        elementStart(s, a) {
          this.isApplyingToNode(a) && this.matchTNode(s, a);
        }
        elementEnd(s) {
          this._declarationNodeIndex === s.index && (this._appliesToNextNode = !1);
        }
        template(s, a) {
          this.elementStart(s, a);
        }
        embeddedTView(s, a) {
          return this.isApplyingToNode(s)
            ? ((this.crossesNgTemplate = !0), this.addMatch(-s.index, a), new Mv(this.metadata))
            : null;
        }
        isApplyingToNode(s) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const a = this._declarationNodeIndex;
            let u = s.parent;
            for (; null !== u && 8 & u.type && u.index !== a; ) u = u.parent;
            return a === (null !== u ? u.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(s, a) {
          const u = this.metadata.predicate;
          if (Array.isArray(u))
            for (let f = 0; f < u.length; f++) {
              const y = u[f];
              this.matchTNodeWithReadOption(s, a, JS(a, y)), this.matchTNodeWithReadOption(s, a, Eo(a, s, y, !1, !1));
            }
          else
            u === pf
              ? 4 & a.type && this.matchTNodeWithReadOption(s, a, -1)
              : this.matchTNodeWithReadOption(s, a, Eo(a, s, u, !1, !1));
        }
        matchTNodeWithReadOption(s, a, u) {
          if (null !== u) {
            const f = this.metadata.read;
            if (null !== f)
              if (f === $o || f === Pg || (f === pf && 4 & a.type)) this.addMatch(a.index, -2);
              else {
                const y = Eo(a, s, f, !1, !1);
                null !== y && this.addMatch(a.index, y);
              }
            else this.addMatch(a.index, u);
          }
        }
        addMatch(s, a) {
          null === this.matches ? (this.matches = [s, a]) : this.matches.push(s, a);
        }
      }
      function JS(r, s) {
        const a = r.localNames;
        if (null !== a) for (let u = 0; u < a.length; u += 2) if (a[u] === s) return a[u + 1];
        return null;
      }
      function ED(r, s, a, u) {
        return -1 === a
          ? (function wD(r, s) {
              return 11 & r.type ? hf(r, s) : 4 & r.type ? Ev(r, s) : null;
            })(s, r)
          : -2 === a
          ? (function eA(r, s, a) {
              return a === $o ? hf(s, r) : a === pf ? Ev(s, r) : a === Pg ? Dv(s, r) : void 0;
            })(r, s, u)
          : Bs(r, r[1], a, s);
      }
      function xD(r, s, a, u) {
        const f = s[19].queries[u];
        if (null === f.matches) {
          const y = r.data,
            S = a.matches,
            O = [];
          for (let V = 0; V < S.length; V += 2) {
            const ne = S[V];
            O.push(ne < 0 ? null : ED(s, y[ne], S[V + 1], a.metadata.read));
          }
          f.matches = O;
        }
        return f.matches;
      }
      function Sv(r, s, a, u) {
        const f = r.queries.getByIndex(a),
          y = f.matches;
        if (null !== y) {
          const S = xD(r, s, f, a);
          for (let O = 0; O < y.length; O += 2) {
            const V = y[O];
            if (V > 0) u.push(S[O / 2]);
            else {
              const ne = y[O + 1],
                ve = s[-V];
              for (let tt = 10; tt < ve.length; tt++) {
                const Tt = ve[tt];
                Tt[17] === Tt[3] && Sv(Tt[1], Tt, ne, u);
              }
              if (null !== ve[9]) {
                const tt = ve[9];
                for (let Tt = 0; Tt < tt.length; Tt++) {
                  const $t = tt[Tt];
                  Sv($t[1], $t, ne, u);
                }
              }
            }
          }
        }
        return u;
      }
      function DD(r) {
        const s = bn(),
          a = oe(),
          u = Kr();
        hs(u + 1);
        const f = Ng(a, u);
        if (r.dirty && di(s) === (2 == (2 & f.metadata.flags))) {
          if (null === f.matches) r.reset([]);
          else {
            const y = f.crossesNgTemplate ? Sv(a, s, u, []) : xD(a, s, f, u);
            r.reset(y, Sg), r.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function MD(r, s, a) {
        const u = oe();
        u.firstCreatePass && (rw(u, new Lg(r, s, a), -1), 2 == (2 & s) && (u.staticViewQueries = !0)), Xp(u, bn(), s);
      }
      function SD(r, s, a, u) {
        const f = oe();
        if (f.firstCreatePass) {
          const y = M();
          rw(f, new Lg(s, a, u), y.index),
            (function Av(r, s) {
              const a = r.contentQueries || (r.contentQueries = []);
              s !== (a.length ? a[a.length - 1] : -1) && a.push(r.queries.length - 1, s);
            })(f, r),
            2 == (2 & a) && (f.staticContentQueries = !0);
        }
        Xp(f, bn(), a);
      }
      function AD() {
        return (function tA(r, s) {
          return r[19].queries[s].queryList;
        })(bn(), Kr());
      }
      function Xp(r, s, a) {
        const u = new Qp(4 == (4 & a));
        B_(r, s, u, u.destroy), null === s[19] && (s[19] = new nw()), s[19].queries.push(new vh(u));
      }
      function rw(r, s, a) {
        null === r.queries && (r.queries = new iw()), r.queries.track(new Mv(s, a));
      }
      function Ng(r, s) {
        return r.queries.getByIndex(s);
      }
      function Bg(r, s) {
        return Ev(r, s);
      }
      function Yg(...r) {}
      const Nv = new Zr('Application Initializer');
      let gf = (() => {
        class r {
          constructor(a) {
            (this.appInits = a),
              (this.resolve = Yg),
              (this.reject = Yg),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((u, f) => {
                (this.resolve = u), (this.reject = f);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const a = [],
              u = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let f = 0; f < this.appInits.length; f++) {
                const y = this.appInits[f]();
                if (My(y)) a.push(y);
                else if (N0(y)) {
                  const S = new Promise((O, V) => {
                    y.subscribe({ complete: O, error: V });
                  });
                  a.push(S);
                }
              }
            Promise.all(a)
              .then(() => {
                u();
              })
              .catch((f) => {
                this.reject(f);
              }),
              0 === a.length && u(),
              (this.initialized = !0);
          }
        }
        return (
          (r.ɵfac = function (a) {
            return new (a || r)(Bt(Nv, 8));
          }),
          (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      const Rd = new Zr('AppId'),
        VD = {
          provide: Rd,
          useFactory: function BD() {
            return `${Kg()}${Kg()}${Kg()}`;
          },
          deps: [],
        };
      function Kg() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Bv = new Zr('Platform Initializer'),
        xw = new Zr('Platform ID'),
        Dw = new Zr('appBootstrapListener');
      let qg = (() => {
        class r {
          log(a) {
            console.log(a);
          }
          warn(a) {
            console.warn(a);
          }
        }
        return (
          (r.ɵfac = function (a) {
            return new (a || r)();
          }),
          (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      const _f = new Zr('LocaleId'),
        Mw = new Zr('DefaultCurrencyCode');
      class UD {
        constructor(s, a) {
          (this.ngModuleFactory = s), (this.componentFactories = a);
        }
      }
      let Vv = (() => {
        class r {
          compileModuleSync(a) {
            return new Zp(a);
          }
          compileModuleAsync(a) {
            return Promise.resolve(this.compileModuleSync(a));
          }
          compileModuleAndAllComponentsSync(a) {
            const u = this.compileModuleSync(a),
              y = ua(Gn(a).declarations).reduce((S, O) => {
                const V = Pt(O);
                return V && S.push(new pv(V)), S;
              }, []);
            return new UD(u, y);
          }
          compileModuleAndAllComponentsAsync(a) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(a));
          }
          clearCache() {}
          clearCacheFor(a) {}
          getModuleId(a) {}
        }
        return (
          (r.ɵfac = function (a) {
            return new (a || r)();
          }),
          (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      const jD = (() => Promise.resolve(0))();
      function Uv(r) {
        'undefined' == typeof Zone
          ? jD.then(() => {
              r && r.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', r);
      }
      class Al {
        constructor({
          enableLongStackTrace: s = !1,
          shouldCoalesceEventChangeDetection: a = !1,
          shouldCoalesceRunChangeDetection: u = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new cu(!1)),
            (this.onMicrotaskEmpty = new cu(!1)),
            (this.onStable = new cu(!1)),
            (this.onError = new cu(!1)),
            'undefined' == typeof Zone)
          )
            throw new Error('In this configuration Angular requires Zone.js');
          Zone.assertZonePatched();
          const f = this;
          (f._nesting = 0),
            (f._outer = f._inner = Zone.current),
            Zone.TaskTrackingZoneSpec && (f._inner = f._inner.fork(new Zone.TaskTrackingZoneSpec())),
            s && Zone.longStackTraceZoneSpec && (f._inner = f._inner.fork(Zone.longStackTraceZoneSpec)),
            (f.shouldCoalesceEventChangeDetection = !u && a),
            (f.shouldCoalesceRunChangeDetection = u),
            (f.lastRequestAnimationFrameId = -1),
            (f.nativeRequestAnimationFrame = (function Aw() {
              let r = Hn.requestAnimationFrame,
                s = Hn.cancelAnimationFrame;
              if ('undefined' != typeof Zone && r && s) {
                const a = r[Zone.__symbol__('OriginalDelegate')];
                a && (r = a);
                const u = s[Zone.__symbol__('OriginalDelegate')];
                u && (s = u);
              }
              return { nativeRequestAnimationFrame: r, nativeCancelAnimationFrame: s };
            })().nativeRequestAnimationFrame),
            (function Iw(r) {
              const s = () => {
                !(function Tw(r) {
                  r.isCheckStableRunning ||
                    -1 !== r.lastRequestAnimationFrameId ||
                    ((r.lastRequestAnimationFrameId = r.nativeRequestAnimationFrame.call(Hn, () => {
                      r.fakeTopEventTask ||
                        (r.fakeTopEventTask = Zone.root.scheduleEventTask(
                          'fakeTopEventTask',
                          () => {
                            (r.lastRequestAnimationFrameId = -1),
                              Ch(r),
                              (r.isCheckStableRunning = !0),
                              kd(r),
                              (r.isCheckStableRunning = !1);
                          },
                          void 0,
                          () => {},
                          () => {}
                        )),
                        r.fakeTopEventTask.invoke();
                    })),
                    Ch(r));
                })(r);
              };
              r._inner = r._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (a, u, f, y, S, O) => {
                  try {
                    return yf(r), a.invokeTask(f, y, S, O);
                  } finally {
                    ((r.shouldCoalesceEventChangeDetection && 'eventTask' === y.type) ||
                      r.shouldCoalesceRunChangeDetection) &&
                      s(),
                      ma(r);
                  }
                },
                onInvoke: (a, u, f, y, S, O, V) => {
                  try {
                    return yf(r), a.invoke(f, y, S, O, V);
                  } finally {
                    r.shouldCoalesceRunChangeDetection && s(), ma(r);
                  }
                },
                onHasTask: (a, u, f, y) => {
                  a.hasTask(f, y),
                    u === f &&
                      ('microTask' == y.change
                        ? ((r._hasPendingMicrotasks = y.microTask), Ch(r), kd(r))
                        : 'macroTask' == y.change && (r.hasPendingMacrotasks = y.macroTask));
                },
                onHandleError: (a, u, f, y) => (a.handleError(f, y), r.runOutsideAngular(() => r.onError.emit(y)), !1),
              });
            })(f);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!Al.isInAngularZone()) throw new Error('Expected to be in Angular Zone, but it is not!');
        }
        static assertNotInAngularZone() {
          if (Al.isInAngularZone()) throw new Error('Expected to not be in Angular Zone, but it is!');
        }
        run(s, a, u) {
          return this._inner.run(s, a, u);
        }
        runTask(s, a, u, f) {
          const y = this._inner,
            S = y.scheduleEventTask('NgZoneEvent: ' + f, s, HD, Yg, Yg);
          try {
            return y.runTask(S, a, u);
          } finally {
            y.cancelTask(S);
          }
        }
        runGuarded(s, a, u) {
          return this._inner.runGuarded(s, a, u);
        }
        runOutsideAngular(s) {
          return this._outer.run(s);
        }
      }
      const HD = {};
      function kd(r) {
        if (0 == r._nesting && !r.hasPendingMicrotasks && !r.isStable)
          try {
            r._nesting++, r.onMicrotaskEmpty.emit(null);
          } finally {
            if ((r._nesting--, !r.hasPendingMicrotasks))
              try {
                r.runOutsideAngular(() => r.onStable.emit(null));
              } finally {
                r.isStable = !0;
              }
          }
      }
      function Ch(r) {
        r.hasPendingMicrotasks = !!(
          r._hasPendingMicrotasks ||
          ((r.shouldCoalesceEventChangeDetection || r.shouldCoalesceRunChangeDetection) &&
            -1 !== r.lastRequestAnimationFrameId)
        );
      }
      function yf(r) {
        r._nesting++, r.isStable && ((r.isStable = !1), r.onUnstable.emit(null));
      }
      function ma(r) {
        r._nesting--, kd(r);
      }
      class GD {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new cu()),
            (this.onMicrotaskEmpty = new cu()),
            (this.onStable = new cu()),
            (this.onError = new cu());
        }
        run(s, a, u) {
          return s.apply(a, u);
        }
        runGuarded(s, a, u) {
          return s.apply(a, u);
        }
        runOutsideAngular(s) {
          return s();
        }
        runTask(s, a, u, f) {
          return s.apply(a, u);
        }
      }
      let Rw = (() => {
          class r {
            constructor(a) {
              (this._ngZone = a),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                a.run(() => {
                  this.taskTrackingZone = 'undefined' == typeof Zone ? null : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Al.assertNotInAngularZone(),
                        Uv(() => {
                          (this._isZoneStable = !0), this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (this._pendingCount += 1), (this._didWork = !0), this._pendingCount;
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks;
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Uv(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let a = this._callbacks.pop();
                    clearTimeout(a.timeoutId), a.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let a = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (u) => !u.updateCb || !u.updateCb(a) || (clearTimeout(u.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((a) => ({
                    source: a.source,
                    creationLocation: a.creationLocation,
                    data: a.data,
                  }))
                : [];
            }
            addCallback(a, u, f) {
              let y = -1;
              u &&
                u > 0 &&
                (y = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter((S) => S.timeoutId !== y)),
                    a(this._didWork, this.getPendingTasks());
                }, u)),
                this._callbacks.push({ doneCb: a, timeoutId: y, updateCb: f });
            }
            whenStable(a, u, f) {
              if (f && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(a, u, f), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(a, u, f) {
              return [];
            }
          }
          return (
            (r.ɵfac = function (a) {
              return new (a || r)(Bt(Al));
            }),
            (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
            r
          );
        })(),
        kw = (() => {
          class r {
            constructor() {
              (this._applications = new Map()), jv.addToWindow(this);
            }
            registerApplication(a, u) {
              this._applications.set(a, u);
            }
            unregisterApplication(a) {
              this._applications.delete(a);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(a) {
              return this._applications.get(a) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(a, u = !0) {
              return jv.findTestabilityInTree(this, a, u);
            }
          }
          return (
            (r.ɵfac = function (a) {
              return new (a || r)();
            }),
            (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
            r
          );
        })();
      class zD {
        addToWindow(s) {}
        findTestabilityInTree(s, a, u) {
          return null;
        }
      }
      function $D(r) {
        jv = r;
      }
      let ol,
        jv = new zD();
      const uu = new Zr('AllowMultipleToken');
      class Fw {
        constructor(s, a) {
          (this.name = s), (this.token = a);
        }
      }
      function Lw(r, s, a = []) {
        const u = `Platform: ${s}`,
          f = new Zr(u);
        return (y = []) => {
          let S = Nw();
          if (!S || S.injector.get(uu, !1))
            if (r) r(a.concat(y).concat({ provide: f, useValue: !0 }));
            else {
              const O = a.concat(y).concat({ provide: f, useValue: !0 }, { provide: q_, useValue: 'platform' });
              !(function Od(r) {
                if (ol && !ol.destroyed && !ol.injector.get(uu, !1)) throw new et(400, '');
                ol = r.get(Bw);
                const s = r.get(Bv, null);
                s && s.forEach((a) => a());
              })(za.create({ providers: O, name: u }));
            }
          return (function Zg(r) {
            const s = Nw();
            if (!s) throw new et(401, '');
            return s;
          })();
        };
      }
      function Nw() {
        return ol && !ol.destroyed ? ol : null;
      }
      let Bw = (() => {
        class r {
          constructor(a) {
            (this._injector = a), (this._modules = []), (this._destroyListeners = []), (this._destroyed = !1);
          }
          bootstrapModuleFactory(a, u) {
            const O = (function WD(r, s) {
                let a;
                return (
                  (a =
                    'noop' === r
                      ? new GD()
                      : ('zone.js' === r ? void 0 : r) ||
                        new Al({
                          enableLongStackTrace: !1,
                          shouldCoalesceEventChangeDetection: !!(null == s ? void 0 : s.ngZoneEventCoalescing),
                          shouldCoalesceRunChangeDetection: !!(null == s ? void 0 : s.ngZoneRunCoalescing),
                        })),
                  a
                );
              })(u ? u.ngZone : void 0, {
                ngZoneEventCoalescing: (u && u.ngZoneEventCoalescing) || !1,
                ngZoneRunCoalescing: (u && u.ngZoneRunCoalescing) || !1,
              }),
              V = [{ provide: Al, useValue: O }];
            return O.run(() => {
              const ne = za.create({ providers: V, parent: this.injector, name: a.moduleType.name }),
                ve = a.create(ne),
                tt = ve.injector.get(Zc, null);
              if (!tt) throw new et(402, '');
              return (
                O.runOutsideAngular(() => {
                  const Tt = O.onError.subscribe({
                    next: ($t) => {
                      tt.handleError($t);
                    },
                  });
                  ve.onDestroy(() => {
                    Gv(this._modules, ve), Tt.unsubscribe();
                  });
                }),
                (function YD(r, s, a) {
                  try {
                    const u = a();
                    return My(u)
                      ? u.catch((f) => {
                          throw (s.runOutsideAngular(() => r.handleError(f)), f);
                        })
                      : u;
                  } catch (u) {
                    throw (s.runOutsideAngular(() => r.handleError(u)), u);
                  }
                })(tt, O, () => {
                  const Tt = ve.injector.get(gf);
                  return (
                    Tt.runInitializers(),
                    Tt.donePromise.then(
                      () => (
                        (function Xy(r) {
                          Ct(r, 'Expected localeId to be defined'),
                            'string' == typeof r && (Qy = r.toLowerCase().replace(/_/g, '-'));
                        })(ve.injector.get(_f, Np) || Np),
                        this._moduleDoBootstrap(ve),
                        ve
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(a, u = []) {
            const f = Vw({}, u);
            return (function Ow(r, s, a) {
              const u = new Zp(a);
              return Promise.resolve(u);
            })(0, 0, a).then((y) => this.bootstrapModuleFactory(y, f));
          }
          _moduleDoBootstrap(a) {
            const u = a.injector.get(tm);
            if (a._bootstrapComponents.length > 0) a._bootstrapComponents.forEach((f) => u.bootstrap(f));
            else {
              if (!a.instance.ngDoBootstrap) throw new et(403, '');
              a.instance.ngDoBootstrap(u);
            }
            this._modules.push(a);
          }
          onDestroy(a) {
            this._destroyListeners.push(a);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new et(404, '');
            this._modules.slice().forEach((a) => a.destroy()),
              this._destroyListeners.forEach((a) => a()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (r.ɵfac = function (a) {
            return new (a || r)(Bt(za));
          }),
          (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      function Vw(r, s) {
        return Array.isArray(s) ? s.reduce(Vw, r) : Object.assign(Object.assign({}, r), s);
      }
      let tm = (() => {
        class r {
          constructor(a, u, f, y, S) {
            (this._zone = a),
              (this._injector = u),
              (this._exceptionHandler = f),
              (this._componentFactoryResolver = y),
              (this._initStatus = S),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                next: () => {
                  this._zone.run(() => {
                    this.tick();
                  });
                },
              }));
            const O = new d.y((ne) => {
                (this._stable =
                  this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    ne.next(this._stable), ne.complete();
                  });
              }),
              V = new d.y((ne) => {
                let ve;
                this._zone.runOutsideAngular(() => {
                  ve = this._zone.onStable.subscribe(() => {
                    Al.assertNotInAngularZone(),
                      Uv(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), ne.next(!0));
                      });
                  });
                });
                const tt = this._zone.onUnstable.subscribe(() => {
                  Al.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        ne.next(!1);
                      }));
                });
                return () => {
                  ve.unsubscribe(), tt.unsubscribe();
                };
              });
            this.isStable = (0, N.T)(O, V.pipe((0, Ce.B)()));
          }
          bootstrap(a, u) {
            if (!this._initStatus.done) throw new et(405, '');
            let f;
            (f = a instanceof kC ? a : this._componentFactoryResolver.resolveComponentFactory(a)),
              this.componentTypes.push(f.componentType);
            const y = (function Hv(r) {
                return r.isBoundToModule;
              })(f)
                ? void 0
                : this._injector.get(Ad),
              O = f.create(za.NULL, [], u || f.selector, y),
              V = O.location.nativeElement,
              ne = O.injector.get(Rw, null),
              ve = ne && O.injector.get(kw);
            return (
              ne && ve && ve.registerApplication(V, ne),
              O.onDestroy(() => {
                this.detachView(O.hostView), Gv(this.components, O), ve && ve.unregisterApplication(V);
              }),
              this._loadComponent(O),
              O
            );
          }
          tick() {
            if (this._runningTick) throw new et(101, '');
            try {
              this._runningTick = !0;
              for (let a of this._views) a.detectChanges();
            } catch (a) {
              this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(a));
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(a) {
            const u = a;
            this._views.push(u), u.attachToAppRef(this);
          }
          detachView(a) {
            const u = a;
            Gv(this._views, u), u.detachFromAppRef();
          }
          _loadComponent(a) {
            this.attachView(a.hostView),
              this.tick(),
              this.components.push(a),
              this._injector
                .get(Dw, [])
                .concat(this._bootstrapListeners)
                .forEach((f) => f(a));
          }
          ngOnDestroy() {
            this._views.slice().forEach((a) => a.destroy()), this._onMicrotaskEmptySubscription.unsubscribe();
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (r.ɵfac = function (a) {
            return new (a || r)(Bt(Al), Bt(za), Bt(Zc), Bt(Wp), Bt(gf));
          }),
          (r.ɵprov = bt({ token: r, factory: r.ɵfac })),
          r
        );
      })();
      function Gv(r, s) {
        const a = r.indexOf(s);
        a > -1 && r.splice(a, 1);
      }
      let Qg = !0,
        Xg = !1;
      function jw() {
        return (Xg = !0), Qg;
      }
      function KD() {
        if (Xg) throw new Error('Cannot enable prod mode after platform setup.');
        Qg = !1;
      }
      let QD = (() => {
        class r {}
        return (r.__NG_ELEMENT_ID__ = XD), r;
      })();
      function XD(r) {
        return (function du(r, s, a) {
          if (je(r) && !a) {
            const u = Sn(r.index, s);
            return new Yp(u, u);
          }
          return 47 & r.type ? new Yp(s[16], s) : null;
        })(M(), bn(), 16 == (16 & r));
      }
      class Yw {
        constructor() {}
        supports(s) {
          return dh(s);
        }
        create(s) {
          return new nM(s);
        }
      }
      const Kw = (r, s) => s;
      class nM {
        constructor(s) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = s || Kw);
        }
        forEachItem(s) {
          let a;
          for (a = this._itHead; null !== a; a = a._next) s(a);
        }
        forEachOperation(s) {
          let a = this._itHead,
            u = this._removalsHead,
            f = 0,
            y = null;
          for (; a || u; ) {
            const S = !u || (a && a.currentIndex < Kv(u, f, y)) ? a : u,
              O = Kv(S, f, y),
              V = S.currentIndex;
            if (S === u) f--, (u = u._nextRemoved);
            else if (((a = a._next), null == S.previousIndex)) f++;
            else {
              y || (y = []);
              const ne = O - f,
                ve = V - f;
              if (ne != ve) {
                for (let Tt = 0; Tt < ne; Tt++) {
                  const $t = Tt < y.length ? y[Tt] : (y[Tt] = 0),
                    gn = $t + Tt;
                  ve <= gn && gn < ne && (y[Tt] = $t + 1);
                }
                y[S.previousIndex] = ve - ne;
              }
            }
            O !== V && s(S, O, V);
          }
        }
        forEachPreviousItem(s) {
          let a;
          for (a = this._previousItHead; null !== a; a = a._nextPrevious) s(a);
        }
        forEachAddedItem(s) {
          let a;
          for (a = this._additionsHead; null !== a; a = a._nextAdded) s(a);
        }
        forEachMovedItem(s) {
          let a;
          for (a = this._movesHead; null !== a; a = a._nextMoved) s(a);
        }
        forEachRemovedItem(s) {
          let a;
          for (a = this._removalsHead; null !== a; a = a._nextRemoved) s(a);
        }
        forEachIdentityChange(s) {
          let a;
          for (a = this._identityChangesHead; null !== a; a = a._nextIdentityChange) s(a);
        }
        diff(s) {
          if ((null == s && (s = []), !dh(s))) throw new et(900, '');
          return this.check(s) ? this : null;
        }
        onDestroy() {}
        check(s) {
          this._reset();
          let f,
            y,
            S,
            a = this._itHead,
            u = !1;
          if (Array.isArray(s)) {
            this.length = s.length;
            for (let O = 0; O < this.length; O++)
              (y = s[O]),
                (S = this._trackByFn(O, y)),
                null !== a && Object.is(a.trackById, S)
                  ? (u && (a = this._verifyReinsertion(a, y, S, O)),
                    Object.is(a.item, y) || this._addIdentityChange(a, y))
                  : ((a = this._mismatch(a, y, S, O)), (u = !0)),
                (a = a._next);
          } else
            (f = 0),
              (function ay(r, s) {
                if (Array.isArray(r)) for (let a = 0; a < r.length; a++) s(r[a]);
                else {
                  const a = r[yd()]();
                  let u;
                  for (; !(u = a.next()).done; ) s(u.value);
                }
              })(s, (O) => {
                (S = this._trackByFn(f, O)),
                  null !== a && Object.is(a.trackById, S)
                    ? (u && (a = this._verifyReinsertion(a, O, S, f)),
                      Object.is(a.item, O) || this._addIdentityChange(a, O))
                    : ((a = this._mismatch(a, O, S, f)), (u = !0)),
                  (a = a._next),
                  f++;
              }),
              (this.length = f);
          return this._truncate(a), (this.collection = s), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let s;
            for (s = this._previousItHead = this._itHead; null !== s; s = s._next) s._nextPrevious = s._next;
            for (s = this._additionsHead; null !== s; s = s._nextAdded) s.previousIndex = s.currentIndex;
            for (this._additionsHead = this._additionsTail = null, s = this._movesHead; null !== s; s = s._nextMoved)
              s.previousIndex = s.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(s, a, u, f) {
          let y;
          return (
            null === s ? (y = this._itTail) : ((y = s._prev), this._remove(s)),
            null !== (s = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(u, null))
              ? (Object.is(s.item, a) || this._addIdentityChange(s, a), this._reinsertAfter(s, y, f))
              : null !== (s = null === this._linkedRecords ? null : this._linkedRecords.get(u, f))
              ? (Object.is(s.item, a) || this._addIdentityChange(s, a), this._moveAfter(s, y, f))
              : (s = this._addAfter(new iM(a, u), y, f)),
            s
          );
        }
        _verifyReinsertion(s, a, u, f) {
          let y = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(u, null);
          return (
            null !== y
              ? (s = this._reinsertAfter(y, s._prev, f))
              : s.currentIndex != f && ((s.currentIndex = f), this._addToMoves(s, f)),
            s
          );
        }
        _truncate(s) {
          for (; null !== s; ) {
            const a = s._next;
            this._addToRemovals(this._unlink(s)), (s = a);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail && (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail && (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(s, a, u) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(s);
          const f = s._prevRemoved,
            y = s._nextRemoved;
          return (
            null === f ? (this._removalsHead = y) : (f._nextRemoved = y),
            null === y ? (this._removalsTail = f) : (y._prevRemoved = f),
            this._insertAfter(s, a, u),
            this._addToMoves(s, u),
            s
          );
        }
        _moveAfter(s, a, u) {
          return this._unlink(s), this._insertAfter(s, a, u), this._addToMoves(s, u), s;
        }
        _addAfter(s, a, u) {
          return (
            this._insertAfter(s, a, u),
            (this._additionsTail =
              null === this._additionsTail ? (this._additionsHead = s) : (this._additionsTail._nextAdded = s)),
            s
          );
        }
        _insertAfter(s, a, u) {
          const f = null === a ? this._itHead : a._next;
          return (
            (s._next = f),
            (s._prev = a),
            null === f ? (this._itTail = s) : (f._prev = s),
            null === a ? (this._itHead = s) : (a._next = s),
            null === this._linkedRecords && (this._linkedRecords = new qw()),
            this._linkedRecords.put(s),
            (s.currentIndex = u),
            s
          );
        }
        _remove(s) {
          return this._addToRemovals(this._unlink(s));
        }
        _unlink(s) {
          null !== this._linkedRecords && this._linkedRecords.remove(s);
          const a = s._prev,
            u = s._next;
          return null === a ? (this._itHead = u) : (a._next = u), null === u ? (this._itTail = a) : (u._prev = a), s;
        }
        _addToMoves(s, a) {
          return (
            s.previousIndex === a ||
              (this._movesTail = null === this._movesTail ? (this._movesHead = s) : (this._movesTail._nextMoved = s)),
            s
          );
        }
        _addToRemovals(s) {
          return (
            null === this._unlinkedRecords && (this._unlinkedRecords = new qw()),
            this._unlinkedRecords.put(s),
            (s.currentIndex = null),
            (s._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = s), (s._prevRemoved = null))
              : ((s._prevRemoved = this._removalsTail), (this._removalsTail = this._removalsTail._nextRemoved = s)),
            s
          );
        }
        _addIdentityChange(s, a) {
          return (
            (s.item = a),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = s)
                : (this._identityChangesTail._nextIdentityChange = s)),
            s
          );
        }
      }
      class iM {
        constructor(s, a) {
          (this.item = s),
            (this.trackById = a),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class rM {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(s) {
          null === this._head
            ? ((this._head = this._tail = s), (s._nextDup = null), (s._prevDup = null))
            : ((this._tail._nextDup = s), (s._prevDup = this._tail), (s._nextDup = null), (this._tail = s));
        }
        get(s, a) {
          let u;
          for (u = this._head; null !== u; u = u._nextDup)
            if ((null === a || a <= u.currentIndex) && Object.is(u.trackById, s)) return u;
          return null;
        }
        remove(s) {
          const a = s._prevDup,
            u = s._nextDup;
          return (
            null === a ? (this._head = u) : (a._nextDup = u),
            null === u ? (this._tail = a) : (u._prevDup = a),
            null === this._head
          );
        }
      }
      class qw {
        constructor() {
          this.map = new Map();
        }
        put(s) {
          const a = s.trackById;
          let u = this.map.get(a);
          u || ((u = new rM()), this.map.set(a, u)), u.add(s);
        }
        get(s, a) {
          const f = this.map.get(s);
          return f ? f.get(s, a) : null;
        }
        remove(s) {
          const a = s.trackById;
          return this.map.get(a).remove(s) && this.map.delete(a), s;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Kv(r, s, a) {
        const u = r.previousIndex;
        if (null === u) return u;
        let f = 0;
        return a && u < a.length && (f = a[u]), u + s + f;
      }
      class qv {
        constructor() {}
        supports(s) {
          return s instanceof Map || pp(s);
        }
        create() {
          return new t_();
        }
      }
      class t_ {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead;
        }
        forEachItem(s) {
          let a;
          for (a = this._mapHead; null !== a; a = a._next) s(a);
        }
        forEachPreviousItem(s) {
          let a;
          for (a = this._previousMapHead; null !== a; a = a._nextPrevious) s(a);
        }
        forEachChangedItem(s) {
          let a;
          for (a = this._changesHead; null !== a; a = a._nextChanged) s(a);
        }
        forEachAddedItem(s) {
          let a;
          for (a = this._additionsHead; null !== a; a = a._nextAdded) s(a);
        }
        forEachRemovedItem(s) {
          let a;
          for (a = this._removalsHead; null !== a; a = a._nextRemoved) s(a);
        }
        diff(s) {
          if (s) {
            if (!(s instanceof Map || pp(s))) throw new et(900, '');
          } else s = new Map();
          return this.check(s) ? this : null;
        }
        onDestroy() {}
        check(s) {
          this._reset();
          let a = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(s, (u, f) => {
              if (a && a.key === f) this._maybeAddToChanges(a, u), (this._appendAfter = a), (a = a._next);
              else {
                const y = this._getOrCreateRecordForKey(f, u);
                a = this._insertBeforeOrAppend(a, y);
              }
            }),
            a)
          ) {
            a._prev && (a._prev._next = null), (this._removalsHead = a);
            for (let u = a; null !== u; u = u._nextRemoved)
              u === this._mapHead && (this._mapHead = null),
                this._records.delete(u.key),
                (u._nextRemoved = u._next),
                (u.previousValue = u.currentValue),
                (u.currentValue = null),
                (u._prev = null),
                (u._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(s, a) {
          if (s) {
            const u = s._prev;
            return (
              (a._next = s),
              (a._prev = u),
              (s._prev = a),
              u && (u._next = a),
              s === this._mapHead && (this._mapHead = a),
              (this._appendAfter = s),
              s
            );
          }
          return (
            this._appendAfter ? ((this._appendAfter._next = a), (a._prev = this._appendAfter)) : (this._mapHead = a),
            (this._appendAfter = a),
            null
          );
        }
        _getOrCreateRecordForKey(s, a) {
          if (this._records.has(s)) {
            const f = this._records.get(s);
            this._maybeAddToChanges(f, a);
            const y = f._prev,
              S = f._next;
            return y && (y._next = S), S && (S._prev = y), (f._next = null), (f._prev = null), f;
          }
          const u = new Zv(s);
          return this._records.set(s, u), (u.currentValue = a), this._addToAdditions(u), u;
        }
        _reset() {
          if (this.isDirty) {
            let s;
            for (this._previousMapHead = this._mapHead, s = this._previousMapHead; null !== s; s = s._next)
              s._nextPrevious = s._next;
            for (s = this._changesHead; null !== s; s = s._nextChanged) s.previousValue = s.currentValue;
            for (s = this._additionsHead; null != s; s = s._nextAdded) s.previousValue = s.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(s, a) {
          Object.is(a, s.currentValue) ||
            ((s.previousValue = s.currentValue), (s.currentValue = a), this._addToChanges(s));
        }
        _addToAdditions(s) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = s)
            : ((this._additionsTail._nextAdded = s), (this._additionsTail = s));
        }
        _addToChanges(s) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = s)
            : ((this._changesTail._nextChanged = s), (this._changesTail = s));
        }
        _forEach(s, a) {
          s instanceof Map ? s.forEach(a) : Object.keys(s).forEach((u) => a(s[u], u));
        }
      }
      class Zv {
        constructor(s) {
          (this.key = s),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function Zw() {
        return new n_([new Yw()]);
      }
      let n_ = (() => {
        class r {
          constructor(a) {
            this.factories = a;
          }
          static create(a, u) {
            if (null != u) {
              const f = u.factories.slice();
              a = a.concat(f);
            }
            return new r(a);
          }
          static extend(a) {
            return { provide: r, useFactory: (u) => r.create(a, u || Zw()), deps: [[r, new Do(), new Ir()]] };
          }
          find(a) {
            const u = this.factories.find((f) => f.supports(a));
            if (null != u) return u;
            throw new et(901, '');
          }
        }
        return (r.ɵprov = bt({ token: r, providedIn: 'root', factory: Zw })), r;
      })();
      function Qw() {
        return new i_([new qv()]);
      }
      let i_ = (() => {
        class r {
          constructor(a) {
            this.factories = a;
          }
          static create(a, u) {
            if (u) {
              const f = u.factories.slice();
              a = a.concat(f);
            }
            return new r(a);
          }
          static extend(a) {
            return { provide: r, useFactory: (u) => r.create(a, u || Qw()), deps: [[r, new Do(), new Ir()]] };
          }
          find(a) {
            const u = this.factories.find((y) => y.supports(a));
            if (u) return u;
            throw new et(901, '');
          }
        }
        return (r.ɵprov = bt({ token: r, providedIn: 'root', factory: Qw })), r;
      })();
      const Ya = [new qv()],
        oM = new n_([new Yw()]),
        vf = new i_(Ya),
        lM = Lw(null, 'core', [
          { provide: xw, useValue: 'unknown' },
          { provide: Bw, deps: [za] },
          { provide: kw, deps: [] },
          { provide: qg, deps: [] },
        ]),
        hM = [
          { provide: tm, useClass: tm, deps: [Al, za, Zc, Wp, gf] },
          {
            provide: lD,
            deps: [Al],
            useFactory: function fM(r) {
              let s = [];
              return (
                r.onStable.subscribe(() => {
                  for (; s.length; ) s.pop()();
                }),
                function (a) {
                  s.push(a);
                }
              );
            },
          },
          { provide: gf, useClass: gf, deps: [[new Ir(), Nv]] },
          { provide: Vv, useClass: Vv, deps: [] },
          VD,
          {
            provide: n_,
            useFactory: function cM() {
              return oM;
            },
            deps: [],
          },
          {
            provide: i_,
            useFactory: function Rc() {
              return vf;
            },
            deps: [],
          },
          {
            provide: _f,
            useFactory: function uM(r) {
              return (
                r ||
                (function dM() {
                  return ('undefined' != typeof $localize && $localize.locale) || Np;
                })()
              );
            },
            deps: [[new ur(_f), new Ir(), new Do()]],
          },
          { provide: Mw, useValue: 'USD' },
        ];
      let Xw = (() => {
        class r {
          constructor(a) {}
        }
        return (
          (r.ɵfac = function (a) {
            return new (a || r)(Bt(tm));
          }),
          (r.ɵmod = Qn({ type: r })),
          (r.ɵinj = mt({ providers: hM })),
          r
        );
      })();
    },
    9042: (un, ft, x) => {
      'use strict';
      function h(ee) {
        for (let fe in ee) {
          let ue = ee[fe] || '';
          switch (fe) {
            case 'display':
              ee.display =
                'flex' === ue
                  ? ['-webkit-flex', 'flex']
                  : 'inline-flex' === ue
                  ? ['-webkit-inline-flex', 'inline-flex']
                  : ue;
              break;
            case 'align-items':
            case 'align-self':
            case 'align-content':
            case 'flex':
            case 'flex-basis':
            case 'flex-flow':
            case 'flex-grow':
            case 'flex-shrink':
            case 'flex-wrap':
            case 'justify-content':
              ee['-webkit-' + fe] = ue;
              break;
            case 'flex-direction':
              (ue = ue || 'row'), (ee['-webkit-flex-direction'] = ue), (ee['flex-direction'] = ue);
              break;
            case 'order':
              ee.order = ee['-webkit-' + fe] = isNaN(+ue) ? '0' : ue;
          }
        }
        return ee;
      }
      x.d(ft, { iQ: () => d, GK: () => h, Ar: () => N, kt: () => Ne, tj: () => Re });
      const m = 'inline',
        d = ['row', 'column', 'row-reverse', 'column-reverse'];
      function N(ee) {
        let [fe, ue, Qe] = Ce(ee);
        return (function Fe(ee, fe = null, ue = !1) {
          return {
            display: ue ? 'inline-flex' : 'flex',
            'box-sizing': 'border-box',
            'flex-direction': ee,
            'flex-wrap': fe || null,
          };
        })(fe, ue, Qe);
      }
      function Ce(ee) {
        var fe;
        ee = null !== (fe = null == ee ? void 0 : ee.toLowerCase()) && void 0 !== fe ? fe : '';
        let [ue, Qe, Oe] = ee.split(' ');
        return (
          d.find((et) => et === ue) || (ue = d[0]),
          Qe === m && ((Qe = Oe !== m ? Oe : ''), (Oe = m)),
          [ue, He(Qe), !!Oe]
        );
      }
      function Re(ee) {
        let [fe] = Ce(ee);
        return fe.indexOf('row') > -1;
      }
      function He(ee) {
        if (ee)
          switch (ee.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              ee = 'wrap-reverse';
              break;
            case 'no':
            case 'none':
            case 'nowrap':
              ee = 'nowrap';
              break;
            default:
              ee = 'wrap';
          }
        return ee;
      }
      function Ne(ee, ...fe) {
        if (null == ee) throw TypeError('Cannot convert undefined or null to object');
        for (let ue of fe) if (null != ue) for (let Qe in ue) ue.hasOwnProperty(Qe) && (ee[Qe] = ue[Qe]);
        return ee;
      }
    },
    3270: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        Bs: () => dt,
        iR: () => Se,
        IR: () => Qe,
        g5: () => lt,
        WU: () => me,
        yB: () => Le,
        wY: () => Ze,
        QI: () => We,
        RK: () => $e,
        Ot: () => ln,
        FL: () => Hn,
      });
      var h = x(5e3),
        m = x(9808),
        d = x(1135),
        N = x(8306),
        Ce = x(6451),
        Re = x(7579),
        He = x(9042),
        Fe = x(9300),
        Ne = x(8505);
      const fe = {
          provide: h.tb,
          useFactory: function ee(zt, Wt) {
            return () => {
              if ((0, m.NF)(Wt)) {
                const de = Array.from(zt.querySelectorAll(`[class*=${ue}]`)),
                  q = /\bflex-layout-.+?\b/g;
                de.forEach((le) => {
                  le.classList.contains(`${ue}ssr`) && le.parentNode
                    ? le.parentNode.removeChild(le)
                    : le.className.replace(q, '');
                });
              }
            };
          },
          deps: [m.K0, h.Lbi],
          multi: !0,
        },
        ue = 'flex-layout-';
      let Qe = (() => {
        class zt {}
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)();
          }),
          (zt.ɵmod = h.oAB({ type: zt })),
          (zt.ɵinj = h.cJS({ providers: [fe] })),
          zt
        );
      })();
      class Oe {
        constructor(Wt = !1, de = 'all', q = '', le = '', Z = 0) {
          (this.matches = Wt),
            (this.mediaQuery = de),
            (this.mqAlias = q),
            (this.suffix = le),
            (this.priority = Z),
            (this.property = '');
        }
        clone() {
          return new Oe(this.matches, this.mediaQuery, this.mqAlias, this.suffix);
        }
      }
      let et = (() => {
        class zt {
          constructor() {
            this.stylesheet = new Map();
          }
          addStyleToElement(de, q, le) {
            const Z = this.stylesheet.get(de);
            Z ? Z.set(q, le) : this.stylesheet.set(de, new Map([[q, le]]));
          }
          clearStyles() {
            this.stylesheet.clear();
          }
          getStyleForElement(de, q) {
            const le = this.stylesheet.get(de);
            let Z = '';
            if (le) {
              const ye = le.get(q);
              ('number' == typeof ye || 'string' == typeof ye) && (Z = ye + '');
            }
            return Z;
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)();
          }),
          (zt.ɵprov = h.Yz7({ token: zt, factory: zt.ɵfac, providedIn: 'root' })),
          zt
        );
      })();
      const lt = {
          addFlexToParent: !0,
          addOrientationBps: !1,
          disableDefaultBps: !1,
          disableVendorPrefixes: !1,
          serverLoaded: !1,
          useColumnBasisZero: !0,
          printWithBreakpoints: [],
          mediaTriggerAutoRestore: !0,
          ssrObserveBreakpoints: [],
          multiplier: void 0,
          defaultUnit: 'px',
          detectLayoutDisplay: !1,
        },
        me = new h.OlP('Flex Layout token, config options for the library', { providedIn: 'root', factory: () => lt }),
        Ze = new h.OlP('FlexLayoutServerLoaded', { providedIn: 'root', factory: () => !1 }),
        dt = new h.OlP('Flex Layout token, collect all breakpoints into one provider', {
          providedIn: 'root',
          factory: () => null,
        });
      function vt(zt, Wt) {
        return (
          (zt = zt ? zt.clone() : new Oe()),
          Wt &&
            ((zt.mqAlias = Wt.alias),
            (zt.mediaQuery = Wt.mediaQuery),
            (zt.suffix = Wt.suffix),
            (zt.priority = Wt.priority)),
          zt
        );
      }
      class We {
        constructor() {
          this.shouldCache = !0;
        }
        sideEffect(Wt, de, q) {}
      }
      let $e = (() => {
        class zt {
          constructor(de, q, le, Z) {
            (this._serverStylesheet = de),
              (this._serverModuleLoaded = q),
              (this._platformId = le),
              (this.layoutConfig = Z);
          }
          applyStyleToElement(de, q, le = null) {
            let Z = {};
            'string' == typeof q && ((Z[q] = le), (q = Z)),
              (Z = this.layoutConfig.disableVendorPrefixes ? q : (0, He.GK)(q)),
              this._applyMultiValueStyleToElement(Z, de);
          }
          applyStyleToElements(de, q = []) {
            const le = this.layoutConfig.disableVendorPrefixes ? de : (0, He.GK)(de);
            q.forEach((Z) => {
              this._applyMultiValueStyleToElement(le, Z);
            });
          }
          getFlowDirection(de) {
            const q = 'flex-direction';
            let le = this.lookupStyle(de, q);
            return [
              le || 'row',
              this.lookupInlineStyle(de, q) || ((0, m.PM)(this._platformId) && this._serverModuleLoaded) ? le : '',
            ];
          }
          hasWrap(de) {
            return 'wrap' === this.lookupStyle(de, 'flex-wrap');
          }
          lookupAttributeValue(de, q) {
            var le;
            return null !== (le = de.getAttribute(q)) && void 0 !== le ? le : '';
          }
          lookupInlineStyle(de, q) {
            return (0, m.NF)(this._platformId)
              ? de.style.getPropertyValue(q)
              : (function ge(zt, Wt) {
                  var de;
                  return null !== (de = De(zt)[Wt]) && void 0 !== de ? de : '';
                })(de, q);
          }
          lookupStyle(de, q, le = !1) {
            let Z = '';
            return (
              de &&
                ((Z = this.lookupInlineStyle(de, q)) ||
                  ((0, m.NF)(this._platformId)
                    ? le || (Z = getComputedStyle(de).getPropertyValue(q))
                    : this._serverModuleLoaded && (Z = this._serverStylesheet.getStyleForElement(de, q)))),
              Z ? Z.trim() : ''
            );
          }
          _applyMultiValueStyleToElement(de, q) {
            Object.keys(de)
              .sort()
              .forEach((le) => {
                const Z = de[le],
                  ye = Array.isArray(Z) ? Z : [Z];
                ye.sort();
                for (let ie of ye)
                  (ie = ie ? ie + '' : ''),
                    (0, m.NF)(this._platformId) || !this._serverModuleLoaded
                      ? (0, m.NF)(this._platformId)
                        ? q.style.setProperty(le, ie)
                        : Ke(q, le, ie)
                      : this._serverStylesheet.addStyleToElement(q, le, ie);
              });
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)(h.LFG(et), h.LFG(Ze), h.LFG(h.Lbi), h.LFG(me));
          }),
          (zt.ɵprov = h.Yz7({ token: zt, factory: zt.ɵfac, providedIn: 'root' })),
          zt
        );
      })();
      function Ke(zt, Wt, de) {
        Wt = Wt.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
        const q = De(zt);
        (q[Wt] = null != de ? de : ''),
          (function Ie(zt, Wt) {
            let de = '';
            for (const q in Wt) Wt[q] && (de += `${q}:${Wt[q]};`);
            zt.setAttribute('style', de);
          })(zt, q);
      }
      function De(zt) {
        const Wt = {},
          de = zt.getAttribute('style');
        if (de) {
          const q = de.split(/;+/g);
          for (let le = 0; le < q.length; le++) {
            const Z = q[le].trim();
            if (Z.length > 0) {
              const ye = Z.indexOf(':');
              if (-1 === ye) throw new Error(`Invalid CSS style: ${Z}`);
              Wt[Z.substr(0, ye).trim()] = Z.substr(ye + 1).trim();
            }
          }
        }
        return Wt;
      }
      function Ye(zt, Wt) {
        return ((Wt && Wt.priority) || 0) - ((zt && zt.priority) || 0);
      }
      function it(zt, Wt) {
        return (zt.priority || 0) - (Wt.priority || 0);
      }
      let qe = (() => {
        class zt {
          constructor(de, q, le) {
            (this._zone = de),
              (this._platformId = q),
              (this._document = le),
              (this.source = new d.X(new Oe(!0))),
              (this.registry = new Map()),
              (this.pendingRemoveListenerFns = []),
              (this._observable$ = this.source.asObservable());
          }
          get activations() {
            const de = [];
            return (
              this.registry.forEach((q, le) => {
                q.matches && de.push(le);
              }),
              de
            );
          }
          isActive(de) {
            var q;
            const le = this.registry.get(de);
            return null !== (q = null == le ? void 0 : le.matches) && void 0 !== q
              ? q
              : this.registerQuery(de).some((Z) => Z.matches);
          }
          observe(de, q = !1) {
            if (de && de.length) {
              const le = this._observable$.pipe((0, Fe.h)((ye) => !q || de.indexOf(ye.mediaQuery) > -1)),
                Z = new N.y((ye) => {
                  const ie = this.registerQuery(de);
                  if (ie.length) {
                    const he = ie.pop();
                    ie.forEach((Te) => {
                      ye.next(Te);
                    }),
                      this.source.next(he);
                  }
                  ye.complete();
                });
              return (0, Ce.T)(Z, le);
            }
            return this._observable$;
          }
          registerQuery(de) {
            const q = Array.isArray(de) ? de : [de],
              le = [];
            return (
              (function Ft(zt, Wt) {
                const de = zt.filter((q) => !Ve[q]);
                if (de.length > 0) {
                  const q = de.join(', ');
                  try {
                    const le = Wt.createElement('style');
                    le.setAttribute('type', 'text/css'),
                      le.styleSheet ||
                        le.appendChild(
                          Wt.createTextNode(
                            `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${q} {.fx-query-test{ }}\n`
                          )
                        ),
                      Wt.head.appendChild(le),
                      de.forEach((Z) => (Ve[Z] = le));
                  } catch (le) {
                    console.error(le);
                  }
                }
              })(q, this._document),
              q.forEach((Z) => {
                const ye = (he) => {
                  this._zone.run(() => this.source.next(new Oe(he.matches, Z)));
                };
                let ie = this.registry.get(Z);
                ie ||
                  ((ie = this.buildMQL(Z)),
                  ie.addListener(ye),
                  this.pendingRemoveListenerFns.push(() => ie.removeListener(ye)),
                  this.registry.set(Z, ie)),
                  ie.matches && le.push(new Oe(!0, Z));
              }),
              le
            );
          }
          ngOnDestroy() {
            let de;
            for (; (de = this.pendingRemoveListenerFns.pop()); ) de();
          }
          buildMQL(de) {
            return (function kt(zt, Wt) {
              return Wt && window.matchMedia('all').addListener
                ? window.matchMedia(zt)
                : {
                    matches: 'all' === zt || '' === zt,
                    media: zt,
                    addListener: () => {},
                    removeListener: () => {},
                    onchange: null,
                    addEventListener() {},
                    removeEventListener() {},
                    dispatchEvent: () => !1,
                  };
            })(de, (0, m.NF)(this._platformId));
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)(h.LFG(h.R0b), h.LFG(h.Lbi), h.LFG(m.K0));
          }),
          (zt.ɵprov = h.Yz7({ token: zt, factory: zt.ɵfac, providedIn: 'root' })),
          zt
        );
      })();
      const Ve = {},
        St = [
          { alias: 'xs', mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)', priority: 1e3 },
          { alias: 'sm', mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)', priority: 900 },
          { alias: 'md', mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)', priority: 800 },
          { alias: 'lg', mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)', priority: 700 },
          { alias: 'xl', mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)', priority: 600 },
          { alias: 'lt-sm', overlapping: !0, mediaQuery: 'screen and (max-width: 599.98px)', priority: 950 },
          { alias: 'lt-md', overlapping: !0, mediaQuery: 'screen and (max-width: 959.98px)', priority: 850 },
          { alias: 'lt-lg', overlapping: !0, mediaQuery: 'screen and (max-width: 1279.98px)', priority: 750 },
          { alias: 'lt-xl', overlapping: !0, priority: 650, mediaQuery: 'screen and (max-width: 1919.98px)' },
          { alias: 'gt-xs', overlapping: !0, mediaQuery: 'screen and (min-width: 600px)', priority: -950 },
          { alias: 'gt-sm', overlapping: !0, mediaQuery: 'screen and (min-width: 960px)', priority: -850 },
          { alias: 'gt-md', overlapping: !0, mediaQuery: 'screen and (min-width: 1280px)', priority: -750 },
          { alias: 'gt-lg', overlapping: !0, mediaQuery: 'screen and (min-width: 1920px)', priority: -650 },
        ],
        on = '(orientation: portrait) and (max-width: 599.98px)',
        Je = '(orientation: landscape) and (max-width: 959.98px)',
        Ct = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)',
        st = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)',
        Et = '(orientation: portrait) and (min-width: 840px)',
        yt = '(orientation: landscape) and (min-width: 1280px)',
        Ue = {
          HANDSET: `${on}, ${Je}`,
          TABLET: `${Ct} , ${st}`,
          WEB: `${Et}, ${yt} `,
          HANDSET_PORTRAIT: `${on}`,
          TABLET_PORTRAIT: `${Ct} `,
          WEB_PORTRAIT: `${Et}`,
          HANDSET_LANDSCAPE: `${Je}`,
          TABLET_LANDSCAPE: `${st}`,
          WEB_LANDSCAPE: `${yt}`,
        },
        bt = [
          { alias: 'handset', priority: 2e3, mediaQuery: Ue.HANDSET },
          { alias: 'handset.landscape', priority: 2e3, mediaQuery: Ue.HANDSET_LANDSCAPE },
          { alias: 'handset.portrait', priority: 2e3, mediaQuery: Ue.HANDSET_PORTRAIT },
          { alias: 'tablet', priority: 2100, mediaQuery: Ue.TABLET },
          { alias: 'tablet.landscape', priority: 2100, mediaQuery: Ue.TABLET_LANDSCAPE },
          { alias: 'tablet.portrait', priority: 2100, mediaQuery: Ue.TABLET_PORTRAIT },
          { alias: 'web', priority: 2200, mediaQuery: Ue.WEB, overlapping: !0 },
          { alias: 'web.landscape', priority: 2200, mediaQuery: Ue.WEB_LANDSCAPE, overlapping: !0 },
          { alias: 'web.portrait', priority: 2200, mediaQuery: Ue.WEB_PORTRAIT, overlapping: !0 },
        ],
        at = /(\.|-|_)/g;
      function mt(zt) {
        let Wt = zt.length > 0 ? zt.charAt(0) : '',
          de = zt.length > 1 ? zt.slice(1) : '';
        return Wt.toUpperCase() + de;
      }
      const Gt = new h.OlP('Token (@angular/flex-layout) Breakpoints', {
        providedIn: 'root',
        factory: () => {
          const zt = (0, h.f3M)(dt),
            Wt = (0, h.f3M)(me),
            de = [].concat.apply(
              [],
              (zt || []).map((le) => (Array.isArray(le) ? le : [le]))
            );
          return (function xt(zt, Wt = []) {
            const de = {};
            return (
              zt.forEach((q) => {
                de[q.alias] = q;
              }),
              Wt.forEach((q) => {
                de[q.alias] ? (0, He.kt)(de[q.alias], q) : (de[q.alias] = q);
              }),
              (function en(zt) {
                return (
                  zt.forEach((Wt) => {
                    Wt.suffix ||
                      ((Wt.suffix = (function Nt(zt) {
                        return zt.replace(at, '|').split('|').map(mt).join('');
                      })(Wt.alias)),
                      (Wt.overlapping = !!Wt.overlapping));
                  }),
                  zt
                );
              })(Object.keys(de).map((q) => de[q]))
            );
          })((Wt.disableDefaultBps ? [] : St).concat(Wt.addOrientationBps ? bt : []), de);
        },
      });
      let re = (() => {
        class zt {
          constructor(de) {
            (this.findByMap = new Map()), (this.items = [...de].sort(it));
          }
          findByAlias(de) {
            return de ? this.findWithPredicate(de, (q) => q.alias === de) : null;
          }
          findByQuery(de) {
            return this.findWithPredicate(de, (q) => q.mediaQuery === de);
          }
          get overlappings() {
            return this.items.filter((de) => de.overlapping);
          }
          get aliases() {
            return this.items.map((de) => de.alias);
          }
          get suffixes() {
            return this.items.map((de) => {
              var q;
              return null !== (q = null == de ? void 0 : de.suffix) && void 0 !== q ? q : '';
            });
          }
          findWithPredicate(de, q) {
            var le;
            let Z = this.findByMap.get(de);
            return (
              Z || ((Z = null !== (le = this.items.find(q)) && void 0 !== le ? le : null), this.findByMap.set(de, Z)),
              null != Z ? Z : null
            );
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)(h.LFG(Gt));
          }),
          (zt.ɵprov = h.Yz7({ token: zt, factory: zt.ɵfac, providedIn: 'root' })),
          zt
        );
      })();
      const ot = 'print',
        Zt = { alias: ot, mediaQuery: ot, priority: 1e3 };
      let hn = (() => {
        class zt {
          constructor(de, q, le) {
            (this.breakpoints = de),
              (this.layoutConfig = q),
              (this._document = le),
              (this.registeredBeforeAfterPrintHooks = !1),
              (this.isPrintingBeforeAfterEvent = !1),
              (this.beforePrintEventListeners = []),
              (this.afterPrintEventListeners = []),
              (this.formerActivations = null),
              (this.isPrinting = !1),
              (this.queue = new At()),
              (this.deactivations = []);
          }
          withPrintQuery(de) {
            return [...de, ot];
          }
          isPrintEvent(de) {
            return de.mediaQuery.startsWith(ot);
          }
          get printAlias() {
            var de;
            return [...(null !== (de = this.layoutConfig.printWithBreakpoints) && void 0 !== de ? de : [])];
          }
          get printBreakPoints() {
            return this.printAlias.map((de) => this.breakpoints.findByAlias(de)).filter((de) => null !== de);
          }
          getEventBreakpoints({ mediaQuery: de }) {
            const q = this.breakpoints.findByQuery(de);
            return (q ? [...this.printBreakPoints, q] : this.printBreakPoints).sort(Ye);
          }
          updateEvent(de) {
            var q;
            let le = this.breakpoints.findByQuery(de.mediaQuery);
            return (
              this.isPrintEvent(de) &&
                ((le = this.getEventBreakpoints(de)[0]),
                (de.mediaQuery = null !== (q = null == le ? void 0 : le.mediaQuery) && void 0 !== q ? q : '')),
              vt(de, le)
            );
          }
          registerBeforeAfterPrintHooks(de) {
            if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) return;
            this.registeredBeforeAfterPrintHooks = !0;
            const q = () => {
                this.isPrinting ||
                  ((this.isPrintingBeforeAfterEvent = !0),
                  this.startPrinting(de, this.getEventBreakpoints(new Oe(!0, ot))),
                  de.updateStyles());
              },
              le = () => {
                (this.isPrintingBeforeAfterEvent = !1), this.isPrinting && (this.stopPrinting(de), de.updateStyles());
              };
            this._document.defaultView.addEventListener('beforeprint', q),
              this._document.defaultView.addEventListener('afterprint', le),
              this.beforePrintEventListeners.push(q),
              this.afterPrintEventListeners.push(le);
          }
          interceptEvents(de) {
            return (q) => {
              this.isPrintEvent(q)
                ? q.matches && !this.isPrinting
                  ? (this.startPrinting(de, this.getEventBreakpoints(q)), de.updateStyles())
                  : !q.matches &&
                    this.isPrinting &&
                    !this.isPrintingBeforeAfterEvent &&
                    (this.stopPrinting(de), de.updateStyles())
                : this.collectActivations(de, q);
            };
          }
          blockPropagation() {
            return (de) => !(this.isPrinting || this.isPrintEvent(de));
          }
          startPrinting(de, q) {
            (this.isPrinting = !0),
              (this.formerActivations = de.activatedBreakpoints),
              (de.activatedBreakpoints = this.queue.addPrintBreakpoints(q));
          }
          stopPrinting(de) {
            (de.activatedBreakpoints = this.deactivations),
              (this.deactivations = []),
              (this.formerActivations = null),
              this.queue.clear(),
              (this.isPrinting = !1);
          }
          collectActivations(de, q) {
            if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {
              if (!this.isPrintingBeforeAfterEvent) return void (this.deactivations = []);
              if (!q.matches) {
                const le = this.breakpoints.findByQuery(q.mediaQuery);
                if (le) {
                  const Z = this.formerActivations && this.formerActivations.includes(le),
                    ye = !this.formerActivations && de.activatedBreakpoints.includes(le);
                  (Z || ye) && (this.deactivations.push(le), this.deactivations.sort(Ye));
                }
              }
            }
          }
          ngOnDestroy() {
            this._document.defaultView &&
              (this.beforePrintEventListeners.forEach((de) =>
                this._document.defaultView.removeEventListener('beforeprint', de)
              ),
              this.afterPrintEventListeners.forEach((de) =>
                this._document.defaultView.removeEventListener('afterprint', de)
              ));
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)(h.LFG(re), h.LFG(me), h.LFG(m.K0));
          }),
          (zt.ɵprov = h.Yz7({ token: zt, factory: zt.ɵfac, providedIn: 'root' })),
          zt
        );
      })();
      class At {
        constructor() {
          this.printBreakpoints = [];
        }
        addPrintBreakpoints(Wt) {
          return Wt.push(Zt), Wt.sort(Ye), Wt.forEach((de) => this.addBreakpoint(de)), this.printBreakpoints;
        }
        addBreakpoint(Wt) {
          Wt &&
            void 0 === this.printBreakpoints.find((q) => q.mediaQuery === Wt.mediaQuery) &&
            (this.printBreakpoints = (function ae(zt) {
              var Wt;
              return null !== (Wt = null == zt ? void 0 : zt.mediaQuery.startsWith(ot)) && void 0 !== Wt && Wt;
            })(Wt)
              ? [Wt, ...this.printBreakpoints]
              : [...this.printBreakpoints, Wt]);
        }
        clear() {
          this.printBreakpoints = [];
        }
      }
      let Le = (() => {
        class zt {
          constructor(de, q, le) {
            (this.matchMedia = de),
              (this.breakpoints = q),
              (this.hook = le),
              (this._useFallbacks = !0),
              (this._activatedBreakpoints = []),
              (this.elementMap = new Map()),
              (this.elementKeyMap = new WeakMap()),
              (this.watcherMap = new WeakMap()),
              (this.updateMap = new WeakMap()),
              (this.clearMap = new WeakMap()),
              (this.subject = new Re.x()),
              this.observeActivations();
          }
          get activatedAlias() {
            var de, q;
            return null !== (q = null === (de = this.activatedBreakpoints[0]) || void 0 === de ? void 0 : de.alias) &&
              void 0 !== q
              ? q
              : '';
          }
          set activatedBreakpoints(de) {
            this._activatedBreakpoints = [...de];
          }
          get activatedBreakpoints() {
            return [...this._activatedBreakpoints];
          }
          set useFallbacks(de) {
            this._useFallbacks = de;
          }
          onMediaChange(de) {
            const q = this.findByQuery(de.mediaQuery);
            if (q) {
              de = vt(de, q);
              const le = this.activatedBreakpoints.indexOf(q);
              de.matches && -1 === le
                ? (this._activatedBreakpoints.push(q), this._activatedBreakpoints.sort(Ye), this.updateStyles())
                : !de.matches &&
                  -1 !== le &&
                  (this._activatedBreakpoints.splice(le, 1), this._activatedBreakpoints.sort(Ye), this.updateStyles());
            }
          }
          init(de, q, le, Z, ye = []) {
            ht(this.updateMap, de, q, le),
              ht(this.clearMap, de, q, Z),
              this.buildElementKeyMap(de, q),
              this.watchExtraTriggers(de, q, ye);
          }
          getValue(de, q, le) {
            const Z = this.elementMap.get(de);
            if (Z) {
              const ye = void 0 !== le ? Z.get(le) : this.getActivatedValues(Z, q);
              if (ye) return ye.get(q);
            }
          }
          hasValue(de, q) {
            const le = this.elementMap.get(de);
            if (le) {
              const Z = this.getActivatedValues(le, q);
              if (Z) return void 0 !== Z.get(q) || !1;
            }
            return !1;
          }
          setValue(de, q, le, Z) {
            var ye;
            let ie = this.elementMap.get(de);
            if (ie) {
              const Te = (null !== (ye = ie.get(Z)) && void 0 !== ye ? ye : new Map()).set(q, le);
              ie.set(Z, Te), this.elementMap.set(de, ie);
            } else (ie = new Map().set(Z, new Map().set(q, le))), this.elementMap.set(de, ie);
            const he = this.getValue(de, q);
            void 0 !== he && this.updateElement(de, q, he);
          }
          trackValue(de, q) {
            return this.subject.asObservable().pipe((0, Fe.h)((le) => le.element === de && le.key === q));
          }
          updateStyles() {
            this.elementMap.forEach((de, q) => {
              const le = new Set(this.elementKeyMap.get(q));
              let Z = this.getActivatedValues(de);
              Z &&
                Z.forEach((ye, ie) => {
                  this.updateElement(q, ie, ye), le.delete(ie);
                }),
                le.forEach((ye) => {
                  if (((Z = this.getActivatedValues(de, ye)), Z)) {
                    const ie = Z.get(ye);
                    this.updateElement(q, ye, ie);
                  } else this.clearElement(q, ye);
                });
            });
          }
          clearElement(de, q) {
            const le = this.clearMap.get(de);
            if (le) {
              const Z = le.get(q);
              Z && (Z(), this.subject.next({ element: de, key: q, value: '' }));
            }
          }
          updateElement(de, q, le) {
            const Z = this.updateMap.get(de);
            if (Z) {
              const ye = Z.get(q);
              ye && (ye(le), this.subject.next({ element: de, key: q, value: le }));
            }
          }
          releaseElement(de) {
            const q = this.watcherMap.get(de);
            q && (q.forEach((Z) => Z.unsubscribe()), this.watcherMap.delete(de));
            const le = this.elementMap.get(de);
            le && (le.forEach((Z, ye) => le.delete(ye)), this.elementMap.delete(de));
          }
          triggerUpdate(de, q) {
            const le = this.elementMap.get(de);
            if (le) {
              const Z = this.getActivatedValues(le, q);
              Z && (q ? this.updateElement(de, q, Z.get(q)) : Z.forEach((ye, ie) => this.updateElement(de, ie, ye)));
            }
          }
          buildElementKeyMap(de, q) {
            let le = this.elementKeyMap.get(de);
            le || ((le = new Set()), this.elementKeyMap.set(de, le)), le.add(q);
          }
          watchExtraTriggers(de, q, le) {
            if (le && le.length) {
              let Z = this.watcherMap.get(de);
              if ((Z || ((Z = new Map()), this.watcherMap.set(de, Z)), !Z.get(q))) {
                const ie = (0, Ce.T)(...le).subscribe(() => {
                  const he = this.getValue(de, q);
                  this.updateElement(de, q, he);
                });
                Z.set(q, ie);
              }
            }
          }
          findByQuery(de) {
            return this.breakpoints.findByQuery(de);
          }
          getActivatedValues(de, q) {
            for (let Z = 0; Z < this.activatedBreakpoints.length; Z++) {
              const ie = de.get(this.activatedBreakpoints[Z].alias);
              if (ie && (void 0 === q || (ie.has(q) && null != ie.get(q)))) return ie;
            }
            if (!this._useFallbacks) return;
            const le = de.get('');
            return void 0 === q || (le && le.has(q)) ? le : void 0;
          }
          observeActivations() {
            const de = this.breakpoints.items.map((q) => q.mediaQuery);
            this.hook.registerBeforeAfterPrintHooks(this),
              this.matchMedia
                .observe(this.hook.withPrintQuery(de))
                .pipe((0, Ne.b)(this.hook.interceptEvents(this)), (0, Fe.h)(this.hook.blockPropagation()))
                .subscribe(this.onMediaChange.bind(this));
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)(h.LFG(qe), h.LFG(re), h.LFG(hn));
          }),
          (zt.ɵprov = h.Yz7({ token: zt, factory: zt.ɵfac, providedIn: 'root' })),
          zt
        );
      })();
      function ht(zt, Wt, de, q) {
        var le;
        if (void 0 !== q) {
          const Z = null !== (le = zt.get(Wt)) && void 0 !== le ? le : new Map();
          Z.set(de, q), zt.set(Wt, Z);
        }
      }
      let Se = (() => {
        class zt {
          constructor(de, q, le, Z) {
            (this.elementRef = de),
              (this.styleBuilder = q),
              (this.styler = le),
              (this.marshal = Z),
              (this.DIRECTIVE_KEY = ''),
              (this.inputs = []),
              (this.mru = {}),
              (this.destroySubject = new Re.x()),
              (this.styleCache = new Map());
          }
          get parentElement() {
            return this.elementRef.nativeElement.parentElement;
          }
          get nativeElement() {
            return this.elementRef.nativeElement;
          }
          get activatedValue() {
            return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);
          }
          set activatedValue(de) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, de, this.marshal.activatedAlias);
          }
          ngOnChanges(de) {
            Object.keys(de).forEach((q) => {
              if (-1 !== this.inputs.indexOf(q)) {
                const le = q.split('.').slice(1).join('.');
                this.setValue(de[q].currentValue, le);
              }
            });
          }
          ngOnDestroy() {
            this.destroySubject.next(), this.destroySubject.complete(), this.marshal.releaseElement(this.nativeElement);
          }
          init(de = []) {
            this.marshal.init(
              this.elementRef.nativeElement,
              this.DIRECTIVE_KEY,
              this.updateWithValue.bind(this),
              this.clearStyles.bind(this),
              de
            );
          }
          addStyles(de, q) {
            const le = this.styleBuilder,
              Z = le.shouldCache;
            let ye = this.styleCache.get(de);
            (!ye || !Z) && ((ye = le.buildStyles(de, q)), Z && this.styleCache.set(de, ye)),
              (this.mru = Object.assign({}, ye)),
              this.applyStyleToElement(ye),
              le.sideEffect(de, ye, q);
          }
          clearStyles() {
            Object.keys(this.mru).forEach((de) => {
              this.mru[de] = '';
            }),
              this.applyStyleToElement(this.mru),
              (this.mru = {}),
              (this.currentValue = void 0);
          }
          triggerUpdate() {
            this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
          }
          getFlexFlowDirection(de, q = !1) {
            if (de) {
              const [le, Z] = this.styler.getFlowDirection(de);
              if (!Z && q) {
                const ye = (0, He.Ar)(le);
                this.styler.applyStyleToElements(ye, [de]);
              }
              return le.trim();
            }
            return 'row';
          }
          hasWrap(de) {
            return this.styler.hasWrap(de);
          }
          applyStyleToElement(de, q, le = this.nativeElement) {
            this.styler.applyStyleToElement(le, de, q);
          }
          setValue(de, q) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, de, q);
          }
          updateWithValue(de) {
            this.currentValue !== de && (this.addStyles(de), (this.currentValue = de));
          }
        }
        return (
          (zt.ɵfac = function (de) {
            return new (de || zt)(h.Y36(h.SBq), h.Y36(We), h.Y36($e), h.Y36(Le));
          }),
          (zt.ɵdir = h.lG2({ type: zt, features: [h.TTD] })),
          zt
        );
      })();
      function ln(zt, Wt = '1', de = '1') {
        let q = [Wt, de, zt],
          le = zt.indexOf('calc');
        if (le > 0) {
          q[2] = An(zt.substring(le).trim());
          let Z = zt.substr(0, le).trim().split(' ');
          2 == Z.length && ((q[0] = Z[0]), (q[1] = Z[1]));
        } else if (0 == le) q[2] = An(zt.trim());
        else {
          let Z = zt.split(' ');
          q = 3 === Z.length ? Z : [Wt, de, zt];
        }
        return q;
      }
      function An(zt) {
        return zt.replace(/[\s]/g, '').replace(/[\/\*\+\-]/g, ' $& ');
      }
      function Hn(zt, Wt) {
        if (void 0 === Wt) return zt;
        const de = (q) => {
          const le = +q.slice(0, -'x'.length);
          return zt.endsWith('x') && !isNaN(le) ? `${le * Wt.value}${Wt.unit}` : zt;
        };
        return zt.includes(' ') ? zt.split(' ').map(de).join(' ') : de(zt);
      }
    },
    3322: (un, ft, x) => {
      'use strict';
      x.d(ft, { oO: () => lt, b8: () => $e, Zl: () => St, aT: () => Ct });
      var h = x(5e3),
        m = x(3270),
        d = x(9808),
        N = x(3191),
        Ce = x(2722),
        Re = x(2313);
      let Qe = (() => {
        class st extends m.iR {
          constructor(yt, Ue, bt, at, mt, Nt, en) {
            super(yt, null, Ue, bt),
              (this.ngClassInstance = en),
              (this.DIRECTIVE_KEY = 'ngClass'),
              this.ngClassInstance || (this.ngClassInstance = new d.mk(at, mt, yt, Nt)),
              this.init(),
              this.setValue('', '');
          }
          set klass(yt) {
            (this.ngClassInstance.klass = yt), this.setValue(yt, '');
          }
          updateWithValue(yt) {
            (this.ngClassInstance.ngClass = yt), this.ngClassInstance.ngDoCheck();
          }
          ngDoCheck() {
            this.ngClassInstance.ngDoCheck();
          }
        }
        return (
          (st.ɵfac = function (yt) {
            return new (yt || st)(
              h.Y36(h.SBq),
              h.Y36(m.RK),
              h.Y36(m.yB),
              h.Y36(h.ZZ4),
              h.Y36(h.aQg),
              h.Y36(h.Qsj),
              h.Y36(d.mk, 10)
            );
          }),
          (st.ɵdir = h.lG2({ type: st, inputs: { klass: ['class', 'klass'] }, features: [h.qOj] })),
          st
        );
      })();
      const Oe = [
        'ngClass',
        'ngClass.xs',
        'ngClass.sm',
        'ngClass.md',
        'ngClass.lg',
        'ngClass.xl',
        'ngClass.lt-sm',
        'ngClass.lt-md',
        'ngClass.lt-lg',
        'ngClass.lt-xl',
        'ngClass.gt-xs',
        'ngClass.gt-sm',
        'ngClass.gt-md',
        'ngClass.gt-lg',
      ];
      let lt = (() => {
          class st extends Qe {
            constructor() {
              super(...arguments), (this.inputs = Oe);
            }
          }
          return (
            (st.ɵfac = (function () {
              let Et;
              return function (Ue) {
                return (Et || (Et = h.n5z(st)))(Ue || st);
              };
            })()),
            (st.ɵdir = h.lG2({
              type: st,
              selectors: [
                ['', 'ngClass', ''],
                ['', 'ngClass.xs', ''],
                ['', 'ngClass.sm', ''],
                ['', 'ngClass.md', ''],
                ['', 'ngClass.lg', ''],
                ['', 'ngClass.xl', ''],
                ['', 'ngClass.lt-sm', ''],
                ['', 'ngClass.lt-md', ''],
                ['', 'ngClass.lt-lg', ''],
                ['', 'ngClass.lt-xl', ''],
                ['', 'ngClass.gt-xs', ''],
                ['', 'ngClass.gt-sm', ''],
                ['', 'ngClass.gt-md', ''],
                ['', 'ngClass.gt-lg', ''],
              ],
              inputs: {
                ngClass: 'ngClass',
                'ngClass.xs': 'ngClass.xs',
                'ngClass.sm': 'ngClass.sm',
                'ngClass.md': 'ngClass.md',
                'ngClass.lg': 'ngClass.lg',
                'ngClass.xl': 'ngClass.xl',
                'ngClass.lt-sm': 'ngClass.lt-sm',
                'ngClass.lt-md': 'ngClass.lt-md',
                'ngClass.lt-lg': 'ngClass.lt-lg',
                'ngClass.lt-xl': 'ngClass.lt-xl',
                'ngClass.gt-xs': 'ngClass.gt-xs',
                'ngClass.gt-sm': 'ngClass.gt-sm',
                'ngClass.gt-md': 'ngClass.gt-md',
                'ngClass.gt-lg': 'ngClass.gt-lg',
              },
              features: [h.qOj],
            })),
            st
          );
        })(),
        me = (() => {
          class st extends m.QI {
            buildStyles(yt, Ue) {
              return { display: 'true' === yt ? Ue.display || (Ue.isServer ? 'initial' : '') : 'none' };
            }
          }
          return (
            (st.ɵfac = (function () {
              let Et;
              return function (Ue) {
                return (Et || (Et = h.n5z(st)))(Ue || st);
              };
            })()),
            (st.ɵprov = h.Yz7({ token: st, factory: st.ɵfac, providedIn: 'root' })),
            st
          );
        })(),
        Ze = (() => {
          class st extends m.iR {
            constructor(yt, Ue, bt, at, mt, Nt, en) {
              super(yt, Ue, bt, at),
                (this.layoutConfig = mt),
                (this.platformId = Nt),
                (this.serverModuleLoaded = en),
                (this.DIRECTIVE_KEY = 'show-hide'),
                (this.display = ''),
                (this.hasLayout = !1),
                (this.hasFlexChild = !1);
            }
            ngAfterViewInit() {
              this.trackExtraTriggers();
              const yt = Array.from(this.nativeElement.children);
              for (let bt = 0; bt < yt.length; bt++)
                if (this.marshal.hasValue(yt[bt], 'flex')) {
                  this.hasFlexChild = !0;
                  break;
                }
              dt.has(this.nativeElement)
                ? (this.display = dt.get(this.nativeElement))
                : ((this.display = this.getDisplayStyle()), dt.set(this.nativeElement, this.display)),
                this.init();
              const Ue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');
              void 0 === Ue || '' === Ue ? this.setValue(!0, '') : this.triggerUpdate();
            }
            ngOnChanges(yt) {
              Object.keys(yt).forEach((Ue) => {
                if (-1 !== this.inputs.indexOf(Ue)) {
                  const bt = Ue.split('.'),
                    at = bt.slice(1).join('.'),
                    mt = yt[Ue].currentValue;
                  let Nt = '' === mt || (0 !== mt && (0, N.Ig)(mt));
                  'fxHide' === bt[0] && (Nt = !Nt), this.setValue(Nt, at);
                }
              });
            }
            trackExtraTriggers() {
              (this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout')),
                ['layout', 'layout-align'].forEach((yt) => {
                  this.marshal
                    .trackValue(this.nativeElement, yt)
                    .pipe((0, Ce.R)(this.destroySubject))
                    .subscribe(this.triggerUpdate.bind(this));
                });
            }
            getDisplayStyle() {
              return this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)
                ? 'flex'
                : this.styler.lookupStyle(this.nativeElement, 'display', !0);
            }
            updateWithValue(yt = !0) {
              if ('' === yt) return;
              const Ue = (0, d.PM)(this.platformId);
              this.addStyles(yt ? 'true' : 'false', { display: this.display, isServer: Ue }),
                Ue && this.serverModuleLoaded && this.nativeElement.style.setProperty('display', ''),
                this.marshal.triggerUpdate(this.parentElement, 'layout-gap');
            }
          }
          return (
            (st.ɵfac = function (yt) {
              return new (yt || st)(
                h.Y36(h.SBq),
                h.Y36(me),
                h.Y36(m.RK),
                h.Y36(m.yB),
                h.Y36(m.WU),
                h.Y36(h.Lbi),
                h.Y36(m.wY)
              );
            }),
            (st.ɵdir = h.lG2({ type: st, features: [h.qOj, h.TTD] })),
            st
          );
        })();
      const dt = new WeakMap(),
        vt = [
          'fxShow',
          'fxShow.print',
          'fxShow.xs',
          'fxShow.sm',
          'fxShow.md',
          'fxShow.lg',
          'fxShow.xl',
          'fxShow.lt-sm',
          'fxShow.lt-md',
          'fxShow.lt-lg',
          'fxShow.lt-xl',
          'fxShow.gt-xs',
          'fxShow.gt-sm',
          'fxShow.gt-md',
          'fxShow.gt-lg',
          'fxHide',
          'fxHide.print',
          'fxHide.xs',
          'fxHide.sm',
          'fxHide.md',
          'fxHide.lg',
          'fxHide.xl',
          'fxHide.lt-sm',
          'fxHide.lt-md',
          'fxHide.lt-lg',
          'fxHide.lt-xl',
          'fxHide.gt-xs',
          'fxHide.gt-sm',
          'fxHide.gt-md',
          'fxHide.gt-lg',
        ];
      let $e = (() => {
        class st extends Ze {
          constructor() {
            super(...arguments), (this.inputs = vt);
          }
        }
        return (
          (st.ɵfac = (function () {
            let Et;
            return function (Ue) {
              return (Et || (Et = h.n5z(st)))(Ue || st);
            };
          })()),
          (st.ɵdir = h.lG2({
            type: st,
            selectors: [
              ['', 'fxShow', ''],
              ['', 'fxShow.print', ''],
              ['', 'fxShow.xs', ''],
              ['', 'fxShow.sm', ''],
              ['', 'fxShow.md', ''],
              ['', 'fxShow.lg', ''],
              ['', 'fxShow.xl', ''],
              ['', 'fxShow.lt-sm', ''],
              ['', 'fxShow.lt-md', ''],
              ['', 'fxShow.lt-lg', ''],
              ['', 'fxShow.lt-xl', ''],
              ['', 'fxShow.gt-xs', ''],
              ['', 'fxShow.gt-sm', ''],
              ['', 'fxShow.gt-md', ''],
              ['', 'fxShow.gt-lg', ''],
              ['', 'fxHide', ''],
              ['', 'fxHide.print', ''],
              ['', 'fxHide.xs', ''],
              ['', 'fxHide.sm', ''],
              ['', 'fxHide.md', ''],
              ['', 'fxHide.lg', ''],
              ['', 'fxHide.xl', ''],
              ['', 'fxHide.lt-sm', ''],
              ['', 'fxHide.lt-md', ''],
              ['', 'fxHide.lt-lg', ''],
              ['', 'fxHide.lt-xl', ''],
              ['', 'fxHide.gt-xs', ''],
              ['', 'fxHide.gt-sm', ''],
              ['', 'fxHide.gt-md', ''],
              ['', 'fxHide.gt-lg', ''],
            ],
            inputs: {
              fxShow: 'fxShow',
              'fxShow.print': 'fxShow.print',
              'fxShow.xs': 'fxShow.xs',
              'fxShow.sm': 'fxShow.sm',
              'fxShow.md': 'fxShow.md',
              'fxShow.lg': 'fxShow.lg',
              'fxShow.xl': 'fxShow.xl',
              'fxShow.lt-sm': 'fxShow.lt-sm',
              'fxShow.lt-md': 'fxShow.lt-md',
              'fxShow.lt-lg': 'fxShow.lt-lg',
              'fxShow.lt-xl': 'fxShow.lt-xl',
              'fxShow.gt-xs': 'fxShow.gt-xs',
              'fxShow.gt-sm': 'fxShow.gt-sm',
              'fxShow.gt-md': 'fxShow.gt-md',
              'fxShow.gt-lg': 'fxShow.gt-lg',
              fxHide: 'fxHide',
              'fxHide.print': 'fxHide.print',
              'fxHide.xs': 'fxHide.xs',
              'fxHide.sm': 'fxHide.sm',
              'fxHide.md': 'fxHide.md',
              'fxHide.lg': 'fxHide.lg',
              'fxHide.xl': 'fxHide.xl',
              'fxHide.lt-sm': 'fxHide.lt-sm',
              'fxHide.lt-md': 'fxHide.lt-md',
              'fxHide.lt-lg': 'fxHide.lt-lg',
              'fxHide.lt-xl': 'fxHide.lt-xl',
              'fxHide.gt-xs': 'fxHide.gt-xs',
              'fxHide.gt-sm': 'fxHide.gt-sm',
              'fxHide.gt-md': 'fxHide.gt-md',
              'fxHide.gt-lg': 'fxHide.gt-lg',
            },
            features: [h.qOj],
          })),
          st
        );
      })();
      class ge {
        constructor(Et, yt, Ue = !0) {
          (this.key = Et),
            (this.value = yt),
            (this.key = Ue ? Et.replace(/['"]/g, '').trim() : Et.trim()),
            (this.value = Ue ? yt.replace(/['"]/g, '').trim() : yt.trim()),
            (this.value = this.value.replace(/;/, ''));
        }
      }
      function Ke(st) {
        let Et = typeof st;
        return 'object' === Et ? (st.constructor === Array ? 'array' : st.constructor === Set ? 'set' : 'object') : Et;
      }
      function it(st) {
        const [Et, ...yt] = st.split(':');
        return new ge(Et, yt.join(':'));
      }
      function qe(st, Et) {
        return Et.key && (st[Et.key] = Et.value), st;
      }
      let Ve = (() => {
        class st extends m.iR {
          constructor(yt, Ue, bt, at, mt, Nt, en, xt, Gt) {
            var re;
            super(yt, null, Ue, bt),
              (this.sanitizer = at),
              (this.ngStyleInstance = en),
              (this.DIRECTIVE_KEY = 'ngStyle'),
              this.ngStyleInstance || (this.ngStyleInstance = new d.PC(yt, mt, Nt)),
              this.init();
            const ot = null !== (re = this.nativeElement.getAttribute('style')) && void 0 !== re ? re : '';
            (this.fallbackStyles = this.buildStyleMap(ot)), (this.isServer = xt && (0, d.PM)(Gt));
          }
          updateWithValue(yt) {
            const Ue = this.buildStyleMap(yt);
            (this.ngStyleInstance.ngStyle = Object.assign(Object.assign({}, this.fallbackStyles), Ue)),
              this.isServer && this.applyStyleToElement(Ue),
              this.ngStyleInstance.ngDoCheck();
          }
          clearStyles() {
            (this.ngStyleInstance.ngStyle = this.fallbackStyles), this.ngStyleInstance.ngDoCheck();
          }
          buildStyleMap(yt) {
            const Ue = (bt) => {
              var at;
              return null !== (at = this.sanitizer.sanitize(h.q3G.STYLE, bt)) && void 0 !== at ? at : '';
            };
            if (yt)
              switch (Ke(yt)) {
                case 'string':
                  return on(
                    (function Ie(st, Et = ';') {
                      return String(st)
                        .trim()
                        .split(Et)
                        .map((yt) => yt.trim())
                        .filter((yt) => '' !== yt);
                    })(yt),
                    Ue
                  );
                case 'array':
                  return on(yt, Ue);
                default:
                  return (function Ye(st, Et) {
                    let yt = [];
                    return (
                      'set' === Ke(st)
                        ? st.forEach((Ue) => yt.push(Ue))
                        : Object.keys(st).forEach((Ue) => {
                            yt.push(`${Ue}:${st[Ue]}`);
                          }),
                      (function De(st, Et) {
                        return st
                          .map(it)
                          .filter((Ue) => !!Ue)
                          .map((Ue) => (Et && (Ue.value = Et(Ue.value)), Ue))
                          .reduce(qe, {});
                      })(yt, Et)
                    );
                  })(yt, Ue);
              }
            return {};
          }
          ngDoCheck() {
            this.ngStyleInstance.ngDoCheck();
          }
        }
        return (
          (st.ɵfac = function (yt) {
            return new (yt || st)(
              h.Y36(h.SBq),
              h.Y36(m.RK),
              h.Y36(m.yB),
              h.Y36(Re.H7),
              h.Y36(h.aQg),
              h.Y36(h.Qsj),
              h.Y36(d.PC, 10),
              h.Y36(m.wY),
              h.Y36(h.Lbi)
            );
          }),
          (st.ɵdir = h.lG2({ type: st, features: [h.qOj] })),
          st
        );
      })();
      const Ft = [
        'ngStyle',
        'ngStyle.xs',
        'ngStyle.sm',
        'ngStyle.md',
        'ngStyle.lg',
        'ngStyle.xl',
        'ngStyle.lt-sm',
        'ngStyle.lt-md',
        'ngStyle.lt-lg',
        'ngStyle.lt-xl',
        'ngStyle.gt-xs',
        'ngStyle.gt-sm',
        'ngStyle.gt-md',
        'ngStyle.gt-lg',
      ];
      let St = (() => {
        class st extends Ve {
          constructor() {
            super(...arguments), (this.inputs = Ft);
          }
        }
        return (
          (st.ɵfac = (function () {
            let Et;
            return function (Ue) {
              return (Et || (Et = h.n5z(st)))(Ue || st);
            };
          })()),
          (st.ɵdir = h.lG2({
            type: st,
            selectors: [
              ['', 'ngStyle', ''],
              ['', 'ngStyle.xs', ''],
              ['', 'ngStyle.sm', ''],
              ['', 'ngStyle.md', ''],
              ['', 'ngStyle.lg', ''],
              ['', 'ngStyle.xl', ''],
              ['', 'ngStyle.lt-sm', ''],
              ['', 'ngStyle.lt-md', ''],
              ['', 'ngStyle.lt-lg', ''],
              ['', 'ngStyle.lt-xl', ''],
              ['', 'ngStyle.gt-xs', ''],
              ['', 'ngStyle.gt-sm', ''],
              ['', 'ngStyle.gt-md', ''],
              ['', 'ngStyle.gt-lg', ''],
            ],
            inputs: {
              ngStyle: 'ngStyle',
              'ngStyle.xs': 'ngStyle.xs',
              'ngStyle.sm': 'ngStyle.sm',
              'ngStyle.md': 'ngStyle.md',
              'ngStyle.lg': 'ngStyle.lg',
              'ngStyle.xl': 'ngStyle.xl',
              'ngStyle.lt-sm': 'ngStyle.lt-sm',
              'ngStyle.lt-md': 'ngStyle.lt-md',
              'ngStyle.lt-lg': 'ngStyle.lt-lg',
              'ngStyle.lt-xl': 'ngStyle.lt-xl',
              'ngStyle.gt-xs': 'ngStyle.gt-xs',
              'ngStyle.gt-sm': 'ngStyle.gt-sm',
              'ngStyle.gt-md': 'ngStyle.gt-md',
              'ngStyle.gt-lg': 'ngStyle.gt-lg',
            },
            features: [h.qOj],
          })),
          st
        );
      })();
      function on(st, Et) {
        return st
          .map(it)
          .filter((Ue) => !!Ue)
          .map((Ue) => (Et && (Ue.value = Et(Ue.value)), Ue))
          .reduce(qe, {});
      }
      let Ct = (() => {
        class st {}
        return (
          (st.ɵfac = function (yt) {
            return new (yt || st)();
          }),
          (st.ɵmod = h.oAB({ type: st })),
          (st.ɵinj = h.cJS({ imports: [[m.IR]] })),
          st
        );
      })();
    },
    7093: (un, ft, x) => {
      'use strict';
      x.d(ft, { yH: () => kt, Wh: () => An, xw: () => fe, SQ: () => Ze, s9: () => we, ae: () => ie });
      var h = x(5e3),
        m = x(226),
        d = x(3270),
        N = x(9042),
        Ce = x(7579),
        Re = x(2722);
      let He = (() => {
        class he extends d.QI {
          buildStyles(pe, { display: _e }) {
            const Xe = (0, N.Ar)(pe);
            return Object.assign(Object.assign({}, Xe), { display: 'none' === _e ? _e : Xe.display });
          }
        }
        return (
          (he.ɵfac = (function () {
            let Te;
            return function (_e) {
              return (Te || (Te = h.n5z(he)))(_e || he);
            };
          })()),
          (he.ɵprov = h.Yz7({ token: he, factory: he.ɵfac, providedIn: 'root' })),
          he
        );
      })();
      const Fe = [
        'fxLayout',
        'fxLayout.xs',
        'fxLayout.sm',
        'fxLayout.md',
        'fxLayout.lg',
        'fxLayout.xl',
        'fxLayout.lt-sm',
        'fxLayout.lt-md',
        'fxLayout.lt-lg',
        'fxLayout.lt-xl',
        'fxLayout.gt-xs',
        'fxLayout.gt-sm',
        'fxLayout.gt-md',
        'fxLayout.gt-lg',
      ];
      let ee = (() => {
          class he extends d.iR {
            constructor(pe, _e, Xe, Ot, Yt) {
              super(pe, Xe, _e, Ot), (this._config = Yt), (this.DIRECTIVE_KEY = 'layout'), this.init();
            }
            updateWithValue(pe) {
              var _e;
              const Ot = this._config.detectLayoutDisplay ? this.styler.lookupStyle(this.nativeElement, 'display') : '';
              (this.styleCache = null !== (_e = ue.get(Ot)) && void 0 !== _e ? _e : new Map()),
                ue.set(Ot, this.styleCache),
                this.currentValue !== pe && (this.addStyles(pe, { display: Ot }), (this.currentValue = pe));
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(h.Y36(h.SBq), h.Y36(d.RK), h.Y36(He), h.Y36(d.yB), h.Y36(d.WU));
            }),
            (he.ɵdir = h.lG2({ type: he, features: [h.qOj] })),
            he
          );
        })(),
        fe = (() => {
          class he extends ee {
            constructor() {
              super(...arguments), (this.inputs = Fe);
            }
          }
          return (
            (he.ɵfac = (function () {
              let Te;
              return function (_e) {
                return (Te || (Te = h.n5z(he)))(_e || he);
              };
            })()),
            (he.ɵdir = h.lG2({
              type: he,
              selectors: [
                ['', 'fxLayout', ''],
                ['', 'fxLayout.xs', ''],
                ['', 'fxLayout.sm', ''],
                ['', 'fxLayout.md', ''],
                ['', 'fxLayout.lg', ''],
                ['', 'fxLayout.xl', ''],
                ['', 'fxLayout.lt-sm', ''],
                ['', 'fxLayout.lt-md', ''],
                ['', 'fxLayout.lt-lg', ''],
                ['', 'fxLayout.lt-xl', ''],
                ['', 'fxLayout.gt-xs', ''],
                ['', 'fxLayout.gt-sm', ''],
                ['', 'fxLayout.gt-md', ''],
                ['', 'fxLayout.gt-lg', ''],
              ],
              inputs: {
                fxLayout: 'fxLayout',
                'fxLayout.xs': 'fxLayout.xs',
                'fxLayout.sm': 'fxLayout.sm',
                'fxLayout.md': 'fxLayout.md',
                'fxLayout.lg': 'fxLayout.lg',
                'fxLayout.xl': 'fxLayout.xl',
                'fxLayout.lt-sm': 'fxLayout.lt-sm',
                'fxLayout.lt-md': 'fxLayout.lt-md',
                'fxLayout.lt-lg': 'fxLayout.lt-lg',
                'fxLayout.lt-xl': 'fxLayout.lt-xl',
                'fxLayout.gt-xs': 'fxLayout.gt-xs',
                'fxLayout.gt-sm': 'fxLayout.gt-sm',
                'fxLayout.gt-md': 'fxLayout.gt-md',
                'fxLayout.gt-lg': 'fxLayout.gt-lg',
              },
              features: [h.qOj],
            })),
            he
          );
        })();
      const ue = new Map(),
        Qe = { 'margin-left': null, 'margin-right': null, 'margin-top': null, 'margin-bottom': null };
      let Oe = (() => {
        class he extends d.QI {
          constructor(pe, _e) {
            super(), (this._styler = pe), (this._config = _e);
          }
          buildStyles(pe, _e) {
            return pe.endsWith(ge)
              ? ((pe = pe.slice(0, pe.indexOf(ge))),
                (function Ie(he, Te) {
                  const [pe, _e] = he.split(' '),
                    Ot = (Ai) => `-${Ai}`;
                  let Yt = '0px',
                    _n = Ot(null != _e ? _e : pe),
                    Qn = '0px';
                  return 'rtl' === Te ? (Qn = Ot(pe)) : (Yt = Ot(pe)), { margin: `0px ${Yt} ${_n} ${Qn}` };
                })((pe = (0, d.FL)(pe, this._config.multiplier)), _e.directionality))
              : {};
          }
          sideEffect(pe, _e, Xe) {
            const Ot = Xe.items;
            if (pe.endsWith(ge)) {
              pe = pe.slice(0, pe.indexOf(ge));
              const Yt = (function Ke(he, Te) {
                const [pe, _e] = he.split(' ');
                let Ot = '0px',
                  _n = '0px';
                return 'rtl' === Te ? (_n = pe) : (Ot = pe), { padding: `0px ${Ot} ${null != _e ? _e : pe} ${_n}` };
              })((pe = (0, d.FL)(pe, this._config.multiplier)), Xe.directionality);
              this._styler.applyStyleToElements(Yt, Xe.items);
            } else {
              (pe = (0, d.FL)(pe, this._config.multiplier)), (pe = this.addFallbackUnit(pe));
              const Yt = Ot.pop(),
                _n = (function Ye(he, Te) {
                  const pe = De(Te.directionality, Te.layout),
                    _e = Object.assign({}, Qe);
                  return (_e[pe] = he), _e;
                })(pe, Xe);
              this._styler.applyStyleToElements(_n, Ot), this._styler.applyStyleToElements(Qe, [Yt]);
            }
          }
          addFallbackUnit(pe) {
            return isNaN(+pe) ? pe : `${pe}${this._config.defaultUnit}`;
          }
        }
        return (
          (he.ɵfac = function (pe) {
            return new (pe || he)(h.LFG(d.RK), h.LFG(d.WU));
          }),
          (he.ɵprov = h.Yz7({ token: he, factory: he.ɵfac, providedIn: 'root' })),
          he
        );
      })();
      const et = [
        'fxLayoutGap',
        'fxLayoutGap.xs',
        'fxLayoutGap.sm',
        'fxLayoutGap.md',
        'fxLayoutGap.lg',
        'fxLayoutGap.xl',
        'fxLayoutGap.lt-sm',
        'fxLayoutGap.lt-md',
        'fxLayoutGap.lt-lg',
        'fxLayoutGap.lt-xl',
        'fxLayoutGap.gt-xs',
        'fxLayoutGap.gt-sm',
        'fxLayoutGap.gt-md',
        'fxLayoutGap.gt-lg',
      ];
      let me = (() => {
          class he extends d.iR {
            constructor(pe, _e, Xe, Ot, Yt, _n) {
              super(pe, Yt, Ot, _n),
                (this.zone = _e),
                (this.directionality = Xe),
                (this.styleUtils = Ot),
                (this.layout = 'row'),
                (this.DIRECTIVE_KEY = 'layout-gap'),
                (this.observerSubject = new Ce.x());
              const Qn = [this.directionality.change, this.observerSubject.asObservable()];
              this.init(Qn),
                this.marshal
                  .trackValue(this.nativeElement, 'layout')
                  .pipe((0, Re.R)(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this));
            }
            get childrenNodes() {
              const pe = this.nativeElement.children,
                _e = [];
              for (let Xe = pe.length; Xe--; ) _e[Xe] = pe[Xe];
              return _e;
            }
            ngAfterContentInit() {
              this.buildChildObservable(), this.triggerUpdate();
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.observer && this.observer.disconnect();
            }
            onLayoutChange(pe) {
              const Xe = pe.value.split(' ');
              (this.layout = Xe[0]),
                N.iQ.find((Ot) => Ot === this.layout) || (this.layout = 'row'),
                this.triggerUpdate();
            }
            updateWithValue(pe) {
              const _e = this.childrenNodes
                .filter((Xe) => 1 === Xe.nodeType && this.willDisplay(Xe))
                .sort((Xe, Ot) => {
                  const Yt = +this.styler.lookupStyle(Xe, 'order'),
                    _n = +this.styler.lookupStyle(Ot, 'order');
                  return isNaN(Yt) || isNaN(_n) || Yt === _n ? 0 : Yt > _n ? 1 : -1;
                });
              if (_e.length > 0) {
                const Xe = this.directionality.value,
                  Ot = this.layout;
                'row' === Ot && 'rtl' === Xe
                  ? (this.styleCache = dt)
                  : 'row' === Ot && 'rtl' !== Xe
                  ? (this.styleCache = We)
                  : 'column' === Ot && 'rtl' === Xe
                  ? (this.styleCache = vt)
                  : 'column' === Ot && 'rtl' !== Xe && (this.styleCache = $e),
                  this.addStyles(pe, { directionality: Xe, items: _e, layout: Ot });
              }
            }
            clearStyles() {
              const pe = Object.keys(this.mru).length > 0,
                _e = pe ? 'padding' : De(this.directionality.value, this.layout);
              pe && super.clearStyles(), this.styleUtils.applyStyleToElements({ [_e]: '' }, this.childrenNodes);
            }
            willDisplay(pe) {
              const _e = this.marshal.getValue(pe, 'show-hide');
              return !0 === _e || (void 0 === _e && 'none' !== this.styleUtils.lookupStyle(pe, 'display'));
            }
            buildChildObservable() {
              this.zone.runOutsideAngular(() => {
                'undefined' != typeof MutationObserver &&
                  ((this.observer = new MutationObserver((pe) => {
                    pe.some(
                      (Xe) =>
                        (Xe.addedNodes && Xe.addedNodes.length > 0) || (Xe.removedNodes && Xe.removedNodes.length > 0)
                    ) && this.observerSubject.next();
                  })),
                  this.observer.observe(this.nativeElement, { childList: !0 }));
              });
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(h.Y36(h.SBq), h.Y36(h.R0b), h.Y36(m.Is), h.Y36(d.RK), h.Y36(Oe), h.Y36(d.yB));
            }),
            (he.ɵdir = h.lG2({ type: he, features: [h.qOj] })),
            he
          );
        })(),
        Ze = (() => {
          class he extends me {
            constructor() {
              super(...arguments), (this.inputs = et);
            }
          }
          return (
            (he.ɵfac = (function () {
              let Te;
              return function (_e) {
                return (Te || (Te = h.n5z(he)))(_e || he);
              };
            })()),
            (he.ɵdir = h.lG2({
              type: he,
              selectors: [
                ['', 'fxLayoutGap', ''],
                ['', 'fxLayoutGap.xs', ''],
                ['', 'fxLayoutGap.sm', ''],
                ['', 'fxLayoutGap.md', ''],
                ['', 'fxLayoutGap.lg', ''],
                ['', 'fxLayoutGap.xl', ''],
                ['', 'fxLayoutGap.lt-sm', ''],
                ['', 'fxLayoutGap.lt-md', ''],
                ['', 'fxLayoutGap.lt-lg', ''],
                ['', 'fxLayoutGap.lt-xl', ''],
                ['', 'fxLayoutGap.gt-xs', ''],
                ['', 'fxLayoutGap.gt-sm', ''],
                ['', 'fxLayoutGap.gt-md', ''],
                ['', 'fxLayoutGap.gt-lg', ''],
              ],
              inputs: {
                fxLayoutGap: 'fxLayoutGap',
                'fxLayoutGap.xs': 'fxLayoutGap.xs',
                'fxLayoutGap.sm': 'fxLayoutGap.sm',
                'fxLayoutGap.md': 'fxLayoutGap.md',
                'fxLayoutGap.lg': 'fxLayoutGap.lg',
                'fxLayoutGap.xl': 'fxLayoutGap.xl',
                'fxLayoutGap.lt-sm': 'fxLayoutGap.lt-sm',
                'fxLayoutGap.lt-md': 'fxLayoutGap.lt-md',
                'fxLayoutGap.lt-lg': 'fxLayoutGap.lt-lg',
                'fxLayoutGap.lt-xl': 'fxLayoutGap.lt-xl',
                'fxLayoutGap.gt-xs': 'fxLayoutGap.gt-xs',
                'fxLayoutGap.gt-sm': 'fxLayoutGap.gt-sm',
                'fxLayoutGap.gt-md': 'fxLayoutGap.gt-md',
                'fxLayoutGap.gt-lg': 'fxLayoutGap.gt-lg',
              },
              features: [h.qOj],
            })),
            he
          );
        })();
      const dt = new Map(),
        vt = new Map(),
        We = new Map(),
        $e = new Map(),
        ge = ' grid';
      function De(he, Te) {
        switch (Te) {
          case 'column':
            return 'margin-bottom';
          case 'column-reverse':
            return 'margin-top';
          case 'row':
          default:
            return 'rtl' === he ? 'margin-left' : 'margin-right';
          case 'row-reverse':
            return 'rtl' === he ? 'margin-right' : 'margin-left';
        }
      }
      let it = (() => {
        class he extends d.QI {
          constructor(pe) {
            super(), (this.layoutConfig = pe);
          }
          buildStyles(pe, _e) {
            let [Xe, Ot, ...Yt] = pe.split(' '),
              _n = Yt.join(' ');
            const Qn = _e.direction.indexOf('column') > -1 ? 'column' : 'row',
              Ai = (0, N.tj)(Qn) ? 'max-width' : 'max-height',
              jt = (0, N.tj)(Qn) ? 'min-width' : 'min-height',
              wt = String(_n).indexOf('calc') > -1,
              nt = wt || 'auto' === _n,
              Pt = String(_n).indexOf('%') > -1 && !wt,
              dn =
                String(_n).indexOf('px') > -1 ||
                String(_n).indexOf('rem') > -1 ||
                String(_n).indexOf('em') > -1 ||
                String(_n).indexOf('vw') > -1 ||
                String(_n).indexOf('vh') > -1;
            let kn = wt || dn;
            (Xe = '0' == Xe ? 0 : Xe), (Ot = '0' == Ot ? 0 : Ot);
            const Gn = !Xe && !Ot;
            let Jn = {};
            const Ci = { 'max-width': null, 'max-height': null, 'min-width': null, 'min-height': null };
            switch (_n || '') {
              case '':
                const ar = !1 !== this.layoutConfig.useColumnBasisZero;
                _n = 'row' === Qn ? '0%' : ar ? '0.000000001px' : 'auto';
                break;
              case 'initial':
              case 'nogrow':
                (Xe = 0), (_n = 'auto');
                break;
              case 'grow':
                _n = '100%';
                break;
              case 'noshrink':
                (Ot = 0), (_n = 'auto');
                break;
              case 'auto':
                break;
              case 'none':
                (Xe = 0), (Ot = 0), (_n = 'auto');
                break;
              default:
                !kn && !Pt && !isNaN(_n) && (_n += '%'),
                  '0%' === _n && (kn = !0),
                  '0px' === _n && (_n = '0%'),
                  (Jn = (0, N.kt)(
                    Ci,
                    wt
                      ? { 'flex-grow': Xe, 'flex-shrink': Ot, 'flex-basis': kn ? _n : '100%' }
                      : { flex: `${Xe} ${Ot} ${kn ? _n : '100%'}` }
                  ));
            }
            return (
              Jn.flex ||
                Jn['flex-grow'] ||
                (Jn = (0, N.kt)(
                  Ci,
                  wt ? { 'flex-grow': Xe, 'flex-shrink': Ot, 'flex-basis': _n } : { flex: `${Xe} ${Ot} ${_n}` }
                )),
              '0%' !== _n &&
                '0px' !== _n &&
                '0.000000001px' !== _n &&
                'auto' !== _n &&
                ((Jn[jt] = Gn || (kn && Xe) ? _n : null), (Jn[Ai] = Gn || (!nt && Ot) ? _n : null)),
              Jn[jt] || Jn[Ai]
                ? _e.hasWrap &&
                  (Jn[wt ? 'flex-basis' : 'flex'] = Jn[Ai]
                    ? wt
                      ? Jn[Ai]
                      : `${Xe} ${Ot} ${Jn[Ai]}`
                    : wt
                    ? Jn[jt]
                    : `${Xe} ${Ot} ${Jn[jt]}`)
                : (Jn = (0, N.kt)(
                    Ci,
                    wt ? { 'flex-grow': Xe, 'flex-shrink': Ot, 'flex-basis': _n } : { flex: `${Xe} ${Ot} ${_n}` }
                  )),
              (0, N.kt)(Jn, { 'box-sizing': 'border-box' })
            );
          }
        }
        return (
          (he.ɵfac = function (pe) {
            return new (pe || he)(h.LFG(d.WU));
          }),
          (he.ɵprov = h.Yz7({ token: he, factory: he.ɵfac, providedIn: 'root' })),
          he
        );
      })();
      const qe = [
        'fxFlex',
        'fxFlex.xs',
        'fxFlex.sm',
        'fxFlex.md',
        'fxFlex.lg',
        'fxFlex.xl',
        'fxFlex.lt-sm',
        'fxFlex.lt-md',
        'fxFlex.lt-lg',
        'fxFlex.lt-xl',
        'fxFlex.gt-xs',
        'fxFlex.gt-sm',
        'fxFlex.gt-md',
        'fxFlex.gt-lg',
      ];
      let Ft = (() => {
          class he extends d.iR {
            constructor(pe, _e, Xe, Ot, Yt) {
              super(pe, Ot, _e, Yt),
                (this.layoutConfig = Xe),
                (this.marshal = Yt),
                (this.DIRECTIVE_KEY = 'flex'),
                (this.direction = void 0),
                (this.wrap = void 0),
                (this.flexGrow = '1'),
                (this.flexShrink = '1'),
                this.init();
            }
            get shrink() {
              return this.flexShrink;
            }
            set shrink(pe) {
              (this.flexShrink = pe || '1'), this.triggerReflow();
            }
            get grow() {
              return this.flexGrow;
            }
            set grow(pe) {
              (this.flexGrow = pe || '1'), this.triggerReflow();
            }
            ngOnInit() {
              this.parentElement &&
                (this.marshal
                  .trackValue(this.parentElement, 'layout')
                  .pipe((0, Re.R)(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this)),
                this.marshal
                  .trackValue(this.nativeElement, 'layout-align')
                  .pipe((0, Re.R)(this.destroySubject))
                  .subscribe(this.triggerReflow.bind(this)));
            }
            onLayoutChange(pe) {
              const Xe = pe.value.split(' ');
              (this.direction = Xe[0]), (this.wrap = void 0 !== Xe[1] && 'wrap' === Xe[1]), this.triggerUpdate();
            }
            updateWithValue(pe) {
              void 0 === this.direction &&
                (this.direction = this.getFlexFlowDirection(
                  this.parentElement,
                  !1 !== this.layoutConfig.addFlexToParent
                )),
                void 0 === this.wrap && (this.wrap = this.hasWrap(this.parentElement));
              const Xe = this.direction,
                Ot = Xe.startsWith('row'),
                Yt = this.wrap;
              Ot && Yt
                ? (this.styleCache = Je)
                : Ot && !Yt
                ? (this.styleCache = St)
                : !Ot && Yt
                ? (this.styleCache = Ct)
                : !Ot && !Yt && (this.styleCache = on);
              const _n = String(pe).replace(';', ''),
                Qn = (0, d.Ot)(_n, this.flexGrow, this.flexShrink);
              this.addStyles(Qn.join(' '), { direction: Xe, hasWrap: Yt });
            }
            triggerReflow() {
              const pe = this.activatedValue;
              if (void 0 !== pe) {
                const _e = (0, d.Ot)(pe + '', this.flexGrow, this.flexShrink);
                this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, _e.join(' '));
              }
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(h.Y36(h.SBq), h.Y36(d.RK), h.Y36(d.WU), h.Y36(it), h.Y36(d.yB));
            }),
            (he.ɵdir = h.lG2({
              type: he,
              inputs: { shrink: ['fxShrink', 'shrink'], grow: ['fxGrow', 'grow'] },
              features: [h.qOj],
            })),
            he
          );
        })(),
        kt = (() => {
          class he extends Ft {
            constructor() {
              super(...arguments), (this.inputs = qe);
            }
          }
          return (
            (he.ɵfac = (function () {
              let Te;
              return function (_e) {
                return (Te || (Te = h.n5z(he)))(_e || he);
              };
            })()),
            (he.ɵdir = h.lG2({
              type: he,
              selectors: [
                ['', 'fxFlex', ''],
                ['', 'fxFlex.xs', ''],
                ['', 'fxFlex.sm', ''],
                ['', 'fxFlex.md', ''],
                ['', 'fxFlex.lg', ''],
                ['', 'fxFlex.xl', ''],
                ['', 'fxFlex.lt-sm', ''],
                ['', 'fxFlex.lt-md', ''],
                ['', 'fxFlex.lt-lg', ''],
                ['', 'fxFlex.lt-xl', ''],
                ['', 'fxFlex.gt-xs', ''],
                ['', 'fxFlex.gt-sm', ''],
                ['', 'fxFlex.gt-md', ''],
                ['', 'fxFlex.gt-lg', ''],
              ],
              inputs: {
                fxFlex: 'fxFlex',
                'fxFlex.xs': 'fxFlex.xs',
                'fxFlex.sm': 'fxFlex.sm',
                'fxFlex.md': 'fxFlex.md',
                'fxFlex.lg': 'fxFlex.lg',
                'fxFlex.xl': 'fxFlex.xl',
                'fxFlex.lt-sm': 'fxFlex.lt-sm',
                'fxFlex.lt-md': 'fxFlex.lt-md',
                'fxFlex.lt-lg': 'fxFlex.lt-lg',
                'fxFlex.lt-xl': 'fxFlex.lt-xl',
                'fxFlex.gt-xs': 'fxFlex.gt-xs',
                'fxFlex.gt-sm': 'fxFlex.gt-sm',
                'fxFlex.gt-md': 'fxFlex.gt-md',
                'fxFlex.gt-lg': 'fxFlex.gt-lg',
              },
              features: [h.qOj],
            })),
            he
          );
        })();
      const St = new Map(),
        on = new Map(),
        Je = new Map(),
        Ct = new Map(),
        Pe = { margin: 0, width: '100%', height: '100%', 'min-width': '100%', 'min-height': '100%' };
      let X = (() => {
          class he extends d.QI {
            buildStyles(pe) {
              return Pe;
            }
          }
          return (
            (he.ɵfac = (function () {
              let Te;
              return function (_e) {
                return (Te || (Te = h.n5z(he)))(_e || he);
              };
            })()),
            (he.ɵprov = h.Yz7({ token: he, factory: he.ɵfac, providedIn: 'root' })),
            he
          );
        })(),
        we = (() => {
          class he extends d.iR {
            constructor(pe, _e, Xe, Ot) {
              super(pe, Xe, _e, Ot), (this.styleCache = Rt), this.addStyles('');
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(h.Y36(h.SBq), h.Y36(d.RK), h.Y36(X), h.Y36(d.yB));
            }),
            (he.ɵdir = h.lG2({
              type: he,
              selectors: [
                ['', 'fxFill', ''],
                ['', 'fxFlexFill', ''],
              ],
              features: [h.qOj],
            })),
            he
          );
        })();
      const Rt = new Map();
      let It = (() => {
        class he extends d.QI {
          buildStyles(pe, _e) {
            const Xe = {},
              [Ot, Yt] = pe.split(' ');
            switch (Ot) {
              case 'center':
                Xe['justify-content'] = 'center';
                break;
              case 'space-around':
                Xe['justify-content'] = 'space-around';
                break;
              case 'space-between':
                Xe['justify-content'] = 'space-between';
                break;
              case 'space-evenly':
                Xe['justify-content'] = 'space-evenly';
                break;
              case 'end':
              case 'flex-end':
                Xe['justify-content'] = 'flex-end';
                break;
              default:
                Xe['justify-content'] = 'flex-start';
            }
            switch (Yt) {
              case 'start':
              case 'flex-start':
                Xe['align-items'] = Xe['align-content'] = 'flex-start';
                break;
              case 'center':
                Xe['align-items'] = Xe['align-content'] = 'center';
                break;
              case 'end':
              case 'flex-end':
                Xe['align-items'] = Xe['align-content'] = 'flex-end';
                break;
              case 'space-between':
                (Xe['align-content'] = 'space-between'), (Xe['align-items'] = 'stretch');
                break;
              case 'space-around':
                (Xe['align-content'] = 'space-around'), (Xe['align-items'] = 'stretch');
                break;
              case 'baseline':
                (Xe['align-content'] = 'stretch'), (Xe['align-items'] = 'baseline');
                break;
              default:
                Xe['align-items'] = Xe['align-content'] = 'stretch';
            }
            return (0, N.kt)(Xe, {
              display: _e.inline ? 'inline-flex' : 'flex',
              'flex-direction': _e.layout,
              'box-sizing': 'border-box',
              'max-width': 'stretch' === Yt ? ((0, N.tj)(_e.layout) ? null : '100%') : null,
              'max-height': 'stretch' === Yt && (0, N.tj)(_e.layout) ? '100%' : null,
            });
          }
        }
        return (
          (he.ɵfac = (function () {
            let Te;
            return function (_e) {
              return (Te || (Te = h.n5z(he)))(_e || he);
            };
          })()),
          (he.ɵprov = h.Yz7({ token: he, factory: he.ɵfac, providedIn: 'root' })),
          he
        );
      })();
      const an = [
        'fxLayoutAlign',
        'fxLayoutAlign.xs',
        'fxLayoutAlign.sm',
        'fxLayoutAlign.md',
        'fxLayoutAlign.lg',
        'fxLayoutAlign.xl',
        'fxLayoutAlign.lt-sm',
        'fxLayoutAlign.lt-md',
        'fxLayoutAlign.lt-lg',
        'fxLayoutAlign.lt-xl',
        'fxLayoutAlign.gt-xs',
        'fxLayoutAlign.gt-sm',
        'fxLayoutAlign.gt-md',
        'fxLayoutAlign.gt-lg',
      ];
      let ln = (() => {
          class he extends d.iR {
            constructor(pe, _e, Xe, Ot) {
              super(pe, Xe, _e, Ot),
                (this.DIRECTIVE_KEY = 'layout-align'),
                (this.layout = 'row'),
                (this.inline = !1),
                this.init(),
                this.marshal
                  .trackValue(this.nativeElement, 'layout')
                  .pipe((0, Re.R)(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this));
            }
            updateWithValue(pe) {
              const _e = this.layout || 'row',
                Xe = this.inline;
              'row' === _e && Xe
                ? (this.styleCache = de)
                : 'row' !== _e || Xe
                ? 'row-reverse' === _e && Xe
                  ? (this.styleCache = le)
                  : 'row-reverse' !== _e || Xe
                  ? 'column' === _e && Xe
                    ? (this.styleCache = q)
                    : 'column' !== _e || Xe
                    ? 'column-reverse' === _e && Xe
                      ? (this.styleCache = Z)
                      : 'column-reverse' === _e && !Xe && (this.styleCache = Wt)
                    : (this.styleCache = Hn)
                  : (this.styleCache = zt)
                : (this.styleCache = Yn),
                this.addStyles(pe, { layout: _e, inline: Xe });
            }
            onLayoutChange(pe) {
              const _e = pe.value.split(' ');
              (this.layout = _e[0]),
                (this.inline = pe.value.includes('inline')),
                N.iQ.find((Xe) => Xe === this.layout) || (this.layout = 'row'),
                this.triggerUpdate();
            }
          }
          return (
            (he.ɵfac = function (pe) {
              return new (pe || he)(h.Y36(h.SBq), h.Y36(d.RK), h.Y36(It), h.Y36(d.yB));
            }),
            (he.ɵdir = h.lG2({ type: he, features: [h.qOj] })),
            he
          );
        })(),
        An = (() => {
          class he extends ln {
            constructor() {
              super(...arguments), (this.inputs = an);
            }
          }
          return (
            (he.ɵfac = (function () {
              let Te;
              return function (_e) {
                return (Te || (Te = h.n5z(he)))(_e || he);
              };
            })()),
            (he.ɵdir = h.lG2({
              type: he,
              selectors: [
                ['', 'fxLayoutAlign', ''],
                ['', 'fxLayoutAlign.xs', ''],
                ['', 'fxLayoutAlign.sm', ''],
                ['', 'fxLayoutAlign.md', ''],
                ['', 'fxLayoutAlign.lg', ''],
                ['', 'fxLayoutAlign.xl', ''],
                ['', 'fxLayoutAlign.lt-sm', ''],
                ['', 'fxLayoutAlign.lt-md', ''],
                ['', 'fxLayoutAlign.lt-lg', ''],
                ['', 'fxLayoutAlign.lt-xl', ''],
                ['', 'fxLayoutAlign.gt-xs', ''],
                ['', 'fxLayoutAlign.gt-sm', ''],
                ['', 'fxLayoutAlign.gt-md', ''],
                ['', 'fxLayoutAlign.gt-lg', ''],
              ],
              inputs: {
                fxLayoutAlign: 'fxLayoutAlign',
                'fxLayoutAlign.xs': 'fxLayoutAlign.xs',
                'fxLayoutAlign.sm': 'fxLayoutAlign.sm',
                'fxLayoutAlign.md': 'fxLayoutAlign.md',
                'fxLayoutAlign.lg': 'fxLayoutAlign.lg',
                'fxLayoutAlign.xl': 'fxLayoutAlign.xl',
                'fxLayoutAlign.lt-sm': 'fxLayoutAlign.lt-sm',
                'fxLayoutAlign.lt-md': 'fxLayoutAlign.lt-md',
                'fxLayoutAlign.lt-lg': 'fxLayoutAlign.lt-lg',
                'fxLayoutAlign.lt-xl': 'fxLayoutAlign.lt-xl',
                'fxLayoutAlign.gt-xs': 'fxLayoutAlign.gt-xs',
                'fxLayoutAlign.gt-sm': 'fxLayoutAlign.gt-sm',
                'fxLayoutAlign.gt-md': 'fxLayoutAlign.gt-md',
                'fxLayoutAlign.gt-lg': 'fxLayoutAlign.gt-lg',
              },
              features: [h.qOj],
            })),
            he
          );
        })();
      const Yn = new Map(),
        Hn = new Map(),
        zt = new Map(),
        Wt = new Map(),
        de = new Map(),
        q = new Map(),
        le = new Map(),
        Z = new Map();
      let ie = (() => {
        class he {}
        return (
          (he.ɵfac = function (pe) {
            return new (pe || he)();
          }),
          (he.ɵmod = h.oAB({ type: he })),
          (he.ɵinj = h.cJS({ imports: [[d.IR, m.vT]] })),
          he
        );
      })();
    },
    2155: (un, ft, x) => {
      'use strict';
      x.d(ft, { o9: () => pi });
      var h = x(5e3),
        m = x(3270),
        d = x(3322),
        N = x(7093);
      x(3191);
      let es = (() => {
        class J {}
        return (
          (J.ɵfac = function (Ht) {
            return new (Ht || J)();
          }),
          (J.ɵmod = h.oAB({ type: J })),
          (J.ɵinj = h.cJS({ imports: [[m.IR]] })),
          J
        );
      })();
      var Cr = x(9808);
      let pi = (() => {
        class J {
          constructor(Ht, fn) {
            (0, Cr.PM)(fn) &&
              !Ht &&
              console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');
          }
          static withConfig(Ht, fn = []) {
            return {
              ngModule: J,
              providers: Ht.serverLoaded
                ? [
                    { provide: m.WU, useValue: Object.assign(Object.assign({}, m.g5), Ht) },
                    { provide: m.Bs, useValue: fn, multi: !0 },
                    { provide: m.wY, useValue: !0 },
                  ]
                : [
                    { provide: m.WU, useValue: Object.assign(Object.assign({}, m.g5), Ht) },
                    { provide: m.Bs, useValue: fn, multi: !0 },
                  ],
            };
          }
        }
        return (
          (J.ɵfac = function (Ht) {
            return new (Ht || J)(h.LFG(m.wY), h.LFG(h.Lbi));
          }),
          (J.ɵmod = h.oAB({ type: J })),
          (J.ɵinj = h.cJS({ imports: [[N.ae, d.aT, es], N.ae, d.aT, es] })),
          J
        );
      })();
    },
    3075: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        Zs: () => ds,
        Fj: () => Oe,
        qu: () => ki,
        NI: () => Nr,
        oH: () => Oo,
        u: () => Ns,
        sg: () => Fs,
        u5: () => Sn,
        Cf: () => me,
        JU: () => Fe,
        a5: () => re,
        JJ: () => ae,
        JL: () => Le,
        F: () => Br,
        wV: () => ms,
        UX: () => di,
        Q7: () => us,
        kI: () => vt,
        _Y: () => kr,
      });
      var h = x(5e3),
        m = x(9808),
        d = x(8996),
        N = x(4128),
        Ce = x(4004);
      let Re = (() => {
          class W {
            constructor(F, Me) {
              (this._renderer = F), (this._elementRef = Me), (this.onChange = (Xt) => {}), (this.onTouched = () => {});
            }
            setProperty(F, Me) {
              this._renderer.setProperty(this._elementRef.nativeElement, F, Me);
            }
            registerOnTouched(F) {
              this.onTouched = F;
            }
            registerOnChange(F) {
              this.onChange = F;
            }
            setDisabledState(F) {
              this.setProperty('disabled', F);
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)(h.Y36(h.Qsj), h.Y36(h.SBq));
            }),
            (W.ɵdir = h.lG2({ type: W })),
            W
          );
        })(),
        He = (() => {
          class W extends Re {}
          return (
            (W.ɵfac = (function () {
              let H;
              return function (Me) {
                return (H || (H = h.n5z(W)))(Me || W);
              };
            })()),
            (W.ɵdir = h.lG2({ type: W, features: [h.qOj] })),
            W
          );
        })();
      const Fe = new h.OlP('NgValueAccessor'),
        fe = { provide: Fe, useExisting: (0, h.Gpc)(() => Oe), multi: !0 },
        Qe = new h.OlP('CompositionEventMode');
      let Oe = (() => {
        class W extends Re {
          constructor(F, Me, Xt) {
            super(F, Me),
              (this._compositionMode = Xt),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function ue() {
                  const W = (0, m.q)() ? (0, m.q)().getUserAgent() : '';
                  return /android (\d+)/.test(W.toLowerCase());
                })());
          }
          writeValue(F) {
            this.setProperty('value', null == F ? '' : F);
          }
          _handleInput(F) {
            (!this._compositionMode || (this._compositionMode && !this._composing)) && this.onChange(F);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(F) {
            (this._composing = !1), this._compositionMode && this.onChange(F);
          }
        }
        return (
          (W.ɵfac = function (F) {
            return new (F || W)(h.Y36(h.Qsj), h.Y36(h.SBq), h.Y36(Qe, 8));
          }),
          (W.ɵdir = h.lG2({
            type: W,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (F, Me) {
              1 & F &&
                h.NdJ('input', function (Pn) {
                  return Me._handleInput(Pn.target.value);
                })('blur', function () {
                  return Me.onTouched();
                })('compositionstart', function () {
                  return Me._compositionStart();
                })('compositionend', function (Pn) {
                  return Me._compositionEnd(Pn.target.value);
                });
            },
            features: [h._Bn([fe]), h.qOj],
          })),
          W
        );
      })();
      function et(W) {
        return null == W || 0 === W.length;
      }
      function lt(W) {
        return null != W && 'number' == typeof W.length;
      }
      const me = new h.OlP('NgValidators'),
        Ze = new h.OlP('NgAsyncValidators'),
        dt =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class vt {
        static min(H) {
          return (function We(W) {
            return (H) => {
              if (et(H.value) || et(W)) return null;
              const F = parseFloat(H.value);
              return !isNaN(F) && F < W ? { min: { min: W, actual: H.value } } : null;
            };
          })(H);
        }
        static max(H) {
          return (function $e(W) {
            return (H) => {
              if (et(H.value) || et(W)) return null;
              const F = parseFloat(H.value);
              return !isNaN(F) && F > W ? { max: { max: W, actual: H.value } } : null;
            };
          })(H);
        }
        static required(H) {
          return ge(H);
        }
        static requiredTrue(H) {
          return Ke(H);
        }
        static email(H) {
          return (function Ie(W) {
            return et(W.value) || dt.test(W.value) ? null : { email: !0 };
          })(H);
        }
        static minLength(H) {
          return (function De(W) {
            return (H) =>
              et(H.value) || !lt(H.value)
                ? null
                : H.value.length < W
                ? { minlength: { requiredLength: W, actualLength: H.value.length } }
                : null;
          })(H);
        }
        static maxLength(H) {
          return (function Ye(W) {
            return (H) =>
              lt(H.value) && H.value.length > W
                ? { maxlength: { requiredLength: W, actualLength: H.value.length } }
                : null;
          })(H);
        }
        static pattern(H) {
          return (function it(W) {
            if (!W) return qe;
            let H, F;
            return (
              'string' == typeof W
                ? ((F = ''),
                  '^' !== W.charAt(0) && (F += '^'),
                  (F += W),
                  '$' !== W.charAt(W.length - 1) && (F += '$'),
                  (H = new RegExp(F)))
                : ((F = W.toString()), (H = W)),
              (Me) => {
                if (et(Me.value)) return null;
                const Xt = Me.value;
                return H.test(Xt) ? null : { pattern: { requiredPattern: F, actualValue: Xt } };
              }
            );
          })(H);
        }
        static nullValidator(H) {
          return null;
        }
        static compose(H) {
          return Ct(H);
        }
        static composeAsync(H) {
          return Et(H);
        }
      }
      function ge(W) {
        return et(W.value) ? { required: !0 } : null;
      }
      function Ke(W) {
        return !0 === W.value ? null : { required: !0 };
      }
      function qe(W) {
        return null;
      }
      function Ve(W) {
        return null != W;
      }
      function Ft(W) {
        const H = (0, h.QGY)(W) ? (0, d.D)(W) : W;
        return (0, h.CqO)(H), H;
      }
      function kt(W) {
        let H = {};
        return (
          W.forEach((F) => {
            H = null != F ? Object.assign(Object.assign({}, H), F) : H;
          }),
          0 === Object.keys(H).length ? null : H
        );
      }
      function St(W, H) {
        return H.map((F) => F(W));
      }
      function Je(W) {
        return W.map((H) =>
          (function on(W) {
            return !W.validate;
          })(H)
            ? H
            : (F) => H.validate(F)
        );
      }
      function Ct(W) {
        if (!W) return null;
        const H = W.filter(Ve);
        return 0 == H.length
          ? null
          : function (F) {
              return kt(St(F, H));
            };
      }
      function st(W) {
        return null != W ? Ct(Je(W)) : null;
      }
      function Et(W) {
        if (!W) return null;
        const H = W.filter(Ve);
        return 0 == H.length
          ? null
          : function (F) {
              const Me = St(F, H).map(Ft);
              return (0, N.D)(Me).pipe((0, Ce.U)(kt));
            };
      }
      function yt(W) {
        return null != W ? Et(Je(W)) : null;
      }
      function Ue(W, H) {
        return null === W ? [H] : Array.isArray(W) ? [...W, H] : [W, H];
      }
      function bt(W) {
        return W._rawValidators;
      }
      function at(W) {
        return W._rawAsyncValidators;
      }
      function mt(W) {
        return W ? (Array.isArray(W) ? W : [W]) : [];
      }
      function Nt(W, H) {
        return Array.isArray(W) ? W.includes(H) : W === H;
      }
      function en(W, H) {
        const F = mt(H);
        return (
          mt(W).forEach((Xt) => {
            Nt(F, Xt) || F.push(Xt);
          }),
          F
        );
      }
      function xt(W, H) {
        return mt(H).filter((F) => !Nt(W, F));
      }
      class Gt {
        constructor() {
          (this._rawValidators = []), (this._rawAsyncValidators = []), (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(H) {
          (this._rawValidators = H || []), (this._composedValidatorFn = st(this._rawValidators));
        }
        _setAsyncValidators(H) {
          (this._rawAsyncValidators = H || []), (this._composedAsyncValidatorFn = yt(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(H) {
          this._onDestroyCallbacks.push(H);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((H) => H()), (this._onDestroyCallbacks = []);
        }
        reset(H) {
          this.control && this.control.reset(H);
        }
        hasError(H, F) {
          return !!this.control && this.control.hasError(H, F);
        }
        getError(H, F) {
          return this.control ? this.control.getError(H, F) : null;
        }
      }
      class re extends Gt {
        constructor() {
          super(...arguments), (this._parent = null), (this.name = null), (this.valueAccessor = null);
        }
      }
      class ot extends Gt {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Zt {
        constructor(H) {
          this._cd = H;
        }
        is(H) {
          var F, Me, Xt;
          return 'submitted' === H
            ? !!(null === (F = this._cd) || void 0 === F ? void 0 : F.submitted)
            : !!(null === (Xt = null === (Me = this._cd) || void 0 === Me ? void 0 : Me.control) || void 0 === Xt
                ? void 0
                : Xt[H]);
        }
      }
      let ae = (() => {
          class W extends Zt {
            constructor(F) {
              super(F);
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)(h.Y36(re, 2));
            }),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (F, Me) {
                2 & F &&
                  h.ekj('ng-untouched', Me.is('untouched'))('ng-touched', Me.is('touched'))(
                    'ng-pristine',
                    Me.is('pristine')
                  )('ng-dirty', Me.is('dirty'))('ng-valid', Me.is('valid'))('ng-invalid', Me.is('invalid'))(
                    'ng-pending',
                    Me.is('pending')
                  );
              },
              features: [h.qOj],
            })),
            W
          );
        })(),
        Le = (() => {
          class W extends Zt {
            constructor(F) {
              super(F);
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)(h.Y36(ot, 10));
            }),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 16,
              hostBindings: function (F, Me) {
                2 & F &&
                  h.ekj('ng-untouched', Me.is('untouched'))('ng-touched', Me.is('touched'))(
                    'ng-pristine',
                    Me.is('pristine')
                  )('ng-dirty', Me.is('dirty'))('ng-valid', Me.is('valid'))('ng-invalid', Me.is('invalid'))(
                    'ng-pending',
                    Me.is('pending')
                  )('ng-submitted', Me.is('submitted'));
              },
              features: [h.qOj],
            })),
            W
          );
        })();
      function q(W, H) {
        ie(W, H),
          H.valueAccessor.writeValue(W.value),
          (function Te(W, H) {
            H.valueAccessor.registerOnChange((F) => {
              (W._pendingValue = F),
                (W._pendingChange = !0),
                (W._pendingDirty = !0),
                'change' === W.updateOn && _e(W, H);
            });
          })(W, H),
          (function Xe(W, H) {
            const F = (Me, Xt) => {
              H.valueAccessor.writeValue(Me), Xt && H.viewToModelUpdate(Me);
            };
            W.registerOnChange(F),
              H._registerOnDestroy(() => {
                W._unregisterOnChange(F);
              });
          })(W, H),
          (function pe(W, H) {
            H.valueAccessor.registerOnTouched(() => {
              (W._pendingTouched = !0),
                'blur' === W.updateOn && W._pendingChange && _e(W, H),
                'submit' !== W.updateOn && W.markAsTouched();
            });
          })(W, H),
          (function ye(W, H) {
            if (H.valueAccessor.setDisabledState) {
              const F = (Me) => {
                H.valueAccessor.setDisabledState(Me);
              };
              W.registerOnDisabledChange(F),
                H._registerOnDestroy(() => {
                  W._unregisterOnDisabledChange(F);
                });
            }
          })(W, H);
      }
      function le(W, H, F = !0) {
        const Me = () => {};
        H.valueAccessor && (H.valueAccessor.registerOnChange(Me), H.valueAccessor.registerOnTouched(Me)),
          he(W, H),
          W && (H._invokeOnDestroyCallbacks(), W._registerOnCollectionChange(() => {}));
      }
      function Z(W, H) {
        W.forEach((F) => {
          F.registerOnValidatorChange && F.registerOnValidatorChange(H);
        });
      }
      function ie(W, H) {
        const F = bt(W);
        null !== H.validator ? W.setValidators(Ue(F, H.validator)) : 'function' == typeof F && W.setValidators([F]);
        const Me = at(W);
        null !== H.asyncValidator
          ? W.setAsyncValidators(Ue(Me, H.asyncValidator))
          : 'function' == typeof Me && W.setAsyncValidators([Me]);
        const Xt = () => W.updateValueAndValidity();
        Z(H._rawValidators, Xt), Z(H._rawAsyncValidators, Xt);
      }
      function he(W, H) {
        let F = !1;
        if (null !== W) {
          if (null !== H.validator) {
            const Xt = bt(W);
            if (Array.isArray(Xt) && Xt.length > 0) {
              const Pn = Xt.filter((Pi) => Pi !== H.validator);
              Pn.length !== Xt.length && ((F = !0), W.setValidators(Pn));
            }
          }
          if (null !== H.asyncValidator) {
            const Xt = at(W);
            if (Array.isArray(Xt) && Xt.length > 0) {
              const Pn = Xt.filter((Pi) => Pi !== H.asyncValidator);
              Pn.length !== Xt.length && ((F = !0), W.setAsyncValidators(Pn));
            }
          }
        }
        const Me = () => {};
        return Z(H._rawValidators, Me), Z(H._rawAsyncValidators, Me), F;
      }
      function _e(W, H) {
        W._pendingDirty && W.markAsDirty(),
          W.setValue(W._pendingValue, { emitModelToViewChange: !1 }),
          H.viewToModelUpdate(W._pendingValue),
          (W._pendingChange = !1);
      }
      function Ot(W, H) {
        ie(W, H);
      }
      function Ai(W, H) {
        if (!W.hasOwnProperty('model')) return !1;
        const F = W.model;
        return !!F.isFirstChange() || !Object.is(H, F.currentValue);
      }
      function wt(W, H) {
        W._syncPendingControls(),
          H.forEach((F) => {
            const Me = F.control;
            'submit' === Me.updateOn &&
              Me._pendingChange &&
              (F.viewToModelUpdate(Me._pendingValue), (Me._pendingChange = !1));
          });
      }
      function nt(W, H) {
        if (!H) return null;
        let F, Me, Xt;
        return (
          Array.isArray(H),
          H.forEach((Pn) => {
            Pn.constructor === Oe
              ? (F = Pn)
              : (function jt(W) {
                  return Object.getPrototypeOf(W.constructor) === He;
                })(Pn)
              ? (Me = Pn)
              : (Xt = Pn);
          }),
          Xt || Me || F || null
        );
      }
      function Pt(W, H) {
        const F = W.indexOf(H);
        F > -1 && W.splice(F, 1);
      }
      const Gn = 'VALID',
        Jn = 'INVALID',
        Ci = 'PENDING',
        ar = 'DISABLED';
      function Rr(W) {
        return (xn(W) ? W.validators : W) || null;
      }
      function br(W) {
        return Array.isArray(W) ? st(W) : W || null;
      }
      function es(W, H) {
        return (xn(H) ? H.asyncValidators : W) || null;
      }
      function Cr(W) {
        return Array.isArray(W) ? yt(W) : W || null;
      }
      function xn(W) {
        return null != W && !Array.isArray(W) && 'object' == typeof W;
      }
      const pi = (W) => W instanceof Nr,
        J = (W) => W instanceof qi,
        Kt = (W) => W instanceof ci;
      function Ht(W) {
        return pi(W) ? W.value : W.getRawValue();
      }
      function fn(W, H) {
        const F = J(W),
          Me = W.controls;
        if (!(F ? Object.keys(Me) : Me).length) throw new h.vHH(1e3, '');
        if (!Me[H]) throw new h.vHH(1001, '');
      }
      function Wn(W, H) {
        J(W),
          W._forEachChild((Me, Xt) => {
            if (void 0 === H[Xt]) throw new h.vHH(1002, '');
          });
      }
      class Nn {
        constructor(H, F) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = H),
            (this._rawAsyncValidators = F),
            (this._composedValidatorFn = br(this._rawValidators)),
            (this._composedAsyncValidatorFn = Cr(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(H) {
          this._rawValidators = this._composedValidatorFn = H;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(H) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = H;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Gn;
        }
        get invalid() {
          return this.status === Jn;
        }
        get pending() {
          return this.status == Ci;
        }
        get disabled() {
          return this.status === ar;
        }
        get enabled() {
          return this.status !== ar;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';
        }
        setValidators(H) {
          (this._rawValidators = H), (this._composedValidatorFn = br(H));
        }
        setAsyncValidators(H) {
          (this._rawAsyncValidators = H), (this._composedAsyncValidatorFn = Cr(H));
        }
        addValidators(H) {
          this.setValidators(en(H, this._rawValidators));
        }
        addAsyncValidators(H) {
          this.setAsyncValidators(en(H, this._rawAsyncValidators));
        }
        removeValidators(H) {
          this.setValidators(xt(H, this._rawValidators));
        }
        removeAsyncValidators(H) {
          this.setAsyncValidators(xt(H, this._rawAsyncValidators));
        }
        hasValidator(H) {
          return Nt(this._rawValidators, H);
        }
        hasAsyncValidator(H) {
          return Nt(this._rawAsyncValidators, H);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(H = {}) {
          (this.touched = !0), this._parent && !H.onlySelf && this._parent.markAsTouched(H);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }), this._forEachChild((H) => H.markAllAsTouched());
        }
        markAsUntouched(H = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((F) => {
              F.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !H.onlySelf && this._parent._updateTouched(H);
        }
        markAsDirty(H = {}) {
          (this.pristine = !1), this._parent && !H.onlySelf && this._parent.markAsDirty(H);
        }
        markAsPristine(H = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((F) => {
              F.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !H.onlySelf && this._parent._updatePristine(H);
        }
        markAsPending(H = {}) {
          (this.status = Ci),
            !1 !== H.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !H.onlySelf && this._parent.markAsPending(H);
        }
        disable(H = {}) {
          const F = this._parentMarkedDirty(H.onlySelf);
          (this.status = ar),
            (this.errors = null),
            this._forEachChild((Me) => {
              Me.disable(Object.assign(Object.assign({}, H), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== H.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
            this._updateAncestors(Object.assign(Object.assign({}, H), { skipPristineCheck: F })),
            this._onDisabledChange.forEach((Me) => Me(!0));
        }
        enable(H = {}) {
          const F = this._parentMarkedDirty(H.onlySelf);
          (this.status = Gn),
            this._forEachChild((Me) => {
              Me.enable(Object.assign(Object.assign({}, H), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: H.emitEvent }),
            this._updateAncestors(Object.assign(Object.assign({}, H), { skipPristineCheck: F })),
            this._onDisabledChange.forEach((Me) => Me(!1));
        }
        _updateAncestors(H) {
          this._parent &&
            !H.onlySelf &&
            (this._parent.updateValueAndValidity(H),
            H.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(H) {
          this._parent = H;
        }
        updateValueAndValidity(H = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Gn || this.status === Ci) && this._runAsyncValidator(H.emitEvent)),
            !1 !== H.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
            this._parent && !H.onlySelf && this._parent.updateValueAndValidity(H);
        }
        _updateTreeValidity(H = { emitEvent: !0 }) {
          this._forEachChild((F) => F._updateTreeValidity(H)),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: H.emitEvent });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? ar : Gn;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(H) {
          if (this.asyncValidator) {
            (this.status = Ci), (this._hasOwnPendingAsyncValidator = !0);
            const F = Ft(this.asyncValidator(this));
            this._asyncValidationSubscription = F.subscribe((Me) => {
              (this._hasOwnPendingAsyncValidator = !1), this.setErrors(Me, { emitEvent: H });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(), (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(H, F = {}) {
          (this.errors = H), this._updateControlsErrors(!1 !== F.emitEvent);
        }
        get(H) {
          return (function Rs(W, H, F) {
            if (null == H || (Array.isArray(H) || (H = H.split(F)), Array.isArray(H) && 0 === H.length)) return null;
            let Me = W;
            return (
              H.forEach((Xt) => {
                Me = J(Me) ? (Me.controls.hasOwnProperty(Xt) ? Me.controls[Xt] : null) : (Kt(Me) && Me.at(Xt)) || null;
              }),
              Me
            );
          })(this, H, '.');
        }
        getError(H, F) {
          const Me = F ? this.get(F) : this;
          return Me && Me.errors ? Me.errors[H] : null;
        }
        hasError(H, F) {
          return !!this.getError(H, F);
        }
        get root() {
          let H = this;
          for (; H._parent; ) H = H._parent;
          return H;
        }
        _updateControlsErrors(H) {
          (this.status = this._calculateStatus()),
            H && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(H);
        }
        _initObservables() {
          (this.valueChanges = new h.vpe()), (this.statusChanges = new h.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? ar
            : this.errors
            ? Jn
            : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Ci)
            ? Ci
            : this._anyControlsHaveStatus(Jn)
            ? Jn
            : Gn;
        }
        _anyControlsHaveStatus(H) {
          return this._anyControls((F) => F.status === H);
        }
        _anyControlsDirty() {
          return this._anyControls((H) => H.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((H) => H.touched);
        }
        _updatePristine(H = {}) {
          (this.pristine = !this._anyControlsDirty()), this._parent && !H.onlySelf && this._parent._updatePristine(H);
        }
        _updateTouched(H = {}) {
          (this.touched = this._anyControlsTouched()), this._parent && !H.onlySelf && this._parent._updateTouched(H);
        }
        _isBoxedValue(H) {
          return 'object' == typeof H && null !== H && 2 === Object.keys(H).length && 'value' in H && 'disabled' in H;
        }
        _registerOnCollectionChange(H) {
          this._onCollectionChange = H;
        }
        _setUpdateStrategy(H) {
          xn(H) && null != H.updateOn && (this._updateOn = H.updateOn);
        }
        _parentMarkedDirty(H) {
          return !H && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty();
        }
      }
      class Nr extends Nn {
        constructor(H = null, F, Me) {
          super(Rr(F), es(Me, F)),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(H),
            this._setUpdateStrategy(F),
            this._initObservables(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator });
        }
        setValue(H, F = {}) {
          (this.value = this._pendingValue = H),
            this._onChange.length &&
              !1 !== F.emitModelToViewChange &&
              this._onChange.forEach((Me) => Me(this.value, !1 !== F.emitViewToModelChange)),
            this.updateValueAndValidity(F);
        }
        patchValue(H, F = {}) {
          this.setValue(H, F);
        }
        reset(H = null, F = {}) {
          this._applyFormState(H),
            this.markAsPristine(F),
            this.markAsUntouched(F),
            this.setValue(this.value, F),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(H) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(H) {
          this._onChange.push(H);
        }
        _unregisterOnChange(H) {
          Pt(this._onChange, H);
        }
        registerOnDisabledChange(H) {
          this._onDisabledChange.push(H);
        }
        _unregisterOnDisabledChange(H) {
          Pt(this._onDisabledChange, H);
        }
        _forEachChild(H) {}
        _syncPendingControls() {
          return !(
            'submit' !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, { onlySelf: !0, emitModelToViewChange: !1 }), 0)
          );
        }
        _applyFormState(H) {
          this._isBoxedValue(H)
            ? ((this.value = this._pendingValue = H.value),
              H.disabled ? this.disable({ onlySelf: !0, emitEvent: !1 }) : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = H);
        }
      }
      class qi extends Nn {
        constructor(H, F, Me) {
          super(Rr(F), es(Me, F)),
            (this.controls = H),
            this._initObservables(),
            this._setUpdateStrategy(F),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator });
        }
        registerControl(H, F) {
          return this.controls[H]
            ? this.controls[H]
            : ((this.controls[H] = F), F.setParent(this), F._registerOnCollectionChange(this._onCollectionChange), F);
        }
        addControl(H, F, Me = {}) {
          this.registerControl(H, F),
            this.updateValueAndValidity({ emitEvent: Me.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(H, F = {}) {
          this.controls[H] && this.controls[H]._registerOnCollectionChange(() => {}),
            delete this.controls[H],
            this.updateValueAndValidity({ emitEvent: F.emitEvent }),
            this._onCollectionChange();
        }
        setControl(H, F, Me = {}) {
          this.controls[H] && this.controls[H]._registerOnCollectionChange(() => {}),
            delete this.controls[H],
            F && this.registerControl(H, F),
            this.updateValueAndValidity({ emitEvent: Me.emitEvent }),
            this._onCollectionChange();
        }
        contains(H) {
          return this.controls.hasOwnProperty(H) && this.controls[H].enabled;
        }
        setValue(H, F = {}) {
          Wn(this, H),
            Object.keys(H).forEach((Me) => {
              fn(this, Me), this.controls[Me].setValue(H[Me], { onlySelf: !0, emitEvent: F.emitEvent });
            }),
            this.updateValueAndValidity(F);
        }
        patchValue(H, F = {}) {
          null != H &&
            (Object.keys(H).forEach((Me) => {
              this.controls[Me] && this.controls[Me].patchValue(H[Me], { onlySelf: !0, emitEvent: F.emitEvent });
            }),
            this.updateValueAndValidity(F));
        }
        reset(H = {}, F = {}) {
          this._forEachChild((Me, Xt) => {
            Me.reset(H[Xt], { onlySelf: !0, emitEvent: F.emitEvent });
          }),
            this._updatePristine(F),
            this._updateTouched(F),
            this.updateValueAndValidity(F);
        }
        getRawValue() {
          return this._reduceChildren({}, (H, F, Me) => ((H[Me] = Ht(F)), H));
        }
        _syncPendingControls() {
          let H = this._reduceChildren(!1, (F, Me) => !!Me._syncPendingControls() || F);
          return H && this.updateValueAndValidity({ onlySelf: !0 }), H;
        }
        _forEachChild(H) {
          Object.keys(this.controls).forEach((F) => {
            const Me = this.controls[F];
            Me && H(Me, F);
          });
        }
        _setUpControls() {
          this._forEachChild((H) => {
            H.setParent(this), H._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(H) {
          for (const F of Object.keys(this.controls)) {
            const Me = this.controls[F];
            if (this.contains(F) && H(Me)) return !0;
          }
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren({}, (H, F, Me) => ((F.enabled || this.disabled) && (H[Me] = F.value), H));
        }
        _reduceChildren(H, F) {
          let Me = H;
          return (
            this._forEachChild((Xt, Pn) => {
              Me = F(Me, Xt, Pn);
            }),
            Me
          );
        }
        _allControlsDisabled() {
          for (const H of Object.keys(this.controls)) if (this.controls[H].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
      }
      class ci extends Nn {
        constructor(H, F, Me) {
          super(Rr(F), es(Me, F)),
            (this.controls = H),
            this._initObservables(),
            this._setUpdateStrategy(F),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator });
        }
        at(H) {
          return this.controls[H];
        }
        push(H, F = {}) {
          this.controls.push(H),
            this._registerControl(H),
            this.updateValueAndValidity({ emitEvent: F.emitEvent }),
            this._onCollectionChange();
        }
        insert(H, F, Me = {}) {
          this.controls.splice(H, 0, F),
            this._registerControl(F),
            this.updateValueAndValidity({ emitEvent: Me.emitEvent });
        }
        removeAt(H, F = {}) {
          this.controls[H] && this.controls[H]._registerOnCollectionChange(() => {}),
            this.controls.splice(H, 1),
            this.updateValueAndValidity({ emitEvent: F.emitEvent });
        }
        setControl(H, F, Me = {}) {
          this.controls[H] && this.controls[H]._registerOnCollectionChange(() => {}),
            this.controls.splice(H, 1),
            F && (this.controls.splice(H, 0, F), this._registerControl(F)),
            this.updateValueAndValidity({ emitEvent: Me.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(H, F = {}) {
          Wn(this, H),
            H.forEach((Me, Xt) => {
              fn(this, Xt), this.at(Xt).setValue(Me, { onlySelf: !0, emitEvent: F.emitEvent });
            }),
            this.updateValueAndValidity(F);
        }
        patchValue(H, F = {}) {
          null != H &&
            (H.forEach((Me, Xt) => {
              this.at(Xt) && this.at(Xt).patchValue(Me, { onlySelf: !0, emitEvent: F.emitEvent });
            }),
            this.updateValueAndValidity(F));
        }
        reset(H = [], F = {}) {
          this._forEachChild((Me, Xt) => {
            Me.reset(H[Xt], { onlySelf: !0, emitEvent: F.emitEvent });
          }),
            this._updatePristine(F),
            this._updateTouched(F),
            this.updateValueAndValidity(F);
        }
        getRawValue() {
          return this.controls.map((H) => Ht(H));
        }
        clear(H = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((F) => F._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: H.emitEvent }));
        }
        _syncPendingControls() {
          let H = this.controls.reduce((F, Me) => !!Me._syncPendingControls() || F, !1);
          return H && this.updateValueAndValidity({ onlySelf: !0 }), H;
        }
        _forEachChild(H) {
          this.controls.forEach((F, Me) => {
            H(F, Me);
          });
        }
        _updateValue() {
          this.value = this.controls.filter((H) => H.enabled || this.disabled).map((H) => H.value);
        }
        _anyControls(H) {
          return this.controls.some((F) => F.enabled && H(F));
        }
        _setUpControls() {
          this._forEachChild((H) => this._registerControl(H));
        }
        _allControlsDisabled() {
          for (const H of this.controls) if (H.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(H) {
          H.setParent(this), H._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const ks = { provide: ot, useExisting: (0, h.Gpc)(() => Br) },
        _i = (() => Promise.resolve(null))();
      let Br = (() => {
          class W extends ot {
            constructor(F, Me) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new h.vpe()),
                (this.form = new qi({}, st(F), yt(Me)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(F) {
              _i.then(() => {
                const Me = this._findContainer(F.path);
                (F.control = Me.registerControl(F.name, F.control)),
                  q(F.control, F),
                  F.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(F);
              });
            }
            getControl(F) {
              return this.form.get(F.path);
            }
            removeControl(F) {
              _i.then(() => {
                const Me = this._findContainer(F.path);
                Me && Me.removeControl(F.name), Pt(this._directives, F);
              });
            }
            addFormGroup(F) {
              _i.then(() => {
                const Me = this._findContainer(F.path),
                  Xt = new qi({});
                Ot(Xt, F), Me.registerControl(F.name, Xt), Xt.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(F) {
              _i.then(() => {
                const Me = this._findContainer(F.path);
                Me && Me.removeControl(F.name);
              });
            }
            getFormGroup(F) {
              return this.form.get(F.path);
            }
            updateModel(F, Me) {
              _i.then(() => {
                this.form.get(F.path).setValue(Me);
              });
            }
            setValue(F) {
              this.control.setValue(F);
            }
            onSubmit(F) {
              return (this.submitted = !0), wt(this.form, this._directives), this.ngSubmit.emit(F), !1;
            }
            onReset() {
              this.resetForm();
            }
            resetForm(F) {
              this.form.reset(F), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(F) {
              return F.pop(), F.length ? this.form.get(F) : this.form;
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)(h.Y36(me, 10), h.Y36(Ze, 10));
            }),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [['form', 3, 'ngNoForm', '', 3, 'formGroup', ''], ['ng-form'], ['', 'ngForm', '']],
              hostBindings: function (F, Me) {
                1 & F &&
                  h.NdJ('submit', function (Pn) {
                    return Me.onSubmit(Pn);
                  })('reset', function () {
                    return Me.onReset();
                  });
              },
              inputs: { options: ['ngFormOptions', 'options'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [h._Bn([ks]), h.qOj],
            })),
            W
          );
        })(),
        kr = (() => {
          class W {}
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', '']],
              hostAttrs: ['novalidate', ''],
            })),
            W
          );
        })();
      const je = { provide: Fe, useExisting: (0, h.Gpc)(() => ms), multi: !0 };
      let ms = (() => {
          class W extends He {
            writeValue(F) {
              this.setProperty('value', null == F ? '' : F);
            }
            registerOnChange(F) {
              this.onChange = (Me) => {
                F('' == Me ? null : parseFloat(Me));
              };
            }
          }
          return (
            (W.ɵfac = (function () {
              let H;
              return function (Me) {
                return (H || (H = h.n5z(W)))(Me || W);
              };
            })()),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [
                ['input', 'type', 'number', 'formControlName', ''],
                ['input', 'type', 'number', 'formControl', ''],
                ['input', 'type', 'number', 'ngModel', ''],
              ],
              hostBindings: function (F, Me) {
                1 & F &&
                  h.NdJ('input', function (Pn) {
                    return Me.onChange(Pn.target.value);
                  })('blur', function () {
                    return Me.onTouched();
                  });
              },
              features: [h._Bn([je]), h.qOj],
            })),
            W
          );
        })(),
        ko = (() => {
          class W {}
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵmod = h.oAB({ type: W })),
            (W.ɵinj = h.cJS({})),
            W
          );
        })();
      const ls = new h.OlP('NgModelWithFormControlWarning'),
        Wo = { provide: re, useExisting: (0, h.Gpc)(() => Oo) };
      let Oo = (() => {
        class W extends re {
          constructor(F, Me, Xt, Pn) {
            super(),
              (this._ngModelWarningConfig = Pn),
              (this.update = new h.vpe()),
              (this._ngModelWarningSent = !1),
              this._setValidators(F),
              this._setAsyncValidators(Me),
              (this.valueAccessor = nt(0, Xt));
          }
          set isDisabled(F) {}
          ngOnChanges(F) {
            if (this._isControlChanged(F)) {
              const Me = F.form.previousValue;
              Me && le(Me, this, !1),
                q(this.form, this),
                this.control.disabled && this.valueAccessor.setDisabledState && this.valueAccessor.setDisabledState(!0),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            Ai(F, this.viewModel) && (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && le(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(F) {
            (this.viewModel = F), this.update.emit(F);
          }
          _isControlChanged(F) {
            return F.hasOwnProperty('form');
          }
        }
        return (
          (W._ngModelWarningSentOnce = !1),
          (W.ɵfac = function (F) {
            return new (F || W)(h.Y36(me, 10), h.Y36(Ze, 10), h.Y36(Fe, 10), h.Y36(ls, 8));
          }),
          (W.ɵdir = h.lG2({
            type: W,
            selectors: [['', 'formControl', '']],
            inputs: {
              form: ['formControl', 'form'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [h._Bn([Wo]), h.qOj, h.TTD],
          })),
          W
        );
      })();
      const Oa = { provide: ot, useExisting: (0, h.Gpc)(() => Fs) };
      let Fs = (() => {
        class W extends ot {
          constructor(F, Me) {
            super(),
              (this.validators = F),
              (this.asyncValidators = Me),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new h.vpe()),
              this._setValidators(F),
              this._setAsyncValidators(Me);
          }
          ngOnChanges(F) {
            this._checkFormPresent(),
              F.hasOwnProperty('form') &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (he(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(F) {
            const Me = this.form.get(F.path);
            return q(Me, F), Me.updateValueAndValidity({ emitEvent: !1 }), this.directives.push(F), Me;
          }
          getControl(F) {
            return this.form.get(F.path);
          }
          removeControl(F) {
            le(F.control || null, F, !1), Pt(this.directives, F);
          }
          addFormGroup(F) {
            this._setUpFormContainer(F);
          }
          removeFormGroup(F) {
            this._cleanUpFormContainer(F);
          }
          getFormGroup(F) {
            return this.form.get(F.path);
          }
          addFormArray(F) {
            this._setUpFormContainer(F);
          }
          removeFormArray(F) {
            this._cleanUpFormContainer(F);
          }
          getFormArray(F) {
            return this.form.get(F.path);
          }
          updateModel(F, Me) {
            this.form.get(F.path).setValue(Me);
          }
          onSubmit(F) {
            return (this.submitted = !0), wt(this.form, this.directives), this.ngSubmit.emit(F), !1;
          }
          onReset() {
            this.resetForm();
          }
          resetForm(F) {
            this.form.reset(F), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((F) => {
              const Me = F.control,
                Xt = this.form.get(F.path);
              Me !== Xt && (le(Me || null, F), pi(Xt) && (q(Xt, F), (F.control = Xt)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(F) {
            const Me = this.form.get(F.path);
            Ot(Me, F), Me.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(F) {
            if (this.form) {
              const Me = this.form.get(F.path);
              Me &&
                (function Yt(W, H) {
                  return he(W, H);
                })(Me, F) &&
                Me.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            ie(this.form, this), this._oldForm && he(this._oldForm, this);
          }
          _checkFormPresent() {}
        }
        return (
          (W.ɵfac = function (F) {
            return new (F || W)(h.Y36(me, 10), h.Y36(Ze, 10));
          }),
          (W.ɵdir = h.lG2({
            type: W,
            selectors: [['', 'formGroup', '']],
            hostBindings: function (F, Me) {
              1 & F &&
                h.NdJ('submit', function (Pn) {
                  return Me.onSubmit(Pn);
                })('reset', function () {
                  return Me.onReset();
                });
            },
            inputs: { form: ['formGroup', 'form'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [h._Bn([Oa]), h.qOj, h.TTD],
          })),
          W
        );
      })();
      const gs = { provide: re, useExisting: (0, h.Gpc)(() => Ns) };
      let Ns = (() => {
        class W extends re {
          constructor(F, Me, Xt, Pn, Pi) {
            super(),
              (this._ngModelWarningConfig = Pi),
              (this._added = !1),
              (this.update = new h.vpe()),
              (this._ngModelWarningSent = !1),
              (this._parent = F),
              this._setValidators(Me),
              this._setAsyncValidators(Xt),
              (this.valueAccessor = nt(0, Pn));
          }
          set isDisabled(F) {}
          ngOnChanges(F) {
            this._added || this._setUpControl(),
              Ai(F, this.viewModel) &&
                ((this.viewModel = this.model), this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(F) {
            (this.viewModel = F), this.update.emit(F);
          }
          get path() {
            return (function de(W, H) {
              return [...H.path, W];
            })(null == this.name ? this.name : this.name.toString(), this._parent);
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              this.control.disabled && this.valueAccessor.setDisabledState && this.valueAccessor.setDisabledState(!0),
              (this._added = !0);
          }
        }
        return (
          (W._ngModelWarningSentOnce = !1),
          (W.ɵfac = function (F) {
            return new (F || W)(h.Y36(ot, 13), h.Y36(me, 10), h.Y36(Ze, 10), h.Y36(Fe, 10), h.Y36(ls, 8));
          }),
          (W.ɵdir = h.lG2({
            type: W,
            selectors: [['', 'formControlName', '']],
            inputs: {
              name: ['formControlName', 'name'],
              isDisabled: ['disabled', 'isDisabled'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            features: [h._Bn([gs]), h.qOj, h.TTD],
          })),
          W
        );
      })();
      const Ks = { provide: me, useExisting: (0, h.Gpc)(() => us), multi: !0 },
        po = { provide: me, useExisting: (0, h.Gpc)(() => ds), multi: !0 };
      let us = (() => {
          class W {
            constructor() {
              this._required = !1;
            }
            get required() {
              return this._required;
            }
            set required(F) {
              (this._required = null != F && !1 !== F && 'false' != `${F}`), this._onChange && this._onChange();
            }
            validate(F) {
              return this.required ? ge(F) : null;
            }
            registerOnValidatorChange(F) {
              this._onChange = F;
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [
                ['', 'required', '', 'formControlName', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (F, Me) {
                2 & F && h.uIk('required', Me.required ? '' : null);
              },
              inputs: { required: 'required' },
              features: [h._Bn([Ks])],
            })),
            W
          );
        })(),
        ds = (() => {
          class W extends us {
            validate(F) {
              return this.required ? Ke(F) : null;
            }
          }
          return (
            (W.ɵfac = (function () {
              let H;
              return function (Me) {
                return (H || (H = h.n5z(W)))(Me || W);
              };
            })()),
            (W.ɵdir = h.lG2({
              type: W,
              selectors: [
                ['input', 'type', 'checkbox', 'required', '', 'formControlName', ''],
                ['input', 'type', 'checkbox', 'required', '', 'formControl', ''],
                ['input', 'type', 'checkbox', 'required', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (F, Me) {
                2 & F && h.uIk('required', Me.required ? '' : null);
              },
              features: [h._Bn([po]), h.qOj],
            })),
            W
          );
        })(),
        yn = (() => {
          class W {}
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵmod = h.oAB({ type: W })),
            (W.ɵinj = h.cJS({ imports: [[ko]] })),
            W
          );
        })(),
        Sn = (() => {
          class W {}
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵmod = h.oAB({ type: W })),
            (W.ɵinj = h.cJS({ imports: [yn] })),
            W
          );
        })(),
        di = (() => {
          class W {
            static withConfig(F) {
              return { ngModule: W, providers: [{ provide: ls, useValue: F.warnOnNgModelWithFormControl }] };
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵmod = h.oAB({ type: W })),
            (W.ɵinj = h.cJS({ imports: [yn] })),
            W
          );
        })(),
        ki = (() => {
          class W {
            group(F, Me = null) {
              const Xt = this._reduceControls(F);
              let pr,
                Pn = null,
                Pi = null;
              return (
                null != Me &&
                  ((function Vi(W) {
                    return void 0 !== W.asyncValidators || void 0 !== W.validators || void 0 !== W.updateOn;
                  })(Me)
                    ? ((Pn = null != Me.validators ? Me.validators : null),
                      (Pi = null != Me.asyncValidators ? Me.asyncValidators : null),
                      (pr = null != Me.updateOn ? Me.updateOn : void 0))
                    : ((Pn = null != Me.validator ? Me.validator : null),
                      (Pi = null != Me.asyncValidator ? Me.asyncValidator : null))),
                new qi(Xt, { asyncValidators: Pi, updateOn: pr, validators: Pn })
              );
            }
            control(F, Me, Xt) {
              return new Nr(F, Me, Xt);
            }
            array(F, Me, Xt) {
              const Pn = F.map((Pi) => this._createControl(Pi));
              return new ci(Pn, Me, Xt);
            }
            _reduceControls(F) {
              const Me = {};
              return (
                Object.keys(F).forEach((Xt) => {
                  Me[Xt] = this._createControl(F[Xt]);
                }),
                Me
              );
            }
            _createControl(F) {
              return pi(F) || J(F) || Kt(F)
                ? F
                : Array.isArray(F)
                ? this.control(F[0], F.length > 1 ? F[1] : null, F.length > 2 ? F[2] : null)
                : this.control(F);
            }
          }
          return (
            (W.ɵfac = function (F) {
              return new (F || W)();
            }),
            (W.ɵprov = h.Yz7({ token: W, factory: W.ɵfac, providedIn: di })),
            W
          );
        })();
    },
    7423: (un, ft, x) => {
      'use strict';
      x.d(ft, { lW: () => fe, ot: () => Qe });
      var h = x(5e3),
        m = x(508),
        d = x(6360),
        N = x(5664);
      const Ce = ['mat-button', ''],
        Re = ['*'],
        Ne = [
          'mat-button',
          'mat-flat-button',
          'mat-icon-button',
          'mat-raised-button',
          'mat-stroked-button',
          'mat-mini-fab',
          'mat-fab',
        ],
        ee = (0, m.pj)(
          (0, m.Id)(
            (0, m.Kr)(
              class {
                constructor(Oe) {
                  this._elementRef = Oe;
                }
              }
            )
          )
        );
      let fe = (() => {
          class Oe extends ee {
            constructor(lt, me, Ze) {
              super(lt),
                (this._focusMonitor = me),
                (this._animationMode = Ze),
                (this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab')),
                (this.isIconButton = this._hasHostAttributes('mat-icon-button'));
              for (const dt of Ne) this._hasHostAttributes(dt) && this._getHostElement().classList.add(dt);
              lt.nativeElement.classList.add('mat-button-base'), this.isRoundButton && (this.color = 'accent');
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(lt, me) {
              lt ? this._focusMonitor.focusVia(this._getHostElement(), lt, me) : this._getHostElement().focus(me);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...lt) {
              return lt.some((me) => this._getHostElement().hasAttribute(me));
            }
          }
          return (
            (Oe.ɵfac = function (lt) {
              return new (lt || Oe)(h.Y36(h.SBq), h.Y36(N.tE), h.Y36(d.Qb, 8));
            }),
            (Oe.ɵcmp = h.Xpm({
              type: Oe,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-icon-button', ''],
                ['button', 'mat-fab', ''],
                ['button', 'mat-mini-fab', ''],
                ['button', 'mat-stroked-button', ''],
                ['button', 'mat-flat-button', ''],
              ],
              viewQuery: function (lt, me) {
                if ((1 & lt && h.Gf(m.wG, 5), 2 & lt)) {
                  let Ze;
                  h.iGM((Ze = h.CRH())) && (me.ripple = Ze.first);
                }
              },
              hostAttrs: [1, 'mat-focus-indicator'],
              hostVars: 5,
              hostBindings: function (lt, me) {
                2 & lt &&
                  (h.uIk('disabled', me.disabled || null),
                  h.ekj('_mat-animation-noopable', 'NoopAnimations' === me._animationMode)(
                    'mat-button-disabled',
                    me.disabled
                  ));
              },
              inputs: { disabled: 'disabled', disableRipple: 'disableRipple', color: 'color' },
              exportAs: ['matButton'],
              features: [h.qOj],
              attrs: Ce,
              ngContentSelectors: Re,
              decls: 4,
              vars: 5,
              consts: [
                [1, 'mat-button-wrapper'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-button-focus-overlay'],
              ],
              template: function (lt, me) {
                1 & lt && (h.F$t(), h.TgZ(0, 'span', 0), h.Hsn(1), h.qZA(), h._UZ(2, 'span', 1), h._UZ(3, 'span', 2)),
                  2 & lt &&
                    (h.xp6(2),
                    h.ekj('mat-button-ripple-round', me.isRoundButton || me.isIconButton),
                    h.Q6J('matRippleDisabled', me._isRippleDisabled())('matRippleCentered', me.isIconButton)(
                      'matRippleTrigger',
                      me._getHostElement()
                    ));
              },
              directives: [m.wG],
              styles: [
                '.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Oe
          );
        })(),
        Qe = (() => {
          class Oe {}
          return (
            (Oe.ɵfac = function (lt) {
              return new (lt || Oe)();
            }),
            (Oe.ɵmod = h.oAB({ type: Oe })),
            (Oe.ɵinj = h.cJS({ imports: [[m.si, m.BQ], m.BQ] })),
            Oe
          );
        })();
    },
    9224: (un, ft, x) => {
      'use strict';
      x.d(ft, { a8: () => We, dn: () => ee, QW: () => Ke, $j: () => ue, n5: () => fe });
      var h = x(5e3),
        m = x(6360),
        d = x(508);
      const N = ['*', [['mat-card-footer']]],
        Ce = ['*', 'mat-card-footer'];
      let ee = (() => {
          class Ie {}
          return (
            (Ie.ɵfac = function (Ye) {
              return new (Ye || Ie)();
            }),
            (Ie.ɵdir = h.lG2({
              type: Ie,
              selectors: [['mat-card-content'], ['', 'mat-card-content', ''], ['', 'matCardContent', '']],
              hostAttrs: [1, 'mat-card-content'],
            })),
            Ie
          );
        })(),
        fe = (() => {
          class Ie {}
          return (
            (Ie.ɵfac = function (Ye) {
              return new (Ye || Ie)();
            }),
            (Ie.ɵdir = h.lG2({
              type: Ie,
              selectors: [['mat-card-title'], ['', 'mat-card-title', ''], ['', 'matCardTitle', '']],
              hostAttrs: [1, 'mat-card-title'],
            })),
            Ie
          );
        })(),
        ue = (() => {
          class Ie {}
          return (
            (Ie.ɵfac = function (Ye) {
              return new (Ye || Ie)();
            }),
            (Ie.ɵdir = h.lG2({
              type: Ie,
              selectors: [['mat-card-subtitle'], ['', 'mat-card-subtitle', ''], ['', 'matCardSubtitle', '']],
              hostAttrs: [1, 'mat-card-subtitle'],
            })),
            Ie
          );
        })(),
        We = (() => {
          class Ie {
            constructor(Ye) {
              this._animationMode = Ye;
            }
          }
          return (
            (Ie.ɵfac = function (Ye) {
              return new (Ye || Ie)(h.Y36(m.Qb, 8));
            }),
            (Ie.ɵcmp = h.Xpm({
              type: Ie,
              selectors: [['mat-card']],
              hostAttrs: [1, 'mat-card', 'mat-focus-indicator'],
              hostVars: 2,
              hostBindings: function (Ye, it) {
                2 & Ye && h.ekj('_mat-animation-noopable', 'NoopAnimations' === it._animationMode);
              },
              exportAs: ['matCard'],
              ngContentSelectors: Ce,
              decls: 2,
              vars: 0,
              template: function (Ye, it) {
                1 & Ye && (h.F$t(N), h.Hsn(0), h.Hsn(1, 1));
              },
              styles: [
                '.mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Ie
          );
        })(),
        Ke = (() => {
          class Ie {}
          return (
            (Ie.ɵfac = function (Ye) {
              return new (Ye || Ie)();
            }),
            (Ie.ɵmod = h.oAB({ type: Ie })),
            (Ie.ɵinj = h.cJS({ imports: [[d.BQ], d.BQ] })),
            Ie
          );
        })();
    },
    508: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        yN: () => me,
        mZ: () => Ze,
        _A: () => St,
        rD: () => at,
        sG: () => on,
        Y2: () => Se,
        BQ: () => We,
        X2: () => mt,
        uc: () => xt,
        XK: () => Ue,
        Ng: () => le,
        rN: () => Hn,
        nP: () => X,
        us: () => we,
        wG: () => Be,
        si: () => Pe,
        IR: () => ae,
        CB: () => de,
        jH: () => q,
        pj: () => De,
        Kr: () => Ye,
        Id: () => Ie,
        FD: () => qe,
        sb: () => it,
        E0: () => Nt,
      });
      var h = x(5e3),
        m = x(226),
        N = x(9808),
        Ce = x(925),
        Re = x(5664),
        He = x(3191),
        Fe = x(7579),
        Ne = x(8675),
        ee = x(6360);
      let me = (() => {
          class Z {}
          return (
            (Z.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)'),
            (Z.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)'),
            (Z.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)'),
            (Z.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)'),
            Z
          );
        })(),
        Ze = (() => {
          class Z {}
          return (Z.COMPLEX = '375ms'), (Z.ENTERING = '225ms'), (Z.EXITING = '195ms'), Z;
        })();
      const vt = new h.OlP('mat-sanity-checks', {
        providedIn: 'root',
        factory: function dt() {
          return !0;
        },
      });
      let We = (() => {
        class Z {
          constructor(ie, he, Te) {
            (this._sanityChecks = he),
              (this._document = Te),
              (this._hasDoneGlobalChecks = !1),
              ie._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(ie) {
            return (
              !(0, Ce.Oy)() && ('boolean' == typeof this._sanityChecks ? this._sanityChecks : !!this._sanityChecks[ie])
            );
          }
        }
        return (
          (Z.ɵfac = function (ie) {
            return new (ie || Z)(h.LFG(Re.qm), h.LFG(vt, 8), h.LFG(N.K0));
          }),
          (Z.ɵmod = h.oAB({ type: Z })),
          (Z.ɵinj = h.cJS({ imports: [[m.vT], m.vT] })),
          Z
        );
      })();
      function Ie(Z) {
        return class extends Z {
          constructor(...ye) {
            super(...ye), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(ye) {
            this._disabled = (0, He.Ig)(ye);
          }
        };
      }
      function De(Z, ye) {
        return class extends Z {
          constructor(...ie) {
            super(...ie), (this.defaultColor = ye), (this.color = ye);
          }
          get color() {
            return this._color;
          }
          set color(ie) {
            const he = ie || this.defaultColor;
            he !== this._color &&
              (this._color && this._elementRef.nativeElement.classList.remove(`mat-${this._color}`),
              he && this._elementRef.nativeElement.classList.add(`mat-${he}`),
              (this._color = he));
          }
        };
      }
      function Ye(Z) {
        return class extends Z {
          constructor(...ye) {
            super(...ye), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(ye) {
            this._disableRipple = (0, He.Ig)(ye);
          }
        };
      }
      function it(Z, ye = 0) {
        return class extends Z {
          constructor(...ie) {
            super(...ie), (this._tabIndex = ye), (this.defaultTabIndex = ye);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(ie) {
            this._tabIndex = null != ie ? (0, He.su)(ie) : this.defaultTabIndex;
          }
        };
      }
      function qe(Z) {
        return class extends Z {
          constructor(...ye) {
            super(...ye), (this.stateChanges = new Fe.x()), (this.errorState = !1);
          }
          updateErrorState() {
            const ye = this.errorState,
              pe = (this.errorStateMatcher || this._defaultErrorStateMatcher).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            pe !== ye && ((this.errorState = pe), this.stateChanges.next());
          }
        };
      }
      const Ft = new h.OlP('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function kt() {
          return (0, h.f3M)(h.soG);
        },
      });
      class St {
        constructor() {
          (this._localeChanges = new Fe.x()), (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(ye) {
          return this.isDateInstance(ye) && this.isValid(ye) ? ye : null;
        }
        deserialize(ye) {
          return null == ye || (this.isDateInstance(ye) && this.isValid(ye)) ? ye : this.invalid();
        }
        setLocale(ye) {
          (this.locale = ye), this._localeChanges.next();
        }
        compareDate(ye, ie) {
          return (
            this.getYear(ye) - this.getYear(ie) ||
            this.getMonth(ye) - this.getMonth(ie) ||
            this.getDate(ye) - this.getDate(ie)
          );
        }
        sameDate(ye, ie) {
          if (ye && ie) {
            let he = this.isValid(ye),
              Te = this.isValid(ie);
            return he && Te ? !this.compareDate(ye, ie) : he == Te;
          }
          return ye == ie;
        }
        clampDate(ye, ie, he) {
          return ie && this.compareDate(ye, ie) < 0 ? ie : he && this.compareDate(ye, he) > 0 ? he : ye;
        }
      }
      const on = new h.OlP('mat-date-formats'),
        Je = /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function Ct(Z, ye) {
        const ie = Array(Z);
        for (let he = 0; he < Z; he++) ie[he] = ye(he);
        return ie;
      }
      let st = (() => {
        class Z extends St {
          constructor(ie, he) {
            super(), (this.useUtcForDisplay = !1), super.setLocale(ie);
          }
          getYear(ie) {
            return ie.getFullYear();
          }
          getMonth(ie) {
            return ie.getMonth();
          }
          getDate(ie) {
            return ie.getDate();
          }
          getDayOfWeek(ie) {
            return ie.getDay();
          }
          getMonthNames(ie) {
            const he = new Intl.DateTimeFormat(this.locale, { month: ie, timeZone: 'utc' });
            return Ct(12, (Te) => this._format(he, new Date(2017, Te, 1)));
          }
          getDateNames() {
            const ie = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });
            return Ct(31, (he) => this._format(ie, new Date(2017, 0, he + 1)));
          }
          getDayOfWeekNames(ie) {
            const he = new Intl.DateTimeFormat(this.locale, { weekday: ie, timeZone: 'utc' });
            return Ct(7, (Te) => this._format(he, new Date(2017, 0, Te + 1)));
          }
          getYearName(ie) {
            const he = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });
            return this._format(he, ie);
          }
          getFirstDayOfWeek() {
            return 0;
          }
          getNumDaysInMonth(ie) {
            return this.getDate(this._createDateWithOverflow(this.getYear(ie), this.getMonth(ie) + 1, 0));
          }
          clone(ie) {
            return new Date(ie.getTime());
          }
          createDate(ie, he, Te) {
            let pe = this._createDateWithOverflow(ie, he, Te);
            return pe.getMonth(), pe;
          }
          today() {
            return new Date();
          }
          parse(ie) {
            return 'number' == typeof ie ? new Date(ie) : ie ? new Date(Date.parse(ie)) : null;
          }
          format(ie, he) {
            if (!this.isValid(ie)) throw Error('NativeDateAdapter: Cannot format invalid date.');
            const Te = new Intl.DateTimeFormat(this.locale, Object.assign(Object.assign({}, he), { timeZone: 'utc' }));
            return this._format(Te, ie);
          }
          addCalendarYears(ie, he) {
            return this.addCalendarMonths(ie, 12 * he);
          }
          addCalendarMonths(ie, he) {
            let Te = this._createDateWithOverflow(this.getYear(ie), this.getMonth(ie) + he, this.getDate(ie));
            return (
              this.getMonth(Te) != (((this.getMonth(ie) + he) % 12) + 12) % 12 &&
                (Te = this._createDateWithOverflow(this.getYear(Te), this.getMonth(Te), 0)),
              Te
            );
          }
          addCalendarDays(ie, he) {
            return this._createDateWithOverflow(this.getYear(ie), this.getMonth(ie), this.getDate(ie) + he);
          }
          toIso8601(ie) {
            return [ie.getUTCFullYear(), this._2digit(ie.getUTCMonth() + 1), this._2digit(ie.getUTCDate())].join('-');
          }
          deserialize(ie) {
            if ('string' == typeof ie) {
              if (!ie) return null;
              if (Je.test(ie)) {
                let he = new Date(ie);
                if (this.isValid(he)) return he;
              }
            }
            return super.deserialize(ie);
          }
          isDateInstance(ie) {
            return ie instanceof Date;
          }
          isValid(ie) {
            return !isNaN(ie.getTime());
          }
          invalid() {
            return new Date(NaN);
          }
          _createDateWithOverflow(ie, he, Te) {
            const pe = new Date();
            return pe.setFullYear(ie, he, Te), pe.setHours(0, 0, 0, 0), pe;
          }
          _2digit(ie) {
            return ('00' + ie).slice(-2);
          }
          _format(ie, he) {
            const Te = new Date();
            return (
              Te.setUTCFullYear(he.getFullYear(), he.getMonth(), he.getDate()),
              Te.setUTCHours(he.getHours(), he.getMinutes(), he.getSeconds(), he.getMilliseconds()),
              ie.format(Te)
            );
          }
        }
        return (
          (Z.ɵfac = function (ie) {
            return new (ie || Z)(h.LFG(Ft, 8), h.LFG(Ce.t4));
          }),
          (Z.ɵprov = h.Yz7({ token: Z, factory: Z.ɵfac })),
          Z
        );
      })();
      const Et = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let yt = (() => {
          class Z {}
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)();
            }),
            (Z.ɵmod = h.oAB({ type: Z })),
            (Z.ɵinj = h.cJS({ providers: [{ provide: St, useClass: st }], imports: [[Ce.ud]] })),
            Z
          );
        })(),
        Ue = (() => {
          class Z {}
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)();
            }),
            (Z.ɵmod = h.oAB({ type: Z })),
            (Z.ɵinj = h.cJS({ providers: [{ provide: on, useValue: Et }], imports: [[yt]] })),
            Z
          );
        })(),
        at = (() => {
          class Z {
            isErrorState(ie, he) {
              return !!(ie && ie.invalid && (ie.touched || (he && he.submitted)));
            }
          }
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)();
            }),
            (Z.ɵprov = h.Yz7({ token: Z, factory: Z.ɵfac, providedIn: 'root' })),
            Z
          );
        })(),
        mt = (() => {
          class Z {}
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)();
            }),
            (Z.ɵdir = h.lG2({
              type: Z,
              selectors: [
                ['', 'mat-line', ''],
                ['', 'matLine', ''],
              ],
              hostAttrs: [1, 'mat-line'],
            })),
            Z
          );
        })();
      function Nt(Z, ye, ie = 'mat') {
        Z.changes.pipe((0, Ne.O)(Z)).subscribe(({ length: he }) => {
          en(ye, `${ie}-2-line`, !1),
            en(ye, `${ie}-3-line`, !1),
            en(ye, `${ie}-multi-line`, !1),
            2 === he || 3 === he ? en(ye, `${ie}-${he}-line`, !0) : he > 3 && en(ye, `${ie}-multi-line`, !0);
        });
      }
      function en(Z, ye, ie) {
        Z.nativeElement.classList.toggle(ye, ie);
      }
      let xt = (() => {
        class Z {}
        return (
          (Z.ɵfac = function (ie) {
            return new (ie || Z)();
          }),
          (Z.ɵmod = h.oAB({ type: Z })),
          (Z.ɵinj = h.cJS({ imports: [[We], We] })),
          Z
        );
      })();
      class Gt {
        constructor(ye, ie, he) {
          (this._renderer = ye), (this.element = ie), (this.config = he), (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const re = { enterDuration: 225, exitDuration: 150 },
        Zt = (0, Ce.i$)({ passive: !0 }),
        hn = ['mousedown', 'touchstart'],
        At = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class ae {
        constructor(ye, ie, he, Te) {
          (this._target = ye),
            (this._ngZone = ie),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            Te.isBrowser && (this._containerElement = (0, He.fI)(he));
        }
        fadeInRipple(ye, ie, he = {}) {
          const Te = (this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect()),
            pe = Object.assign(Object.assign({}, re), he.animation);
          he.centered && ((ye = Te.left + Te.width / 2), (ie = Te.top + Te.height / 2));
          const _e =
              he.radius ||
              (function ht(Z, ye, ie) {
                const he = Math.max(Math.abs(Z - ie.left), Math.abs(Z - ie.right)),
                  Te = Math.max(Math.abs(ye - ie.top), Math.abs(ye - ie.bottom));
                return Math.sqrt(he * he + Te * Te);
              })(ye, ie, Te),
            Xe = ye - Te.left,
            Ot = ie - Te.top,
            Yt = pe.enterDuration,
            _n = document.createElement('div');
          _n.classList.add('mat-ripple-element'),
            (_n.style.left = Xe - _e + 'px'),
            (_n.style.top = Ot - _e + 'px'),
            (_n.style.height = 2 * _e + 'px'),
            (_n.style.width = 2 * _e + 'px'),
            null != he.color && (_n.style.backgroundColor = he.color),
            (_n.style.transitionDuration = `${Yt}ms`),
            this._containerElement.appendChild(_n),
            (function Le(Z) {
              window.getComputedStyle(Z).getPropertyValue('opacity');
            })(_n),
            (_n.style.transform = 'scale(1)');
          const Qn = new Gt(this, _n, he);
          return (
            (Qn.state = 0),
            this._activeRipples.add(Qn),
            he.persistent || (this._mostRecentTransientRipple = Qn),
            this._runTimeoutOutsideZone(() => {
              const Ai = Qn === this._mostRecentTransientRipple;
              (Qn.state = 1), !he.persistent && (!Ai || !this._isPointerDown) && Qn.fadeOut();
            }, Yt),
            Qn
          );
        }
        fadeOutRipple(ye) {
          const ie = this._activeRipples.delete(ye);
          if (
            (ye === this._mostRecentTransientRipple && (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !ie)
          )
            return;
          const he = ye.element,
            Te = Object.assign(Object.assign({}, re), ye.config.animation);
          (he.style.transitionDuration = `${Te.exitDuration}ms`),
            (he.style.opacity = '0'),
            (ye.state = 2),
            this._runTimeoutOutsideZone(() => {
              (ye.state = 3), he.remove();
            }, Te.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((ye) => ye.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._activeRipples.forEach((ye) => {
            ye.config.persistent || ye.fadeOut();
          });
        }
        setupTriggerEvents(ye) {
          const ie = (0, He.fI)(ye);
          !ie ||
            ie === this._triggerElement ||
            (this._removeTriggerEvents(), (this._triggerElement = ie), this._registerEvents(hn));
        }
        handleEvent(ye) {
          'mousedown' === ye.type
            ? this._onMousedown(ye)
            : 'touchstart' === ye.type
            ? this._onTouchStart(ye)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered || (this._registerEvents(At), (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(ye) {
          const ie = (0, Re.X6)(ye),
            he = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !ie &&
            !he &&
            ((this._isPointerDown = !0), this.fadeInRipple(ye.clientX, ye.clientY, this._target.rippleConfig));
        }
        _onTouchStart(ye) {
          if (!this._target.rippleDisabled && !(0, Re.yG)(ye)) {
            (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
            const ie = ye.changedTouches;
            for (let he = 0; he < ie.length; he++)
              this.fadeInRipple(ie[he].clientX, ie[he].clientY, this._target.rippleConfig);
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((ye) => {
              !ye.config.persistent &&
                (1 === ye.state || (ye.config.terminateOnPointerUp && 0 === ye.state)) &&
                ye.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(ye, ie = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(ye, ie));
        }
        _registerEvents(ye) {
          this._ngZone.runOutsideAngular(() => {
            ye.forEach((ie) => {
              this._triggerElement.addEventListener(ie, this, Zt);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (hn.forEach((ye) => {
              this._triggerElement.removeEventListener(ye, this, Zt);
            }),
            this._pointerUpEventsRegistered &&
              At.forEach((ye) => {
                this._triggerElement.removeEventListener(ye, this, Zt);
              }));
        }
      }
      const Se = new h.OlP('mat-ripple-global-options');
      let Be = (() => {
          class Z {
            constructor(ie, he, Te, pe, _e) {
              (this._elementRef = ie),
                (this._animationMode = _e),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = pe || {}),
                (this._rippleRenderer = new ae(this, he, ie, Te));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(ie) {
              ie && this.fadeOutAllNonPersistent(), (this._disabled = ie), this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(ie) {
              (this._trigger = ie), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    'NoopAnimations' === this._animationMode ? { enterDuration: 0, exitDuration: 0 } : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled && this._isInitialized && this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(ie, he = 0, Te) {
              return 'number' == typeof ie
                ? this._rippleRenderer.fadeInRipple(ie, he, Object.assign(Object.assign({}, this.rippleConfig), Te))
                : this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), ie));
            }
          }
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)(h.Y36(h.SBq), h.Y36(h.R0b), h.Y36(Ce.t4), h.Y36(Se, 8), h.Y36(ee.Qb, 8));
            }),
            (Z.ɵdir = h.lG2({
              type: Z,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (ie, he) {
                2 & ie && h.ekj('mat-ripple-unbounded', he.unbounded);
              },
              inputs: {
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                radius: ['matRippleRadius', 'radius'],
                animation: ['matRippleAnimation', 'animation'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
              },
              exportAs: ['matRipple'],
            })),
            Z
          );
        })(),
        Pe = (() => {
          class Z {}
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)();
            }),
            (Z.ɵmod = h.oAB({ type: Z })),
            (Z.ɵinj = h.cJS({ imports: [[We, Ce.ud], We] })),
            Z
          );
        })(),
        X = (() => {
          class Z {
            constructor(ie) {
              (this._animationMode = ie), (this.state = 'unchecked'), (this.disabled = !1);
            }
          }
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)(h.Y36(ee.Qb, 8));
            }),
            (Z.ɵcmp = h.Xpm({
              type: Z,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 8,
              hostBindings: function (ie, he) {
                2 & ie &&
                  h.ekj('mat-pseudo-checkbox-indeterminate', 'indeterminate' === he.state)(
                    'mat-pseudo-checkbox-checked',
                    'checked' === he.state
                  )('mat-pseudo-checkbox-disabled', he.disabled)(
                    '_mat-animation-noopable',
                    'NoopAnimations' === he._animationMode
                  );
              },
              inputs: { state: 'state', disabled: 'disabled' },
              decls: 0,
              vars: 0,
              template: function (ie, he) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Z
          );
        })(),
        we = (() => {
          class Z {}
          return (
            (Z.ɵfac = function (ie) {
              return new (ie || Z)();
            }),
            (Z.ɵmod = h.oAB({ type: Z })),
            (Z.ɵinj = h.cJS({ imports: [[We]] })),
            Z
          );
        })();
      class Hn {
        constructor(ye, ie = !1) {
          (this.source = ye), (this.isUserInput = ie);
        }
      }
      function de(Z, ye, ie) {
        if (ie.length) {
          let he = ye.toArray(),
            Te = ie.toArray(),
            pe = 0;
          for (let _e = 0; _e < Z + 1; _e++) he[_e].group && he[_e].group === Te[pe] && pe++;
          return pe;
        }
        return 0;
      }
      function q(Z, ye, ie, he) {
        return Z < ie ? Z : Z + ye > ie + he ? Math.max(0, Z - he + ye) : ie;
      }
      let le = (() => {
        class Z {}
        return (
          (Z.ɵfac = function (ie) {
            return new (ie || Z)();
          }),
          (Z.ɵmod = h.oAB({ type: Z })),
          (Z.ɵinj = h.cJS({ imports: [[Pe, N.ez, We, we]] })),
          Z
        );
      })();
    },
    4834: (un, ft, x) => {
      'use strict';
      x.d(ft, { d: () => N, t: () => Ce });
      var h = x(5e3),
        m = x(3191),
        d = x(508);
      let N = (() => {
          class Re {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(Fe) {
              this._vertical = (0, m.Ig)(Fe);
            }
            get inset() {
              return this._inset;
            }
            set inset(Fe) {
              this._inset = (0, m.Ig)(Fe);
            }
          }
          return (
            (Re.ɵfac = function (Fe) {
              return new (Fe || Re)();
            }),
            (Re.ɵcmp = h.Xpm({
              type: Re,
              selectors: [['mat-divider']],
              hostAttrs: ['role', 'separator', 1, 'mat-divider'],
              hostVars: 7,
              hostBindings: function (Fe, Ne) {
                2 & Fe &&
                  (h.uIk('aria-orientation', Ne.vertical ? 'vertical' : 'horizontal'),
                  h.ekj('mat-divider-vertical', Ne.vertical)('mat-divider-horizontal', !Ne.vertical)(
                    'mat-divider-inset',
                    Ne.inset
                  ));
              },
              inputs: { vertical: 'vertical', inset: 'inset' },
              decls: 0,
              vars: 0,
              template: function (Fe, Ne) {},
              styles: [
                '.mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Re
          );
        })(),
        Ce = (() => {
          class Re {}
          return (
            (Re.ɵfac = function (Fe) {
              return new (Fe || Re)();
            }),
            (Re.ɵmod = h.oAB({ type: Re })),
            (Re.ɵinj = h.cJS({ imports: [[d.BQ], d.BQ] })),
            Re
          );
        })();
    },
    7322: (un, ft, x) => {
      'use strict';
      x.d(ft, { G_: () => Le, TO: () => on, KE: () => ht, Eo: () => Ct, lN: () => Se, hX: () => mt });
      var h = x(7144),
        m = x(9808),
        d = x(5e3),
        N = x(508),
        Ce = x(3191),
        Re = x(7579),
        He = x(6451),
        Fe = x(4968),
        Ne = x(8675),
        ee = x(2722),
        fe = x(5698),
        ue = x(1777),
        Qe = x(6360),
        Oe = x(226),
        et = x(925);
      const lt = ['connectionContainer'],
        me = ['inputContainer'],
        Ze = ['label'];
      function dt(Be, Pe) {
        1 & Be &&
          (d.ynx(0),
          d.TgZ(1, 'div', 14),
          d._UZ(2, 'div', 15),
          d._UZ(3, 'div', 16),
          d._UZ(4, 'div', 17),
          d.qZA(),
          d.TgZ(5, 'div', 18),
          d._UZ(6, 'div', 15),
          d._UZ(7, 'div', 16),
          d._UZ(8, 'div', 17),
          d.qZA(),
          d.BQk());
      }
      function vt(Be, Pe) {
        if (1 & Be) {
          const X = d.EpF();
          d.TgZ(0, 'div', 19),
            d.NdJ('cdkObserveContent', function () {
              return d.CHM(X), d.oxw().updateOutlineGap();
            }),
            d.Hsn(1, 1),
            d.qZA();
        }
        if (2 & Be) {
          const X = d.oxw();
          d.Q6J('cdkObserveContentDisabled', 'outline' != X.appearance);
        }
      }
      function We(Be, Pe) {
        if ((1 & Be && (d.ynx(0), d.Hsn(1, 2), d.TgZ(2, 'span'), d._uU(3), d.qZA(), d.BQk()), 2 & Be)) {
          const X = d.oxw(2);
          d.xp6(3), d.Oqu(X._control.placeholder);
        }
      }
      function $e(Be, Pe) {
        1 & Be && d.Hsn(0, 3, ['*ngSwitchCase', 'true']);
      }
      function ge(Be, Pe) {
        1 & Be && (d.TgZ(0, 'span', 23), d._uU(1, ' *'), d.qZA());
      }
      function Ke(Be, Pe) {
        if (1 & Be) {
          const X = d.EpF();
          d.TgZ(0, 'label', 20, 21),
            d.NdJ('cdkObserveContent', function () {
              return d.CHM(X), d.oxw().updateOutlineGap();
            }),
            d.YNc(2, We, 4, 1, 'ng-container', 12),
            d.YNc(3, $e, 1, 0, 'ng-content', 12),
            d.YNc(4, ge, 2, 0, 'span', 22),
            d.qZA();
        }
        if (2 & Be) {
          const X = d.oxw();
          d.ekj('mat-empty', X._control.empty && !X._shouldAlwaysFloat())(
            'mat-form-field-empty',
            X._control.empty && !X._shouldAlwaysFloat()
          )('mat-accent', 'accent' == X.color)('mat-warn', 'warn' == X.color),
            d.Q6J('cdkObserveContentDisabled', 'outline' != X.appearance)('id', X._labelId)('ngSwitch', X._hasLabel()),
            d.uIk('for', X._control.id)('aria-owns', X._control.id),
            d.xp6(2),
            d.Q6J('ngSwitchCase', !1),
            d.xp6(1),
            d.Q6J('ngSwitchCase', !0),
            d.xp6(1),
            d.Q6J('ngIf', !X.hideRequiredMarker && X._control.required && !X._control.disabled);
        }
      }
      function Ie(Be, Pe) {
        1 & Be && (d.TgZ(0, 'div', 24), d.Hsn(1, 4), d.qZA());
      }
      function De(Be, Pe) {
        if ((1 & Be && (d.TgZ(0, 'div', 25), d._UZ(1, 'span', 26), d.qZA()), 2 & Be)) {
          const X = d.oxw();
          d.xp6(1), d.ekj('mat-accent', 'accent' == X.color)('mat-warn', 'warn' == X.color);
        }
      }
      function Ye(Be, Pe) {
        if ((1 & Be && (d.TgZ(0, 'div'), d.Hsn(1, 5), d.qZA()), 2 & Be)) {
          const X = d.oxw();
          d.Q6J('@transitionMessages', X._subscriptAnimationState);
        }
      }
      function it(Be, Pe) {
        if ((1 & Be && (d.TgZ(0, 'div', 30), d._uU(1), d.qZA()), 2 & Be)) {
          const X = d.oxw(2);
          d.Q6J('id', X._hintLabelId), d.xp6(1), d.Oqu(X.hintLabel);
        }
      }
      function qe(Be, Pe) {
        if (
          (1 & Be &&
            (d.TgZ(0, 'div', 27),
            d.YNc(1, it, 2, 2, 'div', 28),
            d.Hsn(2, 6),
            d._UZ(3, 'div', 29),
            d.Hsn(4, 7),
            d.qZA()),
          2 & Be)
        ) {
          const X = d.oxw();
          d.Q6J('@transitionMessages', X._subscriptAnimationState), d.xp6(1), d.Q6J('ngIf', X.hintLabel);
        }
      }
      const Ve = [
          '*',
          [['', 'matPrefix', '']],
          [['mat-placeholder']],
          [['mat-label']],
          [['', 'matSuffix', '']],
          [['mat-error']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        Ft = [
          '*',
          '[matPrefix]',
          'mat-placeholder',
          'mat-label',
          '[matSuffix]',
          'mat-error',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let kt = 0;
      const St = new d.OlP('MatError');
      let on = (() => {
        class Be {
          constructor(X, we) {
            (this.id = 'mat-error-' + kt++), X || we.nativeElement.setAttribute('aria-live', 'polite');
          }
        }
        return (
          (Be.ɵfac = function (X) {
            return new (X || Be)(d.$8M('aria-live'), d.Y36(d.SBq));
          }),
          (Be.ɵdir = d.lG2({
            type: Be,
            selectors: [['mat-error']],
            hostAttrs: ['aria-atomic', 'true', 1, 'mat-error'],
            hostVars: 1,
            hostBindings: function (X, we) {
              2 & X && d.uIk('id', we.id);
            },
            inputs: { id: 'id' },
            features: [d._Bn([{ provide: St, useExisting: Be }])],
          })),
          Be
        );
      })();
      const Je = {
        transitionMessages: (0, ue.X$)('transitionMessages', [
          (0, ue.SB)('enter', (0, ue.oB)({ opacity: 1, transform: 'translateY(0%)' })),
          (0, ue.eR)('void => enter', [
            (0, ue.oB)({ opacity: 0, transform: 'translateY(-5px)' }),
            (0, ue.jt)('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let Ct = (() => {
        class Be {}
        return (
          (Be.ɵfac = function (X) {
            return new (X || Be)();
          }),
          (Be.ɵdir = d.lG2({ type: Be })),
          Be
        );
      })();
      const bt = new d.OlP('MatHint');
      let mt = (() => {
          class Be {}
          return (
            (Be.ɵfac = function (X) {
              return new (X || Be)();
            }),
            (Be.ɵdir = d.lG2({ type: Be, selectors: [['mat-label']] })),
            Be
          );
        })(),
        Nt = (() => {
          class Be {}
          return (
            (Be.ɵfac = function (X) {
              return new (X || Be)();
            }),
            (Be.ɵdir = d.lG2({ type: Be, selectors: [['mat-placeholder']] })),
            Be
          );
        })();
      const en = new d.OlP('MatPrefix'),
        Gt = new d.OlP('MatSuffix');
      let ot = 0;
      const At = (0, N.pj)(
          class {
            constructor(Be) {
              this._elementRef = Be;
            }
          },
          'primary'
        ),
        ae = new d.OlP('MAT_FORM_FIELD_DEFAULT_OPTIONS'),
        Le = new d.OlP('MatFormField');
      let ht = (() => {
          class Be extends At {
            constructor(X, we, Rt, It, an, mn, ln) {
              super(X),
                (this._changeDetectorRef = we),
                (this._dir = Rt),
                (this._defaults = It),
                (this._platform = an),
                (this._ngZone = mn),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new Re.x()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ''),
                (this._hintLabel = ''),
                (this._hintLabelId = 'mat-hint-' + ot++),
                (this._labelId = 'mat-form-field-label-' + ot++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = 'NoopAnimations' !== ln),
                (this.appearance = It && It.appearance ? It.appearance : 'legacy'),
                (this._hideRequiredMarker = !(!It || null == It.hideRequiredMarker) && It.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(X) {
              const we = this._appearance;
              (this._appearance = X || (this._defaults && this._defaults.appearance) || 'legacy'),
                'outline' === this._appearance && we !== X && (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(X) {
              this._hideRequiredMarker = (0, Ce.Ig)(X);
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return 'never' !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(X) {
              (this._hintLabel = X), this._processHints();
            }
            get floatLabel() {
              return 'legacy' !== this.appearance && 'never' === this._floatLabel ? 'auto' : this._floatLabel;
            }
            set floatLabel(X) {
              X !== this._floatLabel &&
                ((this._floatLabel = X || this._getDefaultFloatLabelState()), this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;
            }
            set _control(X) {
              this._explicitFormFieldControl = X;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const X = this._control;
              X.controlType && this._elementRef.nativeElement.classList.add(`mat-form-field-type-${X.controlType}`),
                X.stateChanges.pipe((0, Ne.O)(null)).subscribe(() => {
                  this._validatePlaceholders(), this._syncDescribedByIds(), this._changeDetectorRef.markForCheck();
                }),
                X.ngControl &&
                  X.ngControl.valueChanges &&
                  X.ngControl.valueChanges
                    .pipe((0, ee.R)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.pipe((0, ee.R)(this._destroyed)).subscribe(() => {
                    this._outlineGapCalculationNeededOnStable && this.updateOutlineGap();
                  });
                }),
                (0, He.T)(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0), this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe((0, Ne.O)(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe((0, Ne.O)(null)).subscribe(() => {
                  this._syncDescribedByIds(), this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe((0, ee.R)(this._destroyed)).subscribe(() => {
                    'function' == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(), this._outlineGapCalculationNeededImmediately && this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = 'enter'), this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(X) {
              const we = this._control ? this._control.ngControl : null;
              return we && we[X];
            }
            _hasPlaceholder() {
              return !!((this._control && this._control.placeholder) || this._placeholderChild);
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ('legacy' === this.appearance && !this._hasLabel()) || (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return this._hasLabel() || ('legacy' === this.appearance && this._hasPlaceholder());
            }
            _getDisplayedMessages() {
              return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState
                ? 'error'
                : 'hint';
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  (0, Fe.R)(this._label.nativeElement, 'transitionend')
                    .pipe((0, fe.q)(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = 'always'),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || 'auto';
            }
            _syncDescribedByIds() {
              if (this._control) {
                let X = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    X.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const we = this._hintChildren ? this._hintChildren.find((It) => 'start' === It.align) : null,
                    Rt = this._hintChildren ? this._hintChildren.find((It) => 'end' === It.align) : null;
                  we ? X.push(we.id) : this._hintLabel && X.push(this._hintLabelId), Rt && X.push(Rt.id);
                } else this._errorChildren && X.push(...this._errorChildren.map((we) => we.id));
                this._control.setDescribedByIds(X);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const X = this._label ? this._label.nativeElement : null,
                we = this._connectionContainerRef.nativeElement,
                Rt = '.mat-form-field-outline-start',
                It = '.mat-form-field-outline-gap';
              if ('outline' !== this.appearance || !this._platform.isBrowser) return;
              if (!X || !X.children.length || !X.textContent.trim()) {
                const Yn = we.querySelectorAll(`${Rt}, ${It}`);
                for (let Hn = 0; Hn < Yn.length; Hn++) Yn[Hn].style.width = '0';
                return;
              }
              if (!this._isAttachedToDOM()) return void (this._outlineGapCalculationNeededImmediately = !0);
              let an = 0,
                mn = 0;
              const ln = we.querySelectorAll(Rt),
                An = we.querySelectorAll(It);
              if (this._label && this._label.nativeElement.children.length) {
                const Yn = we.getBoundingClientRect();
                if (0 === Yn.width && 0 === Yn.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const Hn = this._getStartEnd(Yn),
                  zt = X.children,
                  Wt = this._getStartEnd(zt[0].getBoundingClientRect());
                let de = 0;
                for (let q = 0; q < zt.length; q++) de += zt[q].offsetWidth;
                (an = Math.abs(Wt - Hn) - 5), (mn = de > 0 ? 0.75 * de + 10 : 0);
              }
              for (let Yn = 0; Yn < ln.length; Yn++) ln[Yn].style.width = `${an}px`;
              for (let Yn = 0; Yn < An.length; Yn++) An[Yn].style.width = `${mn}px`;
              this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(X) {
              return this._dir && 'rtl' === this._dir.value ? X.right : X.left;
            }
            _isAttachedToDOM() {
              const X = this._elementRef.nativeElement;
              if (X.getRootNode) {
                const we = X.getRootNode();
                return we && we !== X;
              }
              return document.documentElement.contains(X);
            }
          }
          return (
            (Be.ɵfac = function (X) {
              return new (X || Be)(
                d.Y36(d.SBq),
                d.Y36(d.sBO),
                d.Y36(Oe.Is, 8),
                d.Y36(ae, 8),
                d.Y36(et.t4),
                d.Y36(d.R0b),
                d.Y36(Qe.Qb, 8)
              );
            }),
            (Be.ɵcmp = d.Xpm({
              type: Be,
              selectors: [['mat-form-field']],
              contentQueries: function (X, we, Rt) {
                if (
                  (1 & X &&
                    (d.Suo(Rt, Ct, 5),
                    d.Suo(Rt, Ct, 7),
                    d.Suo(Rt, mt, 5),
                    d.Suo(Rt, mt, 7),
                    d.Suo(Rt, Nt, 5),
                    d.Suo(Rt, St, 5),
                    d.Suo(Rt, bt, 5),
                    d.Suo(Rt, en, 5),
                    d.Suo(Rt, Gt, 5)),
                  2 & X)
                ) {
                  let It;
                  d.iGM((It = d.CRH())) && (we._controlNonStatic = It.first),
                    d.iGM((It = d.CRH())) && (we._controlStatic = It.first),
                    d.iGM((It = d.CRH())) && (we._labelChildNonStatic = It.first),
                    d.iGM((It = d.CRH())) && (we._labelChildStatic = It.first),
                    d.iGM((It = d.CRH())) && (we._placeholderChild = It.first),
                    d.iGM((It = d.CRH())) && (we._errorChildren = It),
                    d.iGM((It = d.CRH())) && (we._hintChildren = It),
                    d.iGM((It = d.CRH())) && (we._prefixChildren = It),
                    d.iGM((It = d.CRH())) && (we._suffixChildren = It);
                }
              },
              viewQuery: function (X, we) {
                if ((1 & X && (d.Gf(lt, 7), d.Gf(me, 5), d.Gf(Ze, 5)), 2 & X)) {
                  let Rt;
                  d.iGM((Rt = d.CRH())) && (we._connectionContainerRef = Rt.first),
                    d.iGM((Rt = d.CRH())) && (we._inputContainerRef = Rt.first),
                    d.iGM((Rt = d.CRH())) && (we._label = Rt.first);
                }
              },
              hostAttrs: [1, 'mat-form-field'],
              hostVars: 40,
              hostBindings: function (X, we) {
                2 & X &&
                  d.ekj('mat-form-field-appearance-standard', 'standard' == we.appearance)(
                    'mat-form-field-appearance-fill',
                    'fill' == we.appearance
                  )('mat-form-field-appearance-outline', 'outline' == we.appearance)(
                    'mat-form-field-appearance-legacy',
                    'legacy' == we.appearance
                  )('mat-form-field-invalid', we._control.errorState)('mat-form-field-can-float', we._canLabelFloat())(
                    'mat-form-field-should-float',
                    we._shouldLabelFloat()
                  )('mat-form-field-has-label', we._hasFloatingLabel())(
                    'mat-form-field-hide-placeholder',
                    we._hideControlPlaceholder()
                  )('mat-form-field-disabled', we._control.disabled)(
                    'mat-form-field-autofilled',
                    we._control.autofilled
                  )('mat-focused', we._control.focused)('ng-untouched', we._shouldForward('untouched'))(
                    'ng-touched',
                    we._shouldForward('touched')
                  )('ng-pristine', we._shouldForward('pristine'))('ng-dirty', we._shouldForward('dirty'))(
                    'ng-valid',
                    we._shouldForward('valid')
                  )('ng-invalid', we._shouldForward('invalid'))('ng-pending', we._shouldForward('pending'))(
                    '_mat-animation-noopable',
                    !we._animationsEnabled
                  );
              },
              inputs: {
                color: 'color',
                appearance: 'appearance',
                hideRequiredMarker: 'hideRequiredMarker',
                hintLabel: 'hintLabel',
                floatLabel: 'floatLabel',
              },
              exportAs: ['matFormField'],
              features: [d._Bn([{ provide: Le, useExisting: Be }]), d.qOj],
              ngContentSelectors: Ft,
              decls: 15,
              vars: 8,
              consts: [
                [1, 'mat-form-field-wrapper'],
                [1, 'mat-form-field-flex', 3, 'click'],
                ['connectionContainer', ''],
                [4, 'ngIf'],
                ['class', 'mat-form-field-prefix', 3, 'cdkObserveContentDisabled', 'cdkObserveContent', 4, 'ngIf'],
                [1, 'mat-form-field-infix'],
                ['inputContainer', ''],
                [1, 'mat-form-field-label-wrapper'],
                [
                  'class',
                  'mat-form-field-label',
                  3,
                  'cdkObserveContentDisabled',
                  'id',
                  'mat-empty',
                  'mat-form-field-empty',
                  'mat-accent',
                  'mat-warn',
                  'ngSwitch',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-form-field-suffix', 4, 'ngIf'],
                ['class', 'mat-form-field-underline', 4, 'ngIf'],
                [1, 'mat-form-field-subscript-wrapper', 3, 'ngSwitch'],
                [4, 'ngSwitchCase'],
                ['class', 'mat-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [1, 'mat-form-field-outline'],
                [1, 'mat-form-field-outline-start'],
                [1, 'mat-form-field-outline-gap'],
                [1, 'mat-form-field-outline-end'],
                [1, 'mat-form-field-outline', 'mat-form-field-outline-thick'],
                [1, 'mat-form-field-prefix', 3, 'cdkObserveContentDisabled', 'cdkObserveContent'],
                [1, 'mat-form-field-label', 3, 'cdkObserveContentDisabled', 'id', 'ngSwitch', 'cdkObserveContent'],
                ['label', ''],
                ['class', 'mat-placeholder-required mat-form-field-required-marker', 'aria-hidden', 'true', 4, 'ngIf'],
                ['aria-hidden', 'true', 1, 'mat-placeholder-required', 'mat-form-field-required-marker'],
                [1, 'mat-form-field-suffix'],
                [1, 'mat-form-field-underline'],
                [1, 'mat-form-field-ripple'],
                [1, 'mat-form-field-hint-wrapper'],
                ['class', 'mat-hint', 3, 'id', 4, 'ngIf'],
                [1, 'mat-form-field-hint-spacer'],
                [1, 'mat-hint', 3, 'id'],
              ],
              template: function (X, we) {
                1 & X &&
                  (d.F$t(Ve),
                  d.TgZ(0, 'div', 0),
                  d.TgZ(1, 'div', 1, 2),
                  d.NdJ('click', function (It) {
                    return we._control.onContainerClick && we._control.onContainerClick(It);
                  }),
                  d.YNc(3, dt, 9, 0, 'ng-container', 3),
                  d.YNc(4, vt, 2, 1, 'div', 4),
                  d.TgZ(5, 'div', 5, 6),
                  d.Hsn(7),
                  d.TgZ(8, 'span', 7),
                  d.YNc(9, Ke, 5, 16, 'label', 8),
                  d.qZA(),
                  d.qZA(),
                  d.YNc(10, Ie, 2, 0, 'div', 9),
                  d.qZA(),
                  d.YNc(11, De, 2, 4, 'div', 10),
                  d.TgZ(12, 'div', 11),
                  d.YNc(13, Ye, 2, 1, 'div', 12),
                  d.YNc(14, qe, 5, 2, 'div', 13),
                  d.qZA(),
                  d.qZA()),
                  2 & X &&
                    (d.xp6(3),
                    d.Q6J('ngIf', 'outline' == we.appearance),
                    d.xp6(1),
                    d.Q6J('ngIf', we._prefixChildren.length),
                    d.xp6(5),
                    d.Q6J('ngIf', we._hasFloatingLabel()),
                    d.xp6(1),
                    d.Q6J('ngIf', we._suffixChildren.length),
                    d.xp6(1),
                    d.Q6J('ngIf', 'outline' != we.appearance),
                    d.xp6(1),
                    d.Q6J('ngSwitch', we._getDisplayedMessages()),
                    d.xp6(1),
                    d.Q6J('ngSwitchCase', 'error'),
                    d.xp6(1),
                    d.Q6J('ngSwitchCase', 'hint'));
              },
              directives: [m.O5, h.wD, m.RF, m.n9],
              styles: [
                '.mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n',
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                '.mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n',
                '.mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n',
                '.mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n',
              ],
              encapsulation: 2,
              data: { animation: [Je.transitionMessages] },
              changeDetection: 0,
            })),
            Be
          );
        })(),
        Se = (() => {
          class Be {}
          return (
            (Be.ɵfac = function (X) {
              return new (X || Be)();
            }),
            (Be.ɵmod = d.oAB({ type: Be })),
            (Be.ɵinj = d.cJS({ imports: [[m.ez, N.BQ, h.Q8], N.BQ] })),
            Be
          );
        })();
    },
    3954: (un, ft, x) => {
      'use strict';
      x.d(ft, { Il: () => Ie, N6: () => De, DX: () => ue });
      var h = x(5e3),
        m = x(508),
        d = x(3191),
        N = x(226);
      const Ce = ['*'];
      class Ne {
        constructor() {
          (this.columnIndex = 0), (this.rowIndex = 0);
        }
        get rowCount() {
          return this.rowIndex + 1;
        }
        get rowspan() {
          const qe = Math.max(...this.tracker);
          return qe > 1 ? this.rowCount + qe - 1 : this.rowCount;
        }
        update(qe, Ve) {
          (this.columnIndex = 0),
            (this.rowIndex = 0),
            (this.tracker = new Array(qe)),
            this.tracker.fill(0, 0, this.tracker.length),
            (this.positions = Ve.map((Ft) => this._trackTile(Ft)));
        }
        _trackTile(qe) {
          const Ve = this._findMatchingGap(qe.colspan);
          return this._markTilePosition(Ve, qe), (this.columnIndex = Ve + qe.colspan), new ee(this.rowIndex, Ve);
        }
        _findMatchingGap(qe) {
          let Ve = -1,
            Ft = -1;
          do {
            this.columnIndex + qe > this.tracker.length
              ? (this._nextRow(), (Ve = this.tracker.indexOf(0, this.columnIndex)), (Ft = this._findGapEndIndex(Ve)))
              : ((Ve = this.tracker.indexOf(0, this.columnIndex)),
                -1 != Ve
                  ? ((Ft = this._findGapEndIndex(Ve)), (this.columnIndex = Ve + 1))
                  : (this._nextRow(),
                    (Ve = this.tracker.indexOf(0, this.columnIndex)),
                    (Ft = this._findGapEndIndex(Ve))));
          } while (Ft - Ve < qe || 0 == Ft);
          return Math.max(Ve, 0);
        }
        _nextRow() {
          (this.columnIndex = 0), this.rowIndex++;
          for (let qe = 0; qe < this.tracker.length; qe++) this.tracker[qe] = Math.max(0, this.tracker[qe] - 1);
        }
        _findGapEndIndex(qe) {
          for (let Ve = qe + 1; Ve < this.tracker.length; Ve++) if (0 != this.tracker[Ve]) return Ve;
          return this.tracker.length;
        }
        _markTilePosition(qe, Ve) {
          for (let Ft = 0; Ft < Ve.colspan; Ft++) this.tracker[qe + Ft] = Ve.rowspan;
        }
      }
      class ee {
        constructor(qe, Ve) {
          (this.row = qe), (this.col = Ve);
        }
      }
      const fe = new h.OlP('MAT_GRID_LIST');
      let ue = (() => {
        class it {
          constructor(Ve, Ft) {
            (this._element = Ve), (this._gridList = Ft), (this._rowspan = 1), (this._colspan = 1);
          }
          get rowspan() {
            return this._rowspan;
          }
          set rowspan(Ve) {
            this._rowspan = Math.round((0, d.su)(Ve));
          }
          get colspan() {
            return this._colspan;
          }
          set colspan(Ve) {
            this._colspan = Math.round((0, d.su)(Ve));
          }
          _setStyle(Ve, Ft) {
            this._element.nativeElement.style[Ve] = Ft;
          }
        }
        return (
          (it.ɵfac = function (Ve) {
            return new (Ve || it)(h.Y36(h.SBq), h.Y36(fe, 8));
          }),
          (it.ɵcmp = h.Xpm({
            type: it,
            selectors: [['mat-grid-tile']],
            hostAttrs: [1, 'mat-grid-tile'],
            hostVars: 2,
            hostBindings: function (Ve, Ft) {
              2 & Ve && h.uIk('rowspan', Ft.rowspan)('colspan', Ft.colspan);
            },
            inputs: { rowspan: 'rowspan', colspan: 'colspan' },
            exportAs: ['matGridTile'],
            ngContentSelectors: Ce,
            decls: 2,
            vars: 0,
            consts: [[1, 'mat-grid-tile-content']],
            template: function (Ve, Ft) {
              1 & Ve && (h.F$t(), h.TgZ(0, 'div', 0), h.Hsn(1), h.qZA());
            },
            styles: [
              '.mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          it
        );
      })();
      const me = /^-?\d+((\.\d+)?[A-Za-z%$]?)+$/;
      class Ze {
        constructor() {
          (this._rows = 0), (this._rowspan = 0);
        }
        init(qe, Ve, Ft, kt) {
          (this._gutterSize = ge(qe)),
            (this._rows = Ve.rowCount),
            (this._rowspan = Ve.rowspan),
            (this._cols = Ft),
            (this._direction = kt);
        }
        getBaseTileSize(qe, Ve) {
          return `(${qe}% - (${this._gutterSize} * ${Ve}))`;
        }
        getTilePosition(qe, Ve) {
          return 0 === Ve ? '0' : $e(`(${qe} + ${this._gutterSize}) * ${Ve}`);
        }
        getTileSize(qe, Ve) {
          return `(${qe} * ${Ve}) + (${Ve - 1} * ${this._gutterSize})`;
        }
        setStyle(qe, Ve, Ft) {
          let kt = 100 / this._cols,
            St = (this._cols - 1) / this._cols;
          this.setColStyles(qe, Ft, kt, St), this.setRowStyles(qe, Ve, kt, St);
        }
        setColStyles(qe, Ve, Ft, kt) {
          let St = this.getBaseTileSize(Ft, kt);
          qe._setStyle('rtl' === this._direction ? 'right' : 'left', this.getTilePosition(St, Ve)),
            qe._setStyle('width', $e(this.getTileSize(St, qe.colspan)));
        }
        getGutterSpan() {
          return `${this._gutterSize} * (${this._rowspan} - 1)`;
        }
        getTileSpan(qe) {
          return `${this._rowspan} * ${this.getTileSize(qe, 1)}`;
        }
        getComputedHeight() {
          return null;
        }
      }
      class dt extends Ze {
        constructor(qe) {
          super(), (this.fixedRowHeight = qe);
        }
        init(qe, Ve, Ft, kt) {
          super.init(qe, Ve, Ft, kt), (this.fixedRowHeight = ge(this.fixedRowHeight)), me.test(this.fixedRowHeight);
        }
        setRowStyles(qe, Ve) {
          qe._setStyle('top', this.getTilePosition(this.fixedRowHeight, Ve)),
            qe._setStyle('height', $e(this.getTileSize(this.fixedRowHeight, qe.rowspan)));
        }
        getComputedHeight() {
          return ['height', $e(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];
        }
        reset(qe) {
          qe._setListStyle(['height', null]),
            qe._tiles &&
              qe._tiles.forEach((Ve) => {
                Ve._setStyle('top', null), Ve._setStyle('height', null);
              });
        }
      }
      class vt extends Ze {
        constructor(qe) {
          super(), this._parseRatio(qe);
        }
        setRowStyles(qe, Ve, Ft, kt) {
          (this.baseTileHeight = this.getBaseTileSize(Ft / this.rowHeightRatio, kt)),
            qe._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, Ve)),
            qe._setStyle('paddingTop', $e(this.getTileSize(this.baseTileHeight, qe.rowspan)));
        }
        getComputedHeight() {
          return ['paddingBottom', $e(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)];
        }
        reset(qe) {
          qe._setListStyle(['paddingBottom', null]),
            qe._tiles.forEach((Ve) => {
              Ve._setStyle('marginTop', null), Ve._setStyle('paddingTop', null);
            });
        }
        _parseRatio(qe) {
          const Ve = qe.split(':');
          this.rowHeightRatio = parseFloat(Ve[0]) / parseFloat(Ve[1]);
        }
      }
      class We extends Ze {
        setRowStyles(qe, Ve) {
          let St = this.getBaseTileSize(100 / this._rowspan, (this._rows - 1) / this._rows);
          qe._setStyle('top', this.getTilePosition(St, Ve)),
            qe._setStyle('height', $e(this.getTileSize(St, qe.rowspan)));
        }
        reset(qe) {
          qe._tiles &&
            qe._tiles.forEach((Ve) => {
              Ve._setStyle('top', null), Ve._setStyle('height', null);
            });
        }
      }
      function $e(it) {
        return `calc(${it})`;
      }
      function ge(it) {
        return it.match(/([A-Za-z%]+)$/) ? it : `${it}px`;
      }
      let Ie = (() => {
          class it {
            constructor(Ve, Ft) {
              (this._element = Ve), (this._dir = Ft), (this._gutter = '1px');
            }
            get cols() {
              return this._cols;
            }
            set cols(Ve) {
              this._cols = Math.max(1, Math.round((0, d.su)(Ve)));
            }
            get gutterSize() {
              return this._gutter;
            }
            set gutterSize(Ve) {
              this._gutter = `${null == Ve ? '' : Ve}`;
            }
            get rowHeight() {
              return this._rowHeight;
            }
            set rowHeight(Ve) {
              const Ft = `${null == Ve ? '' : Ve}`;
              Ft !== this._rowHeight && ((this._rowHeight = Ft), this._setTileStyler(this._rowHeight));
            }
            ngOnInit() {
              this._checkCols(), this._checkRowHeight();
            }
            ngAfterContentChecked() {
              this._layoutTiles();
            }
            _checkCols() {}
            _checkRowHeight() {
              this._rowHeight || this._setTileStyler('1:1');
            }
            _setTileStyler(Ve) {
              this._tileStyler && this._tileStyler.reset(this),
                (this._tileStyler = 'fit' === Ve ? new We() : Ve && Ve.indexOf(':') > -1 ? new vt(Ve) : new dt(Ve));
            }
            _layoutTiles() {
              this._tileCoordinator || (this._tileCoordinator = new Ne());
              const Ve = this._tileCoordinator,
                Ft = this._tiles.filter((St) => !St._gridList || St._gridList === this),
                kt = this._dir ? this._dir.value : 'ltr';
              this._tileCoordinator.update(this.cols, Ft),
                this._tileStyler.init(this.gutterSize, Ve, this.cols, kt),
                Ft.forEach((St, on) => {
                  const Je = Ve.positions[on];
                  this._tileStyler.setStyle(St, Je.row, Je.col);
                }),
                this._setListStyle(this._tileStyler.getComputedHeight());
            }
            _setListStyle(Ve) {
              Ve && (this._element.nativeElement.style[Ve[0]] = Ve[1]);
            }
          }
          return (
            (it.ɵfac = function (Ve) {
              return new (Ve || it)(h.Y36(h.SBq), h.Y36(N.Is, 8));
            }),
            (it.ɵcmp = h.Xpm({
              type: it,
              selectors: [['mat-grid-list']],
              contentQueries: function (Ve, Ft, kt) {
                if ((1 & Ve && h.Suo(kt, ue, 5), 2 & Ve)) {
                  let St;
                  h.iGM((St = h.CRH())) && (Ft._tiles = St);
                }
              },
              hostAttrs: [1, 'mat-grid-list'],
              hostVars: 1,
              hostBindings: function (Ve, Ft) {
                2 & Ve && h.uIk('cols', Ft.cols);
              },
              inputs: { cols: 'cols', gutterSize: 'gutterSize', rowHeight: 'rowHeight' },
              exportAs: ['matGridList'],
              features: [h._Bn([{ provide: fe, useExisting: it }])],
              ngContentSelectors: Ce,
              decls: 2,
              vars: 0,
              template: function (Ve, Ft) {
                1 & Ve && (h.F$t(), h.TgZ(0, 'div'), h.Hsn(1), h.qZA());
              },
              styles: [
                '.mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            it
          );
        })(),
        De = (() => {
          class it {}
          return (
            (it.ɵfac = function (Ve) {
              return new (Ve || it)();
            }),
            (it.ɵmod = h.oAB({ type: it })),
            (it.ɵinj = h.cJS({ imports: [[m.uc, m.BQ], m.uc, m.BQ] })),
            it
          );
        })();
    },
    5245: (un, ft, x) => {
      'use strict';
      x.d(ft, { Hw: () => Et, Ps: () => yt });
      var h = x(5e3),
        m = x(508),
        d = x(3191),
        N = x(9808),
        Ce = x(9646),
        Re = x(2843),
        He = x(4128),
        Fe = x(727),
        Ne = x(8505),
        ee = x(4004),
        fe = x(262),
        ue = x(8746),
        Qe = x(3099),
        Oe = x(5698),
        et = x(520),
        lt = x(2313);
      const me = ['*'];
      let Ze;
      function vt(Ue) {
        var bt;
        return (
          (null ===
            (bt = (function dt() {
              if (void 0 === Ze && ((Ze = null), 'undefined' != typeof window)) {
                const Ue = window;
                void 0 !== Ue.trustedTypes &&
                  (Ze = Ue.trustedTypes.createPolicy('angular#components', { createHTML: (bt) => bt }));
              }
              return Ze;
            })()) || void 0 === bt
            ? void 0
            : bt.createHTML(Ue)) || Ue
        );
      }
      function We(Ue) {
        return Error(`Unable to find icon with the name "${Ue}"`);
      }
      function ge(Ue) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${Ue}".`
        );
      }
      function Ke(Ue) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${Ue}".`
        );
      }
      class Ie {
        constructor(bt, at, mt) {
          (this.url = bt), (this.svgText = at), (this.options = mt);
        }
      }
      let De = (() => {
        class Ue {
          constructor(at, mt, Nt, en) {
            (this._httpClient = at),
              (this._sanitizer = mt),
              (this._errorHandler = en),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = 'material-icons'),
              (this._document = Nt);
          }
          addSvgIcon(at, mt, Nt) {
            return this.addSvgIconInNamespace('', at, mt, Nt);
          }
          addSvgIconLiteral(at, mt, Nt) {
            return this.addSvgIconLiteralInNamespace('', at, mt, Nt);
          }
          addSvgIconInNamespace(at, mt, Nt, en) {
            return this._addSvgIconConfig(at, mt, new Ie(Nt, null, en));
          }
          addSvgIconResolver(at) {
            return this._resolvers.push(at), this;
          }
          addSvgIconLiteralInNamespace(at, mt, Nt, en) {
            const xt = this._sanitizer.sanitize(h.q3G.HTML, Nt);
            if (!xt) throw Ke(Nt);
            const Gt = vt(xt);
            return this._addSvgIconConfig(at, mt, new Ie('', Gt, en));
          }
          addSvgIconSet(at, mt) {
            return this.addSvgIconSetInNamespace('', at, mt);
          }
          addSvgIconSetLiteral(at, mt) {
            return this.addSvgIconSetLiteralInNamespace('', at, mt);
          }
          addSvgIconSetInNamespace(at, mt, Nt) {
            return this._addSvgIconSetConfig(at, new Ie(mt, null, Nt));
          }
          addSvgIconSetLiteralInNamespace(at, mt, Nt) {
            const en = this._sanitizer.sanitize(h.q3G.HTML, mt);
            if (!en) throw Ke(mt);
            const xt = vt(en);
            return this._addSvgIconSetConfig(at, new Ie('', xt, Nt));
          }
          registerFontClassAlias(at, mt = at) {
            return this._fontCssClassesByAlias.set(at, mt), this;
          }
          classNameForFontAlias(at) {
            return this._fontCssClassesByAlias.get(at) || at;
          }
          setDefaultFontSetClass(at) {
            return (this._defaultFontSetClass = at), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(at) {
            const mt = this._sanitizer.sanitize(h.q3G.RESOURCE_URL, at);
            if (!mt) throw ge(at);
            const Nt = this._cachedIconsByUrl.get(mt);
            return Nt
              ? (0, Ce.of)(qe(Nt))
              : this._loadSvgIconFromConfig(new Ie(at, null)).pipe(
                  (0, Ne.b)((en) => this._cachedIconsByUrl.set(mt, en)),
                  (0, ee.U)((en) => qe(en))
                );
          }
          getNamedSvgIcon(at, mt = '') {
            const Nt = Ve(mt, at);
            let en = this._svgIconConfigs.get(Nt);
            if (en) return this._getSvgFromConfig(en);
            if (((en = this._getIconConfigFromResolvers(mt, at)), en))
              return this._svgIconConfigs.set(Nt, en), this._getSvgFromConfig(en);
            const xt = this._iconSetConfigs.get(mt);
            return xt ? this._getSvgFromIconSetConfigs(at, xt) : (0, Re._)(We(Nt));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(at) {
            return at.svgText
              ? (0, Ce.of)(qe(this._svgElementFromConfig(at)))
              : this._loadSvgIconFromConfig(at).pipe((0, ee.U)((mt) => qe(mt)));
          }
          _getSvgFromIconSetConfigs(at, mt) {
            const Nt = this._extractIconWithNameFromAnySet(at, mt);
            if (Nt) return (0, Ce.of)(Nt);
            const en = mt
              .filter((xt) => !xt.svgText)
              .map((xt) =>
                this._loadSvgIconSetFromConfig(xt).pipe(
                  (0, fe.K)((Gt) => {
                    const ot = `Loading icon set URL: ${this._sanitizer.sanitize(h.q3G.RESOURCE_URL, xt.url)} failed: ${
                      Gt.message
                    }`;
                    return this._errorHandler.handleError(new Error(ot)), (0, Ce.of)(null);
                  })
                )
              );
            return (0, He.D)(en).pipe(
              (0, ee.U)(() => {
                const xt = this._extractIconWithNameFromAnySet(at, mt);
                if (!xt) throw We(at);
                return xt;
              })
            );
          }
          _extractIconWithNameFromAnySet(at, mt) {
            for (let Nt = mt.length - 1; Nt >= 0; Nt--) {
              const en = mt[Nt];
              if (en.svgText && en.svgText.toString().indexOf(at) > -1) {
                const xt = this._svgElementFromConfig(en),
                  Gt = this._extractSvgIconFromSet(xt, at, en.options);
                if (Gt) return Gt;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(at) {
            return this._fetchIcon(at).pipe(
              (0, Ne.b)((mt) => (at.svgText = mt)),
              (0, ee.U)(() => this._svgElementFromConfig(at))
            );
          }
          _loadSvgIconSetFromConfig(at) {
            return at.svgText ? (0, Ce.of)(null) : this._fetchIcon(at).pipe((0, Ne.b)((mt) => (at.svgText = mt)));
          }
          _extractSvgIconFromSet(at, mt, Nt) {
            const en = at.querySelector(`[id="${mt}"]`);
            if (!en) return null;
            const xt = en.cloneNode(!0);
            if ((xt.removeAttribute('id'), 'svg' === xt.nodeName.toLowerCase())) return this._setSvgAttributes(xt, Nt);
            if ('symbol' === xt.nodeName.toLowerCase()) return this._setSvgAttributes(this._toSvgElement(xt), Nt);
            const Gt = this._svgElementFromString(vt('<svg></svg>'));
            return Gt.appendChild(xt), this._setSvgAttributes(Gt, Nt);
          }
          _svgElementFromString(at) {
            const mt = this._document.createElement('DIV');
            mt.innerHTML = at;
            const Nt = mt.querySelector('svg');
            if (!Nt) throw Error('<svg> tag not found');
            return Nt;
          }
          _toSvgElement(at) {
            const mt = this._svgElementFromString(vt('<svg></svg>')),
              Nt = at.attributes;
            for (let en = 0; en < Nt.length; en++) {
              const { name: xt, value: Gt } = Nt[en];
              'id' !== xt && mt.setAttribute(xt, Gt);
            }
            for (let en = 0; en < at.childNodes.length; en++)
              at.childNodes[en].nodeType === this._document.ELEMENT_NODE &&
                mt.appendChild(at.childNodes[en].cloneNode(!0));
            return mt;
          }
          _setSvgAttributes(at, mt) {
            return (
              at.setAttribute('fit', ''),
              at.setAttribute('height', '100%'),
              at.setAttribute('width', '100%'),
              at.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              at.setAttribute('focusable', 'false'),
              mt && mt.viewBox && at.setAttribute('viewBox', mt.viewBox),
              at
            );
          }
          _fetchIcon(at) {
            var mt;
            const { url: Nt, options: en } = at,
              xt = null !== (mt = null == en ? void 0 : en.withCredentials) && void 0 !== mt && mt;
            if (!this._httpClient)
              throw (function $e() {
                return Error(
                  'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.'
                );
              })();
            if (null == Nt) throw Error(`Cannot fetch icon from URL "${Nt}".`);
            const Gt = this._sanitizer.sanitize(h.q3G.RESOURCE_URL, Nt);
            if (!Gt) throw ge(Nt);
            const re = this._inProgressUrlFetches.get(Gt);
            if (re) return re;
            const ot = this._httpClient.get(Gt, { responseType: 'text', withCredentials: xt }).pipe(
              (0, ee.U)((Zt) => vt(Zt)),
              (0, ue.x)(() => this._inProgressUrlFetches.delete(Gt)),
              (0, Qe.B)()
            );
            return this._inProgressUrlFetches.set(Gt, ot), ot;
          }
          _addSvgIconConfig(at, mt, Nt) {
            return this._svgIconConfigs.set(Ve(at, mt), Nt), this;
          }
          _addSvgIconSetConfig(at, mt) {
            const Nt = this._iconSetConfigs.get(at);
            return Nt ? Nt.push(mt) : this._iconSetConfigs.set(at, [mt]), this;
          }
          _svgElementFromConfig(at) {
            if (!at.svgElement) {
              const mt = this._svgElementFromString(at.svgText);
              this._setSvgAttributes(mt, at.options), (at.svgElement = mt);
            }
            return at.svgElement;
          }
          _getIconConfigFromResolvers(at, mt) {
            for (let Nt = 0; Nt < this._resolvers.length; Nt++) {
              const en = this._resolvers[Nt](mt, at);
              if (en) return Ft(en) ? new Ie(en.url, null, en.options) : new Ie(en, null);
            }
          }
        }
        return (
          (Ue.ɵfac = function (at) {
            return new (at || Ue)(h.LFG(et.eN, 8), h.LFG(lt.H7), h.LFG(N.K0, 8), h.LFG(h.qLn));
          }),
          (Ue.ɵprov = h.Yz7({ token: Ue, factory: Ue.ɵfac, providedIn: 'root' })),
          Ue
        );
      })();
      function qe(Ue) {
        return Ue.cloneNode(!0);
      }
      function Ve(Ue, bt) {
        return Ue + ':' + bt;
      }
      function Ft(Ue) {
        return !(!Ue.url || !Ue.options);
      }
      const kt = (0, m.pj)(
          class {
            constructor(Ue) {
              this._elementRef = Ue;
            }
          }
        ),
        St = new h.OlP('mat-icon-location', {
          providedIn: 'root',
          factory: function on() {
            const Ue = (0, h.f3M)(N.K0),
              bt = Ue ? Ue.location : null;
            return { getPathname: () => (bt ? bt.pathname + bt.search : '') };
          },
        }),
        Je = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        Ct = Je.map((Ue) => `[${Ue}]`).join(', '),
        st = /^url\(['"]?#(.*?)['"]?\)$/;
      let Et = (() => {
          class Ue extends kt {
            constructor(at, mt, Nt, en, xt) {
              super(at),
                (this._iconRegistry = mt),
                (this._location = en),
                (this._errorHandler = xt),
                (this._inline = !1),
                (this._currentIconFetch = Fe.w0.EMPTY),
                Nt || at.nativeElement.setAttribute('aria-hidden', 'true');
            }
            get inline() {
              return this._inline;
            }
            set inline(at) {
              this._inline = (0, d.Ig)(at);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(at) {
              at !== this._svgIcon &&
                (at ? this._updateSvgIcon(at) : this._svgIcon && this._clearSvgElement(), (this._svgIcon = at));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(at) {
              const mt = this._cleanupFontValue(at);
              mt !== this._fontSet && ((this._fontSet = mt), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(at) {
              const mt = this._cleanupFontValue(at);
              mt !== this._fontIcon && ((this._fontIcon = mt), this._updateFontIconClasses());
            }
            _splitIconName(at) {
              if (!at) return ['', ''];
              const mt = at.split(':');
              switch (mt.length) {
                case 1:
                  return ['', mt[0]];
                case 2:
                  return mt;
                default:
                  throw Error(`Invalid icon name: "${at}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const at = this._elementsWithExternalReferences;
              if (at && at.size) {
                const mt = this._location.getPathname();
                mt !== this._previousPath && ((this._previousPath = mt), this._prependPathToReferences(mt));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(at) {
              this._clearSvgElement();
              const mt = at.querySelectorAll('style');
              for (let en = 0; en < mt.length; en++) mt[en].textContent += ' ';
              const Nt = this._location.getPathname();
              (this._previousPath = Nt),
                this._cacheChildrenWithExternalReferences(at),
                this._prependPathToReferences(Nt),
                this._elementRef.nativeElement.appendChild(at);
            }
            _clearSvgElement() {
              const at = this._elementRef.nativeElement;
              let mt = at.childNodes.length;
              for (this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear(); mt--; ) {
                const Nt = at.childNodes[mt];
                (1 !== Nt.nodeType || 'svg' === Nt.nodeName.toLowerCase()) && Nt.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const at = this._elementRef.nativeElement,
                mt = this.fontSet
                  ? this._iconRegistry.classNameForFontAlias(this.fontSet)
                  : this._iconRegistry.getDefaultFontSetClass();
              mt != this._previousFontSetClass &&
                (this._previousFontSetClass && at.classList.remove(this._previousFontSetClass),
                mt && at.classList.add(mt),
                (this._previousFontSetClass = mt)),
                this.fontIcon != this._previousFontIconClass &&
                  (this._previousFontIconClass && at.classList.remove(this._previousFontIconClass),
                  this.fontIcon && at.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(at) {
              return 'string' == typeof at ? at.trim().split(' ')[0] : at;
            }
            _prependPathToReferences(at) {
              const mt = this._elementsWithExternalReferences;
              mt &&
                mt.forEach((Nt, en) => {
                  Nt.forEach((xt) => {
                    en.setAttribute(xt.name, `url('${at}#${xt.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(at) {
              const mt = at.querySelectorAll(Ct),
                Nt = (this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map());
              for (let en = 0; en < mt.length; en++)
                Je.forEach((xt) => {
                  const Gt = mt[en],
                    re = Gt.getAttribute(xt),
                    ot = re ? re.match(st) : null;
                  if (ot) {
                    let Zt = Nt.get(Gt);
                    Zt || ((Zt = []), Nt.set(Gt, Zt)), Zt.push({ name: xt, value: ot[1] });
                  }
                });
            }
            _updateSvgIcon(at) {
              if (((this._svgNamespace = null), (this._svgName = null), this._currentIconFetch.unsubscribe(), at)) {
                const [mt, Nt] = this._splitIconName(at);
                mt && (this._svgNamespace = mt),
                  Nt && (this._svgName = Nt),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(Nt, mt)
                    .pipe((0, Oe.q)(1))
                    .subscribe(
                      (en) => this._setSvgElement(en),
                      (en) => {
                        this._errorHandler.handleError(new Error(`Error retrieving icon ${mt}:${Nt}! ${en.message}`));
                      }
                    ));
              }
            }
          }
          return (
            (Ue.ɵfac = function (at) {
              return new (at || Ue)(h.Y36(h.SBq), h.Y36(De), h.$8M('aria-hidden'), h.Y36(St), h.Y36(h.qLn));
            }),
            (Ue.ɵcmp = h.Xpm({
              type: Ue,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 7,
              hostBindings: function (at, mt) {
                2 & at &&
                  (h.uIk('data-mat-icon-type', mt._usingFontIcon() ? 'font' : 'svg')(
                    'data-mat-icon-name',
                    mt._svgName || mt.fontIcon
                  )('data-mat-icon-namespace', mt._svgNamespace || mt.fontSet),
                  h.ekj('mat-icon-inline', mt.inline)(
                    'mat-icon-no-color',
                    'primary' !== mt.color && 'accent' !== mt.color && 'warn' !== mt.color
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [h.qOj],
              ngContentSelectors: me,
              decls: 1,
              vars: 0,
              template: function (at, mt) {
                1 & at && (h.F$t(), h.Hsn(0));
              },
              styles: [
                '.mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Ue
          );
        })(),
        yt = (() => {
          class Ue {}
          return (
            (Ue.ɵfac = function (at) {
              return new (at || Ue)();
            }),
            (Ue.ɵmod = h.oAB({ type: Ue })),
            (Ue.ɵinj = h.cJS({ imports: [[m.BQ], m.BQ] })),
            Ue
          );
        })();
    },
    7531: (un, ft, x) => {
      'use strict';
      x.d(ft, { Jk: () => et, Nt: () => dt, c: () => vt });
      var h = x(3191),
        m = x(925),
        d = x(5e3),
        N = x(3075),
        Ce = x(508),
        Re = x(7322),
        He = x(7579),
        Fe = x(515);
      const Ne = (0, m.i$)({ passive: !0 });
      let ee = (() => {
          class We {
            constructor(ge, Ke) {
              (this._platform = ge), (this._ngZone = Ke), (this._monitoredElements = new Map());
            }
            monitor(ge) {
              if (!this._platform.isBrowser) return Fe.E;
              const Ke = (0, h.fI)(ge),
                Ie = this._monitoredElements.get(Ke);
              if (Ie) return Ie.subject;
              const De = new He.x(),
                Ye = 'cdk-text-field-autofilled',
                it = (qe) => {
                  'cdk-text-field-autofill-start' !== qe.animationName || Ke.classList.contains(Ye)
                    ? 'cdk-text-field-autofill-end' === qe.animationName &&
                      Ke.classList.contains(Ye) &&
                      (Ke.classList.remove(Ye),
                      this._ngZone.run(() => De.next({ target: qe.target, isAutofilled: !1 })))
                    : (Ke.classList.add(Ye), this._ngZone.run(() => De.next({ target: qe.target, isAutofilled: !0 })));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  Ke.addEventListener('animationstart', it, Ne), Ke.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(Ke, {
                  subject: De,
                  unlisten: () => {
                    Ke.removeEventListener('animationstart', it, Ne);
                  },
                }),
                De
              );
            }
            stopMonitoring(ge) {
              const Ke = (0, h.fI)(ge),
                Ie = this._monitoredElements.get(Ke);
              Ie &&
                (Ie.unlisten(),
                Ie.subject.complete(),
                Ke.classList.remove('cdk-text-field-autofill-monitored'),
                Ke.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(Ke));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((ge, Ke) => this.stopMonitoring(Ke));
            }
          }
          return (
            (We.ɵfac = function (ge) {
              return new (ge || We)(d.LFG(m.t4), d.LFG(d.R0b));
            }),
            (We.ɵprov = d.Yz7({ token: We, factory: We.ɵfac, providedIn: 'root' })),
            We
          );
        })(),
        Qe = (() => {
          class We {}
          return (
            (We.ɵfac = function (ge) {
              return new (ge || We)();
            }),
            (We.ɵmod = d.oAB({ type: We })),
            (We.ɵinj = d.cJS({ imports: [[m.ud]] })),
            We
          );
        })();
      const et = new d.OlP('MAT_INPUT_VALUE_ACCESSOR'),
        lt = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];
      let me = 0;
      const Ze = (0, Ce.FD)(
        class {
          constructor(We, $e, ge, Ke) {
            (this._defaultErrorStateMatcher = We),
              (this._parentForm = $e),
              (this._parentFormGroup = ge),
              (this.ngControl = Ke);
          }
        }
      );
      let dt = (() => {
          class We extends Ze {
            constructor(ge, Ke, Ie, De, Ye, it, qe, Ve, Ft, kt) {
              super(it, De, Ye, Ie),
                (this._elementRef = ge),
                (this._platform = Ke),
                (this._autofillMonitor = Ve),
                (this._formField = kt),
                (this._uid = 'mat-input-' + me++),
                (this.focused = !1),
                (this.stateChanges = new He.x()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(
                  (Je) => (0, m.qK)().has(Je)
                ));
              const St = this._elementRef.nativeElement,
                on = St.nodeName.toLowerCase();
              (this._inputValueAccessor = qe || St),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                Ke.IOS &&
                  Ft.runOutsideAngular(() => {
                    ge.nativeElement.addEventListener('keyup', (Je) => {
                      const Ct = Je.target;
                      !Ct.value &&
                        0 === Ct.selectionStart &&
                        0 === Ct.selectionEnd &&
                        (Ct.setSelectionRange(1, 1), Ct.setSelectionRange(0, 0));
                    });
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === on),
                (this._isTextarea = 'textarea' === on),
                (this._isInFormField = !!kt),
                this._isNativeSelect &&
                  (this.controlType = St.multiple ? 'mat-native-select-multiple' : 'mat-native-select');
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled ? this.ngControl.disabled : this._disabled;
            }
            set disabled(ge) {
              (this._disabled = (0, h.Ig)(ge)), this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(ge) {
              this._id = ge || this._uid;
            }
            get required() {
              var ge, Ke, Ie, De;
              return (
                null !==
                  (De =
                    null !== (ge = this._required) && void 0 !== ge
                      ? ge
                      : null === (Ie = null === (Ke = this.ngControl) || void 0 === Ke ? void 0 : Ke.control) ||
                        void 0 === Ie
                      ? void 0
                      : Ie.hasValidator(N.kI.required)) &&
                void 0 !== De &&
                De
              );
            }
            set required(ge) {
              this._required = (0, h.Ig)(ge);
            }
            get type() {
              return this._type;
            }
            set type(ge) {
              (this._type = ge || 'text'),
                this._validateType(),
                !this._isTextarea && (0, m.qK)().has(this._type) && (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(ge) {
              ge !== this.value && ((this._inputValueAccessor.value = ge), this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(ge) {
              this._readonly = (0, h.Ig)(ge);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((ge) => {
                  (this.autofilled = ge.isAutofilled), this.stateChanges.next();
                });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser && this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(), this._dirtyCheckNativeValue(), this._dirtyCheckPlaceholder();
            }
            focus(ge) {
              this._elementRef.nativeElement.focus(ge);
            }
            _focusChanged(ge) {
              ge !== this.focused && ((this.focused = ge), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckPlaceholder() {
              var ge, Ke;
              const Ie = (
                null ===
                  (Ke = null === (ge = this._formField) || void 0 === ge ? void 0 : ge._hideControlPlaceholder) ||
                void 0 === Ke
                  ? void 0
                  : Ke.call(ge)
              )
                ? null
                : this.placeholder;
              if (Ie !== this._previousPlaceholder) {
                const De = this._elementRef.nativeElement;
                (this._previousPlaceholder = Ie),
                  Ie ? De.setAttribute('placeholder', Ie) : De.removeAttribute('placeholder');
              }
            }
            _dirtyCheckNativeValue() {
              const ge = this._elementRef.nativeElement.value;
              this._previousNativeValue !== ge && ((this._previousNativeValue = ge), this.stateChanges.next());
            }
            _validateType() {
              lt.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let ge = this._elementRef.nativeElement.validity;
              return ge && ge.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const ge = this._elementRef.nativeElement,
                  Ke = ge.options[0];
                return this.focused || ge.multiple || !this.empty || !!(ge.selectedIndex > -1 && Ke && Ke.label);
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(ge) {
              ge.length
                ? this._elementRef.nativeElement.setAttribute('aria-describedby', ge.join(' '))
                : this._elementRef.nativeElement.removeAttribute('aria-describedby');
            }
            onContainerClick() {
              this.focused || this.focus();
            }
            _isInlineSelect() {
              const ge = this._elementRef.nativeElement;
              return this._isNativeSelect && (ge.multiple || ge.size > 1);
            }
          }
          return (
            (We.ɵfac = function (ge) {
              return new (ge || We)(
                d.Y36(d.SBq),
                d.Y36(m.t4),
                d.Y36(N.a5, 10),
                d.Y36(N.F, 8),
                d.Y36(N.sg, 8),
                d.Y36(Ce.rD),
                d.Y36(et, 10),
                d.Y36(ee),
                d.Y36(d.R0b),
                d.Y36(Re.G_, 8)
              );
            }),
            (We.ɵdir = d.lG2({
              type: We,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-input-element', 'mat-form-field-autofill-control'],
              hostVars: 12,
              hostBindings: function (ge, Ke) {
                1 & ge &&
                  d.NdJ('focus', function () {
                    return Ke._focusChanged(!0);
                  })('blur', function () {
                    return Ke._focusChanged(!1);
                  })('input', function () {
                    return Ke._onInput();
                  }),
                  2 & ge &&
                    (d.Ikx('disabled', Ke.disabled)('required', Ke.required),
                    d.uIk('id', Ke.id)('data-placeholder', Ke.placeholder)('name', Ke.name || null)(
                      'readonly',
                      (Ke.readonly && !Ke._isNativeSelect) || null
                    )('aria-invalid', Ke.empty && Ke.required ? null : Ke.errorState)('aria-required', Ke.required),
                    d.ekj('mat-input-server', Ke._isServer)('mat-native-select-inline', Ke._isInlineSelect()));
              },
              inputs: {
                disabled: 'disabled',
                id: 'id',
                placeholder: 'placeholder',
                name: 'name',
                required: 'required',
                type: 'type',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: ['aria-describedby', 'userAriaDescribedBy'],
                value: 'value',
                readonly: 'readonly',
              },
              exportAs: ['matInput'],
              features: [d._Bn([{ provide: Re.Eo, useExisting: We }]), d.qOj, d.TTD],
            })),
            We
          );
        })(),
        vt = (() => {
          class We {}
          return (
            (We.ɵfac = function (ge) {
              return new (ge || We)();
            }),
            (We.ɵmod = d.oAB({ type: We })),
            (We.ɵinj = d.cJS({ providers: [Ce.rD], imports: [[Qe, Re.lN, Ce.BQ], Qe, Re.lN] })),
            We
          );
        })();
    },
    4623: (un, ft, x) => {
      'use strict';
      x.d(ft, { i$: () => De, Tg: () => Ve, ie: () => st });
      var h = x(9808),
        m = x(5e3),
        d = x(508),
        N = x(3191),
        Ce = x(7579),
        Re = x(2722),
        ue = (x(8675), x(5664), x(449), x(1159), x(3075), x(4834));
      const Qe = ['*'],
        et = [
          [
            ['', 'mat-list-avatar', ''],
            ['', 'mat-list-icon', ''],
            ['', 'matListAvatar', ''],
            ['', 'matListIcon', ''],
          ],
          [
            ['', 'mat-line', ''],
            ['', 'matLine', ''],
          ],
          '*',
        ],
        lt = ['[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]', '[mat-line], [matLine]', '*'],
        We = (0, d.Id)((0, d.Kr)(class {})),
        $e = (0, d.Kr)(class {}),
        ge = new m.OlP('MatList'),
        Ke = new m.OlP('MatNavList');
      let De = (() => {
          class Et extends We {
            constructor(Ue) {
              super(),
                (this._elementRef = Ue),
                (this._stateChanges = new Ce.x()),
                'action-list' === this._getListType() && Ue.nativeElement.classList.add('mat-action-list');
            }
            _getListType() {
              const Ue = this._elementRef.nativeElement.nodeName.toLowerCase();
              return 'mat-list' === Ue ? 'list' : 'mat-action-list' === Ue ? 'action-list' : null;
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (Et.ɵfac = function (Ue) {
              return new (Ue || Et)(m.Y36(m.SBq));
            }),
            (Et.ɵcmp = m.Xpm({
              type: Et,
              selectors: [['mat-list'], ['mat-action-list']],
              hostAttrs: [1, 'mat-list', 'mat-list-base'],
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matList'],
              features: [m._Bn([{ provide: ge, useExisting: Et }]), m.qOj, m.TTD],
              ngContentSelectors: Qe,
              decls: 1,
              vars: 0,
              template: function (Ue, bt) {
                1 & Ue && (m.F$t(), m.Hsn(0));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Et
          );
        })(),
        Ye = (() => {
          class Et {}
          return (
            (Et.ɵfac = function (Ue) {
              return new (Ue || Et)();
            }),
            (Et.ɵdir = m.lG2({
              type: Et,
              selectors: [
                ['', 'mat-list-avatar', ''],
                ['', 'matListAvatar', ''],
              ],
              hostAttrs: [1, 'mat-list-avatar'],
            })),
            Et
          );
        })(),
        it = (() => {
          class Et {}
          return (
            (Et.ɵfac = function (Ue) {
              return new (Ue || Et)();
            }),
            (Et.ɵdir = m.lG2({
              type: Et,
              selectors: [
                ['', 'mat-list-icon', ''],
                ['', 'matListIcon', ''],
              ],
              hostAttrs: [1, 'mat-list-icon'],
            })),
            Et
          );
        })(),
        Ve = (() => {
          class Et extends $e {
            constructor(Ue, bt, at, mt) {
              super(),
                (this._element = Ue),
                (this._isInteractiveList = !1),
                (this._destroyed = new Ce.x()),
                (this._disabled = !1),
                (this._isInteractiveList = !!(at || (mt && 'action-list' === mt._getListType()))),
                (this._list = at || mt);
              const Nt = this._getHostElement();
              'button' === Nt.nodeName.toLowerCase() && !Nt.hasAttribute('type') && Nt.setAttribute('type', 'button'),
                this._list &&
                  this._list._stateChanges.pipe((0, Re.R)(this._destroyed)).subscribe(() => {
                    bt.markForCheck();
                  });
            }
            get disabled() {
              return this._disabled || !(!this._list || !this._list.disabled);
            }
            set disabled(Ue) {
              this._disabled = (0, N.Ig)(Ue);
            }
            ngAfterContentInit() {
              (0, d.E0)(this._lines, this._element);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _isRippleDisabled() {
              return !this._isInteractiveList || this.disableRipple || !(!this._list || !this._list.disableRipple);
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
          }
          return (
            (Et.ɵfac = function (Ue) {
              return new (Ue || Et)(m.Y36(m.SBq), m.Y36(m.sBO), m.Y36(Ke, 8), m.Y36(ge, 8));
            }),
            (Et.ɵcmp = m.Xpm({
              type: Et,
              selectors: [['mat-list-item'], ['a', 'mat-list-item', ''], ['button', 'mat-list-item', '']],
              contentQueries: function (Ue, bt, at) {
                if ((1 & Ue && (m.Suo(at, Ye, 5), m.Suo(at, it, 5), m.Suo(at, d.X2, 5)), 2 & Ue)) {
                  let mt;
                  m.iGM((mt = m.CRH())) && (bt._avatar = mt.first),
                    m.iGM((mt = m.CRH())) && (bt._icon = mt.first),
                    m.iGM((mt = m.CRH())) && (bt._lines = mt);
                }
              },
              hostAttrs: [1, 'mat-list-item', 'mat-focus-indicator'],
              hostVars: 6,
              hostBindings: function (Ue, bt) {
                2 & Ue &&
                  m.ekj('mat-list-item-disabled', bt.disabled)('mat-list-item-avatar', bt._avatar || bt._icon)(
                    'mat-list-item-with-avatar',
                    bt._avatar || bt._icon
                  );
              },
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matListItem'],
              features: [m.qOj],
              ngContentSelectors: lt,
              decls: 6,
              vars: 2,
              consts: [
                [1, 'mat-list-item-content'],
                ['mat-ripple', '', 1, 'mat-list-item-ripple', 3, 'matRippleTrigger', 'matRippleDisabled'],
                [1, 'mat-list-text'],
              ],
              template: function (Ue, bt) {
                1 & Ue &&
                  (m.F$t(et),
                  m.TgZ(0, 'div', 0),
                  m._UZ(1, 'div', 1),
                  m.Hsn(2),
                  m.TgZ(3, 'div', 2),
                  m.Hsn(4, 1),
                  m.qZA(),
                  m.Hsn(5, 2),
                  m.qZA()),
                  2 & Ue &&
                    (m.xp6(1),
                    m.Q6J('matRippleTrigger', bt._getHostElement())('matRippleDisabled', bt._isRippleDisabled()));
              },
              directives: [d.wG],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Et
          );
        })(),
        st = (() => {
          class Et {}
          return (
            (Et.ɵfac = function (Ue) {
              return new (Ue || Et)();
            }),
            (Et.ɵmod = m.oAB({ type: Et })),
            (Et.ɵinj = m.cJS({ imports: [[d.uc, d.si, d.BQ, d.us, h.ez], d.uc, d.BQ, d.us, ue.t] })),
            Et
          );
        })();
    },
    2181: (un, ft, x) => {
      'use strict';
      x.d(ft, { VK: () => en, OP: () => Ue, Tx: () => ae, p6: () => At });
      var h = x(5664),
        m = x(3191),
        d = x(1159),
        N = x(5e3),
        Ce = x(7579),
        Re = x(727),
        He = x(6451),
        Fe = x(9646),
        Ne = x(3101),
        ee = x(8675),
        fe = x(3900),
        ue = x(5698),
        Qe = x(9300),
        Oe = x(2722),
        et = x(1005),
        lt = x(1777),
        me = x(7429),
        Ze = x(9808),
        dt = x(508),
        vt = x(1314),
        We = x(925),
        $e = x(226),
        ge = x(495);
      const Ke = ['mat-menu-item', ''];
      function Ie(Le, ht) {
        1 & Le && (N.O4$(), N.TgZ(0, 'svg', 2), N._UZ(1, 'polygon', 3), N.qZA());
      }
      const De = ['*'];
      function Ye(Le, ht) {
        if (1 & Le) {
          const Se = N.EpF();
          N.TgZ(0, 'div', 0),
            N.NdJ('keydown', function (Pe) {
              return N.CHM(Se), N.oxw()._handleKeydown(Pe);
            })('click', function () {
              return N.CHM(Se), N.oxw().closed.emit('click');
            })('@transformMenu.start', function (Pe) {
              return N.CHM(Se), N.oxw()._onAnimationStart(Pe);
            })('@transformMenu.done', function (Pe) {
              return N.CHM(Se), N.oxw()._onAnimationDone(Pe);
            }),
            N.TgZ(1, 'div', 1),
            N.Hsn(2),
            N.qZA(),
            N.qZA();
        }
        if (2 & Le) {
          const Se = N.oxw();
          N.Q6J('id', Se.panelId)('ngClass', Se._classList)('@transformMenu', Se._panelAnimationState),
            N.uIk('aria-label', Se.ariaLabel || null)('aria-labelledby', Se.ariaLabelledby || null)(
              'aria-describedby',
              Se.ariaDescribedby || null
            );
        }
      }
      const it = {
          transformMenu: (0, lt.X$)('transformMenu', [
            (0, lt.SB)('void', (0, lt.oB)({ opacity: 0, transform: 'scale(0.8)' })),
            (0, lt.eR)(
              'void => enter',
              (0, lt.jt)('120ms cubic-bezier(0, 0, 0.2, 1)', (0, lt.oB)({ opacity: 1, transform: 'scale(1)' }))
            ),
            (0, lt.eR)('* => void', (0, lt.jt)('100ms 25ms linear', (0, lt.oB)({ opacity: 0 }))),
          ]),
          fadeInItems: (0, lt.X$)('fadeInItems', [
            (0, lt.SB)('showing', (0, lt.oB)({ opacity: 1 })),
            (0, lt.eR)('void => *', [
              (0, lt.oB)({ opacity: 0 }),
              (0, lt.jt)('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
            ]),
          ]),
        },
        Ft = new N.OlP('MatMenuContent'),
        Et = new N.OlP('MAT_MENU_PANEL'),
        yt = (0, dt.Kr)((0, dt.Id)(class {}));
      let Ue = (() => {
        class Le extends yt {
          constructor(Se, Be, Pe, X, we) {
            var Rt;
            super(),
              (this._elementRef = Se),
              (this._focusMonitor = Pe),
              (this._parentMenu = X),
              (this._changeDetectorRef = we),
              (this.role = 'menuitem'),
              (this._hovered = new Ce.x()),
              (this._focused = new Ce.x()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              null === (Rt = null == X ? void 0 : X.addItem) || void 0 === Rt || Rt.call(X, this);
          }
          focus(Se, Be) {
            this._focusMonitor && Se
              ? this._focusMonitor.focusVia(this._getHostElement(), Se, Be)
              : this._getHostElement().focus(Be),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor && this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor && this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu && this._parentMenu.removeItem && this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(Se) {
            this.disabled && (Se.preventDefault(), Se.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            var Se;
            const Be = this._elementRef.nativeElement.cloneNode(!0),
              Pe = Be.querySelectorAll('mat-icon, .material-icons');
            for (let X = 0; X < Pe.length; X++) Pe[X].remove();
            return (null === (Se = Be.textContent) || void 0 === Se ? void 0 : Se.trim()) || '';
          }
          _setHighlighted(Se) {
            var Be;
            (this._highlighted = Se), null === (Be = this._changeDetectorRef) || void 0 === Be || Be.markForCheck();
          }
        }
        return (
          (Le.ɵfac = function (Se) {
            return new (Se || Le)(N.Y36(N.SBq), N.Y36(Ze.K0), N.Y36(h.tE), N.Y36(Et, 8), N.Y36(N.sBO));
          }),
          (Le.ɵcmp = N.Xpm({
            type: Le,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [1, 'mat-focus-indicator'],
            hostVars: 10,
            hostBindings: function (Se, Be) {
              1 & Se &&
                N.NdJ('click', function (X) {
                  return Be._checkDisabled(X);
                })('mouseenter', function () {
                  return Be._handleMouseEnter();
                }),
                2 & Se &&
                  (N.uIk('role', Be.role)('tabindex', Be._getTabIndex())('aria-disabled', Be.disabled.toString())(
                    'disabled',
                    Be.disabled || null
                  ),
                  N.ekj('mat-menu-item', !0)('mat-menu-item-highlighted', Be._highlighted)(
                    'mat-menu-item-submenu-trigger',
                    Be._triggersSubmenu
                  ));
            },
            inputs: { disabled: 'disabled', disableRipple: 'disableRipple', role: 'role' },
            exportAs: ['matMenuItem'],
            features: [N.qOj],
            attrs: Ke,
            ngContentSelectors: De,
            decls: 3,
            vars: 3,
            consts: [
              ['matRipple', '', 1, 'mat-menu-ripple', 3, 'matRippleDisabled', 'matRippleTrigger'],
              ['class', 'mat-menu-submenu-icon', 'viewBox', '0 0 5 10', 'focusable', 'false', 4, 'ngIf'],
              ['viewBox', '0 0 5 10', 'focusable', 'false', 1, 'mat-menu-submenu-icon'],
              ['points', '0,0 5,5 0,10'],
            ],
            template: function (Se, Be) {
              1 & Se && (N.F$t(), N.Hsn(0), N._UZ(1, 'div', 0), N.YNc(2, Ie, 2, 0, 'svg', 1)),
                2 & Se &&
                  (N.xp6(1),
                  N.Q6J('matRippleDisabled', Be.disableRipple || Be.disabled)('matRippleTrigger', Be._getHostElement()),
                  N.xp6(1),
                  N.Q6J('ngIf', Be._triggersSubmenu));
            },
            directives: [dt.wG, Ze.O5],
            encapsulation: 2,
            changeDetection: 0,
          })),
          Le
        );
      })();
      const bt = new N.OlP('mat-menu-default-options', {
        providedIn: 'root',
        factory: function at() {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let mt = 0,
        Nt = (() => {
          class Le {
            constructor(Se, Be, Pe) {
              (this._elementRef = Se),
                (this._ngZone = Be),
                (this._defaultOptions = Pe),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new N.n_E()),
                (this._tabSubscription = Re.w0.EMPTY),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new Ce.x()),
                (this.overlayPanelClass = this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new N.vpe()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + mt++);
            }
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(Se) {
              (this._xPosition = Se), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(Se) {
              (this._yPosition = Se), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(Se) {
              this._overlapTrigger = (0, m.Ig)(Se);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(Se) {
              this._hasBackdrop = (0, m.Ig)(Se);
            }
            set panelClass(Se) {
              const Be = this._previousPanelClass;
              Be &&
                Be.length &&
                Be.split(' ').forEach((Pe) => {
                  this._classList[Pe] = !1;
                }),
                (this._previousPanelClass = Se),
                Se &&
                  Se.length &&
                  (Se.split(' ').forEach((Pe) => {
                    this._classList[Pe] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(Se) {
              this.panelClass = Se;
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new h.Em(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd()),
                (this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'))),
                this._directDescendantItems.changes
                  .pipe(
                    (0, ee.O)(this._directDescendantItems),
                    (0, fe.w)((Se) => (0, He.T)(...Se.map((Be) => Be._focused)))
                  )
                  .subscribe((Se) => this._keyManager.updateActiveItem(Se));
            }
            ngOnDestroy() {
              this._directDescendantItems.destroy(), this._tabSubscription.unsubscribe(), this.closed.complete();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                (0, ee.O)(this._directDescendantItems),
                (0, fe.w)((Be) => (0, He.T)(...Be.map((Pe) => Pe._hovered)))
              );
            }
            addItem(Se) {}
            removeItem(Se) {}
            _handleKeydown(Se) {
              const Be = Se.keyCode,
                Pe = this._keyManager;
              switch (Be) {
                case d.hY:
                  (0, d.Vb)(Se) || (Se.preventDefault(), this.closed.emit('keydown'));
                  break;
                case d.oh:
                  this.parentMenu && 'ltr' === this.direction && this.closed.emit('keydown');
                  break;
                case d.SV:
                  this.parentMenu && 'rtl' === this.direction && this.closed.emit('keydown');
                  break;
                default:
                  return (Be === d.LH || Be === d.JH) && Pe.setFocusOrigin('keyboard'), void Pe.onKeydown(Se);
              }
              Se.stopPropagation();
            }
            focusFirstItem(Se = 'program') {
              this.lazyContent
                ? this._ngZone.onStable.pipe((0, ue.q)(1)).subscribe(() => this._focusFirstItem(Se))
                : this._focusFirstItem(Se);
            }
            _focusFirstItem(Se) {
              const Be = this._keyManager;
              if ((Be.setFocusOrigin(Se).setFirstItemActive(), !Be.activeItem && this._directDescendantItems.length)) {
                let Pe = this._directDescendantItems.first._getHostElement().parentElement;
                for (; Pe; ) {
                  if ('menu' === Pe.getAttribute('role')) {
                    Pe.focus();
                    break;
                  }
                  Pe = Pe.parentElement;
                }
              }
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(Se) {
              const Be = Math.min(this._baseElevation + Se, 24),
                Pe = `${this._elevationPrefix}${Be}`,
                X = Object.keys(this._classList).find((we) => we.startsWith(this._elevationPrefix));
              (!X || X === this._previousElevation) &&
                (this._previousElevation && (this._classList[this._previousElevation] = !1),
                (this._classList[Pe] = !0),
                (this._previousElevation = Pe));
            }
            setPositionClasses(Se = this.xPosition, Be = this.yPosition) {
              const Pe = this._classList;
              (Pe['mat-menu-before'] = 'before' === Se),
                (Pe['mat-menu-after'] = 'after' === Se),
                (Pe['mat-menu-above'] = 'above' === Be),
                (Pe['mat-menu-below'] = 'below' === Be);
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(Se) {
              this._animationDone.next(Se), (this._isAnimating = !1);
            }
            _onAnimationStart(Se) {
              (this._isAnimating = !0),
                'enter' === Se.toState && 0 === this._keyManager.activeItemIndex && (Se.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes.pipe((0, ee.O)(this._allItems)).subscribe((Se) => {
                this._directDescendantItems.reset(Se.filter((Be) => Be._parentMenu === this)),
                  this._directDescendantItems.notifyOnChanges();
              });
            }
          }
          return (
            (Le.ɵfac = function (Se) {
              return new (Se || Le)(N.Y36(N.SBq), N.Y36(N.R0b), N.Y36(bt));
            }),
            (Le.ɵdir = N.lG2({
              type: Le,
              contentQueries: function (Se, Be, Pe) {
                if ((1 & Se && (N.Suo(Pe, Ft, 5), N.Suo(Pe, Ue, 5), N.Suo(Pe, Ue, 4)), 2 & Se)) {
                  let X;
                  N.iGM((X = N.CRH())) && (Be.lazyContent = X.first),
                    N.iGM((X = N.CRH())) && (Be._allItems = X),
                    N.iGM((X = N.CRH())) && (Be.items = X);
                }
              },
              viewQuery: function (Se, Be) {
                if ((1 & Se && N.Gf(N.Rgc, 5), 2 & Se)) {
                  let Pe;
                  N.iGM((Pe = N.CRH())) && (Be.templateRef = Pe.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            Le
          );
        })(),
        en = (() => {
          class Le extends Nt {
            constructor(Se, Be, Pe) {
              super(Se, Be, Pe), (this._elevationPrefix = 'mat-elevation-z'), (this._baseElevation = 4);
            }
          }
          return (
            (Le.ɵfac = function (Se) {
              return new (Se || Le)(N.Y36(N.SBq), N.Y36(N.R0b), N.Y36(bt));
            }),
            (Le.ɵcmp = N.Xpm({
              type: Le,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (Se, Be) {
                2 & Se && N.uIk('aria-label', null)('aria-labelledby', null)('aria-describedby', null);
              },
              exportAs: ['matMenu'],
              features: [N._Bn([{ provide: Et, useExisting: Le }]), N.qOj],
              ngContentSelectors: De,
              decls: 1,
              vars: 0,
              consts: [
                ['tabindex', '-1', 'role', 'menu', 1, 'mat-menu-panel', 3, 'id', 'ngClass', 'keydown', 'click'],
                [1, 'mat-menu-content'],
              ],
              template: function (Se, Be) {
                1 & Se && (N.F$t(), N.YNc(0, Ye, 3, 6, 'ng-template'));
              },
              directives: [Ze.mk],
              styles: [
                'mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n',
              ],
              encapsulation: 2,
              data: { animation: [it.transformMenu, it.fadeInItems] },
              changeDetection: 0,
            })),
            Le
          );
        })();
      const xt = new N.OlP('mat-menu-scroll-strategy'),
        re = {
          provide: xt,
          deps: [vt.aV],
          useFactory: function Gt(Le) {
            return () => Le.scrollStrategies.reposition();
          },
        },
        Zt = (0, We.i$)({ passive: !0 });
      let hn = (() => {
          class Le {
            constructor(Se, Be, Pe, X, we, Rt, It, an) {
              (this._overlay = Se),
                (this._element = Be),
                (this._viewContainerRef = Pe),
                (this._menuItemInstance = Rt),
                (this._dir = It),
                (this._focusMonitor = an),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = Re.w0.EMPTY),
                (this._hoverSubscription = Re.w0.EMPTY),
                (this._menuCloseSubscription = Re.w0.EMPTY),
                (this._handleTouchStart = (mn) => {
                  (0, h.yG)(mn) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new N.vpe()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new N.vpe()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = X),
                (this._parentMaterialMenu = we instanceof Nt ? we : void 0),
                Be.nativeElement.addEventListener('touchstart', this._handleTouchStart, Zt),
                Rt && (Rt._triggersSubmenu = this.triggersSubmenu());
            }
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(Se) {
              this.menu = Se;
            }
            get menu() {
              return this._menu;
            }
            set menu(Se) {
              Se !== this._menu &&
                ((this._menu = Se),
                this._menuCloseSubscription.unsubscribe(),
                Se &&
                  (this._menuCloseSubscription = Se.close.subscribe((Be) => {
                    this._destroyMenu(Be),
                      ('click' === Be || 'tab' === Be) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(Be);
                  })));
            }
            ngAfterContentInit() {
              this._checkMenu(), this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef && (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, Zt),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !(!this._menuItemInstance || !this._parentMaterialMenu);
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              if (this._menuOpen) return;
              this._checkMenu();
              const Se = this._createOverlay(),
                Be = Se.getConfig();
              this._setPosition(Be.positionStrategy),
                (Be.hasBackdrop = null == this.menu.hasBackdrop ? !this.triggersSubmenu() : this.menu.hasBackdrop),
                Se.attach(this._getPortal()),
                this.menu.lazyContent && this.menu.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(),
                this.menu instanceof Nt && this.menu._startAnimation();
            }
            closeMenu() {
              this.menu.close.emit();
            }
            focus(Se, Be) {
              this._focusMonitor && Se
                ? this._focusMonitor.focusVia(this._element, Se, Be)
                : this._element.nativeElement.focus(Be);
            }
            updatePosition() {
              var Se;
              null === (Se = this._overlayRef) || void 0 === Se || Se.updatePosition();
            }
            _destroyMenu(Se) {
              if (!this._overlayRef || !this.menuOpen) return;
              const Be = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ('keydown' === Se || !this._openedBy || !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                Be instanceof Nt
                  ? (Be._resetAnimation(),
                    Be.lazyContent
                      ? Be._animationDone
                          .pipe(
                            (0, Qe.h)((Pe) => 'void' === Pe.toState),
                            (0, ue.q)(1),
                            (0, Oe.R)(Be.lazyContent._attached)
                          )
                          .subscribe({ next: () => Be.lazyContent.detach(), complete: () => this._setIsMenuOpen(!1) })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), Be.lazyContent && Be.lazyContent.detach());
            }
            _initMenu() {
              (this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : void 0),
                (this.menu.direction = this.dir),
                this._setMenuElevation(),
                this.menu.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation() {
              if (this.menu.setElevation) {
                let Se = 0,
                  Be = this.menu.parentMenu;
                for (; Be; ) Se++, (Be = Be.parentMenu);
                this.menu.setElevation(Se);
              }
            }
            _setIsMenuOpen(Se) {
              (this._menuOpen = Se),
                this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit(),
                this.triggersSubmenu() && this._menuItemInstance._setHighlighted(Se);
            }
            _checkMenu() {}
            _createOverlay() {
              if (!this._overlayRef) {
                const Se = this._getOverlayConfig();
                this._subscribeToPositions(Se.positionStrategy),
                  (this._overlayRef = this._overlay.create(Se)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig() {
              return new vt.X_({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),
                backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: this.menu.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(Se) {
              this.menu.setPositionClasses &&
                Se.positionChanges.subscribe((Be) => {
                  this.menu.setPositionClasses(
                    'start' === Be.connectionPair.overlayX ? 'after' : 'before',
                    'top' === Be.connectionPair.overlayY ? 'below' : 'above'
                  );
                });
            }
            _setPosition(Se) {
              let [Be, Pe] = 'before' === this.menu.xPosition ? ['end', 'start'] : ['start', 'end'],
                [X, we] = 'above' === this.menu.yPosition ? ['bottom', 'top'] : ['top', 'bottom'],
                [Rt, It] = [X, we],
                [an, mn] = [Be, Pe],
                ln = 0;
              this.triggersSubmenu()
                ? ((mn = Be = 'before' === this.menu.xPosition ? 'start' : 'end'),
                  (Pe = an = 'end' === Be ? 'start' : 'end'),
                  (ln = 'bottom' === X ? 8 : -8))
                : this.menu.overlapTrigger ||
                  ((Rt = 'top' === X ? 'bottom' : 'top'), (It = 'top' === we ? 'bottom' : 'top')),
                Se.withPositions([
                  { originX: Be, originY: Rt, overlayX: an, overlayY: X, offsetY: ln },
                  { originX: Pe, originY: Rt, overlayX: mn, overlayY: X, offsetY: ln },
                  { originX: Be, originY: It, overlayX: an, overlayY: we, offsetY: -ln },
                  { originX: Pe, originY: It, overlayX: mn, overlayY: we, offsetY: -ln },
                ]);
            }
            _menuClosingActions() {
              const Se = this._overlayRef.backdropClick(),
                Be = this._overlayRef.detachments(),
                Pe = this._parentMaterialMenu ? this._parentMaterialMenu.closed : (0, Fe.of)(),
                X = this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      (0, Qe.h)((we) => we !== this._menuItemInstance),
                      (0, Qe.h)(() => this._menuOpen)
                    )
                  : (0, Fe.of)();
              return (0, He.T)(Se, Pe, X, Be);
            }
            _handleMousedown(Se) {
              (0, h.X6)(Se) ||
                ((this._openedBy = 0 === Se.button ? 'mouse' : void 0), this.triggersSubmenu() && Se.preventDefault());
            }
            _handleKeydown(Se) {
              const Be = Se.keyCode;
              (Be === d.K5 || Be === d.L_) && (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((Be === d.SV && 'ltr' === this.dir) || (Be === d.oh && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(Se) {
              this.triggersSubmenu() ? (Se.stopPropagation(), this.openMenu()) : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    (0, Qe.h)((Se) => Se === this._menuItemInstance && !Se.disabled),
                    (0, et.g)(0, Ne.E)
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof Nt && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe((0, ue.q)(1), (0, et.g)(0, Ne.E), (0, Oe.R)(this._parentMaterialMenu._hovered()))
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal() {
              return (
                (!this._portal || this._portal.templateRef !== this.menu.templateRef) &&
                  (this._portal = new me.UE(this.menu.templateRef, this._viewContainerRef)),
                this._portal
              );
            }
          }
          return (
            (Le.ɵfac = function (Se) {
              return new (Se || Le)(
                N.Y36(vt.aV),
                N.Y36(N.SBq),
                N.Y36(N.s_b),
                N.Y36(xt),
                N.Y36(Et, 8),
                N.Y36(Ue, 10),
                N.Y36($e.Is, 8),
                N.Y36(h.tE)
              );
            }),
            (Le.ɵdir = N.lG2({
              type: Le,
              hostAttrs: ['aria-haspopup', 'true'],
              hostVars: 2,
              hostBindings: function (Se, Be) {
                1 & Se &&
                  N.NdJ('click', function (X) {
                    return Be._handleClick(X);
                  })('mousedown', function (X) {
                    return Be._handleMousedown(X);
                  })('keydown', function (X) {
                    return Be._handleKeydown(X);
                  }),
                  2 & Se &&
                    N.uIk('aria-expanded', Be.menuOpen || null)('aria-controls', Be.menuOpen ? Be.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: ['mat-menu-trigger-for', '_deprecatedMatMenuTriggerFor'],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
            })),
            Le
          );
        })(),
        At = (() => {
          class Le extends hn {}
          return (
            (Le.ɵfac = (function () {
              let ht;
              return function (Be) {
                return (ht || (ht = N.n5z(Le)))(Be || Le);
              };
            })()),
            (Le.ɵdir = N.lG2({
              type: Le,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: [1, 'mat-menu-trigger'],
              exportAs: ['matMenuTrigger'],
              features: [N.qOj],
            })),
            Le
          );
        })(),
        ae = (() => {
          class Le {}
          return (
            (Le.ɵfac = function (Se) {
              return new (Se || Le)();
            }),
            (Le.ɵmod = N.oAB({ type: Le })),
            (Le.ɵinj = N.cJS({ providers: [re], imports: [[Ze.ez, dt.BQ, dt.si, vt.U8], ge.ZD, dt.BQ] })),
            Le
          );
        })();
    },
    773: (un, ft, x) => {
      'use strict';
      x.d(ft, { Ou: () => vt, Cq: () => $e });
      var h = x(5e3),
        m = x(9808),
        d = x(508),
        N = x(3191),
        Ce = x(925),
        Re = x(6360),
        He = x(727),
        Fe = x(495);
      function Ne(ge, Ke) {
        if ((1 & ge && (h.O4$(), h._UZ(0, 'circle', 4)), 2 & ge)) {
          const Ie = h.oxw(),
            De = h.MAs(1);
          h.Udp('animation-name', 'mat-progress-spinner-stroke-rotate-' + Ie._spinnerAnimationLabel)(
            'stroke-dashoffset',
            Ie._getStrokeDashOffset(),
            'px'
          )('stroke-dasharray', Ie._getStrokeCircumference(), 'px')(
            'stroke-width',
            Ie._getCircleStrokeWidth(),
            '%'
          )('transform-origin', Ie._getCircleTransformOrigin(De)),
            h.uIk('r', Ie._getCircleRadius());
        }
      }
      function ee(ge, Ke) {
        if ((1 & ge && (h.O4$(), h._UZ(0, 'circle', 4)), 2 & ge)) {
          const Ie = h.oxw(),
            De = h.MAs(1);
          h.Udp('stroke-dashoffset', Ie._getStrokeDashOffset(), 'px')(
            'stroke-dasharray',
            Ie._getStrokeCircumference(),
            'px'
          )(
            'stroke-width',
            Ie._getCircleStrokeWidth(),
            '%'
          )('transform-origin', Ie._getCircleTransformOrigin(De)),
            h.uIk('r', Ie._getCircleRadius());
        }
      }
      const lt = (0, d.pj)(
          class {
            constructor(ge) {
              this._elementRef = ge;
            }
          },
          'primary'
        ),
        me = new h.OlP('mat-progress-spinner-default-options', {
          providedIn: 'root',
          factory: function Ze() {
            return { diameter: 100 };
          },
        });
      class vt extends lt {
        constructor(Ke, Ie, De, Ye, it, qe, Ve, Ft) {
          super(Ke),
            (this._document = De),
            (this._diameter = 100),
            (this._value = 0),
            (this._resizeSubscription = He.w0.EMPTY),
            (this.mode = 'determinate');
          const kt = vt._diameters;
          (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            kt.has(De.head) || kt.set(De.head, new Set([100])),
            (this._noopAnimations = 'NoopAnimations' === Ye && !!it && !it._forceAnimations),
            it && (it.diameter && (this.diameter = it.diameter), it.strokeWidth && (this.strokeWidth = it.strokeWidth)),
            Ie.isBrowser &&
              Ie.SAFARI &&
              Ve &&
              qe &&
              Ft &&
              (this._resizeSubscription = Ve.change(150).subscribe(() => {
                'indeterminate' === this.mode && Ft.run(() => qe.markForCheck());
              }));
        }
        get diameter() {
          return this._diameter;
        }
        set diameter(Ke) {
          (this._diameter = (0, N.su)(Ke)),
            (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            this._styleRoot && this._attachStyleNode();
        }
        get strokeWidth() {
          return this._strokeWidth || this.diameter / 10;
        }
        set strokeWidth(Ke) {
          this._strokeWidth = (0, N.su)(Ke);
        }
        get value() {
          return 'determinate' === this.mode ? this._value : 0;
        }
        set value(Ke) {
          this._value = Math.max(0, Math.min(100, (0, N.su)(Ke)));
        }
        ngOnInit() {
          const Ke = this._elementRef.nativeElement;
          (this._styleRoot = (0, Ce.kV)(Ke) || this._document.head),
            this._attachStyleNode(),
            Ke.classList.add('mat-progress-spinner-indeterminate-animation');
        }
        ngOnDestroy() {
          this._resizeSubscription.unsubscribe();
        }
        _getCircleRadius() {
          return (this.diameter - 10) / 2;
        }
        _getViewBox() {
          const Ke = 2 * this._getCircleRadius() + this.strokeWidth;
          return `0 0 ${Ke} ${Ke}`;
        }
        _getStrokeCircumference() {
          return 2 * Math.PI * this._getCircleRadius();
        }
        _getStrokeDashOffset() {
          return 'determinate' === this.mode ? (this._getStrokeCircumference() * (100 - this._value)) / 100 : null;
        }
        _getCircleStrokeWidth() {
          return (this.strokeWidth / this.diameter) * 100;
        }
        _getCircleTransformOrigin(Ke) {
          var Ie;
          const De = 50 * (null !== (Ie = Ke.currentScale) && void 0 !== Ie ? Ie : 1);
          return `${De}% ${De}%`;
        }
        _attachStyleNode() {
          const Ke = this._styleRoot,
            Ie = this._diameter,
            De = vt._diameters;
          let Ye = De.get(Ke);
          if (!Ye || !Ye.has(Ie)) {
            const it = this._document.createElement('style');
            it.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel),
              (it.textContent = this._getAnimationText()),
              Ke.appendChild(it),
              Ye || ((Ye = new Set()), De.set(Ke, Ye)),
              Ye.add(Ie);
          }
        }
        _getAnimationText() {
          const Ke = this._getStrokeCircumference();
          return '\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n'
            .replace(/START_VALUE/g, '' + 0.95 * Ke)
            .replace(/END_VALUE/g, '' + 0.2 * Ke)
            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);
        }
        _getSpinnerAnimationLabel() {
          return this.diameter.toString().replace('.', '_');
        }
      }
      (vt._diameters = new WeakMap()),
        (vt.ɵfac = function (Ke) {
          return new (Ke || vt)(
            h.Y36(h.SBq),
            h.Y36(Ce.t4),
            h.Y36(m.K0, 8),
            h.Y36(Re.Qb, 8),
            h.Y36(me),
            h.Y36(h.sBO),
            h.Y36(Fe.rL),
            h.Y36(h.R0b)
          );
        }),
        (vt.ɵcmp = h.Xpm({
          type: vt,
          selectors: [['mat-progress-spinner']],
          hostAttrs: ['role', 'progressbar', 'tabindex', '-1', 1, 'mat-progress-spinner'],
          hostVars: 10,
          hostBindings: function (Ke, Ie) {
            2 & Ke &&
              (h.uIk('aria-valuemin', 'determinate' === Ie.mode ? 0 : null)(
                'aria-valuemax',
                'determinate' === Ie.mode ? 100 : null
              )('aria-valuenow', 'determinate' === Ie.mode ? Ie.value : null)('mode', Ie.mode),
              h.Udp('width', Ie.diameter, 'px')('height', Ie.diameter, 'px'),
              h.ekj('_mat-animation-noopable', Ie._noopAnimations));
          },
          inputs: { color: 'color', diameter: 'diameter', strokeWidth: 'strokeWidth', mode: 'mode', value: 'value' },
          exportAs: ['matProgressSpinner'],
          features: [h.qOj],
          decls: 4,
          vars: 8,
          consts: [
            ['preserveAspectRatio', 'xMidYMid meet', 'focusable', 'false', 'aria-hidden', 'true', 3, 'ngSwitch'],
            ['svg', ''],
            [
              'cx',
              '50%',
              'cy',
              '50%',
              3,
              'animation-name',
              'stroke-dashoffset',
              'stroke-dasharray',
              'stroke-width',
              'transform-origin',
              4,
              'ngSwitchCase',
            ],
            [
              'cx',
              '50%',
              'cy',
              '50%',
              3,
              'stroke-dashoffset',
              'stroke-dasharray',
              'stroke-width',
              'transform-origin',
              4,
              'ngSwitchCase',
            ],
            ['cx', '50%', 'cy', '50%'],
          ],
          template: function (Ke, Ie) {
            1 & Ke &&
              (h.O4$(),
              h.TgZ(0, 'svg', 0, 1),
              h.YNc(2, Ne, 1, 11, 'circle', 2),
              h.YNc(3, ee, 1, 9, 'circle', 3),
              h.qZA()),
              2 & Ke &&
                (h.Udp('width', Ie.diameter, 'px')('height', Ie.diameter, 'px'),
                h.Q6J('ngSwitch', 'indeterminate' === Ie.mode),
                h.uIk('viewBox', Ie._getViewBox()),
                h.xp6(2),
                h.Q6J('ngSwitchCase', !0),
                h.xp6(1),
                h.Q6J('ngSwitchCase', !1));
          },
          directives: [m.RF, m.n9],
          styles: [
            '.mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\n',
          ],
          encapsulation: 2,
          changeDetection: 0,
        }));
      let $e = (() => {
        class ge {}
        return (
          (ge.ɵfac = function (Ie) {
            return new (Ie || ge)();
          }),
          (ge.ɵmod = h.oAB({ type: ge })),
          (ge.ɵinj = h.cJS({ imports: [[d.BQ, m.ez], d.BQ] })),
          ge
        );
      })();
    },
    2638: (un, ft, x) => {
      'use strict';
      x.d(ft, { JX: () => mt, TM: () => Nt, Rh: () => at, SJ: () => en });
      var h = x(925),
        m = x(495),
        d = x(9808),
        N = x(5e3),
        Ce = x(508),
        Re = x(3191),
        He = x(1159),
        Fe = x(7579),
        Ne = x(4968),
        ee = x(6451),
        fe = x(9300),
        ue = x(4004),
        Qe = x(9718),
        Oe = x(2722),
        et = x(1884),
        lt = x(5698),
        me = x(8675),
        Ze = x(8372),
        dt = x(1777),
        vt = x(6360),
        We = x(5664),
        $e = x(226);
      const ge = ['*'],
        Ke = ['content'];
      function Ie(xt, Gt) {
        if (1 & xt) {
          const re = N.EpF();
          N.TgZ(0, 'div', 2),
            N.NdJ('click', function () {
              return N.CHM(re), N.oxw()._onBackdropClicked();
            }),
            N.qZA();
        }
        if (2 & xt) {
          const re = N.oxw();
          N.ekj('mat-drawer-shown', re._isShowingBackdrop());
        }
      }
      function De(xt, Gt) {
        1 & xt && (N.TgZ(0, 'mat-drawer-content'), N.Hsn(1, 2), N.qZA());
      }
      const Ye = [[['mat-drawer']], [['mat-drawer-content']], '*'],
        it = ['mat-drawer', 'mat-drawer-content', '*'];
      function qe(xt, Gt) {
        if (1 & xt) {
          const re = N.EpF();
          N.TgZ(0, 'div', 2),
            N.NdJ('click', function () {
              return N.CHM(re), N.oxw()._onBackdropClicked();
            }),
            N.qZA();
        }
        if (2 & xt) {
          const re = N.oxw();
          N.ekj('mat-drawer-shown', re._isShowingBackdrop());
        }
      }
      function Ve(xt, Gt) {
        1 & xt && (N.TgZ(0, 'mat-sidenav-content'), N.Hsn(1, 2), N.qZA());
      }
      const Ft = [[['mat-sidenav']], [['mat-sidenav-content']], '*'],
        kt = ['mat-sidenav', 'mat-sidenav-content', '*'],
        on = {
          transformDrawer: (0, dt.X$)('transform', [
            (0, dt.SB)('open, open-instant', (0, dt.oB)({ transform: 'none', visibility: 'visible' })),
            (0, dt.SB)('void', (0, dt.oB)({ 'box-shadow': 'none', visibility: 'hidden' })),
            (0, dt.eR)('void => open-instant', (0, dt.jt)('0ms')),
            (0, dt.eR)('void <=> open, open-instant => void', (0, dt.jt)('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
          ]),
        },
        Ct = new N.OlP('MAT_DRAWER_DEFAULT_AUTOSIZE', {
          providedIn: 'root',
          factory: function Et() {
            return !1;
          },
        }),
        st = new N.OlP('MAT_DRAWER_CONTAINER');
      let yt = (() => {
          class xt extends m.PQ {
            constructor(re, ot, Zt, hn, At) {
              super(Zt, hn, At), (this._changeDetectorRef = re), (this._container = ot);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(N.Y36(N.sBO), N.Y36((0, N.Gpc)(() => bt)), N.Y36(N.SBq), N.Y36(m.mF), N.Y36(N.R0b));
            }),
            (xt.ɵcmp = N.Xpm({
              type: xt,
              selectors: [['mat-drawer-content']],
              hostAttrs: [1, 'mat-drawer-content'],
              hostVars: 4,
              hostBindings: function (re, ot) {
                2 & re &&
                  N.Udp('margin-left', ot._container._contentMargins.left, 'px')(
                    'margin-right',
                    ot._container._contentMargins.right,
                    'px'
                  );
              },
              features: [N._Bn([{ provide: m.PQ, useExisting: xt }]), N.qOj],
              ngContentSelectors: ge,
              decls: 1,
              vars: 0,
              template: function (re, ot) {
                1 & re && (N.F$t(), N.Hsn(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            xt
          );
        })(),
        Ue = (() => {
          class xt {
            constructor(re, ot, Zt, hn, At, ae, Le, ht) {
              (this._elementRef = re),
                (this._focusTrapFactory = ot),
                (this._focusMonitor = Zt),
                (this._platform = hn),
                (this._ngZone = At),
                (this._interactivityChecker = ae),
                (this._doc = Le),
                (this._container = ht),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = 'start'),
                (this._mode = 'over'),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new Fe.x()),
                (this._animationEnd = new Fe.x()),
                (this._animationState = 'void'),
                (this.openedChange = new N.vpe(!0)),
                (this._openedStream = this.openedChange.pipe(
                  (0, fe.h)((Se) => Se),
                  (0, ue.U)(() => {})
                )),
                (this.openedStart = this._animationStarted.pipe(
                  (0, fe.h)((Se) => Se.fromState !== Se.toState && 0 === Se.toState.indexOf('open')),
                  (0, Qe.h)(void 0)
                )),
                (this._closedStream = this.openedChange.pipe(
                  (0, fe.h)((Se) => !Se),
                  (0, ue.U)(() => {})
                )),
                (this.closedStart = this._animationStarted.pipe(
                  (0, fe.h)((Se) => Se.fromState !== Se.toState && 'void' === Se.toState),
                  (0, Qe.h)(void 0)
                )),
                (this._destroyed = new Fe.x()),
                (this.onPositionChanged = new N.vpe()),
                (this._modeChanged = new Fe.x()),
                this.openedChange.subscribe((Se) => {
                  Se
                    ? (this._doc && (this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() && this._restoreFocus(this._openedVia || 'program');
                }),
                this._ngZone.runOutsideAngular(() => {
                  (0, Ne.R)(this._elementRef.nativeElement, 'keydown')
                    .pipe(
                      (0, fe.h)((Se) => Se.keyCode === He.hY && !this.disableClose && !(0, He.Vb)(Se)),
                      (0, Oe.R)(this._destroyed)
                    )
                    .subscribe((Se) =>
                      this._ngZone.run(() => {
                        this.close(), Se.stopPropagation(), Se.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe((0, et.x)((Se, Be) => Se.fromState === Be.fromState && Se.toState === Be.toState))
                  .subscribe((Se) => {
                    const { fromState: Be, toState: Pe } = Se;
                    ((0 === Pe.indexOf('open') && 'void' === Be) || ('void' === Pe && 0 === Be.indexOf('open'))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            get position() {
              return this._position;
            }
            set position(re) {
              (re = 'end' === re ? 'end' : 'start') !== this._position &&
                (this._isAttached && this._updatePositionInParent(re),
                (this._position = re),
                this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(re) {
              (this._mode = re), this._updateFocusTrapState(), this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(re) {
              this._disableClose = (0, Re.Ig)(re);
            }
            get autoFocus() {
              const re = this._autoFocus;
              return null == re ? ('side' === this.mode ? 'dialog' : 'first-tabbable') : re;
            }
            set autoFocus(re) {
              ('true' === re || 'false' === re || null == re) && (re = (0, Re.Ig)(re)), (this._autoFocus = re);
            }
            get opened() {
              return this._opened;
            }
            set opened(re) {
              this.toggle((0, Re.Ig)(re));
            }
            _forceFocus(re, ot) {
              this._interactivityChecker.isFocusable(re) ||
                ((re.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  re.addEventListener('blur', () => re.removeAttribute('tabindex')),
                    re.addEventListener('mousedown', () => re.removeAttribute('tabindex'));
                })),
                re.focus(ot);
            }
            _focusByCssSelector(re, ot) {
              let Zt = this._elementRef.nativeElement.querySelector(re);
              Zt && this._forceFocus(Zt, ot);
            }
            _takeFocus() {
              if (!this._focusTrap) return;
              const re = this._elementRef.nativeElement;
              switch (this.autoFocus) {
                case !1:
                case 'dialog':
                  return;
                case !0:
                case 'first-tabbable':
                  this._focusTrap.focusInitialElementWhenReady().then((ot) => {
                    !ot && 'function' == typeof this._elementRef.nativeElement.focus && re.focus();
                  });
                  break;
                case 'first-heading':
                  this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');
                  break;
                default:
                  this._focusByCssSelector(this.autoFocus);
              }
            }
            _restoreFocus(re) {
              'dialog' !== this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, re)
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null));
            }
            _isFocusWithinDrawer() {
              const re = this._doc.activeElement;
              return !!re && this._elementRef.nativeElement.contains(re);
            }
            ngAfterViewInit() {
              (this._isAttached = !0),
                (this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement)),
                this._updateFocusTrapState(),
                'end' === this._position && this._updatePositionInParent('end');
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              var re;
              this._focusTrap && this._focusTrap.destroy(),
                null === (re = this._anchor) || void 0 === re || re.remove(),
                (this._anchor = null),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(re) {
              return this.toggle(!0, re);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0, 'mouse');
            }
            toggle(re = !this.opened, ot) {
              re && ot && (this._openedVia = ot);
              const Zt = this._setOpen(re, !re && this._isFocusWithinDrawer(), this._openedVia || 'program');
              return re || (this._openedVia = null), Zt;
            }
            _setOpen(re, ot, Zt) {
              return (
                (this._opened = re),
                re
                  ? (this._animationState = this._enableAnimations ? 'open' : 'open-instant')
                  : ((this._animationState = 'void'), ot && this._restoreFocus(Zt)),
                this._updateFocusTrapState(),
                new Promise((hn) => {
                  this.openedChange.pipe((0, lt.q)(1)).subscribe((At) => hn(At ? 'open' : 'close'));
                })
              );
            }
            _getWidth() {
              return (this._elementRef.nativeElement && this._elementRef.nativeElement.offsetWidth) || 0;
            }
            _updateFocusTrapState() {
              this._focusTrap && (this._focusTrap.enabled = this.opened && 'side' !== this.mode);
            }
            _updatePositionInParent(re) {
              const ot = this._elementRef.nativeElement,
                Zt = ot.parentNode;
              'end' === re
                ? (this._anchor ||
                    ((this._anchor = this._doc.createComment('mat-drawer-anchor')), Zt.insertBefore(this._anchor, ot)),
                  Zt.appendChild(ot))
                : this._anchor && this._anchor.parentNode.insertBefore(ot, this._anchor);
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(
                N.Y36(N.SBq),
                N.Y36(We.qV),
                N.Y36(We.tE),
                N.Y36(h.t4),
                N.Y36(N.R0b),
                N.Y36(We.ic),
                N.Y36(d.K0, 8),
                N.Y36(st, 8)
              );
            }),
            (xt.ɵcmp = N.Xpm({
              type: xt,
              selectors: [['mat-drawer']],
              viewQuery: function (re, ot) {
                if ((1 & re && N.Gf(Ke, 5), 2 & re)) {
                  let Zt;
                  N.iGM((Zt = N.CRH())) && (ot._content = Zt.first);
                }
              },
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer'],
              hostVars: 12,
              hostBindings: function (re, ot) {
                1 & re &&
                  N.WFA('@transform.start', function (hn) {
                    return ot._animationStarted.next(hn);
                  })('@transform.done', function (hn) {
                    return ot._animationEnd.next(hn);
                  }),
                  2 & re &&
                    (N.uIk('align', null),
                    N.d8E('@transform', ot._animationState),
                    N.ekj('mat-drawer-end', 'end' === ot.position)('mat-drawer-over', 'over' === ot.mode)(
                      'mat-drawer-push',
                      'push' === ot.mode
                    )('mat-drawer-side', 'side' === ot.mode)('mat-drawer-opened', ot.opened));
              },
              inputs: {
                position: 'position',
                mode: 'mode',
                disableClose: 'disableClose',
                autoFocus: 'autoFocus',
                opened: 'opened',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                openedStart: 'openedStart',
                _closedStream: 'closed',
                closedStart: 'closedStart',
                onPositionChanged: 'positionChanged',
              },
              exportAs: ['matDrawer'],
              ngContentSelectors: ge,
              decls: 3,
              vars: 0,
              consts: [
                ['cdkScrollable', '', 1, 'mat-drawer-inner-container'],
                ['content', ''],
              ],
              template: function (re, ot) {
                1 & re && (N.F$t(), N.TgZ(0, 'div', 0, 1), N.Hsn(2), N.qZA());
              },
              directives: [m.PQ],
              encapsulation: 2,
              data: { animation: [on.transformDrawer] },
              changeDetection: 0,
            })),
            xt
          );
        })(),
        bt = (() => {
          class xt {
            constructor(re, ot, Zt, hn, At, ae = !1, Le) {
              (this._dir = re),
                (this._element = ot),
                (this._ngZone = Zt),
                (this._changeDetectorRef = hn),
                (this._animationMode = Le),
                (this._drawers = new N.n_E()),
                (this.backdropClick = new N.vpe()),
                (this._destroyed = new Fe.x()),
                (this._doCheckSubject = new Fe.x()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new Fe.x()),
                re &&
                  re.change.pipe((0, Oe.R)(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                At.change()
                  .pipe((0, Oe.R)(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = ae);
            }
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(re) {
              this._autosize = (0, Re.Ig)(re);
            }
            get hasBackdrop() {
              return null == this._backdropOverride
                ? !this._start || 'side' !== this._start.mode || !this._end || 'side' !== this._end.mode
                : this._backdropOverride;
            }
            set hasBackdrop(re) {
              this._backdropOverride = null == re ? null : (0, Re.Ig)(re);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            ngAfterContentInit() {
              this._allDrawers.changes.pipe((0, me.O)(this._allDrawers), (0, Oe.R)(this._destroyed)).subscribe((re) => {
                this._drawers.reset(re.filter((ot) => !ot._container || ot._container === this)),
                  this._drawers.notifyOnChanges();
              }),
                this._drawers.changes.pipe((0, me.O)(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((re) => {
                      this._watchDrawerToggle(re), this._watchDrawerPosition(re), this._watchDrawerMode(re);
                    }),
                    (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject
                    .pipe((0, Ze.b)(10), (0, Oe.R)(this._destroyed))
                    .subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((re) => re.open());
            }
            close() {
              this._drawers.forEach((re) => re.close());
            }
            updateContentMargins() {
              let re = 0,
                ot = 0;
              if (this._left && this._left.opened)
                if ('side' == this._left.mode) re += this._left._getWidth();
                else if ('push' == this._left.mode) {
                  const Zt = this._left._getWidth();
                  (re += Zt), (ot -= Zt);
                }
              if (this._right && this._right.opened)
                if ('side' == this._right.mode) ot += this._right._getWidth();
                else if ('push' == this._right.mode) {
                  const Zt = this._right._getWidth();
                  (ot += Zt), (re -= Zt);
                }
              (re = re || null),
                (ot = ot || null),
                (re !== this._contentMargins.left || ot !== this._contentMargins.right) &&
                  ((this._contentMargins = { left: re, right: ot }),
                  this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins)));
            }
            ngDoCheck() {
              this._autosize && this._isPushed() && this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());
            }
            _watchDrawerToggle(re) {
              re._animationStarted
                .pipe(
                  (0, fe.h)((ot) => ot.fromState !== ot.toState),
                  (0, Oe.R)(this._drawers.changes)
                )
                .subscribe((ot) => {
                  'open-instant' !== ot.toState &&
                    'NoopAnimations' !== this._animationMode &&
                    this._element.nativeElement.classList.add('mat-drawer-transition'),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                'side' !== re.mode &&
                  re.openedChange
                    .pipe((0, Oe.R)(this._drawers.changes))
                    .subscribe(() => this._setContainerClass(re.opened));
            }
            _watchDrawerPosition(re) {
              !re ||
                re.onPositionChanged.pipe((0, Oe.R)(this._drawers.changes)).subscribe(() => {
                  this._ngZone.onMicrotaskEmpty.pipe((0, lt.q)(1)).subscribe(() => {
                    this._validateDrawers();
                  });
                });
            }
            _watchDrawerMode(re) {
              re &&
                re._modeChanged.pipe((0, Oe.R)((0, ee.T)(this._drawers.changes, this._destroyed))).subscribe(() => {
                  this.updateContentMargins(), this._changeDetectorRef.markForCheck();
                });
            }
            _setContainerClass(re) {
              const ot = this._element.nativeElement.classList,
                Zt = 'mat-drawer-container-has-open';
              re ? ot.add(Zt) : ot.remove(Zt);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((re) => {
                  'end' == re.position ? (this._end = re) : (this._start = re);
                }),
                (this._right = this._left = null),
                this._dir && 'rtl' === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) && 'over' != this._start.mode) ||
                (this._isDrawerOpen(this._end) && 'over' != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter((re) => re && !re.disableClose && this._canHaveBackdrop(re))
                .forEach((re) => re._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(re) {
              return 'side' !== re.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(re) {
              return null != re && re.opened;
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(
                N.Y36($e.Is, 8),
                N.Y36(N.SBq),
                N.Y36(N.R0b),
                N.Y36(N.sBO),
                N.Y36(m.rL),
                N.Y36(Ct),
                N.Y36(vt.Qb, 8)
              );
            }),
            (xt.ɵcmp = N.Xpm({
              type: xt,
              selectors: [['mat-drawer-container']],
              contentQueries: function (re, ot, Zt) {
                if ((1 & re && (N.Suo(Zt, yt, 5), N.Suo(Zt, Ue, 5)), 2 & re)) {
                  let hn;
                  N.iGM((hn = N.CRH())) && (ot._content = hn.first), N.iGM((hn = N.CRH())) && (ot._allDrawers = hn);
                }
              },
              viewQuery: function (re, ot) {
                if ((1 & re && N.Gf(yt, 5), 2 & re)) {
                  let Zt;
                  N.iGM((Zt = N.CRH())) && (ot._userContent = Zt.first);
                }
              },
              hostAttrs: [1, 'mat-drawer-container'],
              hostVars: 2,
              hostBindings: function (re, ot) {
                2 & re && N.ekj('mat-drawer-container-explicit-backdrop', ot._backdropOverride);
              },
              inputs: { autosize: 'autosize', hasBackdrop: 'hasBackdrop' },
              outputs: { backdropClick: 'backdropClick' },
              exportAs: ['matDrawerContainer'],
              features: [N._Bn([{ provide: st, useExisting: xt }])],
              ngContentSelectors: it,
              decls: 4,
              vars: 2,
              consts: [
                ['class', 'mat-drawer-backdrop', 3, 'mat-drawer-shown', 'click', 4, 'ngIf'],
                [4, 'ngIf'],
                [1, 'mat-drawer-backdrop', 3, 'click'],
              ],
              template: function (re, ot) {
                1 & re &&
                  (N.F$t(Ye),
                  N.YNc(0, Ie, 1, 2, 'div', 0),
                  N.Hsn(1),
                  N.Hsn(2, 1),
                  N.YNc(3, De, 2, 0, 'mat-drawer-content', 1)),
                  2 & re && (N.Q6J('ngIf', ot.hasBackdrop), N.xp6(3), N.Q6J('ngIf', !ot._content));
              },
              directives: [yt, d.O5],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            xt
          );
        })(),
        at = (() => {
          class xt extends yt {
            constructor(re, ot, Zt, hn, At) {
              super(re, ot, Zt, hn, At);
            }
          }
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)(N.Y36(N.sBO), N.Y36((0, N.Gpc)(() => Nt)), N.Y36(N.SBq), N.Y36(m.mF), N.Y36(N.R0b));
            }),
            (xt.ɵcmp = N.Xpm({
              type: xt,
              selectors: [['mat-sidenav-content']],
              hostAttrs: [1, 'mat-drawer-content', 'mat-sidenav-content'],
              hostVars: 4,
              hostBindings: function (re, ot) {
                2 & re &&
                  N.Udp('margin-left', ot._container._contentMargins.left, 'px')(
                    'margin-right',
                    ot._container._contentMargins.right,
                    'px'
                  );
              },
              features: [N._Bn([{ provide: m.PQ, useExisting: xt }]), N.qOj],
              ngContentSelectors: ge,
              decls: 1,
              vars: 0,
              template: function (re, ot) {
                1 & re && (N.F$t(), N.Hsn(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            xt
          );
        })(),
        mt = (() => {
          class xt extends Ue {
            constructor() {
              super(...arguments), (this._fixedInViewport = !1), (this._fixedTopGap = 0), (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(re) {
              this._fixedInViewport = (0, Re.Ig)(re);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(re) {
              this._fixedTopGap = (0, Re.su)(re);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(re) {
              this._fixedBottomGap = (0, Re.su)(re);
            }
          }
          return (
            (xt.ɵfac = (function () {
              let Gt;
              return function (ot) {
                return (Gt || (Gt = N.n5z(xt)))(ot || xt);
              };
            })()),
            (xt.ɵcmp = N.Xpm({
              type: xt,
              selectors: [['mat-sidenav']],
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer', 'mat-sidenav'],
              hostVars: 17,
              hostBindings: function (re, ot) {
                2 & re &&
                  (N.uIk('align', null),
                  N.Udp('top', ot.fixedInViewport ? ot.fixedTopGap : null, 'px')(
                    'bottom',
                    ot.fixedInViewport ? ot.fixedBottomGap : null,
                    'px'
                  ),
                  N.ekj('mat-drawer-end', 'end' === ot.position)('mat-drawer-over', 'over' === ot.mode)(
                    'mat-drawer-push',
                    'push' === ot.mode
                  )('mat-drawer-side', 'side' === ot.mode)('mat-drawer-opened', ot.opened)(
                    'mat-sidenav-fixed',
                    ot.fixedInViewport
                  ));
              },
              inputs: {
                fixedInViewport: 'fixedInViewport',
                fixedTopGap: 'fixedTopGap',
                fixedBottomGap: 'fixedBottomGap',
              },
              exportAs: ['matSidenav'],
              features: [N.qOj],
              ngContentSelectors: ge,
              decls: 3,
              vars: 0,
              consts: [
                ['cdkScrollable', '', 1, 'mat-drawer-inner-container'],
                ['content', ''],
              ],
              template: function (re, ot) {
                1 & re && (N.F$t(), N.TgZ(0, 'div', 0, 1), N.Hsn(2), N.qZA());
              },
              directives: [m.PQ],
              encapsulation: 2,
              data: { animation: [on.transformDrawer] },
              changeDetection: 0,
            })),
            xt
          );
        })(),
        Nt = (() => {
          class xt extends bt {}
          return (
            (xt.ɵfac = (function () {
              let Gt;
              return function (ot) {
                return (Gt || (Gt = N.n5z(xt)))(ot || xt);
              };
            })()),
            (xt.ɵcmp = N.Xpm({
              type: xt,
              selectors: [['mat-sidenav-container']],
              contentQueries: function (re, ot, Zt) {
                if ((1 & re && (N.Suo(Zt, at, 5), N.Suo(Zt, mt, 5)), 2 & re)) {
                  let hn;
                  N.iGM((hn = N.CRH())) && (ot._content = hn.first), N.iGM((hn = N.CRH())) && (ot._allDrawers = hn);
                }
              },
              hostAttrs: [1, 'mat-drawer-container', 'mat-sidenav-container'],
              hostVars: 2,
              hostBindings: function (re, ot) {
                2 & re && N.ekj('mat-drawer-container-explicit-backdrop', ot._backdropOverride);
              },
              exportAs: ['matSidenavContainer'],
              features: [N._Bn([{ provide: st, useExisting: xt }]), N.qOj],
              ngContentSelectors: kt,
              decls: 4,
              vars: 2,
              consts: [
                ['class', 'mat-drawer-backdrop', 3, 'mat-drawer-shown', 'click', 4, 'ngIf'],
                [4, 'ngIf'],
                [1, 'mat-drawer-backdrop', 3, 'click'],
              ],
              template: function (re, ot) {
                1 & re &&
                  (N.F$t(Ft),
                  N.YNc(0, qe, 1, 2, 'div', 0),
                  N.Hsn(1),
                  N.Hsn(2, 1),
                  N.YNc(3, Ve, 2, 0, 'mat-sidenav-content', 1)),
                  2 & re && (N.Q6J('ngIf', ot.hasBackdrop), N.xp6(3), N.Q6J('ngIf', !ot._content));
              },
              directives: [at, d.O5],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            xt
          );
        })(),
        en = (() => {
          class xt {}
          return (
            (xt.ɵfac = function (re) {
              return new (re || xt)();
            }),
            (xt.ɵmod = N.oAB({ type: xt })),
            (xt.ɵinj = N.cJS({ imports: [[d.ez, Ce.BQ, h.ud, m.ZD], m.ZD, Ce.BQ] })),
            xt
          );
        })();
    },
    2368: (un, ft, x) => {
      'use strict';
      x.d(ft, { Rr: () => Ze, rP: () => $e });
      var h = x(7144),
        m = x(5e3),
        d = x(508),
        N = x(3191),
        Ce = x(3075),
        Re = x(6360),
        He = x(5664);
      const Fe = ['thumbContainer'],
        Ne = ['toggleBar'],
        ee = ['input'],
        fe = function (ge) {
          return { enterDuration: ge };
        },
        ue = ['*'],
        Qe = new m.OlP('mat-slide-toggle-default-options', {
          providedIn: 'root',
          factory: () => ({ disableToggleValue: !1 }),
        });
      let Oe = 0;
      const et = { provide: Ce.JU, useExisting: (0, m.Gpc)(() => Ze), multi: !0 };
      class lt {
        constructor(Ke, Ie) {
          (this.source = Ke), (this.checked = Ie);
        }
      }
      const me = (0, d.sb)(
        (0, d.pj)(
          (0, d.Kr)(
            (0, d.Id)(
              class {
                constructor(ge) {
                  this._elementRef = ge;
                }
              }
            )
          )
        )
      );
      let Ze = (() => {
          class ge extends me {
            constructor(Ie, De, Ye, it, qe, Ve) {
              super(Ie),
                (this._focusMonitor = De),
                (this._changeDetectorRef = Ye),
                (this.defaults = qe),
                (this._onChange = (Ft) => {}),
                (this._onTouched = () => {}),
                (this._uniqueId = 'mat-slide-toggle-' + ++Oe),
                (this._required = !1),
                (this._checked = !1),
                (this.name = null),
                (this.id = this._uniqueId),
                (this.labelPosition = 'after'),
                (this.ariaLabel = null),
                (this.ariaLabelledby = null),
                (this.change = new m.vpe()),
                (this.toggleChange = new m.vpe()),
                (this.tabIndex = parseInt(it) || 0),
                (this.color = this.defaultColor = qe.color || 'accent'),
                (this._noopAnimations = 'NoopAnimations' === Ve);
            }
            get required() {
              return this._required;
            }
            set required(Ie) {
              this._required = (0, N.Ig)(Ie);
            }
            get checked() {
              return this._checked;
            }
            set checked(Ie) {
              (this._checked = (0, N.Ig)(Ie)), this._changeDetectorRef.markForCheck();
            }
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            ngAfterContentInit() {
              this._focusMonitor.monitor(this._elementRef, !0).subscribe((Ie) => {
                Ie || Promise.resolve().then(() => this._onTouched());
              });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            _onChangeEvent(Ie) {
              Ie.stopPropagation(),
                this.toggleChange.emit(),
                this.defaults.disableToggleValue
                  ? (this._inputElement.nativeElement.checked = this.checked)
                  : ((this.checked = this._inputElement.nativeElement.checked), this._emitChangeEvent());
            }
            _onInputClick(Ie) {
              Ie.stopPropagation();
            }
            writeValue(Ie) {
              this.checked = !!Ie;
            }
            registerOnChange(Ie) {
              this._onChange = Ie;
            }
            registerOnTouched(Ie) {
              this._onTouched = Ie;
            }
            setDisabledState(Ie) {
              (this.disabled = Ie), this._changeDetectorRef.markForCheck();
            }
            focus(Ie, De) {
              De ? this._focusMonitor.focusVia(this._inputElement, De, Ie) : this._inputElement.nativeElement.focus(Ie);
            }
            toggle() {
              (this.checked = !this.checked), this._onChange(this.checked);
            }
            _emitChangeEvent() {
              this._onChange(this.checked), this.change.emit(new lt(this, this.checked));
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
          }
          return (
            (ge.ɵfac = function (Ie) {
              return new (Ie || ge)(
                m.Y36(m.SBq),
                m.Y36(He.tE),
                m.Y36(m.sBO),
                m.$8M('tabindex'),
                m.Y36(Qe),
                m.Y36(Re.Qb, 8)
              );
            }),
            (ge.ɵcmp = m.Xpm({
              type: ge,
              selectors: [['mat-slide-toggle']],
              viewQuery: function (Ie, De) {
                if ((1 & Ie && (m.Gf(Fe, 5), m.Gf(Ne, 5), m.Gf(ee, 5)), 2 & Ie)) {
                  let Ye;
                  m.iGM((Ye = m.CRH())) && (De._thumbEl = Ye.first),
                    m.iGM((Ye = m.CRH())) && (De._thumbBarEl = Ye.first),
                    m.iGM((Ye = m.CRH())) && (De._inputElement = Ye.first);
                }
              },
              hostAttrs: [1, 'mat-slide-toggle'],
              hostVars: 12,
              hostBindings: function (Ie, De) {
                2 & Ie &&
                  (m.Ikx('id', De.id),
                  m.uIk('tabindex', null)('aria-label', null)('aria-labelledby', null),
                  m.ekj('mat-checked', De.checked)('mat-disabled', De.disabled)(
                    'mat-slide-toggle-label-before',
                    'before' == De.labelPosition
                  )('_mat-animation-noopable', De._noopAnimations));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                name: 'name',
                id: 'id',
                labelPosition: 'labelPosition',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                required: 'required',
                checked: 'checked',
              },
              outputs: { change: 'change', toggleChange: 'toggleChange' },
              exportAs: ['matSlideToggle'],
              features: [m._Bn([et]), m.qOj],
              ngContentSelectors: ue,
              decls: 16,
              vars: 20,
              consts: [
                [1, 'mat-slide-toggle-label'],
                ['label', ''],
                [1, 'mat-slide-toggle-bar'],
                ['toggleBar', ''],
                [
                  'type',
                  'checkbox',
                  'role',
                  'switch',
                  1,
                  'mat-slide-toggle-input',
                  'cdk-visually-hidden',
                  3,
                  'id',
                  'required',
                  'tabIndex',
                  'checked',
                  'disabled',
                  'change',
                  'click',
                ],
                ['input', ''],
                [1, 'mat-slide-toggle-thumb-container'],
                ['thumbContainer', ''],
                [1, 'mat-slide-toggle-thumb'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-slide-toggle-ripple',
                  'mat-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleRadius',
                  'matRippleAnimation',
                ],
                [1, 'mat-ripple-element', 'mat-slide-toggle-persistent-ripple'],
                [1, 'mat-slide-toggle-content', 3, 'cdkObserveContent'],
                ['labelContent', ''],
                [2, 'display', 'none'],
              ],
              template: function (Ie, De) {
                if (
                  (1 & Ie &&
                    (m.F$t(),
                    m.TgZ(0, 'label', 0, 1),
                    m.TgZ(2, 'div', 2, 3),
                    m.TgZ(4, 'input', 4, 5),
                    m.NdJ('change', function (it) {
                      return De._onChangeEvent(it);
                    })('click', function (it) {
                      return De._onInputClick(it);
                    }),
                    m.qZA(),
                    m.TgZ(6, 'div', 6, 7),
                    m._UZ(8, 'div', 8),
                    m.TgZ(9, 'div', 9),
                    m._UZ(10, 'div', 10),
                    m.qZA(),
                    m.qZA(),
                    m.qZA(),
                    m.TgZ(11, 'span', 11, 12),
                    m.NdJ('cdkObserveContent', function () {
                      return De._onLabelTextChange();
                    }),
                    m.TgZ(13, 'span', 13),
                    m._uU(14, '\xa0'),
                    m.qZA(),
                    m.Hsn(15),
                    m.qZA(),
                    m.qZA()),
                  2 & Ie)
                ) {
                  const Ye = m.MAs(1),
                    it = m.MAs(12);
                  m.uIk('for', De.inputId),
                    m.xp6(2),
                    m.ekj('mat-slide-toggle-bar-no-side-margin', !it.textContent || !it.textContent.trim()),
                    m.xp6(2),
                    m.Q6J('id', De.inputId)('required', De.required)('tabIndex', De.tabIndex)('checked', De.checked)(
                      'disabled',
                      De.disabled
                    ),
                    m.uIk('name', De.name)('aria-checked', De.checked.toString())('aria-label', De.ariaLabel)(
                      'aria-labelledby',
                      De.ariaLabelledby
                    )('aria-describedby', De.ariaDescribedby),
                    m.xp6(5),
                    m.Q6J('matRippleTrigger', Ye)('matRippleDisabled', De.disableRipple || De.disabled)(
                      'matRippleCentered',
                      !0
                    )('matRippleRadius', 20)('matRippleAnimation', m.VKq(18, fe, De._noopAnimations ? 0 : 150));
                }
              },
              directives: [d.wG, h.wD],
              styles: [
                '.mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            ge
          );
        })(),
        We = (() => {
          class ge {}
          return (
            (ge.ɵfac = function (Ie) {
              return new (Ie || ge)();
            }),
            (ge.ɵmod = m.oAB({ type: ge })),
            (ge.ɵinj = m.cJS({})),
            ge
          );
        })(),
        $e = (() => {
          class ge {}
          return (
            (ge.ɵfac = function (Ie) {
              return new (Ie || ge)();
            }),
            (ge.ɵmod = m.oAB({ type: ge })),
            (ge.ɵinj = m.cJS({ imports: [[We, d.si, d.BQ, h.Q8], We, d.BQ] })),
            ge
          );
        })();
    },
    4594: (un, ft, x) => {
      'use strict';
      x.d(ft, { Ye: () => Ne, g0: () => fe });
      var h = x(5e3),
        m = x(508),
        d = x(9808),
        N = x(925);
      const Ce = ['*', [['mat-toolbar-row']]],
        Re = ['*', 'mat-toolbar-row'],
        He = (0, m.pj)(
          class {
            constructor(ue) {
              this._elementRef = ue;
            }
          }
        );
      let Fe = (() => {
          class ue {}
          return (
            (ue.ɵfac = function (Oe) {
              return new (Oe || ue)();
            }),
            (ue.ɵdir = h.lG2({
              type: ue,
              selectors: [['mat-toolbar-row']],
              hostAttrs: [1, 'mat-toolbar-row'],
              exportAs: ['matToolbarRow'],
            })),
            ue
          );
        })(),
        Ne = (() => {
          class ue extends He {
            constructor(Oe, et, lt) {
              super(Oe), (this._platform = et), (this._document = lt);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes()));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (ue.ɵfac = function (Oe) {
              return new (Oe || ue)(h.Y36(h.SBq), h.Y36(N.t4), h.Y36(d.K0));
            }),
            (ue.ɵcmp = h.Xpm({
              type: ue,
              selectors: [['mat-toolbar']],
              contentQueries: function (Oe, et, lt) {
                if ((1 & Oe && h.Suo(lt, Fe, 5), 2 & Oe)) {
                  let me;
                  h.iGM((me = h.CRH())) && (et._toolbarRows = me);
                }
              },
              hostAttrs: [1, 'mat-toolbar'],
              hostVars: 4,
              hostBindings: function (Oe, et) {
                2 & Oe &&
                  h.ekj('mat-toolbar-multiple-rows', et._toolbarRows.length > 0)(
                    'mat-toolbar-single-row',
                    0 === et._toolbarRows.length
                  );
              },
              inputs: { color: 'color' },
              exportAs: ['matToolbar'],
              features: [h.qOj],
              ngContentSelectors: Re,
              decls: 2,
              vars: 0,
              template: function (Oe, et) {
                1 & Oe && (h.F$t(Ce), h.Hsn(0), h.Hsn(1, 1));
              },
              styles: [
                '.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            ue
          );
        })(),
        fe = (() => {
          class ue {}
          return (
            (ue.ɵfac = function (Oe) {
              return new (Oe || ue)();
            }),
            (ue.ɵmod = h.oAB({ type: ue })),
            (ue.ɵinj = h.cJS({ imports: [[m.BQ], m.BQ] })),
            ue
          );
        })();
    },
    6360: (un, ft, x) => {
      'use strict';
      x.d(ft, { Qb: () => Pn, PW: () => oo });
      var h = x(5e3),
        m = x(2313),
        d = x(1777);
      function N() {
        return 'undefined' != typeof window && void 0 !== window.document;
      }
      function Ce() {
        return 'undefined' != typeof process && '[object process]' === {}.toString.call(process);
      }
      function Re(oe) {
        switch (oe.length) {
          case 0:
            return new d.ZN();
          case 1:
            return oe[0];
          default:
            return new d.ZE(oe);
        }
      }
      function He(oe, E, M, B, ce = {}, Ge = {}) {
        const pt = [],
          gt = [];
        let Vt = -1,
          cn = null;
        if (
          (B.forEach((Tn) => {
            const zn = Tn.offset,
              ni = zn == Vt,
              mi = (ni && cn) || {};
            Object.keys(Tn).forEach((Xn) => {
              let si = Xn,
                vi = Tn[Xn];
              if ('offset' !== Xn)
                switch (((si = E.normalizePropertyName(si, pt)), vi)) {
                  case d.k1:
                    vi = ce[Xn];
                    break;
                  case d.l3:
                    vi = Ge[Xn];
                    break;
                  default:
                    vi = E.normalizeStyleValue(Xn, si, vi, pt);
                }
              mi[si] = vi;
            }),
              ni || gt.push(mi),
              (cn = mi),
              (Vt = zn);
          }),
          pt.length)
        ) {
          const Tn = '\n - ';
          throw new Error(`Unable to animate due to the following errors:${Tn}${pt.join(Tn)}`);
        }
        return gt;
      }
      function Fe(oe, E, M, B) {
        switch (E) {
          case 'start':
            oe.onStart(() => B(M && Ne(M, 'start', oe)));
            break;
          case 'done':
            oe.onDone(() => B(M && Ne(M, 'done', oe)));
            break;
          case 'destroy':
            oe.onDestroy(() => B(M && Ne(M, 'destroy', oe)));
        }
      }
      function Ne(oe, E, M) {
        const B = M.totalTime,
          Ge = ee(
            oe.element,
            oe.triggerName,
            oe.fromState,
            oe.toState,
            E || oe.phaseName,
            null == B ? oe.totalTime : B,
            !!M.disabled
          ),
          pt = oe._data;
        return null != pt && (Ge._data = pt), Ge;
      }
      function ee(oe, E, M, B, ce = '', Ge = 0, pt) {
        return { element: oe, triggerName: E, fromState: M, toState: B, phaseName: ce, totalTime: Ge, disabled: !!pt };
      }
      function fe(oe, E, M) {
        let B;
        return oe instanceof Map ? ((B = oe.get(E)), B || oe.set(E, (B = M))) : ((B = oe[E]), B || (B = oe[E] = M)), B;
      }
      function ue(oe) {
        const E = oe.indexOf(':');
        return [oe.substring(1, E), oe.substr(E + 1)];
      }
      let Qe = (oe, E) => !1,
        Oe = (oe, E, M) => [];
      (Ce() || 'undefined' != typeof Element) &&
        ((Qe = N()
          ? (oe, E) => {
              for (; E && E !== document.documentElement; ) {
                if (E === oe) return !0;
                E = E.parentNode || E.host;
              }
              return !1;
            }
          : (oe, E) => oe.contains(E)),
        (Oe = (oe, E, M) => {
          if (M) return Array.from(oe.querySelectorAll(E));
          const B = oe.querySelector(E);
          return B ? [B] : [];
        }));
      let me = null,
        Ze = !1;
      function dt(oe) {
        me ||
          ((me =
            (function vt() {
              return 'undefined' != typeof document ? document.body : null;
            })() || {}),
          (Ze = !!me.style && 'WebkitAppearance' in me.style));
        let E = !0;
        return (
          me.style &&
            !(function lt(oe) {
              return 'ebkit' == oe.substring(1, 6);
            })(oe) &&
            ((E = oe in me.style), !E && Ze && (E = 'Webkit' + oe.charAt(0).toUpperCase() + oe.substr(1) in me.style)),
          E
        );
      }
      const We = Qe,
        $e = Oe;
      function ge(oe) {
        const E = {};
        return (
          Object.keys(oe).forEach((M) => {
            const B = M.replace(/([a-z])([A-Z])/g, '$1-$2');
            E[B] = oe[M];
          }),
          E
        );
      }
      let Ke = (() => {
          class oe {
            validateStyleProperty(M) {
              return dt(M);
            }
            matchesElement(M, B) {
              return !1;
            }
            containsElement(M, B) {
              return We(M, B);
            }
            query(M, B, ce) {
              return $e(M, B, ce);
            }
            computeStyle(M, B, ce) {
              return ce || '';
            }
            animate(M, B, ce, Ge, pt, gt = [], Vt) {
              return new d.ZN(ce, Ge);
            }
          }
          return (
            (oe.ɵfac = function (M) {
              return new (M || oe)();
            }),
            (oe.ɵprov = h.Yz7({ token: oe, factory: oe.ɵfac })),
            oe
          );
        })(),
        Ie = (() => {
          class oe {}
          return (oe.NOOP = new Ke()), oe;
        })();
      const qe = 'ng-enter',
        Ve = 'ng-leave',
        Ft = 'ng-trigger',
        kt = '.ng-trigger',
        St = 'ng-animating',
        on = '.ng-animating';
      function Je(oe) {
        if ('number' == typeof oe) return oe;
        const E = oe.match(/^(-?[\.\d]+)(m?s)/);
        return !E || E.length < 2 ? 0 : Ct(parseFloat(E[1]), E[2]);
      }
      function Ct(oe, E) {
        return 's' === E ? 1e3 * oe : oe;
      }
      function st(oe, E, M) {
        return oe.hasOwnProperty('duration')
          ? oe
          : (function Et(oe, E, M) {
              let ce,
                Ge = 0,
                pt = '';
              if ('string' == typeof oe) {
                const gt = oe.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                if (null === gt)
                  return E.push(`The provided timing value "${oe}" is invalid.`), { duration: 0, delay: 0, easing: '' };
                ce = Ct(parseFloat(gt[1]), gt[2]);
                const Vt = gt[3];
                null != Vt && (Ge = Ct(parseFloat(Vt), gt[4]));
                const cn = gt[5];
                cn && (pt = cn);
              } else ce = oe;
              if (!M) {
                let gt = !1,
                  Vt = E.length;
                ce < 0 && (E.push('Duration values below 0 are not allowed for this animation step.'), (gt = !0)),
                  Ge < 0 && (E.push('Delay values below 0 are not allowed for this animation step.'), (gt = !0)),
                  gt && E.splice(Vt, 0, `The provided timing value "${oe}" is invalid.`);
              }
              return { duration: ce, delay: Ge, easing: pt };
            })(oe, E, M);
      }
      function yt(oe, E = {}) {
        return (
          Object.keys(oe).forEach((M) => {
            E[M] = oe[M];
          }),
          E
        );
      }
      function bt(oe, E, M = {}) {
        if (E) for (let B in oe) M[B] = oe[B];
        else yt(oe, M);
        return M;
      }
      function at(oe, E, M) {
        return M ? E + ':' + M + ';' : '';
      }
      function mt(oe) {
        let E = '';
        for (let M = 0; M < oe.style.length; M++) {
          const B = oe.style.item(M);
          E += at(0, B, oe.style.getPropertyValue(B));
        }
        for (const M in oe.style) oe.style.hasOwnProperty(M) && !M.startsWith('_') && (E += at(0, Le(M), oe.style[M]));
        oe.setAttribute('style', E);
      }
      function Nt(oe, E, M) {
        oe.style &&
          (Object.keys(E).forEach((B) => {
            const ce = ae(B);
            M && !M.hasOwnProperty(B) && (M[B] = oe.style[ce]), (oe.style[ce] = E[B]);
          }),
          Ce() && mt(oe));
      }
      function en(oe, E) {
        oe.style &&
          (Object.keys(E).forEach((M) => {
            const B = ae(M);
            oe.style[B] = '';
          }),
          Ce() && mt(oe));
      }
      function xt(oe) {
        return Array.isArray(oe) ? (1 == oe.length ? oe[0] : (0, d.vP)(oe)) : oe;
      }
      const re = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function ot(oe) {
        let E = [];
        if ('string' == typeof oe) {
          let M;
          for (; (M = re.exec(oe)); ) E.push(M[1]);
          re.lastIndex = 0;
        }
        return E;
      }
      function Zt(oe, E, M) {
        const B = oe.toString(),
          ce = B.replace(re, (Ge, pt) => {
            let gt = E[pt];
            return (
              E.hasOwnProperty(pt) || (M.push(`Please provide a value for the animation param ${pt}`), (gt = '')),
              gt.toString()
            );
          });
        return ce == B ? oe : ce;
      }
      function hn(oe) {
        const E = [];
        let M = oe.next();
        for (; !M.done; ) E.push(M.value), (M = oe.next());
        return E;
      }
      const At = /-+([a-z0-9])/g;
      function ae(oe) {
        return oe.replace(At, (...E) => E[1].toUpperCase());
      }
      function Le(oe) {
        return oe.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }
      function ht(oe, E) {
        return 0 === oe || 0 === E;
      }
      function Se(oe, E, M) {
        const B = Object.keys(M);
        if (B.length && E.length) {
          let Ge = E[0],
            pt = [];
          if (
            (B.forEach((gt) => {
              Ge.hasOwnProperty(gt) || pt.push(gt), (Ge[gt] = M[gt]);
            }),
            pt.length)
          )
            for (var ce = 1; ce < E.length; ce++) {
              let gt = E[ce];
              pt.forEach(function (Vt) {
                gt[Vt] = Pe(oe, Vt);
              });
            }
        }
        return E;
      }
      function Be(oe, E, M) {
        switch (E.type) {
          case 7:
            return oe.visitTrigger(E, M);
          case 0:
            return oe.visitState(E, M);
          case 1:
            return oe.visitTransition(E, M);
          case 2:
            return oe.visitSequence(E, M);
          case 3:
            return oe.visitGroup(E, M);
          case 4:
            return oe.visitAnimate(E, M);
          case 5:
            return oe.visitKeyframes(E, M);
          case 6:
            return oe.visitStyle(E, M);
          case 8:
            return oe.visitReference(E, M);
          case 9:
            return oe.visitAnimateChild(E, M);
          case 10:
            return oe.visitAnimateRef(E, M);
          case 11:
            return oe.visitQuery(E, M);
          case 12:
            return oe.visitStagger(E, M);
          default:
            throw new Error(`Unable to resolve animation metadata node #${E.type}`);
        }
      }
      function Pe(oe, E) {
        return window.getComputedStyle(oe)[E];
      }
      const X = '*';
      function we(oe, E) {
        const M = [];
        return (
          'string' == typeof oe
            ? oe.split(/\s*,\s*/).forEach((B) =>
                (function Rt(oe, E, M) {
                  if (':' == oe[0]) {
                    const Vt = (function It(oe, E) {
                      switch (oe) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (M, B) => parseFloat(B) > parseFloat(M);
                        case ':decrement':
                          return (M, B) => parseFloat(B) < parseFloat(M);
                        default:
                          return E.push(`The transition alias value "${oe}" is not supported`), '* => *';
                      }
                    })(oe, M);
                    if ('function' == typeof Vt) return void E.push(Vt);
                    oe = Vt;
                  }
                  const B = oe.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == B || B.length < 4)
                    return M.push(`The provided transition expression "${oe}" is not supported`), E;
                  const ce = B[1],
                    Ge = B[2],
                    pt = B[3];
                  E.push(ln(ce, pt));
                  '<' == Ge[0] && !(ce == X && pt == X) && E.push(ln(pt, ce));
                })(B, M, E)
              )
            : M.push(oe),
          M
        );
      }
      const an = new Set(['true', '1']),
        mn = new Set(['false', '0']);
      function ln(oe, E) {
        const M = an.has(oe) || mn.has(oe),
          B = an.has(E) || mn.has(E);
        return (ce, Ge) => {
          let pt = oe == X || oe == ce,
            gt = E == X || E == Ge;
          return (
            !pt && M && 'boolean' == typeof ce && (pt = ce ? an.has(oe) : mn.has(oe)),
            !gt && B && 'boolean' == typeof Ge && (gt = Ge ? an.has(E) : mn.has(E)),
            pt && gt
          );
        };
      }
      const Yn = new RegExp('s*:selfs*,?', 'g');
      function Hn(oe, E, M) {
        return new Wt(oe).build(E, M);
      }
      class Wt {
        constructor(E) {
          this._driver = E;
        }
        build(E, M) {
          const B = new le(M);
          return this._resetContextStyleTimingState(B), Be(this, xt(E), B);
        }
        _resetContextStyleTimingState(E) {
          (E.currentQuerySelector = ''), (E.collectedStyles = {}), (E.collectedStyles[''] = {}), (E.currentTime = 0);
        }
        visitTrigger(E, M) {
          let B = (M.queryCount = 0),
            ce = (M.depCount = 0);
          const Ge = [],
            pt = [];
          return (
            '@' == E.name.charAt(0) &&
              M.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"),
            E.definitions.forEach((gt) => {
              if ((this._resetContextStyleTimingState(M), 0 == gt.type)) {
                const Vt = gt,
                  cn = Vt.name;
                cn
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((Tn) => {
                    (Vt.name = Tn), Ge.push(this.visitState(Vt, M));
                  }),
                  (Vt.name = cn);
              } else if (1 == gt.type) {
                const Vt = this.visitTransition(gt, M);
                (B += Vt.queryCount), (ce += Vt.depCount), pt.push(Vt);
              } else M.errors.push('only state() and transition() definitions can sit inside of a trigger()');
            }),
            { type: 7, name: E.name, states: Ge, transitions: pt, queryCount: B, depCount: ce, options: null }
          );
        }
        visitState(E, M) {
          const B = this.visitStyle(E.styles, M),
            ce = (E.options && E.options.params) || null;
          if (B.containsDynamicStyles) {
            const Ge = new Set(),
              pt = ce || {};
            if (
              (B.styles.forEach((gt) => {
                if (ye(gt)) {
                  const Vt = gt;
                  Object.keys(Vt).forEach((cn) => {
                    ot(Vt[cn]).forEach((Tn) => {
                      pt.hasOwnProperty(Tn) || Ge.add(Tn);
                    });
                  });
                }
              }),
              Ge.size)
            ) {
              const gt = hn(Ge.values());
              M.errors.push(
                `state("${
                  E.name
                }", ...) must define default values for all the following style substitutions: ${gt.join(', ')}`
              );
            }
          }
          return { type: 0, name: E.name, style: B, options: ce ? { params: ce } : null };
        }
        visitTransition(E, M) {
          (M.queryCount = 0), (M.depCount = 0);
          const B = Be(this, xt(E.animation), M);
          return {
            type: 1,
            matchers: we(E.expr, M.errors),
            animation: B,
            queryCount: M.queryCount,
            depCount: M.depCount,
            options: he(E.options),
          };
        }
        visitSequence(E, M) {
          return { type: 2, steps: E.steps.map((B) => Be(this, B, M)), options: he(E.options) };
        }
        visitGroup(E, M) {
          const B = M.currentTime;
          let ce = 0;
          const Ge = E.steps.map((pt) => {
            M.currentTime = B;
            const gt = Be(this, pt, M);
            return (ce = Math.max(ce, M.currentTime)), gt;
          });
          return (M.currentTime = ce), { type: 3, steps: Ge, options: he(E.options) };
        }
        visitAnimate(E, M) {
          const B = (function ie(oe, E) {
            let M = null;
            if (oe.hasOwnProperty('duration')) M = oe;
            else if ('number' == typeof oe) return Te(st(oe, E).duration, 0, '');
            const B = oe;
            if (B.split(/\s+/).some((Ge) => '{' == Ge.charAt(0) && '{' == Ge.charAt(1))) {
              const Ge = Te(0, 0, '');
              return (Ge.dynamic = !0), (Ge.strValue = B), Ge;
            }
            return (M = M || st(B, E)), Te(M.duration, M.delay, M.easing);
          })(E.timings, M.errors);
          M.currentAnimateTimings = B;
          let ce,
            Ge = E.styles ? E.styles : (0, d.oB)({});
          if (5 == Ge.type) ce = this.visitKeyframes(Ge, M);
          else {
            let pt = E.styles,
              gt = !1;
            if (!pt) {
              gt = !0;
              const cn = {};
              B.easing && (cn.easing = B.easing), (pt = (0, d.oB)(cn));
            }
            M.currentTime += B.duration + B.delay;
            const Vt = this.visitStyle(pt, M);
            (Vt.isEmptyStep = gt), (ce = Vt);
          }
          return (M.currentAnimateTimings = null), { type: 4, timings: B, style: ce, options: null };
        }
        visitStyle(E, M) {
          const B = this._makeStyleAst(E, M);
          return this._validateStyleAst(B, M), B;
        }
        _makeStyleAst(E, M) {
          const B = [];
          Array.isArray(E.styles)
            ? E.styles.forEach((pt) => {
                'string' == typeof pt
                  ? pt == d.l3
                    ? B.push(pt)
                    : M.errors.push(`The provided style string value ${pt} is not allowed.`)
                  : B.push(pt);
              })
            : B.push(E.styles);
          let ce = !1,
            Ge = null;
          return (
            B.forEach((pt) => {
              if (ye(pt)) {
                const gt = pt,
                  Vt = gt.easing;
                if ((Vt && ((Ge = Vt), delete gt.easing), !ce))
                  for (let cn in gt)
                    if (gt[cn].toString().indexOf('{{') >= 0) {
                      ce = !0;
                      break;
                    }
              }
            }),
            { type: 6, styles: B, easing: Ge, offset: E.offset, containsDynamicStyles: ce, options: null }
          );
        }
        _validateStyleAst(E, M) {
          const B = M.currentAnimateTimings;
          let ce = M.currentTime,
            Ge = M.currentTime;
          B && Ge > 0 && (Ge -= B.duration + B.delay),
            E.styles.forEach((pt) => {
              'string' != typeof pt &&
                Object.keys(pt).forEach((gt) => {
                  if (!this._driver.validateStyleProperty(gt))
                    return void M.errors.push(
                      `The provided animation property "${gt}" is not a supported CSS property for animations`
                    );
                  const Vt = M.collectedStyles[M.currentQuerySelector],
                    cn = Vt[gt];
                  let Tn = !0;
                  cn &&
                    (Ge != ce &&
                      Ge >= cn.startTime &&
                      ce <= cn.endTime &&
                      (M.errors.push(
                        `The CSS property "${gt}" that exists between the times of "${cn.startTime}ms" and "${cn.endTime}ms" is also being animated in a parallel animation between the times of "${Ge}ms" and "${ce}ms"`
                      ),
                      (Tn = !1)),
                    (Ge = cn.startTime)),
                    Tn && (Vt[gt] = { startTime: Ge, endTime: ce }),
                    M.options &&
                      (function Gt(oe, E, M) {
                        const B = E.params || {},
                          ce = ot(oe);
                        ce.length &&
                          ce.forEach((Ge) => {
                            B.hasOwnProperty(Ge) ||
                              M.push(`Unable to resolve the local animation param ${Ge} in the given list of values`);
                          });
                      })(pt[gt], M.options, M.errors);
                });
            });
        }
        visitKeyframes(E, M) {
          const B = { type: 5, styles: [], options: null };
          if (!M.currentAnimateTimings)
            return M.errors.push('keyframes() must be placed inside of a call to animate()'), B;
          let Ge = 0;
          const pt = [];
          let gt = !1,
            Vt = !1,
            cn = 0;
          const Tn = E.steps.map((mr) => {
            const cr = this._makeStyleAst(mr, M);
            let rs =
                null != cr.offset
                  ? cr.offset
                  : (function Z(oe) {
                      if ('string' == typeof oe) return null;
                      let E = null;
                      if (Array.isArray(oe))
                        oe.forEach((M) => {
                          if (ye(M) && M.hasOwnProperty('offset')) {
                            const B = M;
                            (E = parseFloat(B.offset)), delete B.offset;
                          }
                        });
                      else if (ye(oe) && oe.hasOwnProperty('offset')) {
                        const M = oe;
                        (E = parseFloat(M.offset)), delete M.offset;
                      }
                      return E;
                    })(cr.styles),
              Er = 0;
            return (
              null != rs && (Ge++, (Er = cr.offset = rs)),
              (Vt = Vt || Er < 0 || Er > 1),
              (gt = gt || Er < cn),
              (cn = Er),
              pt.push(Er),
              cr
            );
          });
          Vt && M.errors.push('Please ensure that all keyframe offsets are between 0 and 1'),
            gt && M.errors.push('Please ensure that all keyframe offsets are in order');
          const zn = E.steps.length;
          let ni = 0;
          Ge > 0 && Ge < zn
            ? M.errors.push('Not all style() steps within the declared keyframes() contain offsets')
            : 0 == Ge && (ni = 1 / (zn - 1));
          const mi = zn - 1,
            Xn = M.currentTime,
            si = M.currentAnimateTimings,
            vi = si.duration;
          return (
            Tn.forEach((mr, cr) => {
              const rs = ni > 0 ? (cr == mi ? 1 : ni * cr) : pt[cr],
                Er = rs * vi;
              (M.currentTime = Xn + si.delay + Er),
                (si.duration = Er),
                this._validateStyleAst(mr, M),
                (mr.offset = rs),
                B.styles.push(mr);
            }),
            B
          );
        }
        visitReference(E, M) {
          return { type: 8, animation: Be(this, xt(E.animation), M), options: he(E.options) };
        }
        visitAnimateChild(E, M) {
          return M.depCount++, { type: 9, options: he(E.options) };
        }
        visitAnimateRef(E, M) {
          return { type: 10, animation: this.visitReference(E.animation, M), options: he(E.options) };
        }
        visitQuery(E, M) {
          const B = M.currentQuerySelector,
            ce = E.options || {};
          M.queryCount++, (M.currentQuery = E);
          const [Ge, pt] = (function de(oe) {
            const E = !!oe.split(/\s*,\s*/).find((M) => ':self' == M);
            return (
              E && (oe = oe.replace(Yn, '')),
              (oe = oe
                .replace(/@\*/g, kt)
                .replace(/@\w+/g, (M) => kt + '-' + M.substr(1))
                .replace(/:animating/g, on)),
              [oe, E]
            );
          })(E.selector);
          (M.currentQuerySelector = B.length ? B + ' ' + Ge : Ge), fe(M.collectedStyles, M.currentQuerySelector, {});
          const gt = Be(this, xt(E.animation), M);
          return (
            (M.currentQuery = null),
            (M.currentQuerySelector = B),
            {
              type: 11,
              selector: Ge,
              limit: ce.limit || 0,
              optional: !!ce.optional,
              includeSelf: pt,
              animation: gt,
              originalSelector: E.selector,
              options: he(E.options),
            }
          );
        }
        visitStagger(E, M) {
          M.currentQuery || M.errors.push('stagger() can only be used inside of query()');
          const B = 'full' === E.timings ? { duration: 0, delay: 0, easing: 'full' } : st(E.timings, M.errors, !0);
          return { type: 12, animation: Be(this, xt(E.animation), M), timings: B, options: null };
        }
      }
      class le {
        constructor(E) {
          (this.errors = E),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function ye(oe) {
        return !Array.isArray(oe) && 'object' == typeof oe;
      }
      function he(oe) {
        return (
          oe
            ? (oe = yt(oe)).params &&
              (oe.params = (function q(oe) {
                return oe ? yt(oe) : null;
              })(oe.params))
            : (oe = {}),
          oe
        );
      }
      function Te(oe, E, M) {
        return { duration: oe, delay: E, easing: M };
      }
      function pe(oe, E, M, B, ce, Ge, pt = null, gt = !1) {
        return {
          type: 1,
          element: oe,
          keyframes: E,
          preStyleProps: M,
          postStyleProps: B,
          duration: ce,
          delay: Ge,
          totalTime: ce + Ge,
          easing: pt,
          subTimeline: gt,
        };
      }
      class _e {
        constructor() {
          this._map = new Map();
        }
        get(E) {
          return this._map.get(E) || [];
        }
        append(E, M) {
          let B = this._map.get(E);
          B || this._map.set(E, (B = [])), B.push(...M);
        }
        has(E) {
          return this._map.has(E);
        }
        clear() {
          this._map.clear();
        }
      }
      const Yt = new RegExp(':enter', 'g'),
        Qn = new RegExp(':leave', 'g');
      function Ai(oe, E, M, B, ce, Ge = {}, pt = {}, gt, Vt, cn = []) {
        return new jt().buildKeyframes(oe, E, M, B, ce, Ge, pt, gt, Vt, cn);
      }
      class jt {
        buildKeyframes(E, M, B, ce, Ge, pt, gt, Vt, cn, Tn = []) {
          cn = cn || new _e();
          const zn = new nt(E, M, cn, ce, Ge, Tn, []);
          (zn.options = Vt), zn.currentTimeline.setStyles([pt], null, zn.errors, Vt), Be(this, B, zn);
          const ni = zn.timelines.filter((mi) => mi.containsAnimation());
          if (Object.keys(gt).length) {
            let mi;
            for (let Xn = ni.length - 1; Xn >= 0; Xn--) {
              const si = ni[Xn];
              if (si.element === M) {
                mi = si;
                break;
              }
            }
            mi && !mi.allowOnlyTimelineStyles() && mi.setStyles([gt], null, zn.errors, Vt);
          }
          return ni.length ? ni.map((mi) => mi.buildKeyframes()) : [pe(M, [], [], [], 0, 0, '', !1)];
        }
        visitTrigger(E, M) {}
        visitState(E, M) {}
        visitTransition(E, M) {}
        visitAnimateChild(E, M) {
          const B = M.subInstructions.get(M.element);
          if (B) {
            const ce = M.createSubContext(E.options),
              Ge = M.currentTimeline.currentTime,
              pt = this._visitSubInstructions(B, ce, ce.options);
            Ge != pt && M.transformIntoNewTimeline(pt);
          }
          M.previousNode = E;
        }
        visitAnimateRef(E, M) {
          const B = M.createSubContext(E.options);
          B.transformIntoNewTimeline(),
            this.visitReference(E.animation, B),
            M.transformIntoNewTimeline(B.currentTimeline.currentTime),
            (M.previousNode = E);
        }
        _visitSubInstructions(E, M, B) {
          let Ge = M.currentTimeline.currentTime;
          const pt = null != B.duration ? Je(B.duration) : null,
            gt = null != B.delay ? Je(B.delay) : null;
          return (
            0 !== pt &&
              E.forEach((Vt) => {
                const cn = M.appendInstructionToTimeline(Vt, pt, gt);
                Ge = Math.max(Ge, cn.duration + cn.delay);
              }),
            Ge
          );
        }
        visitReference(E, M) {
          M.updateOptions(E.options, !0), Be(this, E.animation, M), (M.previousNode = E);
        }
        visitSequence(E, M) {
          const B = M.subContextCount;
          let ce = M;
          const Ge = E.options;
          if (
            Ge &&
            (Ge.params || Ge.delay) &&
            ((ce = M.createSubContext(Ge)), ce.transformIntoNewTimeline(), null != Ge.delay)
          ) {
            6 == ce.previousNode.type && (ce.currentTimeline.snapshotCurrentStyles(), (ce.previousNode = wt));
            const pt = Je(Ge.delay);
            ce.delayNextStep(pt);
          }
          E.steps.length &&
            (E.steps.forEach((pt) => Be(this, pt, ce)),
            ce.currentTimeline.applyStylesToKeyframe(),
            ce.subContextCount > B && ce.transformIntoNewTimeline()),
            (M.previousNode = E);
        }
        visitGroup(E, M) {
          const B = [];
          let ce = M.currentTimeline.currentTime;
          const Ge = E.options && E.options.delay ? Je(E.options.delay) : 0;
          E.steps.forEach((pt) => {
            const gt = M.createSubContext(E.options);
            Ge && gt.delayNextStep(Ge),
              Be(this, pt, gt),
              (ce = Math.max(ce, gt.currentTimeline.currentTime)),
              B.push(gt.currentTimeline);
          }),
            B.forEach((pt) => M.currentTimeline.mergeTimelineCollectedStyles(pt)),
            M.transformIntoNewTimeline(ce),
            (M.previousNode = E);
        }
        _visitTiming(E, M) {
          if (E.dynamic) {
            const B = E.strValue;
            return st(M.params ? Zt(B, M.params, M.errors) : B, M.errors);
          }
          return { duration: E.duration, delay: E.delay, easing: E.easing };
        }
        visitAnimate(E, M) {
          const B = (M.currentAnimateTimings = this._visitTiming(E.timings, M)),
            ce = M.currentTimeline;
          B.delay && (M.incrementTime(B.delay), ce.snapshotCurrentStyles());
          const Ge = E.style;
          5 == Ge.type
            ? this.visitKeyframes(Ge, M)
            : (M.incrementTime(B.duration), this.visitStyle(Ge, M), ce.applyStylesToKeyframe()),
            (M.currentAnimateTimings = null),
            (M.previousNode = E);
        }
        visitStyle(E, M) {
          const B = M.currentTimeline,
            ce = M.currentAnimateTimings;
          !ce && B.getCurrentStyleProperties().length && B.forwardFrame();
          const Ge = (ce && ce.easing) || E.easing;
          E.isEmptyStep ? B.applyEmptyStep(Ge) : B.setStyles(E.styles, Ge, M.errors, M.options), (M.previousNode = E);
        }
        visitKeyframes(E, M) {
          const B = M.currentAnimateTimings,
            ce = M.currentTimeline.duration,
            Ge = B.duration,
            gt = M.createSubContext().currentTimeline;
          (gt.easing = B.easing),
            E.styles.forEach((Vt) => {
              gt.forwardTime((Vt.offset || 0) * Ge),
                gt.setStyles(Vt.styles, Vt.easing, M.errors, M.options),
                gt.applyStylesToKeyframe();
            }),
            M.currentTimeline.mergeTimelineCollectedStyles(gt),
            M.transformIntoNewTimeline(ce + Ge),
            (M.previousNode = E);
        }
        visitQuery(E, M) {
          const B = M.currentTimeline.currentTime,
            ce = E.options || {},
            Ge = ce.delay ? Je(ce.delay) : 0;
          Ge &&
            (6 === M.previousNode.type || (0 == B && M.currentTimeline.getCurrentStyleProperties().length)) &&
            (M.currentTimeline.snapshotCurrentStyles(), (M.previousNode = wt));
          let pt = B;
          const gt = M.invokeQuery(E.selector, E.originalSelector, E.limit, E.includeSelf, !!ce.optional, M.errors);
          M.currentQueryTotal = gt.length;
          let Vt = null;
          gt.forEach((cn, Tn) => {
            M.currentQueryIndex = Tn;
            const zn = M.createSubContext(E.options, cn);
            Ge && zn.delayNextStep(Ge),
              cn === M.element && (Vt = zn.currentTimeline),
              Be(this, E.animation, zn),
              zn.currentTimeline.applyStylesToKeyframe(),
              (pt = Math.max(pt, zn.currentTimeline.currentTime));
          }),
            (M.currentQueryIndex = 0),
            (M.currentQueryTotal = 0),
            M.transformIntoNewTimeline(pt),
            Vt && (M.currentTimeline.mergeTimelineCollectedStyles(Vt), M.currentTimeline.snapshotCurrentStyles()),
            (M.previousNode = E);
        }
        visitStagger(E, M) {
          const B = M.parentContext,
            ce = M.currentTimeline,
            Ge = E.timings,
            pt = Math.abs(Ge.duration),
            gt = pt * (M.currentQueryTotal - 1);
          let Vt = pt * M.currentQueryIndex;
          switch (Ge.duration < 0 ? 'reverse' : Ge.easing) {
            case 'reverse':
              Vt = gt - Vt;
              break;
            case 'full':
              Vt = B.currentStaggerTime;
          }
          const Tn = M.currentTimeline;
          Vt && Tn.delayNextStep(Vt);
          const zn = Tn.currentTime;
          Be(this, E.animation, M),
            (M.previousNode = E),
            (B.currentStaggerTime = ce.currentTime - zn + (ce.startTime - B.currentTimeline.startTime));
        }
      }
      const wt = {};
      class nt {
        constructor(E, M, B, ce, Ge, pt, gt, Vt) {
          (this._driver = E),
            (this.element = M),
            (this.subInstructions = B),
            (this._enterClassName = ce),
            (this._leaveClassName = Ge),
            (this.errors = pt),
            (this.timelines = gt),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = wt),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = Vt || new Pt(this._driver, M, 0)),
            gt.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(E, M) {
          if (!E) return;
          const B = E;
          let ce = this.options;
          null != B.duration && (ce.duration = Je(B.duration)), null != B.delay && (ce.delay = Je(B.delay));
          const Ge = B.params;
          if (Ge) {
            let pt = ce.params;
            pt || (pt = this.options.params = {}),
              Object.keys(Ge).forEach((gt) => {
                (!M || !pt.hasOwnProperty(gt)) && (pt[gt] = Zt(Ge[gt], pt, this.errors));
              });
          }
        }
        _copyOptions() {
          const E = {};
          if (this.options) {
            const M = this.options.params;
            if (M) {
              const B = (E.params = {});
              Object.keys(M).forEach((ce) => {
                B[ce] = M[ce];
              });
            }
          }
          return E;
        }
        createSubContext(E = null, M, B) {
          const ce = M || this.element,
            Ge = new nt(
              this._driver,
              ce,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(ce, B || 0)
            );
          return (
            (Ge.previousNode = this.previousNode),
            (Ge.currentAnimateTimings = this.currentAnimateTimings),
            (Ge.options = this._copyOptions()),
            Ge.updateOptions(E),
            (Ge.currentQueryIndex = this.currentQueryIndex),
            (Ge.currentQueryTotal = this.currentQueryTotal),
            (Ge.parentContext = this),
            this.subContextCount++,
            Ge
          );
        }
        transformIntoNewTimeline(E) {
          return (
            (this.previousNode = wt),
            (this.currentTimeline = this.currentTimeline.fork(this.element, E)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(E, M, B) {
          const ce = {
              duration: null != M ? M : E.duration,
              delay: this.currentTimeline.currentTime + (null != B ? B : 0) + E.delay,
              easing: '',
            },
            Ge = new dn(
              this._driver,
              E.element,
              E.keyframes,
              E.preStyleProps,
              E.postStyleProps,
              ce,
              E.stretchStartingKeyframe
            );
          return this.timelines.push(Ge), ce;
        }
        incrementTime(E) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + E);
        }
        delayNextStep(E) {
          E > 0 && this.currentTimeline.delayNextStep(E);
        }
        invokeQuery(E, M, B, ce, Ge, pt) {
          let gt = [];
          if ((ce && gt.push(this.element), E.length > 0)) {
            E = (E = E.replace(Yt, '.' + this._enterClassName)).replace(Qn, '.' + this._leaveClassName);
            let cn = this._driver.query(this.element, E, 1 != B);
            0 !== B && (cn = B < 0 ? cn.slice(cn.length + B, cn.length) : cn.slice(0, B)), gt.push(...cn);
          }
          return (
            !Ge &&
              0 == gt.length &&
              pt.push(
                `\`query("${M}")\` returned zero elements. (Use \`query("${M}", { optional: true })\` if you wish to allow this.)`
              ),
            gt
          );
        }
      }
      class Pt {
        constructor(E, M, B, ce) {
          (this._driver = E),
            (this.element = M),
            (this.startTime = B),
            (this._elementTimelineStylesLookup = ce),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles = this._elementTimelineStylesLookup.get(M)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(M, this._localTimelineStyles)),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(E) {
          const M = 1 == this._keyframes.size && Object.keys(this._pendingStyles).length;
          this.duration || M
            ? (this.forwardTime(this.currentTime + E), M && this.snapshotCurrentStyles())
            : (this.startTime += E);
        }
        fork(E, M) {
          return (
            this.applyStylesToKeyframe(),
            new Pt(this._driver, E, M || this.currentTime, this._elementTimelineStylesLookup)
          );
        }
        _loadKeyframe() {
          this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(E) {
          this.applyStylesToKeyframe(), (this.duration = E), this._loadKeyframe();
        }
        _updateStyle(E, M) {
          (this._localTimelineStyles[E] = M),
            (this._globalTimelineStyles[E] = M),
            (this._styleSummary[E] = { time: this.currentTime, value: M });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(E) {
          E && (this._previousKeyframe.easing = E),
            Object.keys(this._globalTimelineStyles).forEach((M) => {
              (this._backFill[M] = this._globalTimelineStyles[M] || d.l3), (this._currentKeyframe[M] = d.l3);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(E, M, B, ce) {
          M && (this._previousKeyframe.easing = M);
          const Ge = (ce && ce.params) || {},
            pt = (function Gn(oe, E) {
              const M = {};
              let B;
              return (
                oe.forEach((ce) => {
                  '*' === ce
                    ? ((B = B || Object.keys(E)),
                      B.forEach((Ge) => {
                        M[Ge] = d.l3;
                      }))
                    : bt(ce, !1, M);
                }),
                M
              );
            })(E, this._globalTimelineStyles);
          Object.keys(pt).forEach((gt) => {
            const Vt = Zt(pt[gt], Ge, B);
            (this._pendingStyles[gt] = Vt),
              this._localTimelineStyles.hasOwnProperty(gt) ||
                (this._backFill[gt] = this._globalTimelineStyles.hasOwnProperty(gt)
                  ? this._globalTimelineStyles[gt]
                  : d.l3),
              this._updateStyle(gt, Vt);
          });
        }
        applyStylesToKeyframe() {
          const E = this._pendingStyles,
            M = Object.keys(E);
          0 != M.length &&
            ((this._pendingStyles = {}),
            M.forEach((B) => {
              this._currentKeyframe[B] = E[B];
            }),
            Object.keys(this._localTimelineStyles).forEach((B) => {
              this._currentKeyframe.hasOwnProperty(B) || (this._currentKeyframe[B] = this._localTimelineStyles[B]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((E) => {
            const M = this._localTimelineStyles[E];
            (this._pendingStyles[E] = M), this._updateStyle(E, M);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const E = [];
          for (let M in this._currentKeyframe) E.push(M);
          return E;
        }
        mergeTimelineCollectedStyles(E) {
          Object.keys(E._styleSummary).forEach((M) => {
            const B = this._styleSummary[M],
              ce = E._styleSummary[M];
            (!B || ce.time > B.time) && this._updateStyle(M, ce.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const E = new Set(),
            M = new Set(),
            B = 1 === this._keyframes.size && 0 === this.duration;
          let ce = [];
          this._keyframes.forEach((gt, Vt) => {
            const cn = bt(gt, !0);
            Object.keys(cn).forEach((Tn) => {
              const zn = cn[Tn];
              zn == d.k1 ? E.add(Tn) : zn == d.l3 && M.add(Tn);
            }),
              B || (cn.offset = Vt / this.duration),
              ce.push(cn);
          });
          const Ge = E.size ? hn(E.values()) : [],
            pt = M.size ? hn(M.values()) : [];
          if (B) {
            const gt = ce[0],
              Vt = yt(gt);
            (gt.offset = 0), (Vt.offset = 1), (ce = [gt, Vt]);
          }
          return pe(this.element, ce, Ge, pt, this.duration, this.startTime, this.easing, !1);
        }
      }
      class dn extends Pt {
        constructor(E, M, B, ce, Ge, pt, gt = !1) {
          super(E, M, pt.delay),
            (this.keyframes = B),
            (this.preStyleProps = ce),
            (this.postStyleProps = Ge),
            (this._stretchStartingKeyframe = gt),
            (this.timings = { duration: pt.duration, delay: pt.delay, easing: pt.easing });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let E = this.keyframes,
            { delay: M, duration: B, easing: ce } = this.timings;
          if (this._stretchStartingKeyframe && M) {
            const Ge = [],
              pt = B + M,
              gt = M / pt,
              Vt = bt(E[0], !1);
            (Vt.offset = 0), Ge.push(Vt);
            const cn = bt(E[0], !1);
            (cn.offset = kn(gt)), Ge.push(cn);
            const Tn = E.length - 1;
            for (let zn = 1; zn <= Tn; zn++) {
              let ni = bt(E[zn], !1);
              (ni.offset = kn((M + ni.offset * B) / pt)), Ge.push(ni);
            }
            (B = pt), (M = 0), (ce = ''), (E = Ge);
          }
          return pe(this.element, E, this.preStyleProps, this.postStyleProps, B, M, ce, !0);
        }
      }
      function kn(oe, E = 3) {
        const M = Math.pow(10, E - 1);
        return Math.round(oe * M) / M;
      }
      class Ci {}
      class Rs extends Ci {
        normalizePropertyName(E, M) {
          return ae(E);
        }
        normalizeStyleValue(E, M, B, ce) {
          let Ge = '';
          const pt = B.toString().trim();
          if (Rr[M] && 0 !== B && '0' !== B)
            if ('number' == typeof B) Ge = 'px';
            else {
              const gt = B.match(/^[+-]?[\d\.]+([a-z]*)$/);
              gt && 0 == gt[1].length && ce.push(`Please provide a CSS unit value for ${E}:${B}`);
            }
          return pt + Ge;
        }
      }
      const Rr = (() =>
        (function br(oe) {
          const E = {};
          return oe.forEach((M) => (E[M] = !0)), E;
        })(
          'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
            ','
          )
        ))();
      function es(oe, E, M, B, ce, Ge, pt, gt, Vt, cn, Tn, zn, ni) {
        return {
          type: 0,
          element: oe,
          triggerName: E,
          isRemovalTransition: ce,
          fromState: M,
          fromStyles: Ge,
          toState: B,
          toStyles: pt,
          timelines: gt,
          queriedElements: Vt,
          preStyleProps: cn,
          postStyleProps: Tn,
          totalTime: zn,
          errors: ni,
        };
      }
      const Cr = {};
      class xn {
        constructor(E, M, B) {
          (this._triggerName = E), (this.ast = M), (this._stateStyles = B);
        }
        match(E, M, B, ce) {
          return (function pi(oe, E, M, B, ce) {
            return oe.some((Ge) => Ge(E, M, B, ce));
          })(this.ast.matchers, E, M, B, ce);
        }
        buildStyles(E, M, B) {
          const ce = this._stateStyles['*'],
            Ge = this._stateStyles[E],
            pt = ce ? ce.buildStyles(M, B) : {};
          return Ge ? Ge.buildStyles(M, B) : pt;
        }
        build(E, M, B, ce, Ge, pt, gt, Vt, cn, Tn) {
          const zn = [],
            ni = (this.ast.options && this.ast.options.params) || Cr,
            Xn = this.buildStyles(B, (gt && gt.params) || Cr, zn),
            si = (Vt && Vt.params) || Cr,
            vi = this.buildStyles(ce, si, zn),
            mr = new Set(),
            cr = new Map(),
            rs = new Map(),
            Er = 'void' === ce,
            Jo = { params: Object.assign(Object.assign({}, ni), si) },
            Yr = Tn ? [] : Ai(E, M, this.ast.animation, Ge, pt, Xn, vi, Jo, cn, zn);
          let Kr = 0;
          if (
            (Yr.forEach((Fo) => {
              Kr = Math.max(Fo.duration + Fo.delay, Kr);
            }),
            zn.length)
          )
            return es(M, this._triggerName, B, ce, Er, Xn, vi, [], [], cr, rs, Kr, zn);
          Yr.forEach((Fo) => {
            const bs = Fo.element,
              Lo = fe(cr, bs, {});
            Fo.preStyleProps.forEach((qs) => (Lo[qs] = !0));
            const va = fe(rs, bs, {});
            Fo.postStyleProps.forEach((qs) => (va[qs] = !0)), bs !== M && mr.add(bs);
          });
          const hs = hn(mr.values());
          return es(M, this._triggerName, B, ce, Er, Xn, vi, Yr, hs, cr, rs, Kr);
        }
      }
      class J {
        constructor(E, M, B) {
          (this.styles = E), (this.defaultParams = M), (this.normalizer = B);
        }
        buildStyles(E, M) {
          const B = {},
            ce = yt(this.defaultParams);
          return (
            Object.keys(E).forEach((Ge) => {
              const pt = E[Ge];
              null != pt && (ce[Ge] = pt);
            }),
            this.styles.styles.forEach((Ge) => {
              if ('string' != typeof Ge) {
                const pt = Ge;
                Object.keys(pt).forEach((gt) => {
                  let Vt = pt[gt];
                  Vt.length > 1 && (Vt = Zt(Vt, ce, M));
                  const cn = this.normalizer.normalizePropertyName(gt, M);
                  (Vt = this.normalizer.normalizeStyleValue(gt, cn, Vt, M)), (B[cn] = Vt);
                });
              }
            }),
            B
          );
        }
      }
      class Ht {
        constructor(E, M, B) {
          (this.name = E),
            (this.ast = M),
            (this._normalizer = B),
            (this.transitionFactories = []),
            (this.states = {}),
            M.states.forEach((ce) => {
              this.states[ce.name] = new J(ce.style, (ce.options && ce.options.params) || {}, B);
            }),
            Wn(this.states, 'true', '1'),
            Wn(this.states, 'false', '0'),
            M.transitions.forEach((ce) => {
              this.transitionFactories.push(new xn(E, ce, this.states));
            }),
            (this.fallbackTransition = (function fn(oe, E, M) {
              return new xn(
                oe,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(pt, gt) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                E
              );
            })(E, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(E, M, B, ce) {
          return this.transitionFactories.find((pt) => pt.match(E, M, B, ce)) || null;
        }
        matchStyles(E, M, B) {
          return this.fallbackTransition.buildStyles(E, M, B);
        }
      }
      function Wn(oe, E, M) {
        oe.hasOwnProperty(E) ? oe.hasOwnProperty(M) || (oe[M] = oe[E]) : oe.hasOwnProperty(M) && (oe[E] = oe[M]);
      }
      const Nn = new _e();
      class Nr {
        constructor(E, M, B) {
          (this.bodyNode = E),
            (this._driver = M),
            (this._normalizer = B),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(E, M) {
          const B = [],
            ce = Hn(this._driver, M, B);
          if (B.length) throw new Error(`Unable to build the animation due to the following errors: ${B.join('\n')}`);
          this._animations[E] = ce;
        }
        _buildPlayer(E, M, B) {
          const ce = E.element,
            Ge = He(0, this._normalizer, 0, E.keyframes, M, B);
          return this._driver.animate(ce, Ge, E.duration, E.delay, E.easing, [], !0);
        }
        create(E, M, B = {}) {
          const ce = [],
            Ge = this._animations[E];
          let pt;
          const gt = new Map();
          if (
            (Ge
              ? ((pt = Ai(this._driver, M, Ge, qe, Ve, {}, {}, B, Nn, ce)),
                pt.forEach((Tn) => {
                  const zn = fe(gt, Tn.element, {});
                  Tn.postStyleProps.forEach((ni) => (zn[ni] = null));
                }))
              : (ce.push("The requested animation doesn't exist or has already been destroyed"), (pt = [])),
            ce.length)
          )
            throw new Error(`Unable to create the animation due to the following errors: ${ce.join('\n')}`);
          gt.forEach((Tn, zn) => {
            Object.keys(Tn).forEach((ni) => {
              Tn[ni] = this._driver.computeStyle(zn, ni, d.l3);
            });
          });
          const cn = Re(
            pt.map((Tn) => {
              const zn = gt.get(Tn.element);
              return this._buildPlayer(Tn, {}, zn);
            })
          );
          return (this._playersById[E] = cn), cn.onDestroy(() => this.destroy(E)), this.players.push(cn), cn;
        }
        destroy(E) {
          const M = this._getPlayer(E);
          M.destroy(), delete this._playersById[E];
          const B = this.players.indexOf(M);
          B >= 0 && this.players.splice(B, 1);
        }
        _getPlayer(E) {
          const M = this._playersById[E];
          if (!M) throw new Error(`Unable to find the timeline player referenced by ${E}`);
          return M;
        }
        listen(E, M, B, ce) {
          const Ge = ee(M, '', '', '');
          return Fe(this._getPlayer(E), B, Ge, ce), () => {};
        }
        command(E, M, B, ce) {
          if ('register' == B) return void this.register(E, ce[0]);
          if ('create' == B) return void this.create(E, M, ce[0] || {});
          const Ge = this._getPlayer(E);
          switch (B) {
            case 'play':
              Ge.play();
              break;
            case 'pause':
              Ge.pause();
              break;
            case 'reset':
              Ge.reset();
              break;
            case 'restart':
              Ge.restart();
              break;
            case 'finish':
              Ge.finish();
              break;
            case 'init':
              Ge.init();
              break;
            case 'setPosition':
              Ge.setPosition(parseFloat(ce[0]));
              break;
            case 'destroy':
              this.destroy(E);
          }
        }
      }
      const qi = 'ng-animate-queued',
        ks = 'ng-animate-disabled',
        lr = [],
        ts = { namespaceId: '', setForRemoval: !1, setForMove: !1, hasAnimation: !1, removedBeforeQueried: !1 },
        Os = { namespaceId: '', setForMove: !1, setForRemoval: !1, hasAnimation: !1, removedBeforeQueried: !0 },
        fi = '__ng_removed';
      class Ti {
        constructor(E, M = '') {
          this.namespaceId = M;
          const B = E && E.hasOwnProperty('value');
          if (
            ((this.value = (function ms(oe) {
              return null != oe ? oe : null;
            })(B ? E.value : E)),
            B)
          ) {
            const Ge = yt(E);
            delete Ge.value, (this.options = Ge);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(E) {
          const M = E.params;
          if (M) {
            const B = this.options.params;
            Object.keys(M).forEach((ce) => {
              null == B[ce] && (B[ce] = M[ce]);
            });
          }
        }
      }
      const Vr = 'void',
        Jt = new Ti(Vr);
      class ji {
        constructor(E, M, B) {
          (this.id = E),
            (this.hostElement = M),
            (this._engine = B),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + E),
            Ur(M, this._hostClassName);
        }
        listen(E, M, B, ce) {
          if (!this._triggers.hasOwnProperty(M))
            throw new Error(
              `Unable to listen on the animation trigger event "${B}" because the animation trigger "${M}" doesn't exist!`
            );
          if (null == B || 0 == B.length)
            throw new Error(
              `Unable to listen on the animation trigger "${M}" because the provided event is undefined!`
            );
          if (
            !(function Bn(oe) {
              return 'start' == oe || 'done' == oe;
            })(B)
          )
            throw new Error(
              `The provided animation trigger event "${B}" for the animation trigger "${M}" is not supported!`
            );
          const Ge = fe(this._elementListeners, E, []),
            pt = { name: M, phase: B, callback: ce };
          Ge.push(pt);
          const gt = fe(this._engine.statesByElement, E, {});
          return (
            gt.hasOwnProperty(M) || (Ur(E, Ft), Ur(E, Ft + '-' + M), (gt[M] = Jt)),
            () => {
              this._engine.afterFlush(() => {
                const Vt = Ge.indexOf(pt);
                Vt >= 0 && Ge.splice(Vt, 1), this._triggers[M] || delete gt[M];
              });
            }
          );
        }
        register(E, M) {
          return !this._triggers[E] && ((this._triggers[E] = M), !0);
        }
        _getTrigger(E) {
          const M = this._triggers[E];
          if (!M) throw new Error(`The provided animation trigger "${E}" has not been registered!`);
          return M;
        }
        trigger(E, M, B, ce = !0) {
          const Ge = this._getTrigger(M),
            pt = new kr(this.id, M, E);
          let gt = this._engine.statesByElement.get(E);
          gt || (Ur(E, Ft), Ur(E, Ft + '-' + M), this._engine.statesByElement.set(E, (gt = {})));
          let Vt = gt[M];
          const cn = new Ti(B, this.id);
          if (
            (!(B && B.hasOwnProperty('value')) && Vt && cn.absorbOptions(Vt.options),
            (gt[M] = cn),
            Vt || (Vt = Jt),
            cn.value !== Vr && Vt.value === cn.value)
          ) {
            if (
              !(function Oa(oe, E) {
                const M = Object.keys(oe),
                  B = Object.keys(E);
                if (M.length != B.length) return !1;
                for (let ce = 0; ce < M.length; ce++) {
                  const Ge = M[ce];
                  if (!E.hasOwnProperty(Ge) || oe[Ge] !== E[Ge]) return !1;
                }
                return !0;
              })(Vt.params, cn.params)
            ) {
              const si = [],
                vi = Ge.matchStyles(Vt.value, Vt.params, si),
                mr = Ge.matchStyles(cn.value, cn.params, si);
              si.length
                ? this._engine.reportError(si)
                : this._engine.afterFlush(() => {
                    en(E, vi), Nt(E, mr);
                  });
            }
            return;
          }
          const ni = fe(this._engine.playersByElement, E, []);
          ni.forEach((si) => {
            si.namespaceId == this.id && si.triggerName == M && si.queued && si.destroy();
          });
          let mi = Ge.matchTransition(Vt.value, cn.value, E, cn.params),
            Xn = !1;
          if (!mi) {
            if (!ce) return;
            (mi = Ge.fallbackTransition), (Xn = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: E,
              triggerName: M,
              transition: mi,
              fromState: Vt,
              toState: cn,
              player: pt,
              isFallbackTransition: Xn,
            }),
            Xn ||
              (Ur(E, qi),
              pt.onStart(() => {
                Ps(E, qi);
              })),
            pt.onDone(() => {
              let si = this.players.indexOf(pt);
              si >= 0 && this.players.splice(si, 1);
              const vi = this._engine.playersByElement.get(E);
              if (vi) {
                let mr = vi.indexOf(pt);
                mr >= 0 && vi.splice(mr, 1);
              }
            }),
            this.players.push(pt),
            ni.push(pt),
            pt
          );
        }
        deregister(E) {
          delete this._triggers[E],
            this._engine.statesByElement.forEach((M, B) => {
              delete M[E];
            }),
            this._elementListeners.forEach((M, B) => {
              this._elementListeners.set(
                B,
                M.filter((ce) => ce.name != E)
              );
            });
        }
        clearElementCache(E) {
          this._engine.statesByElement.delete(E), this._elementListeners.delete(E);
          const M = this._engine.playersByElement.get(E);
          M && (M.forEach((B) => B.destroy()), this._engine.playersByElement.delete(E));
        }
        _signalRemovalForInnerTriggers(E, M) {
          const B = this._engine.driver.query(E, kt, !0);
          B.forEach((ce) => {
            if (ce[fi]) return;
            const Ge = this._engine.fetchNamespacesByElement(ce);
            Ge.size ? Ge.forEach((pt) => pt.triggerLeaveAnimation(ce, M, !1, !0)) : this.clearElementCache(ce);
          }),
            this._engine.afterFlushAnimationsDone(() => B.forEach((ce) => this.clearElementCache(ce)));
        }
        triggerLeaveAnimation(E, M, B, ce) {
          const Ge = this._engine.statesByElement.get(E),
            pt = new Map();
          if (Ge) {
            const gt = [];
            if (
              (Object.keys(Ge).forEach((Vt) => {
                if ((pt.set(Vt, Ge[Vt].value), this._triggers[Vt])) {
                  const cn = this.trigger(E, Vt, Vr, ce);
                  cn && gt.push(cn);
                }
              }),
              gt.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, E, !0, M, pt),
                B && Re(gt).onDone(() => this._engine.processLeaveNode(E)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(E) {
          const M = this._elementListeners.get(E),
            B = this._engine.statesByElement.get(E);
          if (M && B) {
            const ce = new Set();
            M.forEach((Ge) => {
              const pt = Ge.name;
              if (ce.has(pt)) return;
              ce.add(pt);
              const Vt = this._triggers[pt].fallbackTransition,
                cn = B[pt] || Jt,
                Tn = new Ti(Vr),
                zn = new kr(this.id, pt, E);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: E,
                  triggerName: pt,
                  transition: Vt,
                  fromState: cn,
                  toState: Tn,
                  player: zn,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(E, M) {
          const B = this._engine;
          if ((E.childElementCount && this._signalRemovalForInnerTriggers(E, M), this.triggerLeaveAnimation(E, M, !0)))
            return;
          let ce = !1;
          if (B.totalAnimations) {
            const Ge = B.players.length ? B.playersByQueriedElement.get(E) : [];
            if (Ge && Ge.length) ce = !0;
            else {
              let pt = E;
              for (; (pt = pt.parentNode); )
                if (B.statesByElement.get(pt)) {
                  ce = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(E), ce)) B.markElementAsRemoved(this.id, E, !1, M);
          else {
            const Ge = E[fi];
            (!Ge || Ge === ts) &&
              (B.afterFlush(() => this.clearElementCache(E)), B.destroyInnerAnimations(E), B._onRemovalComplete(E, M));
          }
        }
        insertNode(E, M) {
          Ur(E, this._hostClassName);
        }
        drainQueuedTransitions(E) {
          const M = [];
          return (
            this._queue.forEach((B) => {
              const ce = B.player;
              if (ce.destroyed) return;
              const Ge = B.element,
                pt = this._elementListeners.get(Ge);
              pt &&
                pt.forEach((gt) => {
                  if (gt.name == B.triggerName) {
                    const Vt = ee(Ge, B.triggerName, B.fromState.value, B.toState.value);
                    (Vt._data = E), Fe(B.player, gt.phase, Vt, gt.callback);
                  }
                }),
                ce.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      ce.destroy();
                    })
                  : M.push(B);
            }),
            (this._queue = []),
            M.sort((B, ce) => {
              const Ge = B.transition.ast.depCount,
                pt = ce.transition.ast.depCount;
              return 0 == Ge || 0 == pt ? Ge - pt : this._engine.driver.containsElement(B.element, ce.element) ? 1 : -1;
            })
          );
        }
        destroy(E) {
          this.players.forEach((M) => M.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, E);
        }
        elementContainsData(E) {
          let M = !1;
          return this._elementListeners.has(E) && (M = !0), (M = !!this._queue.find((B) => B.element === E) || M), M;
        }
      }
      class tr {
        constructor(E, M, B) {
          (this.bodyNode = E),
            (this.driver = M),
            (this._normalizer = B),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (ce, Ge) => {});
        }
        _onRemovalComplete(E, M) {
          this.onRemovalComplete(E, M);
        }
        get queuedPlayers() {
          const E = [];
          return (
            this._namespaceList.forEach((M) => {
              M.players.forEach((B) => {
                B.queued && E.push(B);
              });
            }),
            E
          );
        }
        createNamespace(E, M) {
          const B = new ji(E, M, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, M)
              ? this._balanceNamespaceList(B, M)
              : (this.newHostElements.set(M, B), this.collectEnterElement(M)),
            (this._namespaceLookup[E] = B)
          );
        }
        _balanceNamespaceList(E, M) {
          const B = this._namespaceList.length - 1;
          if (B >= 0) {
            let ce = !1;
            for (let Ge = B; Ge >= 0; Ge--)
              if (this.driver.containsElement(this._namespaceList[Ge].hostElement, M)) {
                this._namespaceList.splice(Ge + 1, 0, E), (ce = !0);
                break;
              }
            ce || this._namespaceList.splice(0, 0, E);
          } else this._namespaceList.push(E);
          return this.namespacesByHostElement.set(M, E), E;
        }
        register(E, M) {
          let B = this._namespaceLookup[E];
          return B || (B = this.createNamespace(E, M)), B;
        }
        registerTrigger(E, M, B) {
          let ce = this._namespaceLookup[E];
          ce && ce.register(M, B) && this.totalAnimations++;
        }
        destroy(E, M) {
          if (!E) return;
          const B = this._fetchNamespace(E);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(B.hostElement), delete this._namespaceLookup[E];
            const ce = this._namespaceList.indexOf(B);
            ce >= 0 && this._namespaceList.splice(ce, 1);
          }),
            this.afterFlushAnimationsDone(() => B.destroy(M));
        }
        _fetchNamespace(E) {
          return this._namespaceLookup[E];
        }
        fetchNamespacesByElement(E) {
          const M = new Set(),
            B = this.statesByElement.get(E);
          if (B) {
            const ce = Object.keys(B);
            for (let Ge = 0; Ge < ce.length; Ge++) {
              const pt = B[ce[Ge]].namespaceId;
              if (pt) {
                const gt = this._fetchNamespace(pt);
                gt && M.add(gt);
              }
            }
          }
          return M;
        }
        trigger(E, M, B, ce) {
          if (nr(M)) {
            const Ge = this._fetchNamespace(E);
            if (Ge) return Ge.trigger(M, B, ce), !0;
          }
          return !1;
        }
        insertNode(E, M, B, ce) {
          if (!nr(M)) return;
          const Ge = M[fi];
          if (Ge && Ge.setForRemoval) {
            (Ge.setForRemoval = !1), (Ge.setForMove = !0);
            const pt = this.collectedLeaveElements.indexOf(M);
            pt >= 0 && this.collectedLeaveElements.splice(pt, 1);
          }
          if (E) {
            const pt = this._fetchNamespace(E);
            pt && pt.insertNode(M, B);
          }
          ce && this.collectEnterElement(M);
        }
        collectEnterElement(E) {
          this.collectedEnterElements.push(E);
        }
        markElementAsDisabled(E, M) {
          M
            ? this.disabledNodes.has(E) || (this.disabledNodes.add(E), Ur(E, ks))
            : this.disabledNodes.has(E) && (this.disabledNodes.delete(E), Ps(E, ks));
        }
        removeNode(E, M, B, ce) {
          if (nr(M)) {
            const Ge = E ? this._fetchNamespace(E) : null;
            if ((Ge ? Ge.removeNode(M, ce) : this.markElementAsRemoved(E, M, !1, ce), B)) {
              const pt = this.namespacesByHostElement.get(M);
              pt && pt.id !== E && pt.removeNode(M, ce);
            }
          } else this._onRemovalComplete(M, ce);
        }
        markElementAsRemoved(E, M, B, ce, Ge) {
          this.collectedLeaveElements.push(M),
            (M[fi] = {
              namespaceId: E,
              setForRemoval: ce,
              hasAnimation: B,
              removedBeforeQueried: !1,
              previousTriggersValues: Ge,
            });
        }
        listen(E, M, B, ce, Ge) {
          return nr(M) ? this._fetchNamespace(E).listen(M, B, ce, Ge) : () => {};
        }
        _buildInstruction(E, M, B, ce, Ge) {
          return E.transition.build(
            this.driver,
            E.element,
            E.fromState.value,
            E.toState.value,
            B,
            ce,
            E.fromState.options,
            E.toState.options,
            M,
            Ge
          );
        }
        destroyInnerAnimations(E) {
          let M = this.driver.query(E, kt, !0);
          M.forEach((B) => this.destroyActiveAnimationsForElement(B)),
            0 != this.playersByQueriedElement.size &&
              ((M = this.driver.query(E, on, !0)), M.forEach((B) => this.finishActiveQueriedAnimationOnElement(B)));
        }
        destroyActiveAnimationsForElement(E) {
          const M = this.playersByElement.get(E);
          M &&
            M.forEach((B) => {
              B.queued ? (B.markedForDestroy = !0) : B.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(E) {
          const M = this.playersByQueriedElement.get(E);
          M && M.forEach((B) => B.finish());
        }
        whenRenderingDone() {
          return new Promise((E) => {
            if (this.players.length) return Re(this.players).onDone(() => E());
            E();
          });
        }
        processLeaveNode(E) {
          var M;
          const B = E[fi];
          if (B && B.setForRemoval) {
            if (((E[fi] = ts), B.namespaceId)) {
              this.destroyInnerAnimations(E);
              const ce = this._fetchNamespace(B.namespaceId);
              ce && ce.clearElementCache(E);
            }
            this._onRemovalComplete(E, B.setForRemoval);
          }
          (null === (M = E.classList) || void 0 === M ? void 0 : M.contains(ks)) && this.markElementAsDisabled(E, !1),
            this.driver.query(E, '.ng-animate-disabled', !0).forEach((ce) => {
              this.markElementAsDisabled(ce, !1);
            });
        }
        flush(E = -1) {
          let M = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((B, ce) => this._balanceNamespaceList(B, ce)),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let B = 0; B < this.collectedEnterElements.length; B++)
              Ur(this.collectedEnterElements[B], 'ng-star-inserted');
          if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
            const B = [];
            try {
              M = this._flushAnimations(B, E);
            } finally {
              for (let ce = 0; ce < B.length; ce++) B[ce]();
            }
          } else
            for (let B = 0; B < this.collectedLeaveElements.length; B++)
              this.processLeaveNode(this.collectedLeaveElements[B]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((B) => B()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const B = this._whenQuietFns;
            (this._whenQuietFns = []),
              M.length
                ? Re(M).onDone(() => {
                    B.forEach((ce) => ce());
                  })
                : B.forEach((ce) => ce());
          }
        }
        reportError(E) {
          throw new Error(
            `Unable to process animations due to the following failed trigger transitions\n ${E.join('\n')}`
          );
        }
        _flushAnimations(E, M) {
          const B = new _e(),
            ce = [],
            Ge = new Map(),
            pt = [],
            gt = new Map(),
            Vt = new Map(),
            cn = new Map(),
            Tn = new Set();
          this.disabledNodes.forEach((Vn) => {
            Tn.add(Vn);
            const li = this.driver.query(Vn, '.ng-animate-queued', !0);
            for (let oi = 0; oi < li.length; oi++) Tn.add(li[oi]);
          });
          const zn = this.bodyNode,
            ni = Array.from(this.statesByElement.keys()),
            mi = Li(ni, this.collectedEnterElements),
            Xn = new Map();
          let si = 0;
          mi.forEach((Vn, li) => {
            const oi = qe + si++;
            Xn.set(li, oi), Vn.forEach((gi) => Ur(gi, oi));
          });
          const vi = [],
            mr = new Set(),
            cr = new Set();
          for (let Vn = 0; Vn < this.collectedLeaveElements.length; Vn++) {
            const li = this.collectedLeaveElements[Vn],
              oi = li[fi];
            oi &&
              oi.setForRemoval &&
              (vi.push(li),
              mr.add(li),
              oi.hasAnimation
                ? this.driver.query(li, '.ng-star-inserted', !0).forEach((gi) => mr.add(gi))
                : cr.add(li));
          }
          const rs = new Map(),
            Er = Li(ni, Array.from(mr));
          Er.forEach((Vn, li) => {
            const oi = Ve + si++;
            rs.set(li, oi), Vn.forEach((gi) => Ur(gi, oi));
          }),
            E.push(() => {
              mi.forEach((Vn, li) => {
                const oi = Xn.get(li);
                Vn.forEach((gi) => Ps(gi, oi));
              }),
                Er.forEach((Vn, li) => {
                  const oi = rs.get(li);
                  Vn.forEach((gi) => Ps(gi, oi));
                }),
                vi.forEach((Vn) => {
                  this.processLeaveNode(Vn);
                });
            });
          const Jo = [],
            Yr = [];
          for (let Vn = this._namespaceList.length - 1; Vn >= 0; Vn--)
            this._namespaceList[Vn].drainQueuedTransitions(M).forEach((oi) => {
              const gi = oi.player,
                ir = oi.element;
              if ((Jo.push(gi), this.collectedEnterElements.length)) {
                const Gi = ir[fi];
                if (Gi && Gi.setForMove) {
                  if (Gi.previousTriggersValues && Gi.previousTriggersValues.has(oi.triggerName)) {
                    const Cs = Gi.previousTriggersValues.get(oi.triggerName),
                      qr = this.statesByElement.get(oi.element);
                    qr && qr[oi.triggerName] && (qr[oi.triggerName].value = Cs);
                  }
                  return void gi.destroy();
                }
              }
              const Ri = !zn || !this.driver.containsElement(zn, ir),
                fs = rs.get(ir),
                Mr = Xn.get(ir),
                Sr = this._buildInstruction(oi, B, Mr, fs, Ri);
              if (Sr.errors && Sr.errors.length) return void Yr.push(Sr);
              if (Ri)
                return (
                  gi.onStart(() => en(ir, Sr.fromStyles)), gi.onDestroy(() => Nt(ir, Sr.toStyles)), void ce.push(gi)
                );
              if (oi.isFallbackTransition)
                return (
                  gi.onStart(() => en(ir, Sr.fromStyles)), gi.onDestroy(() => Nt(ir, Sr.toStyles)), void ce.push(gi)
                );
              const ba = [];
              Sr.timelines.forEach((Gi) => {
                (Gi.stretchStartingKeyframe = !0), this.disabledNodes.has(Gi.element) || ba.push(Gi);
              }),
                (Sr.timelines = ba),
                B.append(ir, Sr.timelines),
                pt.push({ instruction: Sr, player: gi, element: ir }),
                Sr.queriedElements.forEach((Gi) => fe(gt, Gi, []).push(gi)),
                Sr.preStyleProps.forEach((Gi, Cs) => {
                  const qr = Object.keys(Gi);
                  if (qr.length) {
                    let ws = Vt.get(Cs);
                    ws || Vt.set(Cs, (ws = new Set())), qr.forEach((ao) => ws.add(ao));
                  }
                }),
                Sr.postStyleProps.forEach((Gi, Cs) => {
                  const qr = Object.keys(Gi);
                  let ws = cn.get(Cs);
                  ws || cn.set(Cs, (ws = new Set())), qr.forEach((ao) => ws.add(ao));
                });
            });
          if (Yr.length) {
            const Vn = [];
            Yr.forEach((li) => {
              Vn.push(`@${li.triggerName} has failed due to:\n`), li.errors.forEach((oi) => Vn.push(`- ${oi}\n`));
            }),
              Jo.forEach((li) => li.destroy()),
              this.reportError(Vn);
          }
          const Kr = new Map(),
            hs = new Map();
          pt.forEach((Vn) => {
            const li = Vn.element;
            B.has(li) && (hs.set(li, li), this._beforeAnimationBuild(Vn.player.namespaceId, Vn.instruction, Kr));
          }),
            ce.forEach((Vn) => {
              const li = Vn.element;
              this._getPreviousPlayers(li, !1, Vn.namespaceId, Vn.triggerName, null).forEach((gi) => {
                fe(Kr, li, []).push(gi), gi.destroy();
              });
            });
          const Fo = vi.filter((Vn) => Fs(Vn, Vt, cn)),
            bs = new Map();
          ei(bs, this.driver, cr, cn, d.l3).forEach((Vn) => {
            Fs(Vn, Vt, cn) && Fo.push(Vn);
          });
          const va = new Map();
          mi.forEach((Vn, li) => {
            ei(va, this.driver, new Set(Vn), Vt, d.k1);
          }),
            Fo.forEach((Vn) => {
              const li = bs.get(Vn),
                oi = va.get(Vn);
              bs.set(Vn, Object.assign(Object.assign({}, li), oi));
            });
          const qs = [],
            qo = [],
            ea = {};
          pt.forEach((Vn) => {
            const { element: li, player: oi, instruction: gi } = Vn;
            if (B.has(li)) {
              if (Tn.has(li))
                return (
                  oi.onDestroy(() => Nt(li, gi.toStyles)),
                  (oi.disabled = !0),
                  oi.overrideTotalTime(gi.totalTime),
                  void ce.push(oi)
                );
              let ir = ea;
              if (hs.size > 1) {
                let fs = li;
                const Mr = [];
                for (; (fs = fs.parentNode); ) {
                  const Sr = hs.get(fs);
                  if (Sr) {
                    ir = Sr;
                    break;
                  }
                  Mr.push(fs);
                }
                Mr.forEach((Sr) => hs.set(Sr, ir));
              }
              const Ri = this._buildAnimation(oi.namespaceId, gi, Kr, Ge, va, bs);
              if ((oi.setRealPlayer(Ri), ir === ea)) qs.push(oi);
              else {
                const fs = this.playersByElement.get(ir);
                fs && fs.length && (oi.parentPlayer = Re(fs)), ce.push(oi);
              }
            } else
              en(li, gi.fromStyles), oi.onDestroy(() => Nt(li, gi.toStyles)), qo.push(oi), Tn.has(li) && ce.push(oi);
          }),
            qo.forEach((Vn) => {
              const li = Ge.get(Vn.element);
              if (li && li.length) {
                const oi = Re(li);
                Vn.setRealPlayer(oi);
              }
            }),
            ce.forEach((Vn) => {
              Vn.parentPlayer ? Vn.syncPlayerEvents(Vn.parentPlayer) : Vn.destroy();
            });
          for (let Vn = 0; Vn < vi.length; Vn++) {
            const li = vi[Vn],
              oi = li[fi];
            if ((Ps(li, Ve), oi && oi.hasAnimation)) continue;
            let gi = [];
            if (gt.size) {
              let Ri = gt.get(li);
              Ri && Ri.length && gi.push(...Ri);
              let fs = this.driver.query(li, on, !0);
              for (let Mr = 0; Mr < fs.length; Mr++) {
                let Sr = gt.get(fs[Mr]);
                Sr && Sr.length && gi.push(...Sr);
              }
            }
            const ir = gi.filter((Ri) => !Ri.destroyed);
            ir.length ? ls(this, li, ir) : this.processLeaveNode(li);
          }
          return (
            (vi.length = 0),
            qs.forEach((Vn) => {
              this.players.push(Vn),
                Vn.onDone(() => {
                  Vn.destroy();
                  const li = this.players.indexOf(Vn);
                  this.players.splice(li, 1);
                }),
                Vn.play();
            }),
            qs
          );
        }
        elementContainsData(E, M) {
          let B = !1;
          const ce = M[fi];
          return (
            ce && ce.setForRemoval && (B = !0),
            this.playersByElement.has(M) && (B = !0),
            this.playersByQueriedElement.has(M) && (B = !0),
            this.statesByElement.has(M) && (B = !0),
            this._fetchNamespace(E).elementContainsData(M) || B
          );
        }
        afterFlush(E) {
          this._flushFns.push(E);
        }
        afterFlushAnimationsDone(E) {
          this._whenQuietFns.push(E);
        }
        _getPreviousPlayers(E, M, B, ce, Ge) {
          let pt = [];
          if (M) {
            const gt = this.playersByQueriedElement.get(E);
            gt && (pt = gt);
          } else {
            const gt = this.playersByElement.get(E);
            if (gt) {
              const Vt = !Ge || Ge == Vr;
              gt.forEach((cn) => {
                cn.queued || (!Vt && cn.triggerName != ce) || pt.push(cn);
              });
            }
          }
          return (
            (B || ce) && (pt = pt.filter((gt) => !((B && B != gt.namespaceId) || (ce && ce != gt.triggerName)))), pt
          );
        }
        _beforeAnimationBuild(E, M, B) {
          const Ge = M.element,
            pt = M.isRemovalTransition ? void 0 : E,
            gt = M.isRemovalTransition ? void 0 : M.triggerName;
          for (const Vt of M.timelines) {
            const cn = Vt.element,
              Tn = cn !== Ge,
              zn = fe(B, cn, []);
            this._getPreviousPlayers(cn, Tn, pt, gt, M.toState).forEach((mi) => {
              const Xn = mi.getRealPlayer();
              Xn.beforeDestroy && Xn.beforeDestroy(), mi.destroy(), zn.push(mi);
            });
          }
          en(Ge, M.fromStyles);
        }
        _buildAnimation(E, M, B, ce, Ge, pt) {
          const gt = M.triggerName,
            Vt = M.element,
            cn = [],
            Tn = new Set(),
            zn = new Set(),
            ni = M.timelines.map((Xn) => {
              const si = Xn.element;
              Tn.add(si);
              const vi = si[fi];
              if (vi && vi.removedBeforeQueried) return new d.ZN(Xn.duration, Xn.delay);
              const mr = si !== Vt,
                cr = (function Wo(oe) {
                  const E = [];
                  return Oo(oe, E), E;
                })((B.get(si) || lr).map((Kr) => Kr.getRealPlayer())).filter((Kr) => !!Kr.element && Kr.element === si),
                rs = Ge.get(si),
                Er = pt.get(si),
                Jo = He(0, this._normalizer, 0, Xn.keyframes, rs, Er),
                Yr = this._buildPlayer(Xn, Jo, cr);
              if ((Xn.subTimeline && ce && zn.add(si), mr)) {
                const Kr = new kr(E, gt, si);
                Kr.setRealPlayer(Yr), cn.push(Kr);
              }
              return Yr;
            });
          cn.forEach((Xn) => {
            fe(this.playersByQueriedElement, Xn.element, []).push(Xn),
              Xn.onDone(() =>
                (function je(oe, E, M) {
                  let B;
                  if (oe instanceof Map) {
                    if (((B = oe.get(E)), B)) {
                      if (B.length) {
                        const ce = B.indexOf(M);
                        B.splice(ce, 1);
                      }
                      0 == B.length && oe.delete(E);
                    }
                  } else if (((B = oe[E]), B)) {
                    if (B.length) {
                      const ce = B.indexOf(M);
                      B.splice(ce, 1);
                    }
                    0 == B.length && delete oe[E];
                  }
                  return B;
                })(this.playersByQueriedElement, Xn.element, Xn)
              );
          }),
            Tn.forEach((Xn) => Ur(Xn, St));
          const mi = Re(ni);
          return (
            mi.onDestroy(() => {
              Tn.forEach((Xn) => Ps(Xn, St)), Nt(Vt, M.toStyles);
            }),
            zn.forEach((Xn) => {
              fe(ce, Xn, []).push(mi);
            }),
            mi
          );
        }
        _buildPlayer(E, M, B) {
          return M.length > 0
            ? this.driver.animate(E.element, M, E.duration, E.delay, E.easing, B)
            : new d.ZN(E.duration, E.delay);
        }
      }
      class kr {
        constructor(E, M, B) {
          (this.namespaceId = E),
            (this.triggerName = M),
            (this.element = B),
            (this._player = new d.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(E) {
          this._containsRealPlayer ||
            ((this._player = E),
            Object.keys(this._queuedCallbacks).forEach((M) => {
              this._queuedCallbacks[M].forEach((B) => Fe(E, M, void 0, B));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(E.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(E) {
          this.totalTime = E;
        }
        syncPlayerEvents(E) {
          const M = this._player;
          M.triggerCallback && E.onStart(() => M.triggerCallback('start')),
            E.onDone(() => this.finish()),
            E.onDestroy(() => this.destroy());
        }
        _queueEvent(E, M) {
          fe(this._queuedCallbacks, E, []).push(M);
        }
        onDone(E) {
          this.queued && this._queueEvent('done', E), this._player.onDone(E);
        }
        onStart(E) {
          this.queued && this._queueEvent('start', E), this._player.onStart(E);
        }
        onDestroy(E) {
          this.queued && this._queueEvent('destroy', E), this._player.onDestroy(E);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(E) {
          this.queued || this._player.setPosition(E);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(E) {
          const M = this._player;
          M.triggerCallback && M.triggerCallback(E);
        }
      }
      function nr(oe) {
        return oe && 1 === oe.nodeType;
      }
      function ko(oe, E) {
        const M = oe.style.display;
        return (oe.style.display = null != E ? E : 'none'), M;
      }
      function ei(oe, E, M, B, ce) {
        const Ge = [];
        M.forEach((Vt) => Ge.push(ko(Vt)));
        const pt = [];
        B.forEach((Vt, cn) => {
          const Tn = {};
          Vt.forEach((zn) => {
            const ni = (Tn[zn] = E.computeStyle(cn, zn, ce));
            (!ni || 0 == ni.length) && ((cn[fi] = Os), pt.push(cn));
          }),
            oe.set(cn, Tn);
        });
        let gt = 0;
        return M.forEach((Vt) => ko(Vt, Ge[gt++])), pt;
      }
      function Li(oe, E) {
        const M = new Map();
        if ((oe.forEach((gt) => M.set(gt, [])), 0 == E.length)) return M;
        const ce = new Set(E),
          Ge = new Map();
        function pt(gt) {
          if (!gt) return 1;
          let Vt = Ge.get(gt);
          if (Vt) return Vt;
          const cn = gt.parentNode;
          return (Vt = M.has(cn) ? cn : ce.has(cn) ? 1 : pt(cn)), Ge.set(gt, Vt), Vt;
        }
        return (
          E.forEach((gt) => {
            const Vt = pt(gt);
            1 !== Vt && M.get(Vt).push(gt);
          }),
          M
        );
      }
      function Ur(oe, E) {
        var M;
        null === (M = oe.classList) || void 0 === M || M.add(E);
      }
      function Ps(oe, E) {
        var M;
        null === (M = oe.classList) || void 0 === M || M.remove(E);
      }
      function ls(oe, E, M) {
        Re(M).onDone(() => oe.processLeaveNode(E));
      }
      function Oo(oe, E) {
        for (let M = 0; M < oe.length; M++) {
          const B = oe[M];
          B instanceof d.ZE ? Oo(B.players, E) : E.push(B);
        }
      }
      function Fs(oe, E, M) {
        const B = M.get(oe);
        if (!B) return !1;
        let ce = E.get(oe);
        return ce ? B.forEach((Ge) => ce.add(Ge)) : E.set(oe, B), M.delete(oe), !0;
      }
      class Hi {
        constructor(E, M, B) {
          (this.bodyNode = E),
            (this._driver = M),
            (this._normalizer = B),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (ce, Ge) => {}),
            (this._transitionEngine = new tr(E, M, B)),
            (this._timelineEngine = new Nr(E, M, B)),
            (this._transitionEngine.onRemovalComplete = (ce, Ge) => this.onRemovalComplete(ce, Ge));
        }
        registerTrigger(E, M, B, ce, Ge) {
          const pt = E + '-' + ce;
          let gt = this._triggerCache[pt];
          if (!gt) {
            const Vt = [],
              cn = Hn(this._driver, Ge, Vt);
            if (Vt.length)
              throw new Error(
                `The animation trigger "${ce}" has failed to build due to the following errors:\n - ${Vt.join('\n - ')}`
              );
            (gt = (function Kt(oe, E, M) {
              return new Ht(oe, E, M);
            })(ce, cn, this._normalizer)),
              (this._triggerCache[pt] = gt);
          }
          this._transitionEngine.registerTrigger(M, ce, gt);
        }
        register(E, M) {
          this._transitionEngine.register(E, M);
        }
        destroy(E, M) {
          this._transitionEngine.destroy(E, M);
        }
        onInsert(E, M, B, ce) {
          this._transitionEngine.insertNode(E, M, B, ce);
        }
        onRemove(E, M, B, ce) {
          this._transitionEngine.removeNode(E, M, ce || !1, B);
        }
        disableAnimations(E, M) {
          this._transitionEngine.markElementAsDisabled(E, M);
        }
        process(E, M, B, ce) {
          if ('@' == B.charAt(0)) {
            const [Ge, pt] = ue(B);
            this._timelineEngine.command(Ge, M, pt, ce);
          } else this._transitionEngine.trigger(E, M, B, ce);
        }
        listen(E, M, B, ce, Ge) {
          if ('@' == B.charAt(0)) {
            const [pt, gt] = ue(B);
            return this._timelineEngine.listen(pt, M, gt, Ge);
          }
          return this._transitionEngine.listen(E, M, B, ce, Ge);
        }
        flush(E = -1) {
          this._transitionEngine.flush(E);
        }
        get players() {
          return this._transitionEngine.players.concat(this._timelineEngine.players);
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function Ws(oe, E) {
        let M = null,
          B = null;
        return (
          Array.isArray(E) && E.length ? ((M = Ls(E[0])), E.length > 1 && (B = Ls(E[E.length - 1]))) : E && (M = Ls(E)),
          M || B ? new jr(oe, M, B) : null
        );
      }
      let jr = (() => {
        class oe {
          constructor(M, B, ce) {
            (this._element = M), (this._startStyles = B), (this._endStyles = ce), (this._state = 0);
            let Ge = oe.initialStylesByElement.get(M);
            Ge || oe.initialStylesByElement.set(M, (Ge = {})), (this._initialStyles = Ge);
          }
          start() {
            this._state < 1 &&
              (this._startStyles && Nt(this._element, this._startStyles, this._initialStyles), (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Nt(this._element, this._initialStyles),
                this._endStyles && (Nt(this._element, this._endStyles), (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (oe.initialStylesByElement.delete(this._element),
                this._startStyles && (en(this._element, this._startStyles), (this._endStyles = null)),
                this._endStyles && (en(this._element, this._endStyles), (this._endStyles = null)),
                Nt(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (oe.initialStylesByElement = new WeakMap()), oe;
      })();
      function Ls(oe) {
        let E = null;
        const M = Object.keys(oe);
        for (let B = 0; B < M.length; B++) {
          const ce = M[B];
          ga(ce) && ((E = E || {}), (E[ce] = oe[ce]));
        }
        return E;
      }
      function ga(oe) {
        return 'display' === oe || 'position' === oe;
      }
      const Ns = 'animation',
        _a = 'animationend';
      class al {
        constructor(E, M, B, ce, Ge, pt, gt) {
          (this._element = E),
            (this._name = M),
            (this._duration = B),
            (this._delay = ce),
            (this._easing = Ge),
            (this._fillMode = pt),
            (this._onDoneFn = gt),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (Vt) => this._handleCallback(Vt));
        }
        apply() {
          (function ys(oe, E) {
            const M = Yo(oe, '').trim();
            let B = 0;
            M.length &&
              ((B =
                (function Ys(oe, E) {
                  let M = 0;
                  for (let B = 0; B < oe.length; B++) oe.charAt(B) === E && M++;
                  return M;
                })(M, ',') + 1),
              (E = `${M}, ${E}`)),
              vs(oe, '', E);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            wr(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          _s(this._element, this._name, 'paused');
        }
        resume() {
          _s(this._element, this._name, 'running');
        }
        setPosition(E) {
          const M = Bi(this._element, this._name);
          (this._position = E * this._duration), vs(this._element, 'Delay', `-${this._position}ms`, M);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(E) {
          const M = E._ngTestManualTimestamp || Date.now(),
            B = 1e3 * parseFloat(E.elapsedTime.toFixed(3));
          E.animationName == this._name &&
            Math.max(M - this._startTime, 0) >= this._delay &&
            B >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished || ((this._finished = !0), this._onDoneFn(), wr(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function cs(oe, E) {
              const B = Yo(oe, '').split(','),
                ce = ns(B, E);
              ce >= 0 && (B.splice(ce, 1), vs(oe, '', B.join(',')));
            })(this._element, this._name));
        }
      }
      function _s(oe, E, M) {
        vs(oe, 'PlayState', M, Bi(oe, E));
      }
      function Bi(oe, E) {
        const M = Yo(oe, '');
        return M.indexOf(',') > 0 ? ns(M.split(','), E) : ns([M], E);
      }
      function ns(oe, E) {
        for (let M = 0; M < oe.length; M++) if (oe[M].indexOf(E) >= 0) return M;
        return -1;
      }
      function wr(oe, E, M) {
        M ? oe.removeEventListener(_a, E) : oe.addEventListener(_a, E);
      }
      function vs(oe, E, M, B) {
        const ce = Ns + E;
        if (null != B) {
          const Ge = oe.style[ce];
          if (Ge.length) {
            const pt = Ge.split(',');
            (pt[B] = M), (M = pt.join(','));
          }
        }
        oe.style[ce] = M;
      }
      function Yo(oe, E) {
        return oe.style[Ns + E] || '';
      }
      class Wr {
        constructor(E, M, B, ce, Ge, pt, gt, Vt) {
          (this.element = E),
            (this.keyframes = M),
            (this.animationName = B),
            (this._duration = ce),
            (this._delay = Ge),
            (this._finalStyles = gt),
            (this._specialStyles = Vt),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = pt || 'linear'),
            (this.totalTime = ce + Ge),
            this._buildStyler();
        }
        onStart(E) {
          this._onStartFns.push(E);
        }
        onDone(E) {
          this._onDoneFns.push(E);
        }
        onDestroy(E) {
          this._onDestroyFns.push(E);
        }
        destroy() {
          this.init(),
            !(this._state >= 4) &&
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((E) => E()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((E) => E()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((E) => E()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            !(this._state >= 3) &&
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(E) {
          this._styler.setPosition(E);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 || ((this._state = 1), this._styler.apply(), this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(), (this._state = 2), this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          (this._state = 0), this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new al(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            'forwards',
            () => this.finish()
          );
        }
        triggerCallback(E) {
          const M = 'start' == E ? this._onStartFns : this._onDoneFns;
          M.forEach((B) => B()), (M.length = 0);
        }
        beforeDestroy() {
          this.init();
          const E = {};
          if (this.hasStarted()) {
            const M = this._state >= 3;
            Object.keys(this._finalStyles).forEach((B) => {
              'offset' != B && (E[B] = M ? this._finalStyles[B] : Pe(this.element, B));
            });
          }
          this.currentSnapshot = E;
        }
      }
      class Ko extends d.ZN {
        constructor(E, M) {
          super(), (this.element = E), (this._startingStyles = {}), (this.__initialized = !1), (this._styles = ge(M));
        }
        init() {
          this.__initialized ||
            !this._startingStyles ||
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((E) => {
              this._startingStyles[E] = this.element.style[E];
            }),
            super.init());
        }
        play() {
          !this._startingStyles ||
            (this.init(),
            Object.keys(this._styles).forEach((E) => this.element.style.setProperty(E, this._styles[E])),
            super.play());
        }
        destroy() {
          !this._startingStyles ||
            (Object.keys(this._startingStyles).forEach((E) => {
              const M = this._startingStyles[E];
              M ? this.element.style.setProperty(E, M) : this.element.style.removeProperty(E);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class Ks {
        constructor() {
          this._count = 0;
        }
        validateStyleProperty(E) {
          return dt(E);
        }
        matchesElement(E, M) {
          return !1;
        }
        containsElement(E, M) {
          return We(E, M);
        }
        query(E, M, B) {
          return $e(E, M, B);
        }
        computeStyle(E, M, B) {
          return window.getComputedStyle(E)[M];
        }
        buildKeyframeElement(E, M, B) {
          B = B.map((gt) => ge(gt));
          let ce = `@keyframes ${M} {\n`,
            Ge = '';
          B.forEach((gt) => {
            Ge = ' ';
            const Vt = parseFloat(gt.offset);
            (ce += `${Ge}${100 * Vt}% {\n`),
              (Ge += ' '),
              Object.keys(gt).forEach((cn) => {
                const Tn = gt[cn];
                switch (cn) {
                  case 'offset':
                    return;
                  case 'easing':
                    return void (Tn && (ce += `${Ge}animation-timing-function: ${Tn};\n`));
                  default:
                    return void (ce += `${Ge}${cn}: ${Tn};\n`);
                }
              }),
              (ce += `${Ge}}\n`);
          }),
            (ce += '}\n');
          const pt = document.createElement('style');
          return (pt.textContent = ce), pt;
        }
        animate(E, M, B, ce, Ge, pt = [], gt) {
          const Vt = pt.filter((vi) => vi instanceof Wr),
            cn = {};
          ht(B, ce) &&
            Vt.forEach((vi) => {
              let mr = vi.currentSnapshot;
              Object.keys(mr).forEach((cr) => (cn[cr] = mr[cr]));
            });
          const Tn = (function us(oe) {
            let E = {};
            return (
              oe &&
                (Array.isArray(oe) ? oe : [oe]).forEach((B) => {
                  Object.keys(B).forEach((ce) => {
                    'offset' == ce || 'easing' == ce || (E[ce] = B[ce]);
                  });
                }),
              E
            );
          })((M = Se(E, M, cn)));
          if (0 == B) return new Ko(E, Tn);
          const zn = 'gen_css_kf_' + this._count++,
            ni = this.buildKeyframeElement(E, zn, M);
          (function po(oe) {
            var E;
            const M = null === (E = oe.getRootNode) || void 0 === E ? void 0 : E.call(oe);
            return 'undefined' != typeof ShadowRoot && M instanceof ShadowRoot ? M : document.head;
          })(E).appendChild(ni);
          const Xn = Ws(E, M),
            si = new Wr(E, M, zn, B, ce, Ge, Tn, Xn);
          return (
            si.onDestroy(() =>
              (function ds(oe) {
                oe.parentNode.removeChild(oe);
              })(ni)
            ),
            si
          );
        }
      }
      class is {
        constructor(E, M, B, ce) {
          (this.element = E),
            (this.keyframes = M),
            (this.options = B),
            (this._specialStyles = ce),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = B.duration),
            (this._delay = B.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((E) => E()), (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const E = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(this.element, E, this.options)),
            (this._finalKeyframe = E.length ? E[E.length - 1] : {}),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(E, M, B) {
          return E.animate(M, B);
        }
        onStart(E) {
          this._onStartFns.push(E);
        }
        onDone(E) {
          this._onDoneFns.push(E);
        }
        onDestroy(E) {
          this._onDestroyFns.push(E);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((E) => E()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((E) => E()),
            (this._onDestroyFns = []));
        }
        setPosition(E) {
          void 0 === this.domPlayer && this.init(), (this.domPlayer.currentTime = E * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const E = {};
          if (this.hasStarted()) {
            const M = this._finalKeyframe;
            Object.keys(M).forEach((B) => {
              'offset' != B && (E[B] = this._finished ? M[B] : Pe(this.element, B));
            });
          }
          this.currentSnapshot = E;
        }
        triggerCallback(E) {
          const M = 'start' == E ? this._onStartFns : this._onDoneFns;
          M.forEach((B) => B()), (M.length = 0);
        }
      }
      class Co {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(z().toString())),
            (this._cssKeyframesDriver = new Ks());
        }
        validateStyleProperty(E) {
          return dt(E);
        }
        matchesElement(E, M) {
          return !1;
        }
        containsElement(E, M) {
          return We(E, M);
        }
        query(E, M, B) {
          return $e(E, M, B);
        }
        computeStyle(E, M, B) {
          return window.getComputedStyle(E)[M];
        }
        overrideWebAnimationsSupport(E) {
          this._isNativeImpl = E;
        }
        animate(E, M, B, ce, Ge, pt = [], gt) {
          if (!gt && !this._isNativeImpl) return this._cssKeyframesDriver.animate(E, M, B, ce, Ge, pt);
          const Tn = { duration: B, delay: ce, fill: 0 == ce ? 'both' : 'forwards' };
          Ge && (Tn.easing = Ge);
          const zn = {},
            ni = pt.filter((Xn) => Xn instanceof is);
          ht(B, ce) &&
            ni.forEach((Xn) => {
              let si = Xn.currentSnapshot;
              Object.keys(si).forEach((vi) => (zn[vi] = si[vi]));
            });
          const mi = Ws(E, (M = Se(E, (M = M.map((Xn) => bt(Xn, !1))), zn)));
          return new is(E, M, Tn, mi);
        }
      }
      function z() {
        return (N() && Element.prototype.animate) || {};
      }
      var be = x(9808);
      let $ = (() => {
        class oe extends d._j {
          constructor(M, B) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = M.createRenderer(B.body, {
                id: '0',
                encapsulation: h.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(M) {
            const B = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const ce = Array.isArray(M) ? (0, d.vP)(M) : M;
            return tn(this._renderer, null, B, 'register', [ce]), new ke(B, this._renderer);
          }
        }
        return (
          (oe.ɵfac = function (M) {
            return new (M || oe)(h.LFG(h.FYo), h.LFG(be.K0));
          }),
          (oe.ɵprov = h.Yz7({ token: oe, factory: oe.ɵfac })),
          oe
        );
      })();
      class ke extends d.LC {
        constructor(E, M) {
          super(), (this._id = E), (this._renderer = M);
        }
        create(E, M) {
          return new Dt(this._id, E, M || {}, this._renderer);
        }
      }
      class Dt {
        constructor(E, M, B, ce) {
          (this.id = E),
            (this.element = M),
            (this._renderer = ce),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', B);
        }
        _listen(E, M) {
          return this._renderer.listen(this.element, `@@${this.id}:${E}`, M);
        }
        _command(E, ...M) {
          return tn(this._renderer, this.element, this.id, E, M);
        }
        onDone(E) {
          this._listen('done', E);
        }
        onStart(E) {
          this._listen('start', E);
        }
        onDestroy(E) {
          this._listen('destroy', E);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset'), (this._started = !1);
        }
        setPosition(E) {
          this._command('setPosition', E);
        }
        getPosition() {
          var E, M;
          return null !==
            (M = null === (E = this._renderer.engine.players[+this.id]) || void 0 === E ? void 0 : E.getPosition()) &&
            void 0 !== M
            ? M
            : 0;
        }
      }
      function tn(oe, E, M, B, ce) {
        return oe.setProperty(E, `@@${M}:${B}`, ce);
      }
      const Sn = '@.disabled';
      let di = (() => {
        class oe {
          constructor(M, B, ce) {
            (this.delegate = M),
              (this.engine = B),
              (this._zone = ce),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (B.onRemovalComplete = (Ge, pt) => {
                const gt = null == pt ? void 0 : pt.parentNode(Ge);
                gt && pt.removeChild(gt, Ge);
              });
          }
          createRenderer(M, B) {
            const Ge = this.delegate.createRenderer(M, B);
            if (!(M && B && B.data && B.data.animation)) {
              let Tn = this._rendererCache.get(Ge);
              return Tn || ((Tn = new Vi('', Ge, this.engine)), this._rendererCache.set(Ge, Tn)), Tn;
            }
            const pt = B.id,
              gt = B.id + '-' + this._currentId;
            this._currentId++, this.engine.register(gt, M);
            const Vt = (Tn) => {
              Array.isArray(Tn) ? Tn.forEach(Vt) : this.engine.registerTrigger(pt, gt, M, Tn.name, Tn);
            };
            return B.data.animation.forEach(Vt), new ki(this, gt, Ge, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(M, B, ce) {
            M >= 0 && M < this._microtaskId
              ? this._zone.run(() => B(ce))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((Ge) => {
                        const [pt, gt] = Ge;
                        pt(gt);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([B, ce]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(), this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (oe.ɵfac = function (M) {
            return new (M || oe)(h.LFG(h.FYo), h.LFG(Hi), h.LFG(h.R0b));
          }),
          (oe.ɵprov = h.Yz7({ token: oe, factory: oe.ɵfac })),
          oe
        );
      })();
      class Vi {
        constructor(E, M, B) {
          (this.namespaceId = E),
            (this.delegate = M),
            (this.engine = B),
            (this.destroyNode = this.delegate.destroyNode ? (ce) => M.destroyNode(ce) : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate), this.delegate.destroy();
        }
        createElement(E, M) {
          return this.delegate.createElement(E, M);
        }
        createComment(E) {
          return this.delegate.createComment(E);
        }
        createText(E) {
          return this.delegate.createText(E);
        }
        appendChild(E, M) {
          this.delegate.appendChild(E, M), this.engine.onInsert(this.namespaceId, M, E, !1);
        }
        insertBefore(E, M, B, ce = !0) {
          this.delegate.insertBefore(E, M, B), this.engine.onInsert(this.namespaceId, M, E, ce);
        }
        removeChild(E, M, B) {
          this.engine.onRemove(this.namespaceId, M, this.delegate, B);
        }
        selectRootElement(E, M) {
          return this.delegate.selectRootElement(E, M);
        }
        parentNode(E) {
          return this.delegate.parentNode(E);
        }
        nextSibling(E) {
          return this.delegate.nextSibling(E);
        }
        setAttribute(E, M, B, ce) {
          this.delegate.setAttribute(E, M, B, ce);
        }
        removeAttribute(E, M, B) {
          this.delegate.removeAttribute(E, M, B);
        }
        addClass(E, M) {
          this.delegate.addClass(E, M);
        }
        removeClass(E, M) {
          this.delegate.removeClass(E, M);
        }
        setStyle(E, M, B, ce) {
          this.delegate.setStyle(E, M, B, ce);
        }
        removeStyle(E, M, B) {
          this.delegate.removeStyle(E, M, B);
        }
        setProperty(E, M, B) {
          '@' == M.charAt(0) && M == Sn ? this.disableAnimations(E, !!B) : this.delegate.setProperty(E, M, B);
        }
        setValue(E, M) {
          this.delegate.setValue(E, M);
        }
        listen(E, M, B) {
          return this.delegate.listen(E, M, B);
        }
        disableAnimations(E, M) {
          this.engine.disableAnimations(E, M);
        }
      }
      class ki extends Vi {
        constructor(E, M, B, ce) {
          super(M, B, ce), (this.factory = E), (this.namespaceId = M);
        }
        setProperty(E, M, B) {
          '@' == M.charAt(0)
            ? '.' == M.charAt(1) && M == Sn
              ? this.disableAnimations(E, (B = void 0 === B || !!B))
              : this.engine.process(this.namespaceId, E, M.substr(1), B)
            : this.delegate.setProperty(E, M, B);
        }
        listen(E, M, B) {
          if ('@' == M.charAt(0)) {
            const ce = (function yi(oe) {
              switch (oe) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return oe;
              }
            })(E);
            let Ge = M.substr(1),
              pt = '';
            return (
              '@' != Ge.charAt(0) &&
                ([Ge, pt] = (function W(oe) {
                  const E = oe.indexOf('.');
                  return [oe.substring(0, E), oe.substr(E + 1)];
                })(Ge)),
              this.engine.listen(this.namespaceId, ce, Ge, pt, (gt) => {
                this.factory.scheduleListenerCallback(gt._data || -1, B, gt);
              })
            );
          }
          return this.delegate.listen(E, M, B);
        }
      }
      let H = (() => {
        class oe extends Hi {
          constructor(M, B, ce) {
            super(M.body, B, ce);
          }
          ngOnDestroy() {
            this.flush();
          }
        }
        return (
          (oe.ɵfac = function (M) {
            return new (M || oe)(h.LFG(be.K0), h.LFG(Ie), h.LFG(Ci));
          }),
          (oe.ɵprov = h.Yz7({ token: oe, factory: oe.ɵfac })),
          oe
        );
      })();
      const Pn = new h.OlP('AnimationModuleType'),
        Pi = [
          { provide: d._j, useClass: $ },
          {
            provide: Ci,
            useFactory: function Me() {
              return new Rs();
            },
          },
          { provide: Hi, useClass: H },
          {
            provide: h.FYo,
            useFactory: function Xt(oe, E, M) {
              return new di(oe, E, M);
            },
            deps: [m.se, Hi, h.R0b],
          },
        ],
        pr = [
          {
            provide: Ie,
            useFactory: function F() {
              return (function Ni() {
                return 'function' == typeof z();
              })()
                ? new Co()
                : new Ks();
            },
          },
          { provide: Pn, useValue: 'BrowserAnimations' },
          ...Pi,
        ],
        so = [{ provide: Ie, useClass: Ke }, { provide: Pn, useValue: 'NoopAnimations' }, ...Pi];
      let oo = (() => {
        class oe {
          static withConfig(M) {
            return { ngModule: oe, providers: M.disableAnimations ? so : pr };
          }
        }
        return (
          (oe.ɵfac = function (M) {
            return new (M || oe)();
          }),
          (oe.ɵmod = h.oAB({ type: oe })),
          (oe.ɵinj = h.cJS({ providers: pr, imports: [m.b2] })),
          oe
        );
      })();
    },
    2313: (un, ft, x) => {
      'use strict';
      x.d(ft, { b2: () => hn, H7: () => Yt, Dx: () => Se, q6: () => ot, se: () => Ft });
      var h = x(9808),
        m = x(5e3);
      class d extends h.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class N extends d {
        static makeCurrent() {
          (0, h.HT)(new N());
        }
        onAndCancel(wt, nt, Pt) {
          return (
            wt.addEventListener(nt, Pt, !1),
            () => {
              wt.removeEventListener(nt, Pt, !1);
            }
          );
        }
        dispatchEvent(wt, nt) {
          wt.dispatchEvent(nt);
        }
        remove(wt) {
          wt.parentNode && wt.parentNode.removeChild(wt);
        }
        createElement(wt, nt) {
          return (nt = nt || this.getDefaultDocument()).createElement(wt);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(wt) {
          return wt.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(wt) {
          return wt instanceof DocumentFragment;
        }
        getGlobalEventTarget(wt, nt) {
          return 'window' === nt ? window : 'document' === nt ? wt : 'body' === nt ? wt.body : null;
        }
        getBaseHref(wt) {
          const nt = (function Re() {
            return (Ce = Ce || document.querySelector('base')), Ce ? Ce.getAttribute('href') : null;
          })();
          return null == nt
            ? null
            : (function Fe(jt) {
                (He = He || document.createElement('a')), He.setAttribute('href', jt);
                const wt = He.pathname;
                return '/' === wt.charAt(0) ? wt : `/${wt}`;
              })(nt);
        }
        resetBaseElement() {
          Ce = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(wt) {
          return (0, h.Mx)(document.cookie, wt);
        }
      }
      let He,
        Ce = null;
      const Ne = new m.OlP('TRANSITION_ID'),
        fe = [
          {
            provide: m.ip1,
            useFactory: function ee(jt, wt, nt) {
              return () => {
                nt.get(m.CZH).donePromise.then(() => {
                  const Pt = (0, h.q)(),
                    dn = wt.querySelectorAll(`style[ng-transition="${jt}"]`);
                  for (let kn = 0; kn < dn.length; kn++) Pt.remove(dn[kn]);
                });
              };
            },
            deps: [Ne, h.K0, m.zs3],
            multi: !0,
          },
        ];
      class ue {
        static init() {
          (0, m.VLi)(new ue());
        }
        addToWindow(wt) {
          (m.dqk.getAngularTestability = (Pt, dn = !0) => {
            const kn = wt.findTestabilityInTree(Pt, dn);
            if (null == kn) throw new Error('Could not find testability for element.');
            return kn;
          }),
            (m.dqk.getAllAngularTestabilities = () => wt.getAllTestabilities()),
            (m.dqk.getAllAngularRootElements = () => wt.getAllRootElements()),
            m.dqk.frameworkStabilizers || (m.dqk.frameworkStabilizers = []),
            m.dqk.frameworkStabilizers.push((Pt) => {
              const dn = m.dqk.getAllAngularTestabilities();
              let kn = dn.length,
                Gn = !1;
              const Jn = function (Ci) {
                (Gn = Gn || Ci), kn--, 0 == kn && Pt(Gn);
              };
              dn.forEach(function (Ci) {
                Ci.whenStable(Jn);
              });
            });
        }
        findTestabilityInTree(wt, nt, Pt) {
          if (null == nt) return null;
          const dn = wt.getTestability(nt);
          return null != dn
            ? dn
            : Pt
            ? (0, h.q)().isShadowRoot(nt)
              ? this.findTestabilityInTree(wt, nt.host, !0)
              : this.findTestabilityInTree(wt, nt.parentElement, !0)
            : null;
        }
      }
      let Qe = (() => {
        class jt {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (jt.ɵfac = function (nt) {
            return new (nt || jt)();
          }),
          (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
          jt
        );
      })();
      const Oe = new m.OlP('EventManagerPlugins');
      let et = (() => {
        class jt {
          constructor(nt, Pt) {
            (this._zone = Pt),
              (this._eventNameToPlugin = new Map()),
              nt.forEach((dn) => (dn.manager = this)),
              (this._plugins = nt.slice().reverse());
          }
          addEventListener(nt, Pt, dn) {
            return this._findPluginFor(Pt).addEventListener(nt, Pt, dn);
          }
          addGlobalEventListener(nt, Pt, dn) {
            return this._findPluginFor(Pt).addGlobalEventListener(nt, Pt, dn);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(nt) {
            const Pt = this._eventNameToPlugin.get(nt);
            if (Pt) return Pt;
            const dn = this._plugins;
            for (let kn = 0; kn < dn.length; kn++) {
              const Gn = dn[kn];
              if (Gn.supports(nt)) return this._eventNameToPlugin.set(nt, Gn), Gn;
            }
            throw new Error(`No event manager plugin found for event ${nt}`);
          }
        }
        return (
          (jt.ɵfac = function (nt) {
            return new (nt || jt)(m.LFG(Oe), m.LFG(m.R0b));
          }),
          (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
          jt
        );
      })();
      class lt {
        constructor(wt) {
          this._doc = wt;
        }
        addGlobalEventListener(wt, nt, Pt) {
          const dn = (0, h.q)().getGlobalEventTarget(this._doc, wt);
          if (!dn) throw new Error(`Unsupported event target ${dn} for event ${nt}`);
          return this.addEventListener(dn, nt, Pt);
        }
      }
      let me = (() => {
          class jt {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(nt) {
              const Pt = new Set();
              nt.forEach((dn) => {
                this._stylesSet.has(dn) || (this._stylesSet.add(dn), Pt.add(dn));
              }),
                this.onStylesAdded(Pt);
            }
            onStylesAdded(nt) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (jt.ɵfac = function (nt) {
              return new (nt || jt)();
            }),
            (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
            jt
          );
        })(),
        Ze = (() => {
          class jt extends me {
            constructor(nt) {
              super(), (this._doc = nt), (this._hostNodes = new Map()), this._hostNodes.set(nt.head, []);
            }
            _addStylesToHost(nt, Pt, dn) {
              nt.forEach((kn) => {
                const Gn = this._doc.createElement('style');
                (Gn.textContent = kn), dn.push(Pt.appendChild(Gn));
              });
            }
            addHost(nt) {
              const Pt = [];
              this._addStylesToHost(this._stylesSet, nt, Pt), this._hostNodes.set(nt, Pt);
            }
            removeHost(nt) {
              const Pt = this._hostNodes.get(nt);
              Pt && Pt.forEach(dt), this._hostNodes.delete(nt);
            }
            onStylesAdded(nt) {
              this._hostNodes.forEach((Pt, dn) => {
                this._addStylesToHost(nt, dn, Pt);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((nt) => nt.forEach(dt));
            }
          }
          return (
            (jt.ɵfac = function (nt) {
              return new (nt || jt)(m.LFG(h.K0));
            }),
            (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
            jt
          );
        })();
      function dt(jt) {
        (0, h.q)().remove(jt);
      }
      const vt = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
        },
        We = /%COMP%/g;
      function it(jt, wt, nt) {
        for (let Pt = 0; Pt < wt.length; Pt++) {
          let dn = wt[Pt];
          Array.isArray(dn) ? it(jt, dn, nt) : ((dn = dn.replace(We, jt)), nt.push(dn));
        }
        return nt;
      }
      function qe(jt) {
        return (wt) => {
          if ('__ngUnwrap__' === wt) return jt;
          !1 === jt(wt) && (wt.preventDefault(), (wt.returnValue = !1));
        };
      }
      let Ft = (() => {
        class jt {
          constructor(nt, Pt, dn) {
            (this.eventManager = nt),
              (this.sharedStylesHost = Pt),
              (this.appId = dn),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new kt(nt));
          }
          createRenderer(nt, Pt) {
            if (!nt || !Pt) return this.defaultRenderer;
            switch (Pt.encapsulation) {
              case m.ifc.Emulated: {
                let dn = this.rendererByCompId.get(Pt.id);
                return (
                  dn ||
                    ((dn = new Je(this.eventManager, this.sharedStylesHost, Pt, this.appId)),
                    this.rendererByCompId.set(Pt.id, dn)),
                  dn.applyToHost(nt),
                  dn
                );
              }
              case 1:
              case m.ifc.ShadowDom:
                return new Ct(this.eventManager, this.sharedStylesHost, nt, Pt);
              default:
                if (!this.rendererByCompId.has(Pt.id)) {
                  const dn = it(Pt.id, Pt.styles, []);
                  this.sharedStylesHost.addStyles(dn), this.rendererByCompId.set(Pt.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (jt.ɵfac = function (nt) {
            return new (nt || jt)(m.LFG(et), m.LFG(Ze), m.LFG(m.AFp));
          }),
          (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
          jt
        );
      })();
      class kt {
        constructor(wt) {
          (this.eventManager = wt), (this.data = Object.create(null)), (this.destroyNode = null);
        }
        destroy() {}
        createElement(wt, nt) {
          return nt ? document.createElementNS(vt[nt] || nt, wt) : document.createElement(wt);
        }
        createComment(wt) {
          return document.createComment(wt);
        }
        createText(wt) {
          return document.createTextNode(wt);
        }
        appendChild(wt, nt) {
          wt.appendChild(nt);
        }
        insertBefore(wt, nt, Pt) {
          wt && wt.insertBefore(nt, Pt);
        }
        removeChild(wt, nt) {
          wt && wt.removeChild(nt);
        }
        selectRootElement(wt, nt) {
          let Pt = 'string' == typeof wt ? document.querySelector(wt) : wt;
          if (!Pt) throw new Error(`The selector "${wt}" did not match any elements`);
          return nt || (Pt.textContent = ''), Pt;
        }
        parentNode(wt) {
          return wt.parentNode;
        }
        nextSibling(wt) {
          return wt.nextSibling;
        }
        setAttribute(wt, nt, Pt, dn) {
          if (dn) {
            nt = dn + ':' + nt;
            const kn = vt[dn];
            kn ? wt.setAttributeNS(kn, nt, Pt) : wt.setAttribute(nt, Pt);
          } else wt.setAttribute(nt, Pt);
        }
        removeAttribute(wt, nt, Pt) {
          if (Pt) {
            const dn = vt[Pt];
            dn ? wt.removeAttributeNS(dn, nt) : wt.removeAttribute(`${Pt}:${nt}`);
          } else wt.removeAttribute(nt);
        }
        addClass(wt, nt) {
          wt.classList.add(nt);
        }
        removeClass(wt, nt) {
          wt.classList.remove(nt);
        }
        setStyle(wt, nt, Pt, dn) {
          dn & (m.JOm.DashCase | m.JOm.Important)
            ? wt.style.setProperty(nt, Pt, dn & m.JOm.Important ? 'important' : '')
            : (wt.style[nt] = Pt);
        }
        removeStyle(wt, nt, Pt) {
          Pt & m.JOm.DashCase ? wt.style.removeProperty(nt) : (wt.style[nt] = '');
        }
        setProperty(wt, nt, Pt) {
          wt[nt] = Pt;
        }
        setValue(wt, nt) {
          wt.nodeValue = nt;
        }
        listen(wt, nt, Pt) {
          return 'string' == typeof wt
            ? this.eventManager.addGlobalEventListener(wt, nt, qe(Pt))
            : this.eventManager.addEventListener(wt, nt, qe(Pt));
        }
      }
      class Je extends kt {
        constructor(wt, nt, Pt, dn) {
          super(wt), (this.component = Pt);
          const kn = it(dn + '-' + Pt.id, Pt.styles, []);
          nt.addStyles(kn),
            (this.contentAttr = (function De(jt) {
              return '_ngcontent-%COMP%'.replace(We, jt);
            })(dn + '-' + Pt.id)),
            (this.hostAttr = (function Ye(jt) {
              return '_nghost-%COMP%'.replace(We, jt);
            })(dn + '-' + Pt.id));
        }
        applyToHost(wt) {
          super.setAttribute(wt, this.hostAttr, '');
        }
        createElement(wt, nt) {
          const Pt = super.createElement(wt, nt);
          return super.setAttribute(Pt, this.contentAttr, ''), Pt;
        }
      }
      class Ct extends kt {
        constructor(wt, nt, Pt, dn) {
          super(wt),
            (this.sharedStylesHost = nt),
            (this.hostEl = Pt),
            (this.shadowRoot = Pt.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const kn = it(dn.id, dn.styles, []);
          for (let Gn = 0; Gn < kn.length; Gn++) {
            const Jn = document.createElement('style');
            (Jn.textContent = kn[Gn]), this.shadowRoot.appendChild(Jn);
          }
        }
        nodeOrShadowRoot(wt) {
          return wt === this.hostEl ? this.shadowRoot : wt;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(wt, nt) {
          return super.appendChild(this.nodeOrShadowRoot(wt), nt);
        }
        insertBefore(wt, nt, Pt) {
          return super.insertBefore(this.nodeOrShadowRoot(wt), nt, Pt);
        }
        removeChild(wt, nt) {
          return super.removeChild(this.nodeOrShadowRoot(wt), nt);
        }
        parentNode(wt) {
          return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(wt)));
        }
      }
      let st = (() => {
        class jt extends lt {
          constructor(nt) {
            super(nt);
          }
          supports(nt) {
            return !0;
          }
          addEventListener(nt, Pt, dn) {
            return nt.addEventListener(Pt, dn, !1), () => this.removeEventListener(nt, Pt, dn);
          }
          removeEventListener(nt, Pt, dn) {
            return nt.removeEventListener(Pt, dn);
          }
        }
        return (
          (jt.ɵfac = function (nt) {
            return new (nt || jt)(m.LFG(h.K0));
          }),
          (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
          jt
        );
      })();
      const Et = ['alt', 'control', 'meta', 'shift'],
        Ue = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        bt = {
          A: '1',
          B: '2',
          C: '3',
          D: '4',
          E: '5',
          F: '6',
          G: '7',
          H: '8',
          I: '9',
          J: '*',
          K: '+',
          M: '-',
          N: '.',
          O: '/',
          '`': '0',
          '\x90': 'NumLock',
        },
        at = {
          alt: (jt) => jt.altKey,
          control: (jt) => jt.ctrlKey,
          meta: (jt) => jt.metaKey,
          shift: (jt) => jt.shiftKey,
        };
      let mt = (() => {
        class jt extends lt {
          constructor(nt) {
            super(nt);
          }
          supports(nt) {
            return null != jt.parseEventName(nt);
          }
          addEventListener(nt, Pt, dn) {
            const kn = jt.parseEventName(Pt),
              Gn = jt.eventCallback(kn.fullKey, dn, this.manager.getZone());
            return this.manager.getZone().runOutsideAngular(() => (0, h.q)().onAndCancel(nt, kn.domEventName, Gn));
          }
          static parseEventName(nt) {
            const Pt = nt.toLowerCase().split('.'),
              dn = Pt.shift();
            if (0 === Pt.length || ('keydown' !== dn && 'keyup' !== dn)) return null;
            const kn = jt._normalizeKey(Pt.pop());
            let Gn = '';
            if (
              (Et.forEach((Ci) => {
                const ar = Pt.indexOf(Ci);
                ar > -1 && (Pt.splice(ar, 1), (Gn += Ci + '.'));
              }),
              (Gn += kn),
              0 != Pt.length || 0 === kn.length)
            )
              return null;
            const Jn = {};
            return (Jn.domEventName = dn), (Jn.fullKey = Gn), Jn;
          }
          static getEventFullKey(nt) {
            let Pt = '',
              dn = (function Nt(jt) {
                let wt = jt.key;
                if (null == wt) {
                  if (((wt = jt.keyIdentifier), null == wt)) return 'Unidentified';
                  wt.startsWith('U+') &&
                    ((wt = String.fromCharCode(parseInt(wt.substring(2), 16))),
                    3 === jt.location && bt.hasOwnProperty(wt) && (wt = bt[wt]));
                }
                return Ue[wt] || wt;
              })(nt);
            return (
              (dn = dn.toLowerCase()),
              ' ' === dn ? (dn = 'space') : '.' === dn && (dn = 'dot'),
              Et.forEach((kn) => {
                kn != dn && at[kn](nt) && (Pt += kn + '.');
              }),
              (Pt += dn),
              Pt
            );
          }
          static eventCallback(nt, Pt, dn) {
            return (kn) => {
              jt.getEventFullKey(kn) === nt && dn.runGuarded(() => Pt(kn));
            };
          }
          static _normalizeKey(nt) {
            return 'esc' === nt ? 'escape' : nt;
          }
        }
        return (
          (jt.ɵfac = function (nt) {
            return new (nt || jt)(m.LFG(h.K0));
          }),
          (jt.ɵprov = m.Yz7({ token: jt, factory: jt.ɵfac })),
          jt
        );
      })();
      const ot = (0, m.eFA)(m._c5, 'browser', [
          { provide: m.Lbi, useValue: h.bD },
          {
            provide: m.g9A,
            useValue: function en() {
              N.makeCurrent(), ue.init();
            },
            multi: !0,
          },
          {
            provide: h.K0,
            useFactory: function Gt() {
              return (0, m.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        Zt = [
          { provide: m.zSh, useValue: 'root' },
          {
            provide: m.qLn,
            useFactory: function xt() {
              return new m.qLn();
            },
            deps: [],
          },
          { provide: Oe, useClass: st, multi: !0, deps: [h.K0, m.R0b, m.Lbi] },
          { provide: Oe, useClass: mt, multi: !0, deps: [h.K0] },
          { provide: Ft, useClass: Ft, deps: [et, Ze, m.AFp] },
          { provide: m.FYo, useExisting: Ft },
          { provide: me, useExisting: Ze },
          { provide: Ze, useClass: Ze, deps: [h.K0] },
          { provide: m.dDg, useClass: m.dDg, deps: [m.R0b] },
          { provide: et, useClass: et, deps: [Oe, m.R0b] },
          { provide: h.JF, useClass: Qe, deps: [] },
        ];
      let hn = (() => {
          class jt {
            constructor(nt) {
              if (nt)
                throw new Error(
                  'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
                );
            }
            static withServerTransition(nt) {
              return {
                ngModule: jt,
                providers: [{ provide: m.AFp, useValue: nt.appId }, { provide: Ne, useExisting: m.AFp }, fe],
              };
            }
          }
          return (
            (jt.ɵfac = function (nt) {
              return new (nt || jt)(m.LFG(jt, 12));
            }),
            (jt.ɵmod = m.oAB({ type: jt })),
            (jt.ɵinj = m.cJS({ providers: Zt, imports: [h.ez, m.hGG] })),
            jt
          );
        })(),
        Se = (() => {
          class jt {
            constructor(nt) {
              this._doc = nt;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(nt) {
              this._doc.title = nt || '';
            }
          }
          return (
            (jt.ɵfac = function (nt) {
              return new (nt || jt)(m.LFG(h.K0));
            }),
            (jt.ɵprov = m.Yz7({
              token: jt,
              factory: function (nt) {
                let Pt = null;
                return (
                  (Pt = nt
                    ? new nt()
                    : (function ht() {
                        return new Se((0, m.LFG)(h.K0));
                      })()),
                  Pt
                );
              },
              providedIn: 'root',
            })),
            jt
          );
        })();
      'undefined' != typeof window && window;
      let Yt = (() => {
          class jt {}
          return (
            (jt.ɵfac = function (nt) {
              return new (nt || jt)();
            }),
            (jt.ɵprov = m.Yz7({
              token: jt,
              factory: function (nt) {
                let Pt = null;
                return (Pt = nt ? new (nt || jt)() : m.LFG(Qn)), Pt;
              },
              providedIn: 'root',
            })),
            jt
          );
        })(),
        Qn = (() => {
          class jt extends Yt {
            constructor(nt) {
              super(), (this._doc = nt);
            }
            sanitize(nt, Pt) {
              if (null == Pt) return null;
              switch (nt) {
                case m.q3G.NONE:
                  return Pt;
                case m.q3G.HTML:
                  return (0, m.qzn)(Pt, 'HTML') ? (0, m.z3N)(Pt) : (0, m.EiD)(this._doc, String(Pt)).toString();
                case m.q3G.STYLE:
                  return (0, m.qzn)(Pt, 'Style') ? (0, m.z3N)(Pt) : Pt;
                case m.q3G.SCRIPT:
                  if ((0, m.qzn)(Pt, 'Script')) return (0, m.z3N)(Pt);
                  throw new Error('unsafe value used in a script context');
                case m.q3G.URL:
                  return (0, m.yhl)(Pt), (0, m.qzn)(Pt, 'URL') ? (0, m.z3N)(Pt) : (0, m.mCW)(String(Pt));
                case m.q3G.RESOURCE_URL:
                  if ((0, m.qzn)(Pt, 'ResourceURL')) return (0, m.z3N)(Pt);
                  throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');
                default:
                  throw new Error(`Unexpected SecurityContext ${nt} (see https://g.co/ng/security#xss)`);
              }
            }
            bypassSecurityTrustHtml(nt) {
              return (0, m.JVY)(nt);
            }
            bypassSecurityTrustStyle(nt) {
              return (0, m.L6k)(nt);
            }
            bypassSecurityTrustScript(nt) {
              return (0, m.eBb)(nt);
            }
            bypassSecurityTrustUrl(nt) {
              return (0, m.LAX)(nt);
            }
            bypassSecurityTrustResourceUrl(nt) {
              return (0, m.pB0)(nt);
            }
          }
          return (
            (jt.ɵfac = function (nt) {
              return new (nt || jt)(m.LFG(h.K0));
            }),
            (jt.ɵprov = m.Yz7({
              token: jt,
              factory: function (nt) {
                let Pt = null;
                return (
                  (Pt = nt
                    ? new nt()
                    : (function _n(jt) {
                        return new Qn(jt.get(h.K0));
                      })(m.LFG(m.zs3))),
                  Pt
                );
              },
              providedIn: 'root',
            })),
            jt
          );
        })();
    },
    5357: (un, ft, x) => {
      'use strict';
      x.d(ft, {
        gz: () => ci,
        m2: () => st,
        wm: () => qa,
        wN: () => Lo,
        F0: () => Mr,
        rH: () => Ca,
        Od: () => qr,
        yS: () => Gi,
        Bz: () => Fc,
        lC: () => Yo,
      });
      var h = x(5e3),
        m = x(8996),
        d = x(9646),
        N = x(1135),
        Ce = x(9841),
        Re = x(8306),
        He = x(6805),
        Fe = x(7272),
        Ne = x(9770),
        ee = x(515),
        fe = x(4033),
        ue = x(7579),
        Qe = x(9300),
        Oe = x(4482),
        et = x(5403);
      function lt(L) {
        return L <= 0
          ? () => ee.E
          : (0, Oe.e)((P, R) => {
              let G = [];
              P.subscribe(
                new et.Q(
                  R,
                  (te) => {
                    G.push(te), L < G.length && G.shift();
                  },
                  () => {
                    for (const te of G) R.next(te);
                    R.complete();
                  },
                  void 0,
                  () => {
                    G = null;
                  }
                )
              );
            });
      }
      var me = x(8068),
        Ze = x(6590),
        dt = x(4671),
        We = x(4004),
        $e = x(3900),
        ge = x(5698),
        Ke = x(8675),
        Ie = x(5026),
        De = x(262),
        Ye = x(4351),
        it = x(590),
        qe = x(5577),
        Ve = x(8505),
        Ft = x(8343),
        kt = x(8746),
        St = x(8189),
        on = x(9808);
      class Je {
        constructor(P, R) {
          (this.id = P), (this.url = R);
        }
      }
      class Ct extends Je {
        constructor(P, R, G = 'imperative', te = null) {
          super(P, R), (this.navigationTrigger = G), (this.restoredState = te);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class st extends Je {
        constructor(P, R, G) {
          super(P, R), (this.urlAfterRedirects = G);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Et extends Je {
        constructor(P, R, G) {
          super(P, R), (this.reason = G);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class yt extends Je {
        constructor(P, R, G) {
          super(P, R), (this.error = G);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class Ue extends Je {
        constructor(P, R, G, te) {
          super(P, R), (this.urlAfterRedirects = G), (this.state = te);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class bt extends Je {
        constructor(P, R, G, te) {
          super(P, R), (this.urlAfterRedirects = G), (this.state = te);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class at extends Je {
        constructor(P, R, G, te, Ae) {
          super(P, R), (this.urlAfterRedirects = G), (this.state = te), (this.shouldActivate = Ae);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class mt extends Je {
        constructor(P, R, G, te) {
          super(P, R), (this.urlAfterRedirects = G), (this.state = te);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Nt extends Je {
        constructor(P, R, G, te) {
          super(P, R), (this.urlAfterRedirects = G), (this.state = te);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class en {
        constructor(P) {
          this.route = P;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class xt {
        constructor(P) {
          this.route = P;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class Gt {
        constructor(P) {
          this.snapshot = P;
        }
        toString() {
          return `ChildActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class re {
        constructor(P) {
          this.snapshot = P;
        }
        toString() {
          return `ChildActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class ot {
        constructor(P) {
          this.snapshot = P;
        }
        toString() {
          return `ActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class Zt {
        constructor(P) {
          this.snapshot = P;
        }
        toString() {
          return `ActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class hn {
        constructor(P, R, G) {
          (this.routerEvent = P), (this.position = R), (this.anchor = G);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      const At = 'primary';
      class ae {
        constructor(P) {
          this.params = P || {};
        }
        has(P) {
          return Object.prototype.hasOwnProperty.call(this.params, P);
        }
        get(P) {
          if (this.has(P)) {
            const R = this.params[P];
            return Array.isArray(R) ? R[0] : R;
          }
          return null;
        }
        getAll(P) {
          if (this.has(P)) {
            const R = this.params[P];
            return Array.isArray(R) ? R : [R];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function Le(L) {
        return new ae(L);
      }
      const ht = 'ngNavigationCancelingError';
      function Se(L) {
        const P = Error('NavigationCancelingError: ' + L);
        return (P[ht] = !0), P;
      }
      function Pe(L, P, R) {
        const G = R.path.split('/');
        if (G.length > L.length || ('full' === R.pathMatch && (P.hasChildren() || G.length < L.length))) return null;
        const te = {};
        for (let Ae = 0; Ae < G.length; Ae++) {
          const ut = G[Ae],
            Mt = L[Ae];
          if (ut.startsWith(':')) te[ut.substring(1)] = Mt;
          else if (ut !== Mt.path) return null;
        }
        return { consumed: L.slice(0, G.length), posParams: te };
      }
      function we(L, P) {
        const R = L ? Object.keys(L) : void 0,
          G = P ? Object.keys(P) : void 0;
        if (!R || !G || R.length != G.length) return !1;
        let te;
        for (let Ae = 0; Ae < R.length; Ae++) if (((te = R[Ae]), !Rt(L[te], P[te]))) return !1;
        return !0;
      }
      function Rt(L, P) {
        if (Array.isArray(L) && Array.isArray(P)) {
          if (L.length !== P.length) return !1;
          const R = [...L].sort(),
            G = [...P].sort();
          return R.every((te, Ae) => G[Ae] === te);
        }
        return L === P;
      }
      function It(L) {
        return Array.prototype.concat.apply([], L);
      }
      function an(L) {
        return L.length > 0 ? L[L.length - 1] : null;
      }
      function ln(L, P) {
        for (const R in L) L.hasOwnProperty(R) && P(L[R], R);
      }
      function An(L) {
        return (0, h.CqO)(L) ? L : (0, h.QGY)(L) ? (0, m.D)(Promise.resolve(L)) : (0, d.of)(L);
      }
      const Hn = {
          exact: function q(L, P, R) {
            if (
              !Xe(L.segments, P.segments) ||
              !ie(L.segments, P.segments, R) ||
              L.numberOfChildren !== P.numberOfChildren
            )
              return !1;
            for (const G in P.children) if (!L.children[G] || !q(L.children[G], P.children[G], R)) return !1;
            return !0;
          },
          subset: Z,
        },
        zt = {
          exact: function de(L, P) {
            return we(L, P);
          },
          subset: function le(L, P) {
            return Object.keys(P).length <= Object.keys(L).length && Object.keys(P).every((R) => Rt(L[R], P[R]));
          },
          ignored: () => !0,
        };
      function Wt(L, P, R) {
        return (
          Hn[R.paths](L.root, P.root, R.matrixParams) &&
          zt[R.queryParams](L.queryParams, P.queryParams) &&
          !('exact' === R.fragment && L.fragment !== P.fragment)
        );
      }
      function Z(L, P, R) {
        return ye(L, P, P.segments, R);
      }
      function ye(L, P, R, G) {
        if (L.segments.length > R.length) {
          const te = L.segments.slice(0, R.length);
          return !(!Xe(te, R) || P.hasChildren() || !ie(te, R, G));
        }
        if (L.segments.length === R.length) {
          if (!Xe(L.segments, R) || !ie(L.segments, R, G)) return !1;
          for (const te in P.children) if (!L.children[te] || !Z(L.children[te], P.children[te], G)) return !1;
          return !0;
        }
        {
          const te = R.slice(0, L.segments.length),
            Ae = R.slice(L.segments.length);
          return !!(Xe(L.segments, te) && ie(L.segments, te, G) && L.children[At]) && ye(L.children[At], P, Ae, G);
        }
      }
      function ie(L, P, R) {
        return P.every((G, te) => zt[R](L[te].parameters, G.parameters));
      }
      class he {
        constructor(P, R, G) {
          (this.root = P), (this.queryParams = R), (this.fragment = G);
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = Le(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return Qn.serialize(this);
        }
      }
      class Te {
        constructor(P, R) {
          (this.segments = P), (this.children = R), (this.parent = null), ln(R, (G, te) => (G.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Ai(this);
        }
      }
      class pe {
        constructor(P, R) {
          (this.path = P), (this.parameters = R);
        }
        get parameterMap() {
          return this._parameterMap || (this._parameterMap = Le(this.parameters)), this._parameterMap;
        }
        toString() {
          return Jn(this);
        }
      }
      function Xe(L, P) {
        return L.length === P.length && L.every((R, G) => R.path === P[G].path);
      }
      class Yt {}
      class _n {
        parse(P) {
          const R = new pi(P);
          return new he(R.parseRootSegment(), R.parseQueryParams(), R.parseFragment());
        }
        serialize(P) {
          const R = `/${jt(P.root, !0)}`,
            G = (function ar(L) {
              const P = Object.keys(L)
                .map((R) => {
                  const G = L[R];
                  return Array.isArray(G) ? G.map((te) => `${nt(R)}=${nt(te)}`).join('&') : `${nt(R)}=${nt(G)}`;
                })
                .filter((R) => !!R);
              return P.length ? `?${P.join('&')}` : '';
            })(P.queryParams);
          return `${R}${G}${
            'string' == typeof P.fragment
              ? `#${(function Pt(L) {
                  return encodeURI(L);
                })(P.fragment)}`
              : ''
          }`;
        }
      }
      const Qn = new _n();
      function Ai(L) {
        return L.segments.map((P) => Jn(P)).join('/');
      }
      function jt(L, P) {
        if (!L.hasChildren()) return Ai(L);
        if (P) {
          const R = L.children[At] ? jt(L.children[At], !1) : '',
            G = [];
          return (
            ln(L.children, (te, Ae) => {
              Ae !== At && G.push(`${Ae}:${jt(te, !1)}`);
            }),
            G.length > 0 ? `${R}(${G.join('//')})` : R
          );
        }
        {
          const R = (function Ot(L, P) {
            let R = [];
            return (
              ln(L.children, (G, te) => {
                te === At && (R = R.concat(P(G, te)));
              }),
              ln(L.children, (G, te) => {
                te !== At && (R = R.concat(P(G, te)));
              }),
              R
            );
          })(L, (G, te) => (te === At ? [jt(L.children[At], !1)] : [`${te}:${jt(G, !1)}`]));
          return 1 === Object.keys(L.children).length && null != L.children[At]
            ? `${Ai(L)}/${R[0]}`
            : `${Ai(L)}/(${R.join('//')})`;
        }
      }
      function wt(L) {
        return encodeURIComponent(L)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function nt(L) {
        return wt(L).replace(/%3B/gi, ';');
      }
      function dn(L) {
        return wt(L).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
      }
      function kn(L) {
        return decodeURIComponent(L);
      }
      function Gn(L) {
        return kn(L.replace(/\+/g, '%20'));
      }
      function Jn(L) {
        return `${dn(L.path)}${(function Ci(L) {
          return Object.keys(L)
            .map((P) => `;${dn(P)}=${dn(L[P])}`)
            .join('');
        })(L.parameters)}`;
      }
      const Rs = /^[^\/()?;=#]+/;
      function Rr(L) {
        const P = L.match(Rs);
        return P ? P[0] : '';
      }
      const br = /^[^=?&#]+/,
        Cr = /^[^&#]+/;
      class pi {
        constructor(P) {
          (this.url = P), (this.remaining = P);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining || this.peekStartsWith('?') || this.peekStartsWith('#')
              ? new Te([], {})
              : new Te([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const P = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(P);
            } while (this.consumeOptional('&'));
          return P;
        }
        parseFragment() {
          return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const P = [];
          for (
            this.peekStartsWith('(') || P.push(this.parseSegment());
            this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(');

          )
            this.capture('/'), P.push(this.parseSegment());
          let R = {};
          this.peekStartsWith('/(') && (this.capture('/'), (R = this.parseParens(!0)));
          let G = {};
          return (
            this.peekStartsWith('(') && (G = this.parseParens(!1)),
            (P.length > 0 || Object.keys(R).length > 0) && (G[At] = new Te(P, R)),
            G
          );
        }
        parseSegment() {
          const P = Rr(this.remaining);
          if ('' === P && this.peekStartsWith(';'))
            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);
          return this.capture(P), new pe(kn(P), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const P = {};
          for (; this.consumeOptional(';'); ) this.parseParam(P);
          return P;
        }
        parseParam(P) {
          const R = Rr(this.remaining);
          if (!R) return;
          this.capture(R);
          let G = '';
          if (this.consumeOptional('=')) {
            const te = Rr(this.remaining);
            te && ((G = te), this.capture(G));
          }
          P[kn(R)] = kn(G);
        }
        parseQueryParam(P) {
          const R = (function es(L) {
            const P = L.match(br);
            return P ? P[0] : '';
          })(this.remaining);
          if (!R) return;
          this.capture(R);
          let G = '';
          if (this.consumeOptional('=')) {
            const ut = (function xn(L) {
              const P = L.match(Cr);
              return P ? P[0] : '';
            })(this.remaining);
            ut && ((G = ut), this.capture(G));
          }
          const te = Gn(R),
            Ae = Gn(G);
          if (P.hasOwnProperty(te)) {
            let ut = P[te];
            Array.isArray(ut) || ((ut = [ut]), (P[te] = ut)), ut.push(Ae);
          } else P[te] = Ae;
        }
        parseParens(P) {
          const R = {};
          for (this.capture('('); !this.consumeOptional(')') && this.remaining.length > 0; ) {
            const G = Rr(this.remaining),
              te = this.remaining[G.length];
            if ('/' !== te && ')' !== te && ';' !== te) throw new Error(`Cannot parse url '${this.url}'`);
            let Ae;
            G.indexOf(':') > -1
              ? ((Ae = G.substr(0, G.indexOf(':'))), this.capture(Ae), this.capture(':'))
              : P && (Ae = At);
            const ut = this.parseChildren();
            (R[Ae] = 1 === Object.keys(ut).length ? ut[At] : new Te([], ut)), this.consumeOptional('//');
          }
          return R;
        }
        peekStartsWith(P) {
          return this.remaining.startsWith(P);
        }
        consumeOptional(P) {
          return !!this.peekStartsWith(P) && ((this.remaining = this.remaining.substring(P.length)), !0);
        }
        capture(P) {
          if (!this.consumeOptional(P)) throw new Error(`Expected "${P}".`);
        }
      }
      class J {
        constructor(P) {
          this._root = P;
        }
        get root() {
          return this._root.value;
        }
        parent(P) {
          const R = this.pathFromRoot(P);
          return R.length > 1 ? R[R.length - 2] : null;
        }
        children(P) {
          const R = Kt(P, this._root);
          return R ? R.children.map((G) => G.value) : [];
        }
        firstChild(P) {
          const R = Kt(P, this._root);
          return R && R.children.length > 0 ? R.children[0].value : null;
        }
        siblings(P) {
          const R = Ht(P, this._root);
          return R.length < 2 ? [] : R[R.length - 2].children.map((te) => te.value).filter((te) => te !== P);
        }
        pathFromRoot(P) {
          return Ht(P, this._root).map((R) => R.value);
        }
      }
      function Kt(L, P) {
        if (L === P.value) return P;
        for (const R of P.children) {
          const G = Kt(L, R);
          if (G) return G;
        }
        return null;
      }
      function Ht(L, P) {
        if (L === P.value) return [P];
        for (const R of P.children) {
          const G = Ht(L, R);
          if (G.length) return G.unshift(P), G;
        }
        return [];
      }
      class fn {
        constructor(P, R) {
          (this.value = P), (this.children = R);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Wn(L) {
        const P = {};
        return L && L.children.forEach((R) => (P[R.value.outlet] = R)), P;
      }
      class Nn extends J {
        constructor(P, R) {
          super(P), (this.snapshot = R), lr(this, P);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Nr(L, P) {
        const R = (function qi(L, P) {
            const ut = new Br([], {}, {}, '', {}, At, P, null, L.root, -1, {});
            return new ps('', new fn(ut, []));
          })(L, P),
          G = new N.X([new pe('', {})]),
          te = new N.X({}),
          Ae = new N.X({}),
          ut = new N.X({}),
          Mt = new N.X(''),
          nn = new ci(G, te, ut, Mt, Ae, At, P, R.root);
        return (nn.snapshot = R.root), new Nn(new fn(nn, []), R);
      }
      class ci {
        constructor(P, R, G, te, Ae, ut, Mt, nn) {
          (this.url = P),
            (this.params = R),
            (this.queryParams = G),
            (this.fragment = te),
            (this.data = Ae),
            (this.outlet = ut),
            (this.component = Mt),
            (this._futureSnapshot = nn);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = this.params.pipe((0, We.U)((P) => Le(P)))), this._paramMap;
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = this.queryParams.pipe((0, We.U)((P) => Le(P)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;
        }
      }
      function ks(L, P = 'emptyOnly') {
        const R = L.pathFromRoot;
        let G = 0;
        if ('always' !== P)
          for (G = R.length - 1; G >= 1; ) {
            const te = R[G],
              Ae = R[G - 1];
            if (te.routeConfig && '' === te.routeConfig.path) G--;
            else {
              if (Ae.component) break;
              G--;
            }
          }
        return (function _i(L) {
          return L.reduce(
            (P, R) => ({
              params: Object.assign(Object.assign({}, P.params), R.params),
              data: Object.assign(Object.assign({}, P.data), R.data),
              resolve: Object.assign(Object.assign({}, P.resolve), R._resolvedData),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(R.slice(G));
      }
      class Br {
        constructor(P, R, G, te, Ae, ut, Mt, nn, On, Mi, ai) {
          (this.url = P),
            (this.params = R),
            (this.queryParams = G),
            (this.fragment = te),
            (this.data = Ae),
            (this.outlet = ut),
            (this.component = Mt),
            (this.routeConfig = nn),
            (this._urlSegment = On),
            (this._lastPathIndex = Mi),
            (this._resolve = ai);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = Le(this.params)), this._paramMap;
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = Le(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return `Route(url:'${this.url.map((G) => G.toString()).join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class ps extends J {
        constructor(P, R) {
          super(R), (this.url = P), lr(this, R);
        }
        toString() {
          return ts(this._root);
        }
      }
      function lr(L, P) {
        (P.value._routerState = L), P.children.forEach((R) => lr(L, R));
      }
      function ts(L) {
        const P = L.children.length > 0 ? ` { ${L.children.map(ts).join(', ')} } ` : '';
        return `${L.value}${P}`;
      }
      function Os(L) {
        if (L.snapshot) {
          const P = L.snapshot,
            R = L._futureSnapshot;
          (L.snapshot = R),
            we(P.queryParams, R.queryParams) || L.queryParams.next(R.queryParams),
            P.fragment !== R.fragment && L.fragment.next(R.fragment),
            we(P.params, R.params) || L.params.next(R.params),
            (function X(L, P) {
              if (L.length !== P.length) return !1;
              for (let R = 0; R < L.length; ++R) if (!we(L[R], P[R])) return !1;
              return !0;
            })(P.url, R.url) || L.url.next(R.url),
            we(P.data, R.data) || L.data.next(R.data);
        } else (L.snapshot = L._futureSnapshot), L.data.next(L._futureSnapshot.data);
      }
      function fi(L, P) {
        const R =
          we(L.params, P.params) &&
          (function _e(L, P) {
            return Xe(L, P) && L.every((R, G) => we(R.parameters, P[G].parameters));
          })(L.url, P.url);
        return R && !(!L.parent != !P.parent) && (!L.parent || fi(L.parent, P.parent));
      }
      function Vr(L, P, R) {
        if (R && L.shouldReuseRoute(P.value, R.value.snapshot)) {
          const G = R.value;
          G._futureSnapshot = P.value;
          const te = (function Jt(L, P, R) {
            return P.children.map((G) => {
              for (const te of R.children) if (L.shouldReuseRoute(G.value, te.value.snapshot)) return Vr(L, G, te);
              return Vr(L, G);
            });
          })(L, P, R);
          return new fn(G, te);
        }
        {
          if (L.shouldAttach(P.value)) {
            const Ae = L.retrieve(P.value);
            if (null !== Ae) {
              const ut = Ae.route;
              return (ut.value._futureSnapshot = P.value), (ut.children = P.children.map((Mt) => Vr(L, Mt))), ut;
            }
          }
          const G = (function ji(L) {
              return new ci(
                new N.X(L.url),
                new N.X(L.params),
                new N.X(L.queryParams),
                new N.X(L.fragment),
                new N.X(L.data),
                L.outlet,
                L.component,
                L
              );
            })(P.value),
            te = P.children.map((Ae) => Vr(L, Ae));
          return new fn(G, te);
        }
      }
      function kr(L) {
        return 'object' == typeof L && null != L && !L.outlets && !L.segmentPath;
      }
      function je(L) {
        return 'object' == typeof L && null != L && L.outlets;
      }
      function ms(L, P, R, G, te) {
        let Ae = {};
        return (
          G &&
            ln(G, (ut, Mt) => {
              Ae[Mt] = Array.isArray(ut) ? ut.map((nn) => `${nn}`) : `${ut}`;
            }),
          new he(R.root === L ? P : nr(R.root, L, P), Ae, te)
        );
      }
      function nr(L, P, R) {
        const G = {};
        return (
          ln(L.children, (te, Ae) => {
            G[Ae] = te === P ? R : nr(te, P, R);
          }),
          new Te(L.segments, G)
        );
      }
      class Bn {
        constructor(P, R, G) {
          if (
            ((this.isAbsolute = P), (this.numberOfDoubleDots = R), (this.commands = G), P && G.length > 0 && kr(G[0]))
          )
            throw new Error('Root segment cannot have matrix parameters');
          const te = G.find(je);
          if (te && te !== an(G)) throw new Error('{outlets:{}} has to be the last command');
        }
        toRoot() {
          return this.isAbsolute && 1 === this.commands.length && '/' == this.commands[0];
        }
      }
      class ei {
        constructor(P, R, G) {
          (this.segmentGroup = P), (this.processChildren = R), (this.index = G);
        }
      }
      function ls(L, P, R) {
        if ((L || (L = new Te([], {})), 0 === L.segments.length && L.hasChildren())) return Wo(L, P, R);
        const G = (function Oo(L, P, R) {
            let G = 0,
              te = P;
            const Ae = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; te < L.segments.length; ) {
              if (G >= R.length) return Ae;
              const ut = L.segments[te],
                Mt = R[G];
              if (je(Mt)) break;
              const nn = `${Mt}`,
                On = G < R.length - 1 ? R[G + 1] : null;
              if (te > 0 && void 0 === nn) break;
              if (nn && On && 'object' == typeof On && void 0 === On.outlets) {
                if (!Ws(nn, On, ut)) return Ae;
                G += 2;
              } else {
                if (!Ws(nn, {}, ut)) return Ae;
                G++;
              }
              te++;
            }
            return { match: !0, pathIndex: te, commandIndex: G };
          })(L, P, R),
          te = R.slice(G.commandIndex);
        if (G.match && G.pathIndex < L.segments.length) {
          const Ae = new Te(L.segments.slice(0, G.pathIndex), {});
          return (Ae.children[At] = new Te(L.segments.slice(G.pathIndex), L.children)), Wo(Ae, 0, te);
        }
        return G.match && 0 === te.length
          ? new Te(L.segments, {})
          : G.match && !L.hasChildren()
          ? Oa(L, P, R)
          : G.match
          ? Wo(L, 0, te)
          : Oa(L, P, R);
      }
      function Wo(L, P, R) {
        if (0 === R.length) return new Te(L.segments, {});
        {
          const G = (function Ps(L) {
              return je(L[0]) ? L[0].outlets : { [At]: L };
            })(R),
            te = {};
          return (
            ln(G, (Ae, ut) => {
              'string' == typeof Ae && (Ae = [Ae]), null !== Ae && (te[ut] = ls(L.children[ut], P, Ae));
            }),
            ln(L.children, (Ae, ut) => {
              void 0 === G[ut] && (te[ut] = Ae);
            }),
            new Te(L.segments, te)
          );
        }
      }
      function Oa(L, P, R) {
        const G = L.segments.slice(0, P);
        let te = 0;
        for (; te < R.length; ) {
          const Ae = R[te];
          if (je(Ae)) {
            const nn = Fs(Ae.outlets);
            return new Te(G, nn);
          }
          if (0 === te && kr(R[0])) {
            G.push(new pe(L.segments[P].path, Hi(R[0]))), te++;
            continue;
          }
          const ut = je(Ae) ? Ae.outlets[At] : `${Ae}`,
            Mt = te < R.length - 1 ? R[te + 1] : null;
          ut && Mt && kr(Mt) ? (G.push(new pe(ut, Hi(Mt))), (te += 2)) : (G.push(new pe(ut, {})), te++);
        }
        return new Te(G, {});
      }
      function Fs(L) {
        const P = {};
        return (
          ln(L, (R, G) => {
            'string' == typeof R && (R = [R]), null !== R && (P[G] = Oa(new Te([], {}), 0, R));
          }),
          P
        );
      }
      function Hi(L) {
        const P = {};
        return ln(L, (R, G) => (P[G] = `${R}`)), P;
      }
      function Ws(L, P, R) {
        return L == R.path && we(P, R.parameters);
      }
      class Ls {
        constructor(P, R, G, te) {
          (this.routeReuseStrategy = P), (this.futureState = R), (this.currState = G), (this.forwardEvent = te);
        }
        activate(P) {
          const R = this.futureState._root,
            G = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(R, G, P), Os(this.futureState.root), this.activateChildRoutes(R, G, P);
        }
        deactivateChildRoutes(P, R, G) {
          const te = Wn(R);
          P.children.forEach((Ae) => {
            const ut = Ae.value.outlet;
            this.deactivateRoutes(Ae, te[ut], G), delete te[ut];
          }),
            ln(te, (Ae, ut) => {
              this.deactivateRouteAndItsChildren(Ae, G);
            });
        }
        deactivateRoutes(P, R, G) {
          const te = P.value,
            Ae = R ? R.value : null;
          if (te === Ae)
            if (te.component) {
              const ut = G.getContext(te.outlet);
              ut && this.deactivateChildRoutes(P, R, ut.children);
            } else this.deactivateChildRoutes(P, R, G);
          else Ae && this.deactivateRouteAndItsChildren(R, G);
        }
        deactivateRouteAndItsChildren(P, R) {
          P.value.component && this.routeReuseStrategy.shouldDetach(P.value.snapshot)
            ? this.detachAndStoreRouteSubtree(P, R)
            : this.deactivateRouteAndOutlet(P, R);
        }
        detachAndStoreRouteSubtree(P, R) {
          const G = R.getContext(P.value.outlet),
            te = G && P.value.component ? G.children : R,
            Ae = Wn(P);
          for (const ut of Object.keys(Ae)) this.deactivateRouteAndItsChildren(Ae[ut], te);
          if (G && G.outlet) {
            const ut = G.outlet.detach(),
              Mt = G.children.onOutletDeactivated();
            this.routeReuseStrategy.store(P.value.snapshot, { componentRef: ut, route: P, contexts: Mt });
          }
        }
        deactivateRouteAndOutlet(P, R) {
          const G = R.getContext(P.value.outlet),
            te = G && P.value.component ? G.children : R,
            Ae = Wn(P);
          for (const ut of Object.keys(Ae)) this.deactivateRouteAndItsChildren(Ae[ut], te);
          G &&
            G.outlet &&
            (G.outlet.deactivate(),
            G.children.onOutletDeactivated(),
            (G.attachRef = null),
            (G.resolver = null),
            (G.route = null));
        }
        activateChildRoutes(P, R, G) {
          const te = Wn(R);
          P.children.forEach((Ae) => {
            this.activateRoutes(Ae, te[Ae.value.outlet], G), this.forwardEvent(new Zt(Ae.value.snapshot));
          }),
            P.children.length && this.forwardEvent(new re(P.value.snapshot));
        }
        activateRoutes(P, R, G) {
          const te = P.value,
            Ae = R ? R.value : null;
          if ((Os(te), te === Ae))
            if (te.component) {
              const ut = G.getOrCreateContext(te.outlet);
              this.activateChildRoutes(P, R, ut.children);
            } else this.activateChildRoutes(P, R, G);
          else if (te.component) {
            const ut = G.getOrCreateContext(te.outlet);
            if (this.routeReuseStrategy.shouldAttach(te.snapshot)) {
              const Mt = this.routeReuseStrategy.retrieve(te.snapshot);
              this.routeReuseStrategy.store(te.snapshot, null),
                ut.children.onOutletReAttached(Mt.contexts),
                (ut.attachRef = Mt.componentRef),
                (ut.route = Mt.route.value),
                ut.outlet && ut.outlet.attach(Mt.componentRef, Mt.route.value),
                Os(Mt.route.value),
                this.activateChildRoutes(P, null, ut.children);
            } else {
              const Mt = (function ga(L) {
                  for (let P = L.parent; P; P = P.parent) {
                    const R = P.routeConfig;
                    if (R && R._loadedConfig) return R._loadedConfig;
                    if (R && R.component) return null;
                  }
                  return null;
                })(te.snapshot),
                nn = Mt ? Mt.module.componentFactoryResolver : null;
              (ut.attachRef = null),
                (ut.route = te),
                (ut.resolver = nn),
                ut.outlet && ut.outlet.activateWith(te, nn),
                this.activateChildRoutes(P, null, ut.children);
            }
          } else this.activateChildRoutes(P, null, G);
        }
      }
      class gs {
        constructor(P, R) {
          (this.routes = P), (this.module = R);
        }
      }
      function Ns(L) {
        return 'function' == typeof L;
      }
      function Hr(L) {
        return L instanceof he;
      }
      const Bi = Symbol('INITIAL_VALUE');
      function ns() {
        return (0, $e.w)((L) =>
          (0, Ce.a)(L.map((P) => P.pipe((0, ge.q)(1), (0, Ke.O)(Bi)))).pipe(
            (0, Ie.R)((P, R) => {
              let G = !1;
              return R.reduce(
                (te, Ae, ut) =>
                  te !== Bi
                    ? te
                    : (Ae === Bi && (G = !0), G || (!1 !== Ae && ut !== R.length - 1 && !Hr(Ae)) ? te : Ae),
                P
              );
            }, Bi),
            (0, Qe.h)((P) => P !== Bi),
            (0, We.U)((P) => (Hr(P) ? P : !0 === P)),
            (0, ge.q)(1)
          )
        );
      }
      class wr {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new vs()),
            (this.attachRef = null);
        }
      }
      class vs {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(P, R) {
          const G = this.getOrCreateContext(P);
          (G.outlet = R), this.contexts.set(P, G);
        }
        onChildOutletDestroyed(P) {
          const R = this.getContext(P);
          R && ((R.outlet = null), (R.attachRef = null));
        }
        onOutletDeactivated() {
          const P = this.contexts;
          return (this.contexts = new Map()), P;
        }
        onOutletReAttached(P) {
          this.contexts = P;
        }
        getOrCreateContext(P) {
          let R = this.getContext(P);
          return R || ((R = new wr()), this.contexts.set(P, R)), R;
        }
        getContext(P) {
          return this.contexts.get(P) || null;
        }
      }
      let Yo = (() => {
        class L {
          constructor(R, G, te, Ae, ut) {
            (this.parentContexts = R),
              (this.location = G),
              (this.resolver = te),
              (this.changeDetector = ut),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new h.vpe()),
              (this.deactivateEvents = new h.vpe()),
              (this.attachEvents = new h.vpe()),
              (this.detachEvents = new h.vpe()),
              (this.name = Ae || At),
              R.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const R = this.parentContexts.getContext(this.name);
              R &&
                R.route &&
                (R.attachRef ? this.attach(R.attachRef, R.route) : this.activateWith(R.route, R.resolver || null));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new Error('Outlet is not activated');
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new Error('Outlet is not activated');
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
          }
          detach() {
            if (!this.activated) throw new Error('Outlet is not activated');
            this.location.detach();
            const R = this.activated;
            return (this.activated = null), (this._activatedRoute = null), this.detachEvents.emit(R.instance), R;
          }
          attach(R, G) {
            (this.activated = R),
              (this._activatedRoute = G),
              this.location.insert(R.hostView),
              this.attachEvents.emit(R.instance);
          }
          deactivate() {
            if (this.activated) {
              const R = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(R);
            }
          }
          activateWith(R, G) {
            if (this.isActivated) throw new Error('Cannot activate an already activated outlet');
            this._activatedRoute = R;
            const ut = (G = G || this.resolver).resolveComponentFactory(R._futureSnapshot.routeConfig.component),
              Mt = this.parentContexts.getOrCreateContext(this.name).children,
              nn = new Ys(R, Mt, this.location.injector);
            (this.activated = this.location.createComponent(ut, this.location.length, nn)),
              this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (L.ɵfac = function (R) {
            return new (R || L)(h.Y36(vs), h.Y36(h.s_b), h.Y36(h._Vd), h.$8M('name'), h.Y36(h.sBO));
          }),
          (L.ɵdir = h.lG2({
            type: L,
            selectors: [['router-outlet']],
            outputs: {
              activateEvents: 'activate',
              deactivateEvents: 'deactivate',
              attachEvents: 'attach',
              detachEvents: 'detach',
            },
            exportAs: ['outlet'],
          })),
          L
        );
      })();
      class Ys {
        constructor(P, R, G) {
          (this.route = P), (this.childContexts = R), (this.parent = G);
        }
        get(P, R) {
          return P === ci ? this.route : P === vs ? this.childContexts : this.parent.get(P, R);
        }
      }
      let Po = (() => {
        class L {}
        return (
          (L.ɵfac = function (R) {
            return new (R || L)();
          }),
          (L.ɵcmp = h.Xpm({
            type: L,
            selectors: [['ng-component']],
            decls: 1,
            vars: 0,
            template: function (R, G) {
              1 & R && h._UZ(0, 'router-outlet');
            },
            directives: [Yo],
            encapsulation: 2,
          })),
          L
        );
      })();
      function Gr(L, P = '') {
        for (let R = 0; R < L.length; R++) {
          const G = L[R];
          Wr(G, Ko(P, G));
        }
      }
      function Wr(L, P) {
        L.children && Gr(L.children, P);
      }
      function Ko(L, P) {
        return P ? (L || P.path ? (L && !P.path ? `${L}/` : !L && P.path ? P.path : `${L}/${P.path}`) : '') : L;
      }
      function Or(L) {
        const P = L.children && L.children.map(Or),
          R = P ? Object.assign(Object.assign({}, L), { children: P }) : Object.assign({}, L);
        return !R.component && (P || R.loadChildren) && R.outlet && R.outlet !== At && (R.component = Po), R;
      }
      function Zi(L) {
        return L.outlet || At;
      }
      function Ks(L, P) {
        const R = L.filter((G) => Zi(G) === P);
        return R.push(...L.filter((G) => Zi(G) !== P)), R;
      }
      const po = { matched: !1, consumedSegments: [], lastChild: 0, parameters: {}, positionalParamSegments: {} };
      function us(L, P, R) {
        var G;
        if ('' === P.path)
          return 'full' === P.pathMatch && (L.hasChildren() || R.length > 0)
            ? Object.assign({}, po)
            : { matched: !0, consumedSegments: [], lastChild: 0, parameters: {}, positionalParamSegments: {} };
        const Ae = (P.matcher || Pe)(R, L, P);
        if (!Ae) return Object.assign({}, po);
        const ut = {};
        ln(Ae.posParams, (nn, On) => {
          ut[On] = nn.path;
        });
        const Mt =
          Ae.consumed.length > 0
            ? Object.assign(Object.assign({}, ut), Ae.consumed[Ae.consumed.length - 1].parameters)
            : ut;
        return {
          matched: !0,
          consumedSegments: Ae.consumed,
          lastChild: Ae.consumed.length,
          parameters: Mt,
          positionalParamSegments: null !== (G = Ae.posParams) && void 0 !== G ? G : {},
        };
      }
      function ds(L, P, R, G, te = 'corrected') {
        if (
          R.length > 0 &&
          (function is(L, P, R) {
            return R.some((G) => Ni(L, P, G) && Zi(G) !== At);
          })(L, R, G)
        ) {
          const ut = new Te(
            P,
            (function Qi(L, P, R, G) {
              const te = {};
              (te[At] = G), (G._sourceSegment = L), (G._segmentIndexShift = P.length);
              for (const Ae of R)
                if ('' === Ae.path && Zi(Ae) !== At) {
                  const ut = new Te([], {});
                  (ut._sourceSegment = L), (ut._segmentIndexShift = P.length), (te[Zi(Ae)] = ut);
                }
              return te;
            })(L, P, G, new Te(R, L.children))
          );
          return (ut._sourceSegment = L), (ut._segmentIndexShift = P.length), { segmentGroup: ut, slicedSegments: [] };
        }
        if (
          0 === R.length &&
          (function Co(L, P, R) {
            return R.some((G) => Ni(L, P, G));
          })(L, R, G)
        ) {
          const ut = new Te(
            L.segments,
            (function ya(L, P, R, G, te, Ae) {
              const ut = {};
              for (const Mt of G)
                if (Ni(L, R, Mt) && !te[Zi(Mt)]) {
                  const nn = new Te([], {});
                  (nn._sourceSegment = L),
                    (nn._segmentIndexShift = 'legacy' === Ae ? L.segments.length : P.length),
                    (ut[Zi(Mt)] = nn);
                }
              return Object.assign(Object.assign({}, te), ut);
            })(L, P, R, G, L.children, te)
          );
          return (ut._sourceSegment = L), (ut._segmentIndexShift = P.length), { segmentGroup: ut, slicedSegments: R };
        }
        const Ae = new Te(L.segments, L.children);
        return (Ae._sourceSegment = L), (Ae._segmentIndexShift = P.length), { segmentGroup: Ae, slicedSegments: R };
      }
      function Ni(L, P, R) {
        return (!(L.hasChildren() || P.length > 0) || 'full' !== R.pathMatch) && '' === R.path;
      }
      function z(L, P, R, G) {
        return !!(Zi(L) === G || (G !== At && Ni(P, R, L))) && ('**' === L.path || us(P, L, R).matched);
      }
      function be(L, P, R) {
        return 0 === P.length && !L.children[R];
      }
      class $ {
        constructor(P) {
          this.segmentGroup = P || null;
        }
      }
      class ke {
        constructor(P) {
          this.urlTree = P;
        }
      }
      function Dt(L) {
        return new Re.y((P) => P.error(new $(L)));
      }
      function tn(L) {
        return new Re.y((P) => P.error(new ke(L)));
      }
      function yn(L) {
        return new Re.y((P) =>
          P.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${L}'`))
        );
      }
      class Vi {
        constructor(P, R, G, te, Ae) {
          (this.configLoader = R),
            (this.urlSerializer = G),
            (this.urlTree = te),
            (this.config = Ae),
            (this.allowRedirects = !0),
            (this.ngModule = P.get(h.h0i));
        }
        apply() {
          const P = ds(this.urlTree.root, [], [], this.config).segmentGroup,
            R = new Te(P.segments, P.children);
          return this.expandSegmentGroup(this.ngModule, this.config, R, At)
            .pipe((0, We.U)((Ae) => this.createUrlTree(yi(Ae), this.urlTree.queryParams, this.urlTree.fragment)))
            .pipe(
              (0, De.K)((Ae) => {
                if (Ae instanceof ke) return (this.allowRedirects = !1), this.match(Ae.urlTree);
                throw Ae instanceof $ ? this.noMatchError(Ae) : Ae;
              })
            );
        }
        match(P) {
          return this.expandSegmentGroup(this.ngModule, this.config, P.root, At)
            .pipe((0, We.U)((te) => this.createUrlTree(yi(te), P.queryParams, P.fragment)))
            .pipe(
              (0, De.K)((te) => {
                throw te instanceof $ ? this.noMatchError(te) : te;
              })
            );
        }
        noMatchError(P) {
          return new Error(`Cannot match any routes. URL Segment: '${P.segmentGroup}'`);
        }
        createUrlTree(P, R, G) {
          const te = P.segments.length > 0 ? new Te([], { [At]: P }) : P;
          return new he(te, R, G);
        }
        expandSegmentGroup(P, R, G, te) {
          return 0 === G.segments.length && G.hasChildren()
            ? this.expandChildren(P, R, G).pipe((0, We.U)((Ae) => new Te([], Ae)))
            : this.expandSegment(P, G, R, G.segments, te, !0);
        }
        expandChildren(P, R, G) {
          const te = [];
          for (const Ae of Object.keys(G.children)) 'primary' === Ae ? te.unshift(Ae) : te.push(Ae);
          return (0, m.D)(te).pipe(
            (0, Ye.b)((Ae) => {
              const ut = G.children[Ae],
                Mt = Ks(R, Ae);
              return this.expandSegmentGroup(P, Mt, ut, Ae).pipe((0, We.U)((nn) => ({ segment: nn, outlet: Ae })));
            }),
            (0, Ie.R)((Ae, ut) => ((Ae[ut.outlet] = ut.segment), Ae), {}),
            (function vt(L, P) {
              const R = arguments.length >= 2;
              return (G) =>
                G.pipe(
                  L ? (0, Qe.h)((te, Ae) => L(te, Ae, G)) : dt.y,
                  lt(1),
                  R ? (0, Ze.d)(P) : (0, me.T)(() => new He.K())
                );
            })()
          );
        }
        expandSegment(P, R, G, te, Ae, ut) {
          return (0, m.D)(G).pipe(
            (0, Ye.b)((Mt) =>
              this.expandSegmentAgainstRoute(P, R, G, Mt, te, Ae, ut).pipe(
                (0, De.K)((On) => {
                  if (On instanceof $) return (0, d.of)(null);
                  throw On;
                })
              )
            ),
            (0, it.P)((Mt) => !!Mt),
            (0, De.K)((Mt, nn) => {
              if (Mt instanceof He.K || 'EmptyError' === Mt.name) {
                if (be(R, te, Ae)) return (0, d.of)(new Te([], {}));
                throw new $(R);
              }
              throw Mt;
            })
          );
        }
        expandSegmentAgainstRoute(P, R, G, te, Ae, ut, Mt) {
          return z(te, R, Ae, ut)
            ? void 0 === te.redirectTo
              ? this.matchSegmentAgainstRoute(P, R, te, Ae, ut)
              : Mt && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(P, R, G, te, Ae, ut)
              : Dt(R)
            : Dt(R);
        }
        expandSegmentAgainstRouteUsingRedirect(P, R, G, te, Ae, ut) {
          return '**' === te.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(P, G, te, ut)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(P, R, G, te, Ae, ut);
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(P, R, G, te) {
          const Ae = this.applyRedirectCommands([], G.redirectTo, {});
          return G.redirectTo.startsWith('/')
            ? tn(Ae)
            : this.lineralizeSegments(G, Ae).pipe(
                (0, qe.z)((ut) => {
                  const Mt = new Te(ut, {});
                  return this.expandSegment(P, Mt, R, ut, te, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(P, R, G, te, Ae, ut) {
          const { matched: Mt, consumedSegments: nn, lastChild: On, positionalParamSegments: Mi } = us(R, te, Ae);
          if (!Mt) return Dt(R);
          const ai = this.applyRedirectCommands(nn, te.redirectTo, Mi);
          return te.redirectTo.startsWith('/')
            ? tn(ai)
            : this.lineralizeSegments(te, ai).pipe(
                (0, qe.z)((Di) => this.expandSegment(P, R, G, Di.concat(Ae.slice(On)), ut, !1))
              );
        }
        matchSegmentAgainstRoute(P, R, G, te, Ae) {
          if ('**' === G.path)
            return G.loadChildren
              ? (G._loadedConfig ? (0, d.of)(G._loadedConfig) : this.configLoader.load(P.injector, G)).pipe(
                  (0, We.U)((Di) => ((G._loadedConfig = Di), new Te(te, {})))
                )
              : (0, d.of)(new Te(te, {}));
          const { matched: ut, consumedSegments: Mt, lastChild: nn } = us(R, G, te);
          if (!ut) return Dt(R);
          const On = te.slice(nn);
          return this.getChildConfig(P, G, te).pipe(
            (0, qe.z)((ai) => {
              const Di = ai.module,
                Xi = ai.routes,
                { segmentGroup: zi, slicedSegments: Qs } = ds(R, Mt, On, Xi),
                wo = new Te(zi.segments, zi.children);
              if (0 === Qs.length && wo.hasChildren())
                return this.expandChildren(Di, Xi, wo).pipe((0, We.U)((Ol) => new Te(Mt, Ol)));
              if (0 === Xi.length && 0 === Qs.length) return (0, d.of)(new Te(Mt, {}));
              const Eo = Zi(G) === Ae;
              return this.expandSegment(Di, wo, Xi, Qs, Eo ? At : Ae, !0).pipe(
                (0, We.U)((lo) => new Te(Mt.concat(lo.segments), lo.children))
              );
            })
          );
        }
        getChildConfig(P, R, G) {
          return R.children
            ? (0, d.of)(new gs(R.children, P))
            : R.loadChildren
            ? void 0 !== R._loadedConfig
              ? (0, d.of)(R._loadedConfig)
              : this.runCanLoadGuards(P.injector, R, G).pipe(
                  (0, qe.z)((te) =>
                    te
                      ? this.configLoader.load(P.injector, R).pipe((0, We.U)((Ae) => ((R._loadedConfig = Ae), Ae)))
                      : (function Sn(L) {
                          return new Re.y((P) =>
                            P.error(
                              Se(
                                `Cannot load children because the guard of the route "path: '${L.path}'" returned false`
                              )
                            )
                          );
                        })(R)
                  )
                )
            : (0, d.of)(new gs([], P));
        }
        runCanLoadGuards(P, R, G) {
          const te = R.canLoad;
          if (!te || 0 === te.length) return (0, d.of)(!0);
          const Ae = te.map((ut) => {
            const Mt = P.get(ut);
            let nn;
            if (
              (function al(L) {
                return L && Ns(L.canLoad);
              })(Mt)
            )
              nn = Mt.canLoad(R, G);
            else {
              if (!Ns(Mt)) throw new Error('Invalid CanLoad guard');
              nn = Mt(R, G);
            }
            return An(nn);
          });
          return (0, d.of)(Ae).pipe(
            ns(),
            (0, Ve.b)((ut) => {
              if (!Hr(ut)) return;
              const Mt = Se(`Redirecting to "${this.urlSerializer.serialize(ut)}"`);
              throw ((Mt.url = ut), Mt);
            }),
            (0, We.U)((ut) => !0 === ut)
          );
        }
        lineralizeSegments(P, R) {
          let G = [],
            te = R.root;
          for (;;) {
            if (((G = G.concat(te.segments)), 0 === te.numberOfChildren)) return (0, d.of)(G);
            if (te.numberOfChildren > 1 || !te.children[At]) return yn(P.redirectTo);
            te = te.children[At];
          }
        }
        applyRedirectCommands(P, R, G) {
          return this.applyRedirectCreatreUrlTree(R, this.urlSerializer.parse(R), P, G);
        }
        applyRedirectCreatreUrlTree(P, R, G, te) {
          const Ae = this.createSegmentGroup(P, R.root, G, te);
          return new he(Ae, this.createQueryParams(R.queryParams, this.urlTree.queryParams), R.fragment);
        }
        createQueryParams(P, R) {
          const G = {};
          return (
            ln(P, (te, Ae) => {
              if ('string' == typeof te && te.startsWith(':')) {
                const Mt = te.substring(1);
                G[Ae] = R[Mt];
              } else G[Ae] = te;
            }),
            G
          );
        }
        createSegmentGroup(P, R, G, te) {
          const Ae = this.createSegments(P, R.segments, G, te);
          let ut = {};
          return (
            ln(R.children, (Mt, nn) => {
              ut[nn] = this.createSegmentGroup(P, Mt, G, te);
            }),
            new Te(Ae, ut)
          );
        }
        createSegments(P, R, G, te) {
          return R.map((Ae) => (Ae.path.startsWith(':') ? this.findPosParam(P, Ae, te) : this.findOrReturn(Ae, G)));
        }
        findPosParam(P, R, G) {
          const te = G[R.path.substring(1)];
          if (!te) throw new Error(`Cannot redirect to '${P}'. Cannot find '${R.path}'.`);
          return te;
        }
        findOrReturn(P, R) {
          let G = 0;
          for (const te of R) {
            if (te.path === P.path) return R.splice(G), te;
            G++;
          }
          return P;
        }
      }
      function yi(L) {
        const P = {};
        for (const G of Object.keys(L.children)) {
          const Ae = yi(L.children[G]);
          (Ae.segments.length > 0 || Ae.hasChildren()) && (P[G] = Ae);
        }
        return (function ki(L) {
          if (1 === L.numberOfChildren && L.children[At]) {
            const P = L.children[At];
            return new Te(L.segments.concat(P.segments), P.children);
          }
          return L;
        })(new Te(L.segments, P));
      }
      class H {
        constructor(P) {
          (this.path = P), (this.route = this.path[this.path.length - 1]);
        }
      }
      class F {
        constructor(P, R) {
          (this.component = P), (this.route = R);
        }
      }
      function Me(L, P, R) {
        const G = L._root;
        return pr(G, P ? P._root : null, R, [G.value]);
      }
      function Pn(L, P, R) {
        const G = (function Pi(L) {
          if (!L) return null;
          for (let P = L.parent; P; P = P.parent) {
            const R = P.routeConfig;
            if (R && R._loadedConfig) return R._loadedConfig;
          }
          return null;
        })(P);
        return (G ? G.module.injector : R).get(L);
      }
      function pr(L, P, R, G, te = { canDeactivateChecks: [], canActivateChecks: [] }) {
        const Ae = Wn(P);
        return (
          L.children.forEach((ut) => {
            (function so(L, P, R, G, te = { canDeactivateChecks: [], canActivateChecks: [] }) {
              const Ae = L.value,
                ut = P ? P.value : null,
                Mt = R ? R.getContext(L.value.outlet) : null;
              if (ut && Ae.routeConfig === ut.routeConfig) {
                const nn = (function oo(L, P, R) {
                  if ('function' == typeof R) return R(L, P);
                  switch (R) {
                    case 'pathParamsChange':
                      return !Xe(L.url, P.url);
                    case 'pathParamsOrQueryParamsChange':
                      return !Xe(L.url, P.url) || !we(L.queryParams, P.queryParams);
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !fi(L, P) || !we(L.queryParams, P.queryParams);
                    default:
                      return !fi(L, P);
                  }
                })(ut, Ae, Ae.routeConfig.runGuardsAndResolvers);
                nn ? te.canActivateChecks.push(new H(G)) : ((Ae.data = ut.data), (Ae._resolvedData = ut._resolvedData)),
                  pr(L, P, Ae.component ? (Mt ? Mt.children : null) : R, G, te),
                  nn &&
                    Mt &&
                    Mt.outlet &&
                    Mt.outlet.isActivated &&
                    te.canDeactivateChecks.push(new F(Mt.outlet.component, ut));
              } else
                ut && bn(P, Mt, te),
                  te.canActivateChecks.push(new H(G)),
                  pr(L, null, Ae.component ? (Mt ? Mt.children : null) : R, G, te);
            })(ut, Ae[ut.value.outlet], R, G.concat([ut.value]), te),
              delete Ae[ut.value.outlet];
          }),
          ln(Ae, (ut, Mt) => bn(ut, R.getContext(Mt), te)),
          te
        );
      }
      function bn(L, P, R) {
        const G = Wn(L),
          te = L.value;
        ln(G, (Ae, ut) => {
          bn(Ae, te.component ? (P ? P.children.getContext(ut) : null) : P, R);
        }),
          R.canDeactivateChecks.push(
            new F(te.component && P && P.outlet && P.outlet.isActivated ? P.outlet.component : null, te)
          );
      }
      class Vt {}
      function cn(L) {
        return new Re.y((P) => P.error(L));
      }
      class zn {
        constructor(P, R, G, te, Ae, ut) {
          (this.rootComponentType = P),
            (this.config = R),
            (this.urlTree = G),
            (this.url = te),
            (this.paramsInheritanceStrategy = Ae),
            (this.relativeLinkResolution = ut);
        }
        recognize() {
          const P = ds(
              this.urlTree.root,
              [],
              [],
              this.config.filter((ut) => void 0 === ut.redirectTo),
              this.relativeLinkResolution
            ).segmentGroup,
            R = this.processSegmentGroup(this.config, P, At);
          if (null === R) return null;
          const G = new Br(
              [],
              Object.freeze({}),
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              {},
              At,
              this.rootComponentType,
              null,
              this.urlTree.root,
              -1,
              {}
            ),
            te = new fn(G, R),
            Ae = new ps(this.url, te);
          return this.inheritParamsAndData(Ae._root), Ae;
        }
        inheritParamsAndData(P) {
          const R = P.value,
            G = ks(R, this.paramsInheritanceStrategy);
          (R.params = Object.freeze(G.params)),
            (R.data = Object.freeze(G.data)),
            P.children.forEach((te) => this.inheritParamsAndData(te));
        }
        processSegmentGroup(P, R, G) {
          return 0 === R.segments.length && R.hasChildren()
            ? this.processChildren(P, R)
            : this.processSegment(P, R, R.segments, G);
        }
        processChildren(P, R) {
          const G = [];
          for (const Ae of Object.keys(R.children)) {
            const ut = R.children[Ae],
              Mt = Ks(P, Ae),
              nn = this.processSegmentGroup(Mt, ut, Ae);
            if (null === nn) return null;
            G.push(...nn);
          }
          const te = si(G);
          return (
            (function ni(L) {
              L.sort((P, R) =>
                P.value.outlet === At ? -1 : R.value.outlet === At ? 1 : P.value.outlet.localeCompare(R.value.outlet)
              );
            })(te),
            te
          );
        }
        processSegment(P, R, G, te) {
          for (const Ae of P) {
            const ut = this.processSegmentAgainstRoute(Ae, R, G, te);
            if (null !== ut) return ut;
          }
          return be(R, G, te) ? [] : null;
        }
        processSegmentAgainstRoute(P, R, G, te) {
          if (P.redirectTo || !z(P, R, G, te)) return null;
          let Ae,
            ut = [],
            Mt = [];
          if ('**' === P.path) {
            const Xi = G.length > 0 ? an(G).parameters : {};
            Ae = new Br(
              G,
              Xi,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              rs(P),
              Zi(P),
              P.component,
              P,
              mr(R),
              cr(R) + G.length,
              Er(P)
            );
          } else {
            const Xi = us(R, P, G);
            if (!Xi.matched) return null;
            (ut = Xi.consumedSegments),
              (Mt = G.slice(Xi.lastChild)),
              (Ae = new Br(
                ut,
                Xi.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                rs(P),
                Zi(P),
                P.component,
                P,
                mr(R),
                cr(R) + ut.length,
                Er(P)
              ));
          }
          const nn = (function mi(L) {
              return L.children ? L.children : L.loadChildren ? L._loadedConfig.routes : [];
            })(P),
            { segmentGroup: On, slicedSegments: Mi } = ds(
              R,
              ut,
              Mt,
              nn.filter((Xi) => void 0 === Xi.redirectTo),
              this.relativeLinkResolution
            );
          if (0 === Mi.length && On.hasChildren()) {
            const Xi = this.processChildren(nn, On);
            return null === Xi ? null : [new fn(Ae, Xi)];
          }
          if (0 === nn.length && 0 === Mi.length) return [new fn(Ae, [])];
          const ai = Zi(P) === te,
            Di = this.processSegment(nn, On, Mi, ai ? At : te);
          return null === Di ? null : [new fn(Ae, Di)];
        }
      }
      function Xn(L) {
        const P = L.value.routeConfig;
        return P && '' === P.path && void 0 === P.redirectTo;
      }
      function si(L) {
        const P = [],
          R = new Set();
        for (const G of L) {
          if (!Xn(G)) {
            P.push(G);
            continue;
          }
          const te = P.find((Ae) => G.value.routeConfig === Ae.value.routeConfig);
          void 0 !== te ? (te.children.push(...G.children), R.add(te)) : P.push(G);
        }
        for (const G of R) {
          const te = si(G.children);
          P.push(new fn(G.value, te));
        }
        return P.filter((G) => !R.has(G));
      }
      function mr(L) {
        let P = L;
        for (; P._sourceSegment; ) P = P._sourceSegment;
        return P;
      }
      function cr(L) {
        let P = L,
          R = P._segmentIndexShift ? P._segmentIndexShift : 0;
        for (; P._sourceSegment; ) (P = P._sourceSegment), (R += P._segmentIndexShift ? P._segmentIndexShift : 0);
        return R - 1;
      }
      function rs(L) {
        return L.data || {};
      }
      function Er(L) {
        return L.resolve || {};
      }
      function bs(L) {
        return (0, $e.w)((P) => {
          const R = L(P);
          return R ? (0, m.D)(R).pipe((0, We.U)(() => P)) : (0, d.of)(P);
        });
      }
      class Lo {}
      class qs extends class va {
        shouldDetach(P) {
          return !1;
        }
        store(P, R) {}
        shouldAttach(P) {
          return !1;
        }
        retrieve(P) {
          return null;
        }
        shouldReuseRoute(P, R) {
          return P.routeConfig === R.routeConfig;
        }
      } {}
      const qo = new h.OlP('ROUTES');
      class ea {
        constructor(P, R, G, te) {
          (this.injector = P), (this.compiler = R), (this.onLoadStartListener = G), (this.onLoadEndListener = te);
        }
        load(P, R) {
          if (R._loader$) return R._loader$;
          this.onLoadStartListener && this.onLoadStartListener(R);
          const te = this.loadModuleFactory(R.loadChildren).pipe(
            (0, We.U)((Ae) => {
              this.onLoadEndListener && this.onLoadEndListener(R);
              const ut = Ae.create(P);
              return new gs(It(ut.injector.get(qo, void 0, h.XFs.Self | h.XFs.Optional)).map(Or), ut);
            }),
            (0, De.K)((Ae) => {
              throw ((R._loader$ = void 0), Ae);
            })
          );
          return (R._loader$ = new fe.c(te, () => new ue.x()).pipe((0, Ft.x)())), R._loader$;
        }
        loadModuleFactory(P) {
          return An(P()).pipe(
            (0, qe.z)((R) => (R instanceof h.YKP ? (0, d.of)(R) : (0, m.D)(this.compiler.compileModuleAsync(R))))
          );
        }
      }
      class li {
        shouldProcessUrl(P) {
          return !0;
        }
        extract(P) {
          return P;
        }
        merge(P, R) {
          return P;
        }
      }
      function oi(L) {
        throw L;
      }
      function gi(L, P, R) {
        return P.parse('/');
      }
      function ir(L, P) {
        return (0, d.of)(null);
      }
      const Ri = { paths: 'exact', fragment: 'ignored', matrixParams: 'ignored', queryParams: 'exact' },
        fs = { paths: 'subset', fragment: 'ignored', matrixParams: 'ignored', queryParams: 'subset' };
      let Mr = (() => {
        class L {
          constructor(R, G, te, Ae, ut, Mt, nn) {
            (this.rootComponentType = R),
              (this.urlSerializer = G),
              (this.rootContexts = te),
              (this.location = Ae),
              (this.config = nn),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new ue.x()),
              (this.errorHandler = oi),
              (this.malformedUriErrorHandler = gi),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.hooks = { beforePreactivation: ir, afterPreactivation: ir }),
              (this.urlHandlingStrategy = new li()),
              (this.routeReuseStrategy = new qs()),
              (this.onSameUrlNavigation = 'ignore'),
              (this.paramsInheritanceStrategy = 'emptyOnly'),
              (this.urlUpdateStrategy = 'deferred'),
              (this.relativeLinkResolution = 'corrected'),
              (this.canceledNavigationResolution = 'replace'),
              (this.ngModule = ut.get(h.h0i)),
              (this.console = ut.get(h.c2e));
            const ai = ut.get(h.R0b);
            (this.isNgZoneEnabled = ai instanceof h.R0b && h.R0b.isInAngularZone()),
              this.resetConfig(nn),
              (this.currentUrlTree = (function Yn() {
                return new he(new Te([], {}), {}, null);
              })()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.configLoader = new ea(
                ut,
                Mt,
                (Di) => this.triggerEvent(new en(Di)),
                (Di) => this.triggerEvent(new xt(Di))
              )),
              (this.routerState = Nr(this.currentUrlTree, this.rootComponentType)),
              (this.transitions = new N.X({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: 'imperative',
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            var R;
            return null === (R = this.location.getState()) || void 0 === R ? void 0 : R.ɵrouterPageId;
          }
          setupNavigations(R) {
            const G = this.events;
            return R.pipe(
              (0, Qe.h)((te) => 0 !== te.id),
              (0, We.U)((te) =>
                Object.assign(Object.assign({}, te), { extractedUrl: this.urlHandlingStrategy.extract(te.rawUrl) })
              ),
              (0, $e.w)((te) => {
                let Ae = !1,
                  ut = !1;
                return (0, d.of)(te).pipe(
                  (0, Ve.b)((Mt) => {
                    this.currentNavigation = {
                      id: Mt.id,
                      initialUrl: Mt.currentRawUrl,
                      extractedUrl: Mt.extractedUrl,
                      trigger: Mt.source,
                      extras: Mt.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), { previousNavigation: null })
                        : null,
                    };
                  }),
                  (0, $e.w)((Mt) => {
                    const nn = this.browserUrlTree.toString(),
                      On =
                        !this.navigated || Mt.extractedUrl.toString() !== nn || nn !== this.currentUrlTree.toString();
                    if (
                      ('reload' === this.onSameUrlNavigation || On) &&
                      this.urlHandlingStrategy.shouldProcessUrl(Mt.rawUrl)
                    )
                      return (
                        ba(Mt.source) && (this.browserUrlTree = Mt.extractedUrl),
                        (0, d.of)(Mt).pipe(
                          (0, $e.w)((ai) => {
                            const Di = this.transitions.getValue();
                            return (
                              G.next(new Ct(ai.id, this.serializeUrl(ai.extractedUrl), ai.source, ai.restoredState)),
                              Di !== this.transitions.getValue() ? ee.E : Promise.resolve(ai)
                            );
                          }),
                          (function W(L, P, R, G) {
                            return (0, $e.w)((te) =>
                              (function di(L, P, R, G, te) {
                                return new Vi(L, P, R, G, te).apply();
                              })(L, P, R, te.extractedUrl, G).pipe(
                                (0, We.U)((Ae) => Object.assign(Object.assign({}, te), { urlAfterRedirects: Ae }))
                              )
                            );
                          })(this.ngModule.injector, this.configLoader, this.urlSerializer, this.config),
                          (0, Ve.b)((ai) => {
                            this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), {
                              finalUrl: ai.urlAfterRedirects,
                            });
                          }),
                          (function Jo(L, P, R, G, te) {
                            return (0, qe.z)((Ae) =>
                              (function Tn(L, P, R, G, te = 'emptyOnly', Ae = 'legacy') {
                                try {
                                  const ut = new zn(L, P, R, G, te, Ae).recognize();
                                  return null === ut ? cn(new Vt()) : (0, d.of)(ut);
                                } catch (ut) {
                                  return cn(ut);
                                }
                              })(L, P, Ae.urlAfterRedirects, R(Ae.urlAfterRedirects), G, te).pipe(
                                (0, We.U)((ut) => Object.assign(Object.assign({}, Ae), { targetSnapshot: ut }))
                              )
                            );
                          })(
                            this.rootComponentType,
                            this.config,
                            (ai) => this.serializeUrl(ai),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          (0, Ve.b)((ai) => {
                            if ('eager' === this.urlUpdateStrategy) {
                              if (!ai.extras.skipLocationChange) {
                                const Xi = this.urlHandlingStrategy.merge(ai.urlAfterRedirects, ai.rawUrl);
                                this.setBrowserUrl(Xi, ai);
                              }
                              this.browserUrlTree = ai.urlAfterRedirects;
                            }
                            const Di = new Ue(
                              ai.id,
                              this.serializeUrl(ai.extractedUrl),
                              this.serializeUrl(ai.urlAfterRedirects),
                              ai.targetSnapshot
                            );
                            G.next(Di);
                          })
                        )
                      );
                    if (On && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                      const { id: Di, extractedUrl: Xi, source: zi, restoredState: Qs, extras: wo } = Mt,
                        Eo = new Ct(Di, this.serializeUrl(Xi), zi, Qs);
                      G.next(Eo);
                      const Bs = Nr(Xi, this.rootComponentType).snapshot;
                      return (0, d.of)(
                        Object.assign(Object.assign({}, Mt), {
                          targetSnapshot: Bs,
                          urlAfterRedirects: Xi,
                          extras: Object.assign(Object.assign({}, wo), { skipLocationChange: !1, replaceUrl: !1 }),
                        })
                      );
                    }
                    return (this.rawUrlTree = Mt.rawUrl), Mt.resolve(null), ee.E;
                  }),
                  bs((Mt) => {
                    const {
                      targetSnapshot: nn,
                      id: On,
                      extractedUrl: Mi,
                      rawUrl: ai,
                      extras: { skipLocationChange: Di, replaceUrl: Xi },
                    } = Mt;
                    return this.hooks.beforePreactivation(nn, {
                      navigationId: On,
                      appliedUrlTree: Mi,
                      rawUrlTree: ai,
                      skipLocationChange: !!Di,
                      replaceUrl: !!Xi,
                    });
                  }),
                  (0, Ve.b)((Mt) => {
                    const nn = new bt(
                      Mt.id,
                      this.serializeUrl(Mt.extractedUrl),
                      this.serializeUrl(Mt.urlAfterRedirects),
                      Mt.targetSnapshot
                    );
                    this.triggerEvent(nn);
                  }),
                  (0, We.U)((Mt) =>
                    Object.assign(Object.assign({}, Mt), {
                      guards: Me(Mt.targetSnapshot, Mt.currentSnapshot, this.rootContexts),
                    })
                  ),
                  (function oe(L, P) {
                    return (0, qe.z)((R) => {
                      const {
                        targetSnapshot: G,
                        currentSnapshot: te,
                        guards: { canActivateChecks: Ae, canDeactivateChecks: ut },
                      } = R;
                      return 0 === ut.length && 0 === Ae.length
                        ? (0, d.of)(Object.assign(Object.assign({}, R), { guardsResult: !0 }))
                        : (function E(L, P, R, G) {
                            return (0, m.D)(L).pipe(
                              (0, qe.z)((te) =>
                                (function gt(L, P, R, G, te) {
                                  const Ae = P && P.routeConfig ? P.routeConfig.canDeactivate : null;
                                  if (!Ae || 0 === Ae.length) return (0, d.of)(!0);
                                  const ut = Ae.map((Mt) => {
                                    const nn = Pn(Mt, P, te);
                                    let On;
                                    if (
                                      (function cs(L) {
                                        return L && Ns(L.canDeactivate);
                                      })(nn)
                                    )
                                      On = An(nn.canDeactivate(L, P, R, G));
                                    else {
                                      if (!Ns(nn)) throw new Error('Invalid CanDeactivate guard');
                                      On = An(nn(L, P, R, G));
                                    }
                                    return On.pipe((0, it.P)());
                                  });
                                  return (0, d.of)(ut).pipe(ns());
                                })(te.component, te.route, R, P, G)
                              ),
                              (0, it.P)((te) => !0 !== te, !0)
                            );
                          })(ut, G, te, L).pipe(
                            (0, qe.z)((Mt) =>
                              Mt &&
                              (function _a(L) {
                                return 'boolean' == typeof L;
                              })(Mt)
                                ? (function M(L, P, R, G) {
                                    return (0, m.D)(P).pipe(
                                      (0, Ye.b)((te) =>
                                        (0, Fe.z)(
                                          (function ce(L, P) {
                                            return null !== L && P && P(new Gt(L)), (0, d.of)(!0);
                                          })(te.route.parent, G),
                                          (function B(L, P) {
                                            return null !== L && P && P(new ot(L)), (0, d.of)(!0);
                                          })(te.route, G),
                                          (function pt(L, P, R) {
                                            const G = P[P.length - 1],
                                              Ae = P.slice(0, P.length - 1)
                                                .reverse()
                                                .map((ut) =>
                                                  (function Xt(L) {
                                                    const P = L.routeConfig ? L.routeConfig.canActivateChild : null;
                                                    return P && 0 !== P.length ? { node: L, guards: P } : null;
                                                  })(ut)
                                                )
                                                .filter((ut) => null !== ut)
                                                .map((ut) =>
                                                  (0, Ne.P)(() => {
                                                    const Mt = ut.guards.map((nn) => {
                                                      const On = Pn(nn, ut.node, R);
                                                      let Mi;
                                                      if (
                                                        (function ys(L) {
                                                          return L && Ns(L.canActivateChild);
                                                        })(On)
                                                      )
                                                        Mi = An(On.canActivateChild(G, L));
                                                      else {
                                                        if (!Ns(On)) throw new Error('Invalid CanActivateChild guard');
                                                        Mi = An(On(G, L));
                                                      }
                                                      return Mi.pipe((0, it.P)());
                                                    });
                                                    return (0, d.of)(Mt).pipe(ns());
                                                  })
                                                );
                                            return (0, d.of)(Ae).pipe(ns());
                                          })(L, te.path, R),
                                          (function Ge(L, P, R) {
                                            const G = P.routeConfig ? P.routeConfig.canActivate : null;
                                            if (!G || 0 === G.length) return (0, d.of)(!0);
                                            const te = G.map((Ae) =>
                                              (0, Ne.P)(() => {
                                                const ut = Pn(Ae, P, R);
                                                let Mt;
                                                if (
                                                  (function _s(L) {
                                                    return L && Ns(L.canActivate);
                                                  })(ut)
                                                )
                                                  Mt = An(ut.canActivate(P, L));
                                                else {
                                                  if (!Ns(ut)) throw new Error('Invalid CanActivate guard');
                                                  Mt = An(ut(P, L));
                                                }
                                                return Mt.pipe((0, it.P)());
                                              })
                                            );
                                            return (0, d.of)(te).pipe(ns());
                                          })(L, te.route, R)
                                        )
                                      ),
                                      (0, it.P)((te) => !0 !== te, !0)
                                    );
                                  })(G, Ae, L, P)
                                : (0, d.of)(Mt)
                            ),
                            (0, We.U)((Mt) => Object.assign(Object.assign({}, R), { guardsResult: Mt }))
                          );
                    });
                  })(this.ngModule.injector, (Mt) => this.triggerEvent(Mt)),
                  (0, Ve.b)((Mt) => {
                    if (Hr(Mt.guardsResult)) {
                      const On = Se(`Redirecting to "${this.serializeUrl(Mt.guardsResult)}"`);
                      throw ((On.url = Mt.guardsResult), On);
                    }
                    const nn = new at(
                      Mt.id,
                      this.serializeUrl(Mt.extractedUrl),
                      this.serializeUrl(Mt.urlAfterRedirects),
                      Mt.targetSnapshot,
                      !!Mt.guardsResult
                    );
                    this.triggerEvent(nn);
                  }),
                  (0, Qe.h)(
                    (Mt) => !!Mt.guardsResult || (this.restoreHistory(Mt), this.cancelNavigationTransition(Mt, ''), !1)
                  ),
                  bs((Mt) => {
                    if (Mt.guards.canActivateChecks.length)
                      return (0, d.of)(Mt).pipe(
                        (0, Ve.b)((nn) => {
                          const On = new mt(
                            nn.id,
                            this.serializeUrl(nn.extractedUrl),
                            this.serializeUrl(nn.urlAfterRedirects),
                            nn.targetSnapshot
                          );
                          this.triggerEvent(On);
                        }),
                        (0, $e.w)((nn) => {
                          let On = !1;
                          return (0, d.of)(nn).pipe(
                            (function Yr(L, P) {
                              return (0, qe.z)((R) => {
                                const {
                                  targetSnapshot: G,
                                  guards: { canActivateChecks: te },
                                } = R;
                                if (!te.length) return (0, d.of)(R);
                                let Ae = 0;
                                return (0, m.D)(te).pipe(
                                  (0, Ye.b)((ut) =>
                                    (function Kr(L, P, R, G) {
                                      return (function hs(L, P, R, G) {
                                        const te = Object.keys(L);
                                        if (0 === te.length) return (0, d.of)({});
                                        const Ae = {};
                                        return (0, m.D)(te).pipe(
                                          (0, qe.z)((ut) =>
                                            (function Fo(L, P, R, G) {
                                              const te = Pn(L, P, G);
                                              return An(te.resolve ? te.resolve(P, R) : te(P, R));
                                            })(L[ut], P, R, G).pipe(
                                              (0, Ve.b)((Mt) => {
                                                Ae[ut] = Mt;
                                              })
                                            )
                                          ),
                                          lt(1),
                                          (0, qe.z)(() => (Object.keys(Ae).length === te.length ? (0, d.of)(Ae) : ee.E))
                                        );
                                      })(L._resolve, L, P, G).pipe(
                                        (0, We.U)(
                                          (Ae) => (
                                            (L._resolvedData = Ae),
                                            (L.data = Object.assign(Object.assign({}, L.data), ks(L, R).resolve)),
                                            null
                                          )
                                        )
                                      );
                                    })(ut.route, G, L, P)
                                  ),
                                  (0, Ve.b)(() => Ae++),
                                  lt(1),
                                  (0, qe.z)((ut) => (Ae === te.length ? (0, d.of)(R) : ee.E))
                                );
                              });
                            })(this.paramsInheritanceStrategy, this.ngModule.injector),
                            (0, Ve.b)({
                              next: () => (On = !0),
                              complete: () => {
                                On ||
                                  (this.restoreHistory(nn),
                                  this.cancelNavigationTransition(
                                    nn,
                                    "At least one route resolver didn't emit any value."
                                  ));
                              },
                            })
                          );
                        }),
                        (0, Ve.b)((nn) => {
                          const On = new Nt(
                            nn.id,
                            this.serializeUrl(nn.extractedUrl),
                            this.serializeUrl(nn.urlAfterRedirects),
                            nn.targetSnapshot
                          );
                          this.triggerEvent(On);
                        })
                      );
                  }),
                  bs((Mt) => {
                    const {
                      targetSnapshot: nn,
                      id: On,
                      extractedUrl: Mi,
                      rawUrl: ai,
                      extras: { skipLocationChange: Di, replaceUrl: Xi },
                    } = Mt;
                    return this.hooks.afterPreactivation(nn, {
                      navigationId: On,
                      appliedUrlTree: Mi,
                      rawUrlTree: ai,
                      skipLocationChange: !!Di,
                      replaceUrl: !!Xi,
                    });
                  }),
                  (0, We.U)((Mt) => {
                    const nn = (function Ti(L, P, R) {
                      const G = Vr(L, P._root, R ? R._root : void 0);
                      return new Nn(G, P);
                    })(this.routeReuseStrategy, Mt.targetSnapshot, Mt.currentRouterState);
                    return Object.assign(Object.assign({}, Mt), { targetRouterState: nn });
                  }),
                  (0, Ve.b)((Mt) => {
                    (this.currentUrlTree = Mt.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(Mt.urlAfterRedirects, Mt.rawUrl)),
                      (this.routerState = Mt.targetRouterState),
                      'deferred' === this.urlUpdateStrategy &&
                        (Mt.extras.skipLocationChange || this.setBrowserUrl(this.rawUrlTree, Mt),
                        (this.browserUrlTree = Mt.urlAfterRedirects));
                  }),
                  ((L, P, R) =>
                    (0, We.U)((G) => (new Ls(P, G.targetRouterState, G.currentRouterState, R).activate(L), G)))(
                    this.rootContexts,
                    this.routeReuseStrategy,
                    (Mt) => this.triggerEvent(Mt)
                  ),
                  (0, Ve.b)({
                    next() {
                      Ae = !0;
                    },
                    complete() {
                      Ae = !0;
                    },
                  }),
                  (0, kt.x)(() => {
                    var Mt;
                    Ae ||
                      ut ||
                      this.cancelNavigationTransition(
                        te,
                        `Navigation ID ${te.id} is not equal to the current navigation id ${this.navigationId}`
                      ),
                      (null === (Mt = this.currentNavigation) || void 0 === Mt ? void 0 : Mt.id) === te.id &&
                        (this.currentNavigation = null);
                  }),
                  (0, De.K)((Mt) => {
                    if (
                      ((ut = !0),
                      (function Be(L) {
                        return L && L[ht];
                      })(Mt))
                    ) {
                      const nn = Hr(Mt.url);
                      nn || ((this.navigated = !0), this.restoreHistory(te, !0));
                      const On = new Et(te.id, this.serializeUrl(te.extractedUrl), Mt.message);
                      G.next(On),
                        nn
                          ? setTimeout(() => {
                              const Mi = this.urlHandlingStrategy.merge(Mt.url, this.rawUrlTree),
                                ai = {
                                  skipLocationChange: te.extras.skipLocationChange,
                                  replaceUrl: 'eager' === this.urlUpdateStrategy || ba(te.source),
                                };
                              this.scheduleNavigation(Mi, 'imperative', null, ai, {
                                resolve: te.resolve,
                                reject: te.reject,
                                promise: te.promise,
                              });
                            }, 0)
                          : te.resolve(!1);
                    } else {
                      this.restoreHistory(te, !0);
                      const nn = new yt(te.id, this.serializeUrl(te.extractedUrl), Mt);
                      G.next(nn);
                      try {
                        te.resolve(this.errorHandler(Mt));
                      } catch (On) {
                        te.reject(On);
                      }
                    }
                    return ee.E;
                  })
                );
              })
            );
          }
          resetRootComponentType(R) {
            (this.rootComponentType = R), (this.routerState.root.component = this.rootComponentType);
          }
          setTransition(R) {
            this.transitions.next(Object.assign(Object.assign({}, this.transitions.value), R));
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId && this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((R) => {
                const G = 'popstate' === R.type ? 'popstate' : 'hashchange';
                'popstate' === G &&
                  setTimeout(() => {
                    var te;
                    const Ae = { replaceUrl: !0 },
                      ut = (null === (te = R.state) || void 0 === te ? void 0 : te.navigationId) ? R.state : null;
                    if (ut) {
                      const nn = Object.assign({}, ut);
                      delete nn.navigationId, delete nn.ɵrouterPageId, 0 !== Object.keys(nn).length && (Ae.state = nn);
                    }
                    const Mt = this.parseUrl(R.url);
                    this.scheduleNavigation(Mt, G, ut, Ae);
                  }, 0);
              }));
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(R) {
            this.events.next(R);
          }
          resetConfig(R) {
            Gr(R), (this.config = R.map(Or)), (this.navigated = !1), (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(), (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(R, G = {}) {
            const { relativeTo: te, queryParams: Ae, fragment: ut, queryParamsHandling: Mt, preserveFragment: nn } = G,
              On = te || this.routerState.root,
              Mi = nn ? this.currentUrlTree.fragment : ut;
            let ai = null;
            switch (Mt) {
              case 'merge':
                ai = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), Ae);
                break;
              case 'preserve':
                ai = this.currentUrlTree.queryParams;
                break;
              default:
                ai = Ae || null;
            }
            return (
              null !== ai && (ai = this.removeEmptyProps(ai)),
              (function tr(L, P, R, G, te) {
                if (0 === R.length) return ms(P.root, P.root, P, G, te);
                const Ae = (function ko(L) {
                  if ('string' == typeof L[0] && 1 === L.length && '/' === L[0]) return new Bn(!0, 0, L);
                  let P = 0,
                    R = !1;
                  const G = L.reduce((te, Ae, ut) => {
                    if ('object' == typeof Ae && null != Ae) {
                      if (Ae.outlets) {
                        const Mt = {};
                        return (
                          ln(Ae.outlets, (nn, On) => {
                            Mt[On] = 'string' == typeof nn ? nn.split('/') : nn;
                          }),
                          [...te, { outlets: Mt }]
                        );
                      }
                      if (Ae.segmentPath) return [...te, Ae.segmentPath];
                    }
                    return 'string' != typeof Ae
                      ? [...te, Ae]
                      : 0 === ut
                      ? (Ae.split('/').forEach((Mt, nn) => {
                          (0 == nn && '.' === Mt) ||
                            (0 == nn && '' === Mt ? (R = !0) : '..' === Mt ? P++ : '' != Mt && te.push(Mt));
                        }),
                        te)
                      : [...te, Ae];
                  }, []);
                  return new Bn(R, P, G);
                })(R);
                if (Ae.toRoot()) return ms(P.root, new Te([], {}), P, G, te);
                const ut = (function Li(L, P, R) {
                    if (L.isAbsolute) return new ei(P.root, !0, 0);
                    if (-1 === R.snapshot._lastPathIndex) {
                      const Ae = R.snapshot._urlSegment;
                      return new ei(Ae, Ae === P.root, 0);
                    }
                    const G = kr(L.commands[0]) ? 0 : 1;
                    return (function Ur(L, P, R) {
                      let G = L,
                        te = P,
                        Ae = R;
                      for (; Ae > te; ) {
                        if (((Ae -= te), (G = G.parent), !G)) throw new Error("Invalid number of '../'");
                        te = G.segments.length;
                      }
                      return new ei(G, !1, te - Ae);
                    })(R.snapshot._urlSegment, R.snapshot._lastPathIndex + G, L.numberOfDoubleDots);
                  })(Ae, P, L),
                  Mt = ut.processChildren
                    ? Wo(ut.segmentGroup, ut.index, Ae.commands)
                    : ls(ut.segmentGroup, ut.index, Ae.commands);
                return ms(ut.segmentGroup, Mt, P, G, te);
              })(On, this.currentUrlTree, R, ai, null != Mi ? Mi : null)
            );
          }
          navigateByUrl(R, G = { skipLocationChange: !1 }) {
            const te = Hr(R) ? R : this.parseUrl(R),
              Ae = this.urlHandlingStrategy.merge(te, this.rawUrlTree);
            return this.scheduleNavigation(Ae, 'imperative', null, G);
          }
          navigate(R, G = { skipLocationChange: !1 }) {
            return (
              (function Sr(L) {
                for (let P = 0; P < L.length; P++) {
                  const R = L[P];
                  if (null == R) throw new Error(`The requested path contains ${R} segment at index ${P}`);
                }
              })(R),
              this.navigateByUrl(this.createUrlTree(R, G), G)
            );
          }
          serializeUrl(R) {
            return this.urlSerializer.serialize(R);
          }
          parseUrl(R) {
            let G;
            try {
              G = this.urlSerializer.parse(R);
            } catch (te) {
              G = this.malformedUriErrorHandler(te, this.urlSerializer, R);
            }
            return G;
          }
          isActive(R, G) {
            let te;
            if (((te = !0 === G ? Object.assign({}, Ri) : !1 === G ? Object.assign({}, fs) : G), Hr(R)))
              return Wt(this.currentUrlTree, R, te);
            const Ae = this.parseUrl(R);
            return Wt(this.currentUrlTree, Ae, te);
          }
          removeEmptyProps(R) {
            return Object.keys(R).reduce((G, te) => {
              const Ae = R[te];
              return null != Ae && (G[te] = Ae), G;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (R) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = R.id),
                  (this.currentPageId = R.targetPageId),
                  this.events.next(
                    new st(R.id, this.serializeUrl(R.extractedUrl), this.serializeUrl(this.currentUrlTree))
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  R.resolve(!0);
              },
              (R) => {
                this.console.warn(`Unhandled Navigation Error: ${R}`);
              }
            );
          }
          scheduleNavigation(R, G, te, Ae, ut) {
            var Mt, nn, On;
            if (this.disposed) return Promise.resolve(!1);
            const Mi = this.transitions.value,
              ai = ba(G) && Mi && !ba(Mi.source),
              Di = Mi.rawUrl.toString() === R.toString(),
              Xi = Mi.id === (null === (Mt = this.currentNavigation) || void 0 === Mt ? void 0 : Mt.id);
            if (ai && Di && Xi) return Promise.resolve(!0);
            let Qs, wo, Eo;
            ut
              ? ((Qs = ut.resolve), (wo = ut.reject), (Eo = ut.promise))
              : (Eo = new Promise((Ol, Fa) => {
                  (Qs = Ol), (wo = Fa);
                }));
            const Bs = ++this.navigationId;
            let lo;
            return (
              'computed' === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (te = this.location.getState()),
                  (lo =
                    te && te.ɵrouterPageId
                      ? te.ɵrouterPageId
                      : Ae.replaceUrl || Ae.skipLocationChange
                      ? null !== (nn = this.browserPageId) && void 0 !== nn
                        ? nn
                        : 0
                      : (null !== (On = this.browserPageId) && void 0 !== On ? On : 0) + 1))
                : (lo = 0),
              this.setTransition({
                id: Bs,
                targetPageId: lo,
                source: G,
                restoredState: te,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: R,
                extras: Ae,
                resolve: Qs,
                reject: wo,
                promise: Eo,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              Eo.catch((Ol) => Promise.reject(Ol))
            );
          }
          setBrowserUrl(R, G) {
            const te = this.urlSerializer.serialize(R),
              Ae = Object.assign(Object.assign({}, G.extras.state), this.generateNgRouterState(G.id, G.targetPageId));
            this.location.isCurrentPathEqualTo(te) || G.extras.replaceUrl
              ? this.location.replaceState(te, '', Ae)
              : this.location.go(te, '', Ae);
          }
          restoreHistory(R, G = !1) {
            var te, Ae;
            if ('computed' === this.canceledNavigationResolution) {
              const ut = this.currentPageId - R.targetPageId;
              ('popstate' !== R.source &&
                'eager' !== this.urlUpdateStrategy &&
                this.currentUrlTree !==
                  (null === (te = this.currentNavigation) || void 0 === te ? void 0 : te.finalUrl)) ||
              0 === ut
                ? this.currentUrlTree ===
                    (null === (Ae = this.currentNavigation) || void 0 === Ae ? void 0 : Ae.finalUrl) &&
                  0 === ut &&
                  (this.resetState(R), (this.browserUrlTree = R.currentUrlTree), this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(ut);
            } else
              'replace' === this.canceledNavigationResolution &&
                (G && this.resetState(R), this.resetUrlToCurrentUrlTree());
          }
          resetState(R) {
            (this.routerState = R.currentRouterState),
              (this.currentUrlTree = R.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, R.rawUrl));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              '',
              this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId)
            );
          }
          cancelNavigationTransition(R, G) {
            const te = new Et(R.id, this.serializeUrl(R.extractedUrl), G);
            this.triggerEvent(te), R.resolve(!1);
          }
          generateNgRouterState(R, G) {
            return 'computed' === this.canceledNavigationResolution
              ? { navigationId: R, ɵrouterPageId: G }
              : { navigationId: R };
          }
        }
        return (
          (L.ɵfac = function (R) {
            h.$Z();
          }),
          (L.ɵprov = h.Yz7({ token: L, factory: L.ɵfac })),
          L
        );
      })();
      function ba(L) {
        return 'imperative' !== L;
      }
      let Ca = (() => {
          class L {
            constructor(R, G, te, Ae, ut) {
              (this.router = R),
                (this.route = G),
                (this.tabIndexAttribute = te),
                (this.renderer = Ae),
                (this.el = ut),
                (this.commands = null),
                (this.onChanges = new ue.x()),
                this.setTabIndexIfNotOnNativeEl('0');
            }
            setTabIndexIfNotOnNativeEl(R) {
              if (null != this.tabIndexAttribute) return;
              const G = this.renderer,
                te = this.el.nativeElement;
              null !== R ? G.setAttribute(te, 'tabindex', R) : G.removeAttribute(te, 'tabindex');
            }
            ngOnChanges(R) {
              this.onChanges.next(this);
            }
            set routerLink(R) {
              null != R
                ? ((this.commands = Array.isArray(R) ? R : [R]), this.setTabIndexIfNotOnNativeEl('0'))
                : ((this.commands = null), this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick() {
              if (null === this.urlTree) return !0;
              const R = {
                skipLocationChange: Cs(this.skipLocationChange),
                replaceUrl: Cs(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, R), !0;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Cs(this.preserveFragment),
                  });
            }
          }
          return (
            (L.ɵfac = function (R) {
              return new (R || L)(h.Y36(Mr), h.Y36(ci), h.$8M('tabindex'), h.Y36(h.Qsj), h.Y36(h.SBq));
            }),
            (L.ɵdir = h.lG2({
              type: L,
              selectors: [['', 'routerLink', '', 5, 'a', 5, 'area']],
              hostBindings: function (R, G) {
                1 & R &&
                  h.NdJ('click', function () {
                    return G.onClick();
                  });
              },
              inputs: {
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
                relativeTo: 'relativeTo',
                routerLink: 'routerLink',
              },
              features: [h.TTD],
            })),
            L
          );
        })(),
        Gi = (() => {
          class L {
            constructor(R, G, te) {
              (this.router = R),
                (this.route = G),
                (this.locationStrategy = te),
                (this.commands = null),
                (this.href = null),
                (this.onChanges = new ue.x()),
                (this.subscription = R.events.subscribe((Ae) => {
                  Ae instanceof st && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(R) {
              this.commands = null != R ? (Array.isArray(R) ? R : [R]) : null;
            }
            ngOnChanges(R) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(R, G, te, Ae, ut) {
              if (
                0 !== R ||
                G ||
                te ||
                Ae ||
                ut ||
                ('string' == typeof this.target && '_self' != this.target) ||
                null === this.urlTree
              )
                return !0;
              const Mt = {
                skipLocationChange: Cs(this.skipLocationChange),
                replaceUrl: Cs(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, Mt), !1;
            }
            updateTargetUrlAndHref() {
              this.href =
                null !== this.urlTree
                  ? this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree))
                  : null;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Cs(this.preserveFragment),
                  });
            }
          }
          return (
            (L.ɵfac = function (R) {
              return new (R || L)(h.Y36(Mr), h.Y36(ci), h.Y36(on.S$));
            }),
            (L.ɵdir = h.lG2({
              type: L,
              selectors: [
                ['a', 'routerLink', ''],
                ['area', 'routerLink', ''],
              ],
              hostVars: 2,
              hostBindings: function (R, G) {
                1 & R &&
                  h.NdJ('click', function (Ae) {
                    return G.onClick(Ae.button, Ae.ctrlKey, Ae.shiftKey, Ae.altKey, Ae.metaKey);
                  }),
                  2 & R && h.uIk('target', G.target)('href', G.href, h.LSH);
              },
              inputs: {
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
                relativeTo: 'relativeTo',
                routerLink: 'routerLink',
              },
              features: [h.TTD],
            })),
            L
          );
        })();
      function Cs(L) {
        return '' === L || !!L;
      }
      let qr = (() => {
        class L {
          constructor(R, G, te, Ae, ut, Mt) {
            (this.router = R),
              (this.element = G),
              (this.renderer = te),
              (this.cdr = Ae),
              (this.link = ut),
              (this.linkWithHref = Mt),
              (this.classes = []),
              (this.isActive = !1),
              (this.routerLinkActiveOptions = { exact: !1 }),
              (this.isActiveChange = new h.vpe()),
              (this.routerEventsSubscription = R.events.subscribe((nn) => {
                nn instanceof st && this.update();
              }));
          }
          ngAfterContentInit() {
            (0, d.of)(this.links.changes, this.linksWithHrefs.changes, (0, d.of)(null))
              .pipe((0, St.J)())
              .subscribe((R) => {
                this.update(), this.subscribeToEachLinkOnChanges();
              });
          }
          subscribeToEachLinkOnChanges() {
            var R;
            null === (R = this.linkInputChangesSubscription) || void 0 === R || R.unsubscribe();
            const G = [...this.links.toArray(), ...this.linksWithHrefs.toArray(), this.link, this.linkWithHref]
              .filter((te) => !!te)
              .map((te) => te.onChanges);
            this.linkInputChangesSubscription = (0, m.D)(G)
              .pipe((0, St.J)())
              .subscribe((te) => {
                this.isActive !== this.isLinkActive(this.router)(te) && this.update();
              });
          }
          set routerLinkActive(R) {
            const G = Array.isArray(R) ? R : R.split(' ');
            this.classes = G.filter((te) => !!te);
          }
          ngOnChanges(R) {
            this.update();
          }
          ngOnDestroy() {
            var R;
            this.routerEventsSubscription.unsubscribe(),
              null === (R = this.linkInputChangesSubscription) || void 0 === R || R.unsubscribe();
          }
          update() {
            !this.links ||
              !this.linksWithHrefs ||
              !this.router.navigated ||
              Promise.resolve().then(() => {
                const R = this.hasActiveLinks();
                this.isActive !== R &&
                  ((this.isActive = R),
                  this.cdr.markForCheck(),
                  this.classes.forEach((G) => {
                    R
                      ? this.renderer.addClass(this.element.nativeElement, G)
                      : this.renderer.removeClass(this.element.nativeElement, G);
                  }),
                  this.isActiveChange.emit(R));
              });
          }
          isLinkActive(R) {
            const G = (function ws(L) {
              return !!L.paths;
            })(this.routerLinkActiveOptions)
              ? this.routerLinkActiveOptions
              : this.routerLinkActiveOptions.exact || !1;
            return (te) => !!te.urlTree && R.isActive(te.urlTree, G);
          }
          hasActiveLinks() {
            const R = this.isLinkActive(this.router);
            return (
              (this.link && R(this.link)) ||
              (this.linkWithHref && R(this.linkWithHref)) ||
              this.links.some(R) ||
              this.linksWithHrefs.some(R)
            );
          }
        }
        return (
          (L.ɵfac = function (R) {
            return new (R || L)(h.Y36(Mr), h.Y36(h.SBq), h.Y36(h.Qsj), h.Y36(h.sBO), h.Y36(Ca, 8), h.Y36(Gi, 8));
          }),
          (L.ɵdir = h.lG2({
            type: L,
            selectors: [['', 'routerLinkActive', '']],
            contentQueries: function (R, G, te) {
              if ((1 & R && (h.Suo(te, Ca, 5), h.Suo(te, Gi, 5)), 2 & R)) {
                let Ae;
                h.iGM((Ae = h.CRH())) && (G.links = Ae), h.iGM((Ae = h.CRH())) && (G.linksWithHrefs = Ae);
              }
            },
            inputs: { routerLinkActiveOptions: 'routerLinkActiveOptions', routerLinkActive: 'routerLinkActive' },
            outputs: { isActiveChange: 'isActiveChange' },
            exportAs: ['routerLinkActive'],
            features: [h.TTD],
          })),
          L
        );
      })();
      class ao {}
      class qa {
        preload(P, R) {
          return R().pipe((0, De.K)(() => (0, d.of)(null)));
        }
      }
      class Oc {
        preload(P, R) {
          return (0, d.of)(null);
        }
      }
      let No = (() => {
          class L {
            constructor(R, G, te, Ae) {
              (this.router = R),
                (this.injector = te),
                (this.preloadingStrategy = Ae),
                (this.loader = new ea(
                  te,
                  G,
                  (nn) => R.triggerEvent(new en(nn)),
                  (nn) => R.triggerEvent(new xt(nn))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  (0, Qe.h)((R) => R instanceof st),
                  (0, Ye.b)(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const R = this.injector.get(h.h0i);
              return this.processRoutes(R, this.router.config);
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
            processRoutes(R, G) {
              const te = [];
              for (const Ae of G)
                if (Ae.loadChildren && !Ae.canLoad && Ae._loadedConfig) {
                  const ut = Ae._loadedConfig;
                  te.push(this.processRoutes(ut.module, ut.routes));
                } else
                  Ae.loadChildren && !Ae.canLoad
                    ? te.push(this.preloadConfig(R, Ae))
                    : Ae.children && te.push(this.processRoutes(R, Ae.children));
              return (0, m.D)(te).pipe(
                (0, St.J)(),
                (0, We.U)((Ae) => {})
              );
            }
            preloadConfig(R, G) {
              return this.preloadingStrategy.preload(G, () =>
                (G._loadedConfig ? (0, d.of)(G._loadedConfig) : this.loader.load(R.injector, G)).pipe(
                  (0, qe.z)((Ae) => ((G._loadedConfig = Ae), this.processRoutes(Ae.module, Ae.routes)))
                )
              );
            }
          }
          return (
            (L.ɵfac = function (R) {
              return new (R || L)(h.LFG(Mr), h.LFG(h.Sil), h.LFG(h.zs3), h.LFG(ao));
            }),
            (L.ɵprov = h.Yz7({ token: L, factory: L.ɵfac })),
            L
          );
        })(),
        gr = (() => {
          class L {
            constructor(R, G, te = {}) {
              (this.router = R),
                (this.viewportScroller = G),
                (this.options = te),
                (this.lastId = 0),
                (this.lastSource = 'imperative'),
                (this.restoredId = 0),
                (this.store = {}),
                (te.scrollPositionRestoration = te.scrollPositionRestoration || 'disabled'),
                (te.anchorScrolling = te.anchorScrolling || 'disabled');
            }
            init() {
              'disabled' !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration('manual'),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((R) => {
                R instanceof Ct
                  ? ((this.store[this.lastId] = this.viewportScroller.getScrollPosition()),
                    (this.lastSource = R.navigationTrigger),
                    (this.restoredId = R.restoredState ? R.restoredState.navigationId : 0))
                  : R instanceof st &&
                    ((this.lastId = R.id),
                    this.scheduleScrollEvent(R, this.router.parseUrl(R.urlAfterRedirects).fragment));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((R) => {
                R instanceof hn &&
                  (R.position
                    ? 'top' === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : 'enabled' === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(R.position)
                    : R.anchor && 'enabled' === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(R.anchor)
                    : 'disabled' !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(R, G) {
              this.router.triggerEvent(
                new hn(R, 'popstate' === this.lastSource ? this.store[this.restoredId] : null, G)
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (L.ɵfac = function (R) {
              h.$Z();
            }),
            (L.ɵprov = h.Yz7({ token: L, factory: L.ɵfac })),
            L
          );
        })();
      const Zo = new h.OlP('ROUTER_CONFIGURATION'),
        ta = new h.OlP('ROUTER_FORROOT_GUARD'),
        ll = [
          on.Ye,
          { provide: Yt, useClass: _n },
          {
            provide: Mr,
            useFactory: function wa(L, P, R, G, te, Ae, ut = {}, Mt, nn) {
              const On = new Mr(null, L, P, R, G, te, It(Ae));
              return (
                Mt && (On.urlHandlingStrategy = Mt),
                nn && (On.routeReuseStrategy = nn),
                (function Zs(L, P) {
                  L.errorHandler && (P.errorHandler = L.errorHandler),
                    L.malformedUriErrorHandler && (P.malformedUriErrorHandler = L.malformedUriErrorHandler),
                    L.onSameUrlNavigation && (P.onSameUrlNavigation = L.onSameUrlNavigation),
                    L.paramsInheritanceStrategy && (P.paramsInheritanceStrategy = L.paramsInheritanceStrategy),
                    L.relativeLinkResolution && (P.relativeLinkResolution = L.relativeLinkResolution),
                    L.urlUpdateStrategy && (P.urlUpdateStrategy = L.urlUpdateStrategy),
                    L.canceledNavigationResolution && (P.canceledNavigationResolution = L.canceledNavigationResolution);
                })(ut, On),
                ut.enableTracing &&
                  On.events.subscribe((Mi) => {
                    var ai, Di;
                    null === (ai = console.group) ||
                      void 0 === ai ||
                      ai.call(console, `Router Event: ${Mi.constructor.name}`),
                      console.log(Mi.toString()),
                      console.log(Mi),
                      null === (Di = console.groupEnd) || void 0 === Di || Di.call(console);
                  }),
                On
              );
            },
            deps: [Yt, vs, on.Ye, h.zs3, h.Sil, qo, Zo, [class Vn {}, new h.FiY()], [Lo, new h.FiY()]],
          },
          vs,
          {
            provide: ci,
            useFactory: function ia(L) {
              return L.routerState.root;
            },
            deps: [Mr],
          },
          No,
          Oc,
          qa,
          { provide: Zo, useValue: { enableTracing: !1 } },
        ];
      function na() {
        return new h.PXZ('Router', Mr);
      }
      let Fc = (() => {
        class L {
          constructor(R, G) {}
          static forRoot(R, G) {
            return {
              ngModule: L,
              providers: [
                ll,
                Jl(R),
                { provide: ta, useFactory: Za, deps: [[Mr, new h.FiY(), new h.tp0()]] },
                { provide: Zo, useValue: G || {} },
                { provide: on.S$, useFactory: yu, deps: [on.lw, [new h.tBr(on.mr), new h.FiY()], Zo] },
                { provide: gr, useFactory: _u, deps: [Mr, on.EM, Zo] },
                { provide: ao, useExisting: G && G.preloadingStrategy ? G.preloadingStrategy : Oc },
                { provide: h.PXZ, multi: !0, useFactory: na },
                [
                  ec,
                  { provide: h.ip1, multi: !0, useFactory: ra, deps: [ec] },
                  { provide: Qo, useFactory: Pa, deps: [ec] },
                  { provide: h.tb, multi: !0, useExisting: Qo },
                ],
              ],
            };
          }
          static forChild(R) {
            return { ngModule: L, providers: [Jl(R)] };
          }
        }
        return (
          (L.ɵfac = function (R) {
            return new (R || L)(h.LFG(ta, 8), h.LFG(Mr, 8));
          }),
          (L.ɵmod = h.oAB({ type: L })),
          (L.ɵinj = h.cJS({})),
          L
        );
      })();
      function _u(L, P, R) {
        return R.scrollOffset && P.setOffset(R.scrollOffset), new gr(L, P, R);
      }
      function yu(L, P, R = {}) {
        return R.useHash ? new on.Do(L, P) : new on.b0(L, P);
      }
      function Za(L) {
        return 'guarded';
      }
      function Jl(L) {
        return [
          { provide: h.deG, multi: !0, useValue: L },
          { provide: qo, multi: !0, useValue: L },
        ];
      }
      let ec = (() => {
        class L {
          constructor(R) {
            (this.injector = R),
              (this.initNavigation = !1),
              (this.destroyed = !1),
              (this.resultOfPreactivationDone = new ue.x());
          }
          appInitializer() {
            return this.injector.get(on.V_, Promise.resolve(null)).then(() => {
              if (this.destroyed) return Promise.resolve(!0);
              let G = null;
              const te = new Promise((Mt) => (G = Mt)),
                Ae = this.injector.get(Mr),
                ut = this.injector.get(Zo);
              return (
                'disabled' === ut.initialNavigation
                  ? (Ae.setUpLocationChangeListener(), G(!0))
                  : 'enabled' === ut.initialNavigation || 'enabledBlocking' === ut.initialNavigation
                  ? ((Ae.hooks.afterPreactivation = () =>
                      this.initNavigation
                        ? (0, d.of)(null)
                        : ((this.initNavigation = !0), G(!0), this.resultOfPreactivationDone)),
                    Ae.initialNavigation())
                  : G(!0),
                te
              );
            });
          }
          bootstrapListener(R) {
            const G = this.injector.get(Zo),
              te = this.injector.get(No),
              Ae = this.injector.get(gr),
              ut = this.injector.get(Mr),
              Mt = this.injector.get(h.z2F);
            R === Mt.components[0] &&
              (('enabledNonBlocking' === G.initialNavigation || void 0 === G.initialNavigation) &&
                ut.initialNavigation(),
              te.setUpPreloading(),
              Ae.init(),
              ut.resetRootComponentType(Mt.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          ngOnDestroy() {
            this.destroyed = !0;
          }
        }
        return (
          (L.ɵfac = function (R) {
            return new (R || L)(h.LFG(h.zs3));
          }),
          (L.ɵprov = h.Yz7({ token: L, factory: L.ɵfac })),
          L
        );
      })();
      function ra(L) {
        return L.appInitializer.bind(L);
      }
      function Pa(L) {
        return L.bootstrapListener.bind(L);
      }
      const Qo = new h.OlP('Router Initializer');
    },
    3942: (un, ft, x) => {
      'use strict';
      x.d(ft, { Z: () => et });
      var h = x(2090),
        m = x(4859),
        d = x(9681),
        N = x(1877);
      class Ce {
        constructor(me, Ze) {
          (this._delegate = me),
            (this.firebase = Ze),
            (0, d._addComponent)(me, new m.wA('app-compat', () => this, 'PUBLIC')),
            (this.container = me.container);
        }
        get automaticDataCollectionEnabled() {
          return this._delegate.automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(me) {
          this._delegate.automaticDataCollectionEnabled = me;
        }
        get name() {
          return this._delegate.name;
        }
        get options() {
          return this._delegate.options;
        }
        delete() {
          return new Promise((me) => {
            this._delegate.checkDestroyed(), me();
          }).then(() => (this.firebase.INTERNAL.removeApp(this.name), (0, d.deleteApp)(this._delegate)));
        }
        _getService(me, Ze = d._DEFAULT_ENTRY_NAME) {
          var dt;
          this._delegate.checkDestroyed();
          const vt = this._delegate.container.getProvider(me);
          return (
            !vt.isInitialized() &&
              'EXPLICIT' === (null === (dt = vt.getComponent()) || void 0 === dt ? void 0 : dt.instantiationMode) &&
              vt.initialize(),
            vt.getImmediate({ identifier: Ze })
          );
        }
        _removeServiceInstance(me, Ze = d._DEFAULT_ENTRY_NAME) {
          this._delegate.container.getProvider(me).clearInstance(Ze);
        }
        _addComponent(me) {
          (0, d._addComponent)(this._delegate, me);
        }
        _addOrOverwriteComponent(me) {
          (0, d._addOrOverwriteComponent)(this._delegate, me);
        }
        toJSON() {
          return {
            name: this.name,
            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,
            options: this.options,
          };
        }
      }
      const He = new h.LL('app-compat', 'Firebase', {
          'no-app': "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
          'invalid-app-argument': 'firebase.{$appName}() takes either no argument or a Firebase App instance.',
        }),
        ee = (function Ne() {
          const lt = (function Fe(lt) {
            const me = {},
              Ze = {
                __esModule: !0,
                initializeApp: function We(Ie, De = {}) {
                  const Ye = d.initializeApp(Ie, De);
                  if ((0, h.r3)(me, Ye.name)) return me[Ye.name];
                  const it = new lt(Ye, Ze);
                  return (me[Ye.name] = it), it;
                },
                app: vt,
                registerVersion: d.registerVersion,
                setLogLevel: d.setLogLevel,
                onLog: d.onLog,
                apps: null,
                SDK_VERSION: d.SDK_VERSION,
                INTERNAL: {
                  registerComponent: function ge(Ie) {
                    const De = Ie.name,
                      Ye = De.replace('-compat', '');
                    if (d._registerComponent(Ie) && 'PUBLIC' === Ie.type) {
                      const it = (qe = vt()) => {
                        if ('function' != typeof qe[Ye]) throw He.create('invalid-app-argument', { appName: De });
                        return qe[Ye]();
                      };
                      void 0 !== Ie.serviceProps && (0, h.ZB)(it, Ie.serviceProps),
                        (Ze[Ye] = it),
                        (lt.prototype[Ye] = function (...qe) {
                          return this._getService.bind(this, De).apply(this, Ie.multipleInstances ? qe : []);
                        });
                    }
                    return 'PUBLIC' === Ie.type ? Ze[Ye] : null;
                  },
                  removeApp: function dt(Ie) {
                    delete me[Ie];
                  },
                  useAsService: function Ke(Ie, De) {
                    return 'serverAuth' === De ? null : De;
                  },
                  modularAPIs: d,
                },
              };
            function vt(Ie) {
              if (!(0, h.r3)(me, (Ie = Ie || d._DEFAULT_ENTRY_NAME))) throw He.create('no-app', { appName: Ie });
              return me[Ie];
            }
            return (
              (Ze.default = Ze),
              Object.defineProperty(Ze, 'apps', {
                get: function $e() {
                  return Object.keys(me).map((Ie) => me[Ie]);
                },
              }),
              (vt.App = lt),
              Ze
            );
          })(Ce);
          return (
            (lt.INTERNAL = Object.assign(Object.assign({}, lt.INTERNAL), {
              createFirebaseNamespace: Ne,
              extendNamespace: function me(Ze) {
                (0, h.ZB)(lt, Ze);
              },
              createSubscribe: h.ne,
              ErrorFactory: h.LL,
              deepExtend: h.ZB,
            })),
            lt
          );
        })(),
        fe = new N.Yd('@firebase/app-compat');
      if ((0, h.jU)() && void 0 !== self.firebase) {
        fe.warn(
          '\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  '
        );
        const lt = self.firebase.SDK_VERSION;
        lt &&
          lt.indexOf('LITE') >= 0 &&
          fe.warn(
            '\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    '
          );
      }
      const et = ee;
      !(function Oe(lt) {
        (0, d.registerVersion)('@firebase/app-compat', '0.1.16', lt);
      })();
    },
    9681: (un, ft, x) => {
      'use strict';
      x.r(ft),
        x.d(ft, {
          FirebaseError: () => N.ZR,
          SDK_VERSION: () => re,
          _DEFAULT_ENTRY_NAME: () => Je,
          _addComponent: () => yt,
          _addOrOverwriteComponent: () => Ue,
          _apps: () => st,
          _clearComponents: () => Nt,
          _components: () => Et,
          _getProvider: () => at,
          _registerComponent: () => bt,
          _removeServiceInstance: () => mt,
          deleteApp: () => At,
          getApp: () => Zt,
          getApps: () => hn,
          initializeApp: () => ot,
          onLog: () => ht,
          registerVersion: () => Le,
          setLogLevel: () => Se,
        });
      var h = x(5861),
        m = x(4859),
        d = x(1877),
        N = x(2090);
      class Ce {
        constructor(X) {
          this.container = X;
        }
        getPlatformInfoString() {
          return this.container
            .getProviders()
            .map((we) => {
              if (
                (function Re(Pe) {
                  const X = Pe.getComponent();
                  return 'VERSION' === (null == X ? void 0 : X.type);
                })(we)
              ) {
                const Rt = we.getImmediate();
                return `${Rt.library}/${Rt.version}`;
              }
              return null;
            })
            .filter((we) => we)
            .join(' ');
        }
      }
      const He = '@firebase/app',
        Ne = new d.Yd('@firebase/app'),
        Je = '[DEFAULT]',
        Ct = {
          [He]: 'fire-core',
          '@firebase/app-compat': 'fire-core-compat',
          '@firebase/analytics': 'fire-analytics',
          '@firebase/analytics-compat': 'fire-analytics-compat',
          '@firebase/app-check': 'fire-app-check',
          '@firebase/app-check-compat': 'fire-app-check-compat',
          '@firebase/auth': 'fire-auth',
          '@firebase/auth-compat': 'fire-auth-compat',
          '@firebase/database': 'fire-rtdb',
          '@firebase/database-compat': 'fire-rtdb-compat',
          '@firebase/functions': 'fire-fn',
          '@firebase/functions-compat': 'fire-fn-compat',
          '@firebase/installations': 'fire-iid',
          '@firebase/installations-compat': 'fire-iid-compat',
          '@firebase/messaging': 'fire-fcm',
          '@firebase/messaging-compat': 'fire-fcm-compat',
          '@firebase/performance': 'fire-perf',
          '@firebase/performance-compat': 'fire-perf-compat',
          '@firebase/remote-config': 'fire-rc',
          '@firebase/remote-config-compat': 'fire-rc-compat',
          '@firebase/storage': 'fire-gcs',
          '@firebase/storage-compat': 'fire-gcs-compat',
          '@firebase/firestore': 'fire-fst',
          '@firebase/firestore-compat': 'fire-fst-compat',
          'fire-js': 'fire-js',
          firebase: 'fire-js-all',
        },
        st = new Map(),
        Et = new Map();
      function yt(Pe, X) {
        try {
          Pe.container.addComponent(X);
        } catch (we) {
          Ne.debug(`Component ${X.name} failed to register with FirebaseApp ${Pe.name}`, we);
        }
      }
      function Ue(Pe, X) {
        Pe.container.addOrOverwriteComponent(X);
      }
      function bt(Pe) {
        const X = Pe.name;
        if (Et.has(X)) return Ne.debug(`There were multiple attempts to register component ${X}.`), !1;
        Et.set(X, Pe);
        for (const we of st.values()) yt(we, Pe);
        return !0;
      }
      function at(Pe, X) {
        return Pe.container.getProvider(X);
      }
      function mt(Pe, X, we = Je) {
        at(Pe, X).clearInstance(we);
      }
      function Nt() {
        Et.clear();
      }
      const xt = new N.LL('app', 'Firebase', {
        'no-app': "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
        'bad-app-name': "Illegal App name: '{$appName}",
        'duplicate-app': "Firebase App named '{$appName}' already exists with different options or config",
        'app-deleted': "Firebase App named '{$appName}' already deleted",
        'invalid-app-argument': 'firebase.{$appName}() takes either no argument or a Firebase App instance.',
        'invalid-log-argument': 'First argument to `onLog` must be null or a function.',
      });
      class Gt {
        constructor(X, we, Rt) {
          (this._isDeleted = !1),
            (this._options = Object.assign({}, X)),
            (this._config = Object.assign({}, we)),
            (this._name = we.name),
            (this._automaticDataCollectionEnabled = we.automaticDataCollectionEnabled),
            (this._container = Rt),
            this.container.addComponent(new m.wA('app', () => this, 'PUBLIC'));
        }
        get automaticDataCollectionEnabled() {
          return this.checkDestroyed(), this._automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(X) {
          this.checkDestroyed(), (this._automaticDataCollectionEnabled = X);
        }
        get name() {
          return this.checkDestroyed(), this._name;
        }
        get options() {
          return this.checkDestroyed(), this._options;
        }
        get config() {
          return this.checkDestroyed(), this._config;
        }
        get container() {
          return this._container;
        }
        get isDeleted() {
          return this._isDeleted;
        }
        set isDeleted(X) {
          this._isDeleted = X;
        }
        checkDestroyed() {
          if (this.isDeleted) throw xt.create('app-deleted', { appName: this._name });
        }
      }
      const re = '9.6.5';
      function ot(Pe, X = {}) {
        'object' != typeof X && (X = { name: X });
        const we = Object.assign({ name: Je, automaticDataCollectionEnabled: !1 }, X),
          Rt = we.name;
        if ('string' != typeof Rt || !Rt) throw xt.create('bad-app-name', { appName: String(Rt) });
        const It = st.get(Rt);
        if (It) {
          if ((0, N.vZ)(Pe, It.options) && (0, N.vZ)(we, It.config)) return It;
          throw xt.create('duplicate-app', { appName: Rt });
        }
        const an = new m.H0(Rt);
        for (const ln of Et.values()) an.addComponent(ln);
        const mn = new Gt(Pe, we, an);
        return st.set(Rt, mn), mn;
      }
      function Zt(Pe = Je) {
        const X = st.get(Pe);
        if (!X) throw xt.create('no-app', { appName: Pe });
        return X;
      }
      function hn() {
        return Array.from(st.values());
      }
      function At(Pe) {
        return ae.apply(this, arguments);
      }
      function ae() {
        return (ae = (0, h.Z)(function* (Pe) {
          const X = Pe.name;
          st.has(X) &&
            (st.delete(X),
            yield Promise.all(Pe.container.getProviders().map((we) => we.delete())),
            (Pe.isDeleted = !0));
        })).apply(this, arguments);
      }
      function Le(Pe, X, we) {
        var Rt;
        let It = null !== (Rt = Ct[Pe]) && void 0 !== Rt ? Rt : Pe;
        we && (It += `-${we}`);
        const an = It.match(/\s|\//),
          mn = X.match(/\s|\//);
        if (an || mn) {
          const ln = [`Unable to register library "${It}" with version "${X}":`];
          return (
            an && ln.push(`library name "${It}" contains illegal characters (whitespace or "/")`),
            an && mn && ln.push('and'),
            mn && ln.push(`version name "${X}" contains illegal characters (whitespace or "/")`),
            void Ne.warn(ln.join(' '))
          );
        }
        bt(new m.wA(`${It}-version`, () => ({ library: It, version: X }), 'VERSION'));
      }
      function ht(Pe, X) {
        if (null !== Pe && 'function' != typeof Pe) throw xt.create('invalid-log-argument');
        (0, d.Am)(Pe, X);
      }
      function Se(Pe) {
        (0, d.Ub)(Pe);
      }
      !(function Be(Pe) {
        bt(new m.wA('platform-logger', (X) => new Ce(X), 'PRIVATE')),
          Le(He, '0.7.15', Pe),
          Le(He, '0.7.15', 'esm2017'),
          Le('fire-js', '');
      })('');
    },
    4859: (un, ft, x) => {
      'use strict';
      x.d(ft, { wA: () => d, H0: () => Fe, zt: () => Ce });
      var h = x(5861),
        m = x(2090);
      class d {
        constructor(ee, fe, ue) {
          (this.name = ee),
            (this.instanceFactory = fe),
            (this.type = ue),
            (this.multipleInstances = !1),
            (this.serviceProps = {}),
            (this.instantiationMode = 'LAZY'),
            (this.onInstanceCreated = null);
        }
        setInstantiationMode(ee) {
          return (this.instantiationMode = ee), this;
        }
        setMultipleInstances(ee) {
          return (this.multipleInstances = ee), this;
        }
        setServiceProps(ee) {
          return (this.serviceProps = ee), this;
        }
        setInstanceCreatedCallback(ee) {
          return (this.onInstanceCreated = ee), this;
        }
      }
      const N = '[DEFAULT]';
      class Ce {
        constructor(ee, fe) {
          (this.name = ee),
            (this.container = fe),
            (this.component = null),
            (this.instances = new Map()),
            (this.instancesDeferred = new Map()),
            (this.instancesOptions = new Map()),
            (this.onInitCallbacks = new Map());
        }
        get(ee) {
          const fe = this.normalizeInstanceIdentifier(ee);
          if (!this.instancesDeferred.has(fe)) {
            const ue = new m.BH();
            if ((this.instancesDeferred.set(fe, ue), this.isInitialized(fe) || this.shouldAutoInitialize()))
              try {
                const Qe = this.getOrInitializeService({ instanceIdentifier: fe });
                Qe && ue.resolve(Qe);
              } catch (Qe) {}
          }
          return this.instancesDeferred.get(fe).promise;
        }
        getImmediate(ee) {
          var fe;
          const ue = this.normalizeInstanceIdentifier(null == ee ? void 0 : ee.identifier),
            Qe = null !== (fe = null == ee ? void 0 : ee.optional) && void 0 !== fe && fe;
          if (!this.isInitialized(ue) && !this.shouldAutoInitialize()) {
            if (Qe) return null;
            throw Error(`Service ${this.name} is not available`);
          }
          try {
            return this.getOrInitializeService({ instanceIdentifier: ue });
          } catch (Oe) {
            if (Qe) return null;
            throw Oe;
          }
        }
        getComponent() {
          return this.component;
        }
        setComponent(ee) {
          if (ee.name !== this.name) throw Error(`Mismatching Component ${ee.name} for Provider ${this.name}.`);
          if (this.component) throw Error(`Component for ${this.name} has already been provided`);
          if (((this.component = ee), this.shouldAutoInitialize())) {
            if (
              (function He(Ne) {
                return 'EAGER' === Ne.instantiationMode;
              })(ee)
            )
              try {
                this.getOrInitializeService({ instanceIdentifier: N });
              } catch (fe) {}
            for (const [fe, ue] of this.instancesDeferred.entries()) {
              const Qe = this.normalizeInstanceIdentifier(fe);
              try {
                const Oe = this.getOrInitializeService({ instanceIdentifier: Qe });
                ue.resolve(Oe);
              } catch (Oe) {}
            }
          }
        }
        clearInstance(ee = N) {
          this.instancesDeferred.delete(ee), this.instancesOptions.delete(ee), this.instances.delete(ee);
        }
        delete() {
          var ee = this;
          return (0, h.Z)(function* () {
            const fe = Array.from(ee.instances.values());
            yield Promise.all([
              ...fe.filter((ue) => 'INTERNAL' in ue).map((ue) => ue.INTERNAL.delete()),
              ...fe.filter((ue) => '_delete' in ue).map((ue) => ue._delete()),
            ]);
          })();
        }
        isComponentSet() {
          return null != this.component;
        }
        isInitialized(ee = N) {
          return this.instances.has(ee);
        }
        getOptions(ee = N) {
          return this.instancesOptions.get(ee) || {};
        }
        initialize(ee = {}) {
          const { options: fe = {} } = ee,
            ue = this.normalizeInstanceIdentifier(ee.instanceIdentifier);
          if (this.isInitialized(ue)) throw Error(`${this.name}(${ue}) has already been initialized`);
          if (!this.isComponentSet()) throw Error(`Component ${this.name} has not been registered yet`);
          const Qe = this.getOrInitializeService({ instanceIdentifier: ue, options: fe });
          for (const [Oe, et] of this.instancesDeferred.entries())
            ue === this.normalizeInstanceIdentifier(Oe) && et.resolve(Qe);
          return Qe;
        }
        onInit(ee, fe) {
          var ue;
          const Qe = this.normalizeInstanceIdentifier(fe),
            Oe = null !== (ue = this.onInitCallbacks.get(Qe)) && void 0 !== ue ? ue : new Set();
          Oe.add(ee), this.onInitCallbacks.set(Qe, Oe);
          const et = this.instances.get(Qe);
          return (
            et && ee(et, Qe),
            () => {
              Oe.delete(ee);
            }
          );
        }
        invokeOnInitCallbacks(ee, fe) {
          const ue = this.onInitCallbacks.get(fe);
          if (ue)
            for (const Qe of ue)
              try {
                Qe(ee, fe);
              } catch (Oe) {}
        }
        getOrInitializeService({ instanceIdentifier: ee, options: fe = {} }) {
          let ue = this.instances.get(ee);
          if (
            !ue &&
            this.component &&
            ((ue = this.component.instanceFactory(this.container, {
              instanceIdentifier: ((Ne = ee), Ne === N ? void 0 : Ne),
              options: fe,
            })),
            this.instances.set(ee, ue),
            this.instancesOptions.set(ee, fe),
            this.invokeOnInitCallbacks(ue, ee),
            this.component.onInstanceCreated)
          )
            try {
              this.component.onInstanceCreated(this.container, ee, ue);
            } catch (Qe) {}
          var Ne;
          return ue || null;
        }
        normalizeInstanceIdentifier(ee = N) {
          return this.component ? (this.component.multipleInstances ? ee : N) : ee;
        }
        shouldAutoInitialize() {
          return !!this.component && 'EXPLICIT' !== this.component.instantiationMode;
        }
      }
      class Fe {
        constructor(ee) {
          (this.name = ee), (this.providers = new Map());
        }
        addComponent(ee) {
          const fe = this.getProvider(ee.name);
          if (fe.isComponentSet())
            throw new Error(`Component ${ee.name} has already been registered with ${this.name}`);
          fe.setComponent(ee);
        }
        addOrOverwriteComponent(ee) {
          this.getProvider(ee.name).isComponentSet() && this.providers.delete(ee.name), this.addComponent(ee);
        }
        getProvider(ee) {
          if (this.providers.has(ee)) return this.providers.get(ee);
          const fe = new Ce(ee, this);
          return this.providers.set(ee, fe), fe;
        }
        getProviders() {
          return Array.from(this.providers.values());
        }
      }
    },
    1877: (un, ft, x) => {
      'use strict';
      x.d(ft, { in: () => m, Yd: () => He, Ub: () => Fe, Am: () => Ne });
      const h = [];
      var m = (() => {
        return (
          ((ee = m || (m = {}))[(ee.DEBUG = 0)] = 'DEBUG'),
          (ee[(ee.VERBOSE = 1)] = 'VERBOSE'),
          (ee[(ee.INFO = 2)] = 'INFO'),
          (ee[(ee.WARN = 3)] = 'WARN'),
          (ee[(ee.ERROR = 4)] = 'ERROR'),
          (ee[(ee.SILENT = 5)] = 'SILENT'),
          m
        );
        var ee;
      })();
      const d = { debug: m.DEBUG, verbose: m.VERBOSE, info: m.INFO, warn: m.WARN, error: m.ERROR, silent: m.SILENT },
        N = m.INFO,
        Ce = { [m.DEBUG]: 'log', [m.VERBOSE]: 'log', [m.INFO]: 'info', [m.WARN]: 'warn', [m.ERROR]: 'error' },
        Re = (ee, fe, ...ue) => {
          if (fe < ee.logLevel) return;
          const Qe = new Date().toISOString(),
            Oe = Ce[fe];
          if (!Oe) throw new Error(`Attempted to log a message with an invalid logType (value: ${fe})`);
          console[Oe](`[${Qe}]  ${ee.name}:`, ...ue);
        };
      class He {
        constructor(fe) {
          (this.name = fe), (this._logLevel = N), (this._logHandler = Re), (this._userLogHandler = null), h.push(this);
        }
        get logLevel() {
          return this._logLevel;
        }
        set logLevel(fe) {
          if (!(fe in m)) throw new TypeError(`Invalid value "${fe}" assigned to \`logLevel\``);
          this._logLevel = fe;
        }
        setLogLevel(fe) {
          this._logLevel = 'string' == typeof fe ? d[fe] : fe;
        }
        get logHandler() {
          return this._logHandler;
        }
        set logHandler(fe) {
          if ('function' != typeof fe) throw new TypeError('Value assigned to `logHandler` must be a function');
          this._logHandler = fe;
        }
        get userLogHandler() {
          return this._userLogHandler;
        }
        set userLogHandler(fe) {
          this._userLogHandler = fe;
        }
        debug(...fe) {
          this._userLogHandler && this._userLogHandler(this, m.DEBUG, ...fe), this._logHandler(this, m.DEBUG, ...fe);
        }
        log(...fe) {
          this._userLogHandler && this._userLogHandler(this, m.VERBOSE, ...fe),
            this._logHandler(this, m.VERBOSE, ...fe);
        }
        info(...fe) {
          this._userLogHandler && this._userLogHandler(this, m.INFO, ...fe), this._logHandler(this, m.INFO, ...fe);
        }
        warn(...fe) {
          this._userLogHandler && this._userLogHandler(this, m.WARN, ...fe), this._logHandler(this, m.WARN, ...fe);
        }
        error(...fe) {
          this._userLogHandler && this._userLogHandler(this, m.ERROR, ...fe), this._logHandler(this, m.ERROR, ...fe);
        }
      }
      function Fe(ee) {
        h.forEach((fe) => {
          fe.setLogLevel(ee);
        });
      }
      function Ne(ee, fe) {
        for (const ue of h) {
          let Qe = null;
          fe && fe.level && (Qe = d[fe.level]),
            (ue.userLogHandler =
              null === ee
                ? null
                : (Oe, et, ...lt) => {
                    const me = lt
                      .map((Ze) => {
                        if (null == Ze) return null;
                        if ('string' == typeof Ze) return Ze;
                        if ('number' == typeof Ze || 'boolean' == typeof Ze) return Ze.toString();
                        if (Ze instanceof Error) return Ze.message;
                        try {
                          return JSON.stringify(Ze);
                        } catch (dt) {
                          return null;
                        }
                      })
                      .filter((Ze) => Ze)
                      .join(' ');
                    et >= (null != Qe ? Qe : Oe.logLevel) &&
                      ee({ level: m[et].toLowerCase(), message: me, args: lt, type: Oe.name });
                  });
        }
      }
    },
    1062: (un, ft, x) => {
      'use strict';
      x.d(ft, { Pi: () => Ve, aw: () => kt, X$: () => Ft, sK: () => qe });
      var h = x(5e3),
        m = x(9646),
        d = x(5191),
        N = x(4128),
        Ce = x(7272),
        Re = x(9770),
        He = x(5698),
        Fe = x(3151),
        Ne = x(4004),
        ee = x(4351),
        fe = x(3900);
      class ue {}
      let Qe = (() => {
        class St extends ue {
          getTranslation(Je) {
            return (0, m.of)({});
          }
        }
        return (
          (St.ɵfac = (function () {
            let on;
            return function (Ct) {
              return (on || (on = h.n5z(St)))(Ct || St);
            };
          })()),
          (St.ɵprov = h.Yz7({ token: St, factory: St.ɵfac })),
          St
        );
      })();
      class Oe {}
      let et = (() => {
        class St {
          handle(Je) {
            return Je.key;
          }
        }
        return (
          (St.ɵfac = function (Je) {
            return new (Je || St)();
          }),
          (St.ɵprov = h.Yz7({ token: St, factory: St.ɵfac })),
          St
        );
      })();
      function lt(St, on) {
        if (St === on) return !0;
        if (null === St || null === on) return !1;
        if (St != St && on != on) return !0;
        let st,
          Et,
          yt,
          Je = typeof St;
        if (Je == typeof on && 'object' == Je) {
          if (!Array.isArray(St)) {
            if (Array.isArray(on)) return !1;
            for (Et in ((yt = Object.create(null)), St)) {
              if (!lt(St[Et], on[Et])) return !1;
              yt[Et] = !0;
            }
            for (Et in on) if (!(Et in yt) && void 0 !== on[Et]) return !1;
            return !0;
          }
          if (!Array.isArray(on)) return !1;
          if ((st = St.length) == on.length) {
            for (Et = 0; Et < st; Et++) if (!lt(St[Et], on[Et])) return !1;
            return !0;
          }
        }
        return !1;
      }
      function me(St) {
        return null != St;
      }
      function Ze(St) {
        return St && 'object' == typeof St && !Array.isArray(St);
      }
      function dt(St, on) {
        let Je = Object.assign({}, St);
        return (
          Ze(St) &&
            Ze(on) &&
            Object.keys(on).forEach((Ct) => {
              Ze(on[Ct])
                ? Ct in St
                  ? (Je[Ct] = dt(St[Ct], on[Ct]))
                  : Object.assign(Je, { [Ct]: on[Ct] })
                : Object.assign(Je, { [Ct]: on[Ct] });
            }),
          Je
        );
      }
      class vt {}
      let We = (() => {
        class St extends vt {
          constructor() {
            super(...arguments), (this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g);
          }
          interpolate(Je, Ct) {
            let st;
            return (
              (st =
                'string' == typeof Je
                  ? this.interpolateString(Je, Ct)
                  : 'function' == typeof Je
                  ? this.interpolateFunction(Je, Ct)
                  : Je),
              st
            );
          }
          getValue(Je, Ct) {
            let st = 'string' == typeof Ct ? Ct.split('.') : [Ct];
            Ct = '';
            do {
              (Ct += st.shift()),
                !me(Je) || !me(Je[Ct]) || ('object' != typeof Je[Ct] && st.length)
                  ? st.length
                    ? (Ct += '.')
                    : (Je = void 0)
                  : ((Je = Je[Ct]), (Ct = ''));
            } while (st.length);
            return Je;
          }
          interpolateFunction(Je, Ct) {
            return Je(Ct);
          }
          interpolateString(Je, Ct) {
            return Ct
              ? Je.replace(this.templateMatcher, (st, Et) => {
                  let yt = this.getValue(Ct, Et);
                  return me(yt) ? yt : st;
                })
              : Je;
          }
        }
        return (
          (St.ɵfac = (function () {
            let on;
            return function (Ct) {
              return (on || (on = h.n5z(St)))(Ct || St);
            };
          })()),
          (St.ɵprov = h.Yz7({ token: St, factory: St.ɵfac })),
          St
        );
      })();
      class $e {}
      let ge = (() => {
        class St extends $e {
          compile(Je, Ct) {
            return Je;
          }
          compileTranslations(Je, Ct) {
            return Je;
          }
        }
        return (
          (St.ɵfac = (function () {
            let on;
            return function (Ct) {
              return (on || (on = h.n5z(St)))(Ct || St);
            };
          })()),
          (St.ɵprov = h.Yz7({ token: St, factory: St.ɵfac })),
          St
        );
      })();
      class Ke {
        constructor() {
          (this.currentLang = this.defaultLang),
            (this.translations = {}),
            (this.langs = []),
            (this.onTranslationChange = new h.vpe()),
            (this.onLangChange = new h.vpe()),
            (this.onDefaultLangChange = new h.vpe());
        }
      }
      const Ie = new h.OlP('USE_STORE'),
        De = new h.OlP('USE_DEFAULT_LANG'),
        Ye = new h.OlP('DEFAULT_LANGUAGE'),
        it = new h.OlP('USE_EXTEND');
      let qe = (() => {
          class St {
            constructor(Je, Ct, st, Et, yt, Ue = !0, bt = !1, at = !1, mt) {
              (this.store = Je),
                (this.currentLoader = Ct),
                (this.compiler = st),
                (this.parser = Et),
                (this.missingTranslationHandler = yt),
                (this.useDefaultLang = Ue),
                (this.isolate = bt),
                (this.extend = at),
                (this.pending = !1),
                (this._onTranslationChange = new h.vpe()),
                (this._onLangChange = new h.vpe()),
                (this._onDefaultLangChange = new h.vpe()),
                (this._langs = []),
                (this._translations = {}),
                (this._translationRequests = {}),
                mt && this.setDefaultLang(mt);
            }
            get onTranslationChange() {
              return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;
            }
            get onLangChange() {
              return this.isolate ? this._onLangChange : this.store.onLangChange;
            }
            get onDefaultLangChange() {
              return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;
            }
            get defaultLang() {
              return this.isolate ? this._defaultLang : this.store.defaultLang;
            }
            set defaultLang(Je) {
              this.isolate ? (this._defaultLang = Je) : (this.store.defaultLang = Je);
            }
            get currentLang() {
              return this.isolate ? this._currentLang : this.store.currentLang;
            }
            set currentLang(Je) {
              this.isolate ? (this._currentLang = Je) : (this.store.currentLang = Je);
            }
            get langs() {
              return this.isolate ? this._langs : this.store.langs;
            }
            set langs(Je) {
              this.isolate ? (this._langs = Je) : (this.store.langs = Je);
            }
            get translations() {
              return this.isolate ? this._translations : this.store.translations;
            }
            set translations(Je) {
              this.isolate ? (this._translations = Je) : (this.store.translations = Je);
            }
            setDefaultLang(Je) {
              if (Je === this.defaultLang) return;
              let Ct = this.retrieveTranslations(Je);
              void 0 !== Ct
                ? (null == this.defaultLang && (this.defaultLang = Je),
                  Ct.pipe((0, He.q)(1)).subscribe((st) => {
                    this.changeDefaultLang(Je);
                  }))
                : this.changeDefaultLang(Je);
            }
            getDefaultLang() {
              return this.defaultLang;
            }
            use(Je) {
              if (Je === this.currentLang) return (0, m.of)(this.translations[Je]);
              let Ct = this.retrieveTranslations(Je);
              return void 0 !== Ct
                ? (this.currentLang || (this.currentLang = Je),
                  Ct.pipe((0, He.q)(1)).subscribe((st) => {
                    this.changeLang(Je);
                  }),
                  Ct)
                : (this.changeLang(Je), (0, m.of)(this.translations[Je]));
            }
            retrieveTranslations(Je) {
              let Ct;
              return (
                (void 0 === this.translations[Je] || this.extend) &&
                  ((this._translationRequests[Je] = this._translationRequests[Je] || this.getTranslation(Je)),
                  (Ct = this._translationRequests[Je])),
                Ct
              );
            }
            getTranslation(Je) {
              this.pending = !0;
              const Ct = this.currentLoader.getTranslation(Je).pipe((0, Fe.d)(1), (0, He.q)(1));
              return (
                (this.loadingTranslations = Ct.pipe(
                  (0, Ne.U)((st) => this.compiler.compileTranslations(st, Je)),
                  (0, Fe.d)(1),
                  (0, He.q)(1)
                )),
                this.loadingTranslations.subscribe({
                  next: (st) => {
                    (this.translations[Je] =
                      this.extend && this.translations[Je]
                        ? Object.assign(Object.assign({}, st), this.translations[Je])
                        : st),
                      this.updateLangs(),
                      (this.pending = !1);
                  },
                  error: (st) => {
                    this.pending = !1;
                  },
                }),
                Ct
              );
            }
            setTranslation(Je, Ct, st = !1) {
              (Ct = this.compiler.compileTranslations(Ct, Je)),
                (this.translations[Je] =
                  (st || this.extend) && this.translations[Je] ? dt(this.translations[Je], Ct) : Ct),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: Je, translations: this.translations[Je] });
            }
            getLangs() {
              return this.langs;
            }
            addLangs(Je) {
              Je.forEach((Ct) => {
                -1 === this.langs.indexOf(Ct) && this.langs.push(Ct);
              });
            }
            updateLangs() {
              this.addLangs(Object.keys(this.translations));
            }
            getParsedResult(Je, Ct, st) {
              let Et;
              if (Ct instanceof Array) {
                let yt = {},
                  Ue = !1;
                for (let bt of Ct) (yt[bt] = this.getParsedResult(Je, bt, st)), (0, d.b)(yt[bt]) && (Ue = !0);
                if (Ue) {
                  const bt = Ct.map((at) => ((0, d.b)(yt[at]) ? yt[at] : (0, m.of)(yt[at])));
                  return (0, N.D)(bt).pipe(
                    (0, Ne.U)((at) => {
                      let mt = {};
                      return (
                        at.forEach((Nt, en) => {
                          mt[Ct[en]] = Nt;
                        }),
                        mt
                      );
                    })
                  );
                }
                return yt;
              }
              if (
                (Je && (Et = this.parser.interpolate(this.parser.getValue(Je, Ct), st)),
                void 0 === Et &&
                  null != this.defaultLang &&
                  this.defaultLang !== this.currentLang &&
                  this.useDefaultLang &&
                  (Et = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], Ct), st)),
                void 0 === Et)
              ) {
                let yt = { key: Ct, translateService: this };
                void 0 !== st && (yt.interpolateParams = st), (Et = this.missingTranslationHandler.handle(yt));
              }
              return void 0 !== Et ? Et : Ct;
            }
            get(Je, Ct) {
              if (!me(Je) || !Je.length) throw new Error('Parameter "key" required');
              if (this.pending)
                return this.loadingTranslations.pipe(
                  (0, ee.b)((st) => ((st = this.getParsedResult(st, Je, Ct)), (0, d.b)(st) ? st : (0, m.of)(st)))
                );
              {
                let st = this.getParsedResult(this.translations[this.currentLang], Je, Ct);
                return (0, d.b)(st) ? st : (0, m.of)(st);
              }
            }
            getStreamOnTranslationChange(Je, Ct) {
              if (!me(Je) || !Je.length) throw new Error('Parameter "key" required');
              return (0, Ce.z)(
                (0, Re.P)(() => this.get(Je, Ct)),
                this.onTranslationChange.pipe(
                  (0, fe.w)((st) => {
                    const Et = this.getParsedResult(st.translations, Je, Ct);
                    return 'function' == typeof Et.subscribe ? Et : (0, m.of)(Et);
                  })
                )
              );
            }
            stream(Je, Ct) {
              if (!me(Je) || !Je.length) throw new Error('Parameter "key" required');
              return (0, Ce.z)(
                (0, Re.P)(() => this.get(Je, Ct)),
                this.onLangChange.pipe(
                  (0, fe.w)((st) => {
                    const Et = this.getParsedResult(st.translations, Je, Ct);
                    return (0, d.b)(Et) ? Et : (0, m.of)(Et);
                  })
                )
              );
            }
            instant(Je, Ct) {
              if (!me(Je) || !Je.length) throw new Error('Parameter "key" required');
              let st = this.getParsedResult(this.translations[this.currentLang], Je, Ct);
              if ((0, d.b)(st)) {
                if (Je instanceof Array) {
                  let Et = {};
                  return (
                    Je.forEach((yt, Ue) => {
                      Et[Je[Ue]] = Je[Ue];
                    }),
                    Et
                  );
                }
                return Je;
              }
              return st;
            }
            set(Je, Ct, st = this.currentLang) {
              (this.translations[st][Je] = this.compiler.compile(Ct, st)),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: st, translations: this.translations[st] });
            }
            changeLang(Je) {
              (this.currentLang = Je),
                this.onLangChange.emit({ lang: Je, translations: this.translations[Je] }),
                null == this.defaultLang && this.changeDefaultLang(Je);
            }
            changeDefaultLang(Je) {
              (this.defaultLang = Je), this.onDefaultLangChange.emit({ lang: Je, translations: this.translations[Je] });
            }
            reloadLang(Je) {
              return this.resetLang(Je), this.getTranslation(Je);
            }
            resetLang(Je) {
              (this._translationRequests[Je] = void 0), (this.translations[Je] = void 0);
            }
            getBrowserLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let Je = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (Je =
                  Je || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                void 0 !== Je
                  ? (-1 !== Je.indexOf('-') && (Je = Je.split('-')[0]),
                    -1 !== Je.indexOf('_') && (Je = Je.split('_')[0]),
                    Je)
                  : void 0
              );
            }
            getBrowserCultureLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let Je = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (Je =
                  Je || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                Je
              );
            }
          }
          return (
            (St.ɵfac = function (Je) {
              return new (Je || St)(
                h.LFG(Ke),
                h.LFG(ue),
                h.LFG($e),
                h.LFG(vt),
                h.LFG(Oe),
                h.LFG(De),
                h.LFG(Ie),
                h.LFG(it),
                h.LFG(Ye)
              );
            }),
            (St.ɵprov = h.Yz7({ token: St, factory: St.ɵfac })),
            St
          );
        })(),
        Ve = (() => {
          class St {
            constructor(Je, Ct, st) {
              (this.translateService = Je),
                (this.element = Ct),
                (this._ref = st),
                this.onTranslationChangeSub ||
                  (this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((Et) => {
                    Et.lang === this.translateService.currentLang && this.checkNodes(!0, Et.translations);
                  })),
                this.onLangChangeSub ||
                  (this.onLangChangeSub = this.translateService.onLangChange.subscribe((Et) => {
                    this.checkNodes(!0, Et.translations);
                  })),
                this.onDefaultLangChangeSub ||
                  (this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((Et) => {
                    this.checkNodes(!0);
                  }));
            }
            set translate(Je) {
              Je && ((this.key = Je), this.checkNodes());
            }
            set translateParams(Je) {
              lt(this.currentParams, Je) || ((this.currentParams = Je), this.checkNodes(!0));
            }
            ngAfterViewChecked() {
              this.checkNodes();
            }
            checkNodes(Je = !1, Ct) {
              let st = this.element.nativeElement.childNodes;
              st.length ||
                (this.setContent(this.element.nativeElement, this.key), (st = this.element.nativeElement.childNodes));
              for (let Et = 0; Et < st.length; ++Et) {
                let yt = st[Et];
                if (3 === yt.nodeType) {
                  let Ue;
                  if ((Je && (yt.lastKey = null), me(yt.lookupKey))) Ue = yt.lookupKey;
                  else if (this.key) Ue = this.key;
                  else {
                    let bt = this.getContent(yt),
                      at = bt.trim();
                    at.length &&
                      ((yt.lookupKey = at),
                      bt !== yt.currentValue
                        ? ((Ue = at), (yt.originalContent = bt || yt.originalContent))
                        : yt.originalContent
                        ? (Ue = yt.originalContent.trim())
                        : bt !== yt.currentValue && ((Ue = at), (yt.originalContent = bt || yt.originalContent)));
                  }
                  this.updateValue(Ue, yt, Ct);
                }
              }
            }
            updateValue(Je, Ct, st) {
              if (Je) {
                if (Ct.lastKey === Je && this.lastParams === this.currentParams) return;
                this.lastParams = this.currentParams;
                let Et = (yt) => {
                  yt !== Je && (Ct.lastKey = Je),
                    Ct.originalContent || (Ct.originalContent = this.getContent(Ct)),
                    (Ct.currentValue = me(yt) ? yt : Ct.originalContent || Je),
                    this.setContent(Ct, this.key ? Ct.currentValue : Ct.originalContent.replace(Je, Ct.currentValue)),
                    this._ref.markForCheck();
                };
                if (me(st)) {
                  let yt = this.translateService.getParsedResult(st, Je, this.currentParams);
                  (0, d.b)(yt) ? yt.subscribe({ next: Et }) : Et(yt);
                } else this.translateService.get(Je, this.currentParams).subscribe(Et);
              }
            }
            getContent(Je) {
              return me(Je.textContent) ? Je.textContent : Je.data;
            }
            setContent(Je, Ct) {
              me(Je.textContent) ? (Je.textContent = Ct) : (Je.data = Ct);
            }
            ngOnDestroy() {
              this.onLangChangeSub && this.onLangChangeSub.unsubscribe(),
                this.onDefaultLangChangeSub && this.onDefaultLangChangeSub.unsubscribe(),
                this.onTranslationChangeSub && this.onTranslationChangeSub.unsubscribe();
            }
          }
          return (
            (St.ɵfac = function (Je) {
              return new (Je || St)(h.Y36(qe), h.Y36(h.SBq), h.Y36(h.sBO));
            }),
            (St.ɵdir = h.lG2({
              type: St,
              selectors: [
                ['', 'translate', ''],
                ['', 'ngx-translate', ''],
              ],
              inputs: { translate: 'translate', translateParams: 'translateParams' },
            })),
            St
          );
        })(),
        Ft = (() => {
          class St {
            constructor(Je, Ct) {
              (this.translate = Je), (this._ref = Ct), (this.value = ''), (this.lastKey = null), (this.lastParams = []);
            }
            updateValue(Je, Ct, st) {
              let Et = (yt) => {
                (this.value = void 0 !== yt ? yt : Je), (this.lastKey = Je), this._ref.markForCheck();
              };
              if (st) {
                let yt = this.translate.getParsedResult(st, Je, Ct);
                (0, d.b)(yt.subscribe) ? yt.subscribe(Et) : Et(yt);
              }
              this.translate.get(Je, Ct).subscribe(Et);
            }
            transform(Je, ...Ct) {
              if (!Je || !Je.length) return Je;
              if (lt(Je, this.lastKey) && lt(Ct, this.lastParams)) return this.value;
              let st;
              if (me(Ct[0]) && Ct.length)
                if ('string' == typeof Ct[0] && Ct[0].length) {
                  let Et = Ct[0]
                    .replace(/(\')?([a-zA-Z0-9_]+)(\')?(\s)?:/g, '"$2":')
                    .replace(/:(\s)?(\')(.*?)(\')/g, ':"$3"');
                  try {
                    st = JSON.parse(Et);
                  } catch (yt) {
                    throw new SyntaxError(
                      `Wrong parameter in TranslatePipe. Expected a valid Object, received: ${Ct[0]}`
                    );
                  }
                } else 'object' == typeof Ct[0] && !Array.isArray(Ct[0]) && (st = Ct[0]);
              return (
                (this.lastKey = Je),
                (this.lastParams = Ct),
                this.updateValue(Je, st),
                this._dispose(),
                this.onTranslationChange ||
                  (this.onTranslationChange = this.translate.onTranslationChange.subscribe((Et) => {
                    this.lastKey &&
                      Et.lang === this.translate.currentLang &&
                      ((this.lastKey = null), this.updateValue(Je, st, Et.translations));
                  })),
                this.onLangChange ||
                  (this.onLangChange = this.translate.onLangChange.subscribe((Et) => {
                    this.lastKey && ((this.lastKey = null), this.updateValue(Je, st, Et.translations));
                  })),
                this.onDefaultLangChange ||
                  (this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {
                    this.lastKey && ((this.lastKey = null), this.updateValue(Je, st));
                  })),
                this.value
              );
            }
            _dispose() {
              void 0 !== this.onTranslationChange &&
                (this.onTranslationChange.unsubscribe(), (this.onTranslationChange = void 0)),
                void 0 !== this.onLangChange && (this.onLangChange.unsubscribe(), (this.onLangChange = void 0)),
                void 0 !== this.onDefaultLangChange &&
                  (this.onDefaultLangChange.unsubscribe(), (this.onDefaultLangChange = void 0));
            }
            ngOnDestroy() {
              this._dispose();
            }
          }
          return (
            (St.ɵfac = function (Je) {
              return new (Je || St)(h.Y36(qe, 16), h.Y36(h.sBO, 16));
            }),
            (St.ɵpipe = h.Yjl({ name: 'translate', type: St, pure: !1 })),
            (St.ɵprov = h.Yz7({ token: St, factory: St.ɵfac })),
            St
          );
        })(),
        kt = (() => {
          class St {
            static forRoot(Je = {}) {
              return {
                ngModule: St,
                providers: [
                  Je.loader || { provide: ue, useClass: Qe },
                  Je.compiler || { provide: $e, useClass: ge },
                  Je.parser || { provide: vt, useClass: We },
                  Je.missingTranslationHandler || { provide: Oe, useClass: et },
                  Ke,
                  { provide: Ie, useValue: Je.isolate },
                  { provide: De, useValue: Je.useDefaultLang },
                  { provide: it, useValue: Je.extend },
                  { provide: Ye, useValue: Je.defaultLanguage },
                  qe,
                ],
              };
            }
            static forChild(Je = {}) {
              return {
                ngModule: St,
                providers: [
                  Je.loader || { provide: ue, useClass: Qe },
                  Je.compiler || { provide: $e, useClass: ge },
                  Je.parser || { provide: vt, useClass: We },
                  Je.missingTranslationHandler || { provide: Oe, useClass: et },
                  { provide: Ie, useValue: Je.isolate },
                  { provide: De, useValue: Je.useDefaultLang },
                  { provide: it, useValue: Je.extend },
                  { provide: Ye, useValue: Je.defaultLanguage },
                  qe,
                ],
              };
            }
          }
          return (
            (St.ɵfac = function (Je) {
              return new (Je || St)();
            }),
            (St.ɵmod = h.oAB({ type: St })),
            (St.ɵinj = h.cJS({})),
            St
          );
        })();
    },
    5861: (un, ft, x) => {
      'use strict';
      function h(d, N, Ce, Re, He, Fe, Ne) {
        try {
          var ee = d[Fe](Ne),
            fe = ee.value;
        } catch (ue) {
          return void Ce(ue);
        }
        ee.done ? N(fe) : Promise.resolve(fe).then(Re, He);
      }
      function m(d) {
        return function () {
          var N = this,
            Ce = arguments;
          return new Promise(function (Re, He) {
            var Fe = d.apply(N, Ce);
            function Ne(fe) {
              h(Fe, Re, He, Ne, ee, 'next', fe);
            }
            function ee(fe) {
              h(Fe, Re, He, Ne, ee, 'throw', fe);
            }
            Ne(void 0);
          });
        };
      }
      x.d(ft, { Z: () => m });
    },
  },
  (un) => {
    un((un.s = 479));
  },
]);
